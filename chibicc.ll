; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.Obj = type { %struct.Obj*, i8*, i8*, %struct.Type*, %struct.Token*, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8*, %struct.Relocation*, i8, %struct.Obj*, %struct.Node*, %struct.Obj*, %struct.Obj*, %struct.Obj*, i32, i8, i8, %struct.StringArray }
%struct.Type = type { i32, i32, i32, i8, i8, i8, %struct.Type*, %struct.Type*, %struct.Type*, %struct.Token*, %struct.Token*, i32, %struct.Node*, %struct.Obj*, %struct.Member*, i8, i8, %struct.Type*, %struct.Type*, i8, %struct.Type* }
%struct.Member = type { %struct.Member*, %struct.Type*, %struct.Token*, %struct.Token*, i32, i32, i32, i8, i32, i32 }
%struct.Token = type { i32, %struct.Token*, i64, x86_fp80, i8*, i32, %struct.Type*, i8*, %struct.File*, i8*, i32, i32, i8, i8, %struct.Hideset*, %struct.Token* }
%struct.File = type { i8*, i32, i8*, i8*, i32 }
%struct.Hideset = type { %struct.Hideset*, i8* }
%struct.Relocation = type { %struct.Relocation*, i32, i8**, i64 }
%struct.Node = type { i32, %struct.Node*, %struct.Type*, %struct.Token*, %struct.Node*, %struct.Node*, %struct.Node*, %struct.Node*, %struct.Node*, %struct.Node*, %struct.Node*, i8*, i8*, %struct.Node*, %struct.Member*, %struct.Type*, %struct.Node*, i8, %struct.Obj*, i8*, i8*, %struct.Node*, %struct.Node*, %struct.Node*, i64, i64, i8*, %struct.Node*, %struct.Node*, %struct.Node*, %struct.Obj*, %struct.Node*, i8, %struct.Obj*, i64, x86_fp80, i32, [12 x i8] }
%struct.StringArray = type { i8**, i32, i32 }
%struct.AsmExtended = type { %struct.AsmTemplate*, [10 x %struct.AsmOutput*], [10 x %struct.AsmInput*], [10 x %struct.AsmClobber*], i32, i32, i32, i32 }
%struct.AsmTemplate = type { i8*, i8 }
%struct.AsmOutput = type { %struct.Token*, i8*, i8*, i8*, i8, i32, i32, i8, i8, i8, i32, i8, i8 }
%struct.AsmInput = type { %struct.Token*, i8*, i8*, i32, i8, i32, i32, i8, i8 }
%struct.AsmClobber = type { i8* }
%struct.Scope = type { %struct.Scope*, %struct.HashMap, %struct.HashMap }
%struct.HashMap = type { %struct.HashEntry*, i32, i32 }
%struct.HashEntry = type { i8*, i32, i8* }
%struct.CondIncl = type { %struct.CondIncl*, i32, %struct.Token*, i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%union.anon = type { float }
%union.anon.0 = type { double }
%union.anon.1 = type { x86_fp80 }
%struct.VarScope = type { %struct.Obj*, %struct.Type*, %struct.Type*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.glob_t = type { i64, i8**, i64, i32, void (i8*)*, i8* (i8*)*, i8* (i8*)*, i32 (i8*, i8*)*, i32 (i8*, i8*)* }
%struct.VarAttr = type { i8, i8, i8, i8, i8, i32 }
%struct.Initializer = type { %struct.Initializer*, %struct.Type*, %struct.Token*, i8, %struct.Node*, %struct.Initializer**, %struct.Member* }
%struct.InitDesg = type { %struct.InitDesg*, i32, %struct.Member*, %struct.Obj* }
%struct.Macro = type { i8*, i8, %struct.MacroParam*, i8*, %struct.Token*, %struct.Token* (%struct.Token*)* }
%struct.MacroParam = type { %struct.MacroParam*, i8* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.MacroArg = type { %struct.MacroArg*, i8*, i8, %struct.Token* }

@.str = private unnamed_addr constant [4 x i8] c"%dl\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%dx\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"%edx\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"%rdx\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"internal error at %s:%d\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"codegen.c\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"%bl\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"%bx\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"%ebx\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"%rbx\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"%cl\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"%cx\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"%ecx\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"%rcx\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"%al\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"%ax\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"%eax\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"%rax\00", align 1
@output_file = internal global %struct._IO_FILE* null, align 8
@.str.18 = private unnamed_addr constant [16 x i8] c"  .file %d \22%s\22\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"  .local %s\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"  .globl %s\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"  .comm %s, %d, %d\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"  .section .tdata,\22awT\22,@progbits\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"  .data\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"  .type %s, @object\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"  .size %s, %d\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"  .align %d\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"  .quad %s%+ld\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"  .byte %d\00", align 1
@.str.31 = private unnamed_addr constant [31 x i8] c"  .section .tbss,\22awT\22,@nobits\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"  .bss\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"  .zero %d\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"  .text\00", align 1
@.str.35 = private unnamed_addr constant [22 x i8] c"  .type %s, @function\00", align 1
@current_fn = internal global %struct.Obj* null, align 8
@.str.36 = private unnamed_addr constant [13 x i8] c"  push %%rbp\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"  mov %%rsp, %%rbp\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"  sub $%d, %%rsp\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"  mov %%rsp, %d(%%rbp)\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"  movl $%d, %d(%%rbp)\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"  movq %%rbp, %d(%%rbp)\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"  addq $16, %d(%%rbp)\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"  addq $%d, %d(%%rbp)\00", align 1
@.str.44 = private unnamed_addr constant [24 x i8] c"  movq %%rdi, %d(%%rbp)\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"  movq %%rsi, %d(%%rbp)\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"  movq %%rdx, %d(%%rbp)\00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"  movq %%rcx, %d(%%rbp)\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"  movq %%r8, %d(%%rbp)\00", align 1
@.str.49 = private unnamed_addr constant [23 x i8] c"  movq %%r9, %d(%%rbp)\00", align 1
@.str.50 = private unnamed_addr constant [26 x i8] c"  movsd %%xmm0, %d(%%rbp)\00", align 1
@.str.51 = private unnamed_addr constant [26 x i8] c"  movsd %%xmm1, %d(%%rbp)\00", align 1
@.str.52 = private unnamed_addr constant [26 x i8] c"  movsd %%xmm2, %d(%%rbp)\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"  movsd %%xmm3, %d(%%rbp)\00", align 1
@.str.54 = private unnamed_addr constant [26 x i8] c"  movsd %%xmm4, %d(%%rbp)\00", align 1
@.str.55 = private unnamed_addr constant [26 x i8] c"  movsd %%xmm5, %d(%%rbp)\00", align 1
@.str.56 = private unnamed_addr constant [26 x i8] c"  movsd %%xmm6, %d(%%rbp)\00", align 1
@.str.57 = private unnamed_addr constant [26 x i8] c"  movsd %%xmm7, %d(%%rbp)\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"ty->size <= 16\00", align 1
@__PRETTY_FUNCTION__.emit_text = private unnamed_addr constant [22 x i8] c"void emit_text(Obj *)\00", align 1
@depth = internal global i32 0, align 4
@.str.59 = private unnamed_addr constant [11 x i8] c"depth == 0\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.61 = private unnamed_addr constant [16 x i8] c"  mov $0, %%rax\00", align 1
@.str.62 = private unnamed_addr constant [14 x i8] c".L.return.%s:\00", align 1
@.str.63 = private unnamed_addr constant [19 x i8] c"  mov %%rbp, %%rsp\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"  pop %%rbp\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"  ret\00", align 1
@.str.66 = private unnamed_addr constant [27 x i8] c"  movss %%xmm%d, %d(%%rbp)\00", align 1
@.str.67 = private unnamed_addr constant [27 x i8] c"  movsd %%xmm%d, %d(%%rbp)\00", align 1
@.str.68 = private unnamed_addr constant [20 x i8] c"  mov %s, %d(%%rbp)\00", align 1
@argreg8 = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0)], align 16
@argreg16 = internal global [6 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0)], align 16
@argreg32 = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i32 0, i32 0)], align 16
@argreg64 = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i32 0, i32 0)], align 16
@.str.69 = private unnamed_addr constant [13 x i8] c"  shr $8, %s\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"%dil\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"%sil\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"%r8b\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"%r9b\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"%di\00", align 1
@.str.75 = private unnamed_addr constant [4 x i8] c"%si\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"%r8w\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"%r9w\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"%edi\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"%esi\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"%r8d\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"%r9d\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"%rdi\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"%rsi\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"%r8\00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c"%r9\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"  .loc %d %d\00", align 1
@.str.87 = private unnamed_addr constant [17 x i8] c"  je  .L.else.%d\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c"  jmp .L.end.%d\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c".L.else.%d:\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c".L.end.%d:\00", align 1
@.str.91 = private unnamed_addr constant [13 x i8] c".L.begin.%d:\00", align 1
@.str.92 = private unnamed_addr constant [8 x i8] c"  je %s\00", align 1
@.str.93 = private unnamed_addr constant [18 x i8] c"  jmp .L.begin.%d\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"  jne .L.begin.%d\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"  cmp $%ld, %s\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"  mov %s, %s\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"  sub $%ld, %s\00", align 1
@.str.98 = private unnamed_addr constant [9 x i8] c"  jbe %s\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"  jmp %s\00", align 1
@.str.100 = private unnamed_addr constant [13 x i8] c"  jmp *%%rax\00", align 1
@.str.101 = private unnamed_addr constant [19 x i8] c"  jmp .L.return.%s\00", align 1
@.str.102 = private unnamed_addr constant [5 x i8] c"  %s\00", align 1
@.str.103 = private unnamed_addr constant [21 x i8] c"%s invalid statement\00", align 1
@count.i = internal global i32 1, align 4
@.str.104 = private unnamed_addr constant [30 x i8] c"  mov $%u, %%eax  # float %Lf\00", align 1
@.str.105 = private unnamed_addr constant [21 x i8] c"  movq %%rax, %%xmm0\00", align 1
@.str.106 = private unnamed_addr constant [32 x i8] c"  mov $%lu, %%rax  # double %Lf\00", align 1
@.str.107 = private unnamed_addr constant [37 x i8] c"  mov $%lu, %%rax  # long double %Lf\00", align 1
@.str.108 = private unnamed_addr constant [24 x i8] c"  mov %%rax, -16(%%rsp)\00", align 1
@.str.109 = private unnamed_addr constant [18 x i8] c"  mov $%lu, %%rax\00", align 1
@.str.110 = private unnamed_addr constant [23 x i8] c"  mov %%rax, -8(%%rsp)\00", align 1
@.str.111 = private unnamed_addr constant [18 x i8] c"  fldt -16(%%rsp)\00", align 1
@.str.112 = private unnamed_addr constant [18 x i8] c"  mov $%ld, %%rax\00", align 1
@.str.113 = private unnamed_addr constant [16 x i8] c"  mov $1, %%rax\00", align 1
@.str.114 = private unnamed_addr constant [17 x i8] c"  shl $31, %%rax\00", align 1
@.str.115 = private unnamed_addr constant [21 x i8] c"  movq %%rax, %%xmm1\00", align 1
@.str.116 = private unnamed_addr constant [23 x i8] c"  xorps %%xmm1, %%xmm0\00", align 1
@.str.117 = private unnamed_addr constant [17 x i8] c"  shl $63, %%rax\00", align 1
@.str.118 = private unnamed_addr constant [23 x i8] c"  xorpd %%xmm1, %%xmm0\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"  fchs\00", align 1
@.str.120 = private unnamed_addr constant [12 x i8] c"  neg %%rax\00", align 1
@.str.121 = private unnamed_addr constant [17 x i8] c"  shl $%d, %%rax\00", align 1
@.str.122 = private unnamed_addr constant [17 x i8] c"  shr $%d, %%rax\00", align 1
@.str.123 = private unnamed_addr constant [17 x i8] c"  sar $%d, %%rax\00", align 1
@.str.124 = private unnamed_addr constant [18 x i8] c"  mov %%rax, %%r8\00", align 1
@.str.125 = private unnamed_addr constant [19 x i8] c"  mov %%rax, %%rdi\00", align 1
@.str.126 = private unnamed_addr constant [19 x i8] c"  and %%rax, %%rdi\00", align 1
@.str.127 = private unnamed_addr constant [18 x i8] c"  and $%ld, %%rdi\00", align 1
@.str.128 = private unnamed_addr constant [17 x i8] c"  shl $%d, %%rdi\00", align 1
@.str.129 = private unnamed_addr constant [21 x i8] c"  mov (%%rsp), %%rax\00", align 1
@.str.130 = private unnamed_addr constant [17 x i8] c"  mov $%ld, %%r9\00", align 1
@.str.131 = private unnamed_addr constant [18 x i8] c"  and %%r9, %%rax\00", align 1
@.str.132 = private unnamed_addr constant [18 x i8] c"  or %%rdi, %%rax\00", align 1
@.str.133 = private unnamed_addr constant [18 x i8] c"  mov %%r8, %%rax\00", align 1
@.str.134 = private unnamed_addr constant [17 x i8] c"  mov $%d, %%rcx\00", align 1
@.str.135 = private unnamed_addr constant [23 x i8] c"  lea %d(%%rbp), %%rdi\00", align 1
@.str.136 = private unnamed_addr constant [15 x i8] c"  mov $0, %%al\00", align 1
@.str.137 = private unnamed_addr constant [12 x i8] c"  rep stosb\00", align 1
@.str.138 = private unnamed_addr constant [16 x i8] c"  je .L.else.%d\00", align 1
@.str.139 = private unnamed_addr constant [12 x i8] c"  sete %%al\00", align 1
@.str.140 = private unnamed_addr constant [20 x i8] c"  movzx %%al, %%rax\00", align 1
@.str.141 = private unnamed_addr constant [12 x i8] c"  not %%rax\00", align 1
@.str.142 = private unnamed_addr constant [17 x i8] c"  je .L.false.%d\00", align 1
@.str.143 = private unnamed_addr constant [13 x i8] c".L.false.%d:\00", align 1
@.str.144 = private unnamed_addr constant [17 x i8] c"  jne .L.true.%d\00", align 1
@.str.145 = private unnamed_addr constant [12 x i8] c".L.true.%d:\00", align 1
@.str.146 = private unnamed_addr constant [7 x i8] c"alloca\00", align 1
@.str.147 = private unnamed_addr constant [19 x i8] c"  mov %%rax, %%r10\00", align 1
@.str.148 = private unnamed_addr constant [17 x i8] c"  mov $%d, %%rax\00", align 1
@.str.149 = private unnamed_addr constant [14 x i8] c"  call *%%r10\00", align 1
@.str.150 = private unnamed_addr constant [17 x i8] c"  add $%d, %%rsp\00", align 1
@.str.151 = private unnamed_addr constant [20 x i8] c"  movzx %%al, %%eax\00", align 1
@.str.152 = private unnamed_addr constant [21 x i8] c"  movzbl %%al, %%eax\00", align 1
@.str.153 = private unnamed_addr constant [21 x i8] c"  movsbl %%al, %%eax\00", align 1
@.str.154 = private unnamed_addr constant [21 x i8] c"  movzwl %%ax, %%eax\00", align 1
@.str.155 = private unnamed_addr constant [21 x i8] c"  movswl %%ax, %%eax\00", align 1
@.str.156 = private unnamed_addr constant [23 x i8] c"  lea %d(%%rbp), %%rax\00", align 1
@.str.157 = private unnamed_addr constant [23 x i8] c"  lea %s(%%rip), %%rax\00", align 1
@.str.158 = private unnamed_addr constant [27 x i8] c"  lock cmpxchg %s, (%%rdi)\00", align 1
@.str.159 = private unnamed_addr constant [12 x i8] c"  sete %%cl\00", align 1
@.str.160 = private unnamed_addr constant [8 x i8] c"  je 1f\00", align 1
@.str.161 = private unnamed_addr constant [17 x i8] c"  mov %s, (%%r8)\00", align 1
@.str.162 = private unnamed_addr constant [3 x i8] c"1:\00", align 1
@.str.163 = private unnamed_addr constant [21 x i8] c"  movzbl %%cl, %%eax\00", align 1
@.str.164 = private unnamed_addr constant [19 x i8] c"  xchg %s, (%%rdi)\00", align 1
@.str.165 = private unnamed_addr constant [3 x i8] c"ss\00", align 1
@.str.166 = private unnamed_addr constant [3 x i8] c"sd\00", align 1
@.str.167 = private unnamed_addr constant [23 x i8] c"  add%s %%xmm1, %%xmm0\00", align 1
@.str.168 = private unnamed_addr constant [23 x i8] c"  sub%s %%xmm1, %%xmm0\00", align 1
@.str.169 = private unnamed_addr constant [23 x i8] c"  mul%s %%xmm1, %%xmm0\00", align 1
@.str.170 = private unnamed_addr constant [23 x i8] c"  div%s %%xmm1, %%xmm0\00", align 1
@.str.171 = private unnamed_addr constant [25 x i8] c"  ucomi%s %%xmm0, %%xmm1\00", align 1
@.str.172 = private unnamed_addr constant [13 x i8] c"  setnp %%dl\00", align 1
@.str.173 = private unnamed_addr constant [17 x i8] c"  and %%dl, %%al\00", align 1
@.str.174 = private unnamed_addr constant [13 x i8] c"  setne %%al\00", align 1
@.str.175 = private unnamed_addr constant [12 x i8] c"  setp %%dl\00", align 1
@.str.176 = private unnamed_addr constant [16 x i8] c"  or %%dl, %%al\00", align 1
@.str.177 = private unnamed_addr constant [12 x i8] c"  seta %%al\00", align 1
@.str.178 = private unnamed_addr constant [13 x i8] c"  setae %%al\00", align 1
@.str.179 = private unnamed_addr constant [15 x i8] c"  and $1, %%al\00", align 1
@.str.180 = private unnamed_addr constant [20 x i8] c"  movzb %%al, %%rax\00", align 1
@.str.181 = private unnamed_addr constant [22 x i8] c"%s invalid expression\00", align 1
@.str.182 = private unnamed_addr constant [8 x i8] c"  faddp\00", align 1
@.str.183 = private unnamed_addr constant [9 x i8] c"  fsubrp\00", align 1
@.str.184 = private unnamed_addr constant [8 x i8] c"  fmulp\00", align 1
@.str.185 = private unnamed_addr constant [9 x i8] c"  fdivrp\00", align 1
@.str.186 = private unnamed_addr constant [9 x i8] c"  fcomip\00", align 1
@.str.187 = private unnamed_addr constant [15 x i8] c"  fstp %%st(0)\00", align 1
@.str.188 = private unnamed_addr constant [13 x i8] c"  add %s, %s\00", align 1
@.str.189 = private unnamed_addr constant [13 x i8] c"  sub %s, %s\00", align 1
@.str.190 = private unnamed_addr constant [14 x i8] c"  imul %s, %s\00", align 1
@.str.191 = private unnamed_addr constant [13 x i8] c"  mov $0, %s\00", align 1
@.str.192 = private unnamed_addr constant [9 x i8] c"  div %s\00", align 1
@.str.193 = private unnamed_addr constant [6 x i8] c"  cqo\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"  cdq\00", align 1
@.str.195 = private unnamed_addr constant [10 x i8] c"  idiv %s\00", align 1
@.str.196 = private unnamed_addr constant [19 x i8] c"  mov %%rdx, %%rax\00", align 1
@.str.197 = private unnamed_addr constant [13 x i8] c"  and %s, %s\00", align 1
@.str.198 = private unnamed_addr constant [12 x i8] c"  or %s, %s\00", align 1
@.str.199 = private unnamed_addr constant [13 x i8] c"  xor %s, %s\00", align 1
@.str.200 = private unnamed_addr constant [13 x i8] c"  cmp %s, %s\00", align 1
@.str.201 = private unnamed_addr constant [12 x i8] c"  setb %%al\00", align 1
@.str.202 = private unnamed_addr constant [12 x i8] c"  setl %%al\00", align 1
@.str.203 = private unnamed_addr constant [13 x i8] c"  setbe %%al\00", align 1
@.str.204 = private unnamed_addr constant [13 x i8] c"  setle %%al\00", align 1
@.str.205 = private unnamed_addr constant [19 x i8] c"  mov %%rdi, %%rcx\00", align 1
@.str.206 = private unnamed_addr constant [15 x i8] c"  shl %%cl, %s\00", align 1
@.str.207 = private unnamed_addr constant [15 x i8] c"  shr %%cl, %s\00", align 1
@.str.208 = private unnamed_addr constant [15 x i8] c"  sar %%cl, %s\00", align 1
@.str.209 = private unnamed_addr constant [23 x i8] c"  mov %d(%%rbp), %%rax\00", align 1
@.str.210 = private unnamed_addr constant [36 x i8] c"  data16 lea %s@tlsgd(%%rip), %%rdi\00", align 1
@.str.211 = private unnamed_addr constant [16 x i8] c"  .value 0x6666\00", align 1
@.str.212 = private unnamed_addr constant [8 x i8] c"  rex64\00", align 1
@.str.213 = private unnamed_addr constant [26 x i8] c"  call __tls_get_addr@PLT\00", align 1
@.str.214 = private unnamed_addr constant [32 x i8] c"  mov %s@GOTPCREL(%%rip), %%rax\00", align 1
@.str.215 = private unnamed_addr constant [20 x i8] c"  mov %%fs:0, %%rax\00", align 1
@.str.216 = private unnamed_addr constant [23 x i8] c"  add $%s@tpoff, %%rax\00", align 1
@.str.217 = private unnamed_addr constant [17 x i8] c"  add $%d, %%rax\00", align 1
@.str.218 = private unnamed_addr constant [17 x i8] c"%s not an lvalue\00", align 1
@.str.219 = private unnamed_addr constant [24 x i8] c"  movss (%%rax), %%xmm0\00", align 1
@.str.220 = private unnamed_addr constant [24 x i8] c"  movsd (%%rax), %%xmm0\00", align 1
@.str.221 = private unnamed_addr constant [15 x i8] c"  fldt (%%rax)\00", align 1
@.str.222 = private unnamed_addr constant [5 x i8] c"movz\00", align 1
@.str.223 = private unnamed_addr constant [5 x i8] c"movs\00", align 1
@.str.224 = private unnamed_addr constant [22 x i8] c"  %sbl (%%rax), %%eax\00", align 1
@.str.225 = private unnamed_addr constant [22 x i8] c"  %swl (%%rax), %%eax\00", align 1
@.str.226 = private unnamed_addr constant [24 x i8] c"  movsxd (%%rax), %%rax\00", align 1
@.str.227 = private unnamed_addr constant [21 x i8] c"  mov (%%rax), %%rax\00", align 1
@.str.228 = private unnamed_addr constant [13 x i8] c"  push %%rax\00", align 1
@.str.229 = private unnamed_addr constant [23 x i8] c"  mov %d(%%rax), %%r8b\00", align 1
@.str.230 = private unnamed_addr constant [23 x i8] c"  mov %%r8b, %d(%%rdi)\00", align 1
@.str.231 = private unnamed_addr constant [24 x i8] c"  movss %%xmm0, (%%rdi)\00", align 1
@.str.232 = private unnamed_addr constant [24 x i8] c"  movsd %%xmm0, (%%rdi)\00", align 1
@.str.233 = private unnamed_addr constant [16 x i8] c"  fstpt (%%rdi)\00", align 1
@.str.234 = private unnamed_addr constant [20 x i8] c"  mov %%al, (%%rdi)\00", align 1
@.str.235 = private unnamed_addr constant [20 x i8] c"  mov %%ax, (%%rdi)\00", align 1
@.str.236 = private unnamed_addr constant [21 x i8] c"  mov %%eax, (%%rdi)\00", align 1
@.str.237 = private unnamed_addr constant [21 x i8] c"  mov %%rax, (%%rdi)\00", align 1
@cast_table = internal global [11 x [11 x i8*]] [[11 x i8*] [i8* null, i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u16, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f32, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f64, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @i32f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i8, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u16, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f32, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f64, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @i32f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i16, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u16, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f32, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f64, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @i32f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i16, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u16, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i64f32, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i64f64, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @i64f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i8, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* null, i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f32, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f64, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @i32f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i16, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u8, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @i32i64, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f32, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @i32f64, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @i32f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i16, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @u32i64, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u16, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @u32i64, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @u32f32, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @u32f64, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @u32f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32i16, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u8, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @i32u16, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @u64f32, i32 0, i32 0), i8* getelementptr inbounds ([186 x i8], [186 x i8]* @u64f64, i32 0, i32 0), i8* getelementptr inbounds ([122 x i8], [122 x i8]* @u64f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([41 x i8], [41 x i8]* @f32i8, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @f32i16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @f32i32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @f32i64, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @f32u8, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @f32u16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @f32u32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @f32u64, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @f32f64, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @f32f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([41 x i8], [41 x i8]* @f64i8, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @f64i16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @f64i32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @f64i64, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @f64u8, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @f64u16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @f64u32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @f64u64, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @f64f32, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @f64f80, i32 0, i32 0)], [11 x i8*] [i8* getelementptr inbounds ([150 x i8], [150 x i8]* @f80i8, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @f80i16, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @f80i32, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @f80i64, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @f80u8, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @f80u16, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @f80u32, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @f80u64, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @f80f32, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @f80f64, i32 0, i32 0), i8* null]], align 16
@i32i64 = internal global [18 x i8] c"movsxd %eax, %rax\00", align 16
@i32u8 = internal global [17 x i8] c"movzbl %al, %eax\00", align 16
@i32u16 = internal global [17 x i8] c"movzwl %ax, %eax\00", align 16
@i32f32 = internal global [22 x i8] c"cvtsi2ssl %eax, %xmm0\00", align 16
@i32f64 = internal global [22 x i8] c"cvtsi2sdl %eax, %xmm0\00", align 16
@i32f80 = internal global [35 x i8] c"mov %eax, -4(%rsp); fildl -4(%rsp)\00", align 16
@i32i8 = internal global [17 x i8] c"movsbl %al, %eax\00", align 16
@i32i16 = internal global [17 x i8] c"movswl %ax, %eax\00", align 16
@i64f32 = internal global [22 x i8] c"cvtsi2ssq %rax, %xmm0\00", align 16
@i64f64 = internal global [22 x i8] c"cvtsi2sdq %rax, %xmm0\00", align 16
@i64f80 = internal global [37 x i8] c"movq %rax, -8(%rsp); fildll -8(%rsp)\00", align 16
@u32i64 = internal global [15 x i8] c"mov %eax, %eax\00", align 1
@u32f32 = internal global [38 x i8] c"mov %eax, %eax; cvtsi2ssq %rax, %xmm0\00", align 16
@u32f64 = internal global [38 x i8] c"mov %eax, %eax; cvtsi2sdq %rax, %xmm0\00", align 16
@u32f80 = internal global [52 x i8] c"mov %eax, %eax; mov %rax, -8(%rsp); fildll -8(%rsp)\00", align 16
@u64f32 = internal global [22 x i8] c"cvtsi2ssq %rax, %xmm0\00", align 16
@u64f64 = internal global [186 x i8] c"test %rax,%rax; js 1f; pxor %xmm0,%xmm0; cvtsi2sd %rax,%xmm0; jmp 2f; 1: mov %rax,%rdi; and $1,%eax; pxor %xmm0,%xmm0; shr %rdi; or %rax,%rdi; cvtsi2sd %rdi,%xmm0; addsd %xmm0,%xmm0; 2:\00", align 16
@u64f80 = internal global [122 x i8] c"mov %rax, -8(%rsp); fildq -8(%rsp); test %rax, %rax; jns 1f;mov $1602224128, %eax; mov %eax, -4(%rsp); fadds -4(%rsp); 1:\00", align 16
@f32i8 = internal global [41 x i8] c"cvttss2sil %xmm0, %eax; movsbl %al, %eax\00", align 16
@f32i16 = internal global [41 x i8] c"cvttss2sil %xmm0, %eax; movswl %ax, %eax\00", align 16
@f32i32 = internal global [23 x i8] c"cvttss2sil %xmm0, %eax\00", align 16
@f32i64 = internal global [23 x i8] c"cvttss2siq %xmm0, %rax\00", align 16
@f32u8 = internal global [41 x i8] c"cvttss2sil %xmm0, %eax; movzbl %al, %eax\00", align 16
@f32u16 = internal global [41 x i8] c"cvttss2sil %xmm0, %eax; movzwl %ax, %eax\00", align 16
@f32u32 = internal global [23 x i8] c"cvttss2siq %xmm0, %rax\00", align 16
@f32u64 = internal global [23 x i8] c"cvttss2siq %xmm0, %rax\00", align 16
@f32f64 = internal global [22 x i8] c"cvtss2sd %xmm0, %xmm0\00", align 16
@f32f80 = internal global [37 x i8] c"movss %xmm0, -4(%rsp); flds -4(%rsp)\00", align 16
@f64i8 = internal global [41 x i8] c"cvttsd2sil %xmm0, %eax; movsbl %al, %eax\00", align 16
@f64i16 = internal global [41 x i8] c"cvttsd2sil %xmm0, %eax; movswl %ax, %eax\00", align 16
@f64i32 = internal global [23 x i8] c"cvttsd2sil %xmm0, %eax\00", align 16
@f64i64 = internal global [23 x i8] c"cvttsd2siq %xmm0, %rax\00", align 16
@f64u8 = internal global [41 x i8] c"cvttsd2sil %xmm0, %eax; movzbl %al, %eax\00", align 16
@f64u16 = internal global [41 x i8] c"cvttsd2sil %xmm0, %eax; movzwl %ax, %eax\00", align 16
@f64u32 = internal global [23 x i8] c"cvttsd2siq %xmm0, %rax\00", align 16
@f64u64 = internal global [23 x i8] c"cvttsd2siq %xmm0, %rax\00", align 16
@f64f32 = internal global [22 x i8] c"cvtsd2ss %xmm0, %xmm0\00", align 16
@f64f80 = internal global [37 x i8] c"movsd %xmm0, -8(%rsp); fldl -8(%rsp)\00", align 16
@f80i8 = internal global [150 x i8] c"fnstcw -10(%rsp); movzwl -10(%rsp), %eax; or $12, %ah; mov %ax, -12(%rsp); fldcw -12(%rsp); fistps -24(%rsp); fldcw -10(%rsp); movsbl -24(%rsp), %eax\00", align 16
@f80i16 = internal global [150 x i8] c"fnstcw -10(%rsp); movzwl -10(%rsp), %eax; or $12, %ah; mov %ax, -12(%rsp); fldcw -12(%rsp); fistps -24(%rsp); fldcw -10(%rsp); movzbl -24(%rsp), %eax\00", align 16
@f80i32 = internal global [147 x i8] c"fnstcw -10(%rsp); movzwl -10(%rsp), %eax; or $12, %ah; mov %ax, -12(%rsp); fldcw -12(%rsp); fistpl -24(%rsp); fldcw -10(%rsp); mov -24(%rsp), %eax\00", align 16
@f80i64 = internal global [147 x i8] c"fnstcw -10(%rsp); movzwl -10(%rsp), %eax; or $12, %ah; mov %ax, -12(%rsp); fldcw -12(%rsp); fistpq -24(%rsp); fldcw -10(%rsp); mov -24(%rsp), %rax\00", align 16
@f80u8 = internal global [150 x i8] c"fnstcw -10(%rsp); movzwl -10(%rsp), %eax; or $12, %ah; mov %ax, -12(%rsp); fldcw -12(%rsp); fistps -24(%rsp); fldcw -10(%rsp); movzbl -24(%rsp), %eax\00", align 16
@f80u16 = internal global [150 x i8] c"fnstcw -10(%rsp); movzwl -10(%rsp), %eax; or $12, %ah; mov %ax, -12(%rsp); fldcw -12(%rsp); fistpl -24(%rsp); fldcw -10(%rsp); movswl -24(%rsp), %eax\00", align 16
@f80u32 = internal global [147 x i8] c"fnstcw -10(%rsp); movzwl -10(%rsp), %eax; or $12, %ah; mov %ax, -12(%rsp); fldcw -12(%rsp); fistpl -24(%rsp); fldcw -10(%rsp); mov -24(%rsp), %eax\00", align 16
@f80u64 = internal global [147 x i8] c"fnstcw -10(%rsp); movzwl -10(%rsp), %eax; or $12, %ah; mov %ax, -12(%rsp); fldcw -12(%rsp); fistpq -24(%rsp); fldcw -10(%rsp); mov -24(%rsp), %rax\00", align 16
@f80f32 = internal global [38 x i8] c"fstps -8(%rsp); movss -8(%rsp), %xmm0\00", align 16
@f80f64 = internal global [38 x i8] c"fstpl -8(%rsp); movsd -8(%rsp), %xmm0\00", align 16
@.str.238 = private unnamed_addr constant [17 x i8] c"  add $15, %%rdi\00", align 1
@.str.239 = private unnamed_addr constant [25 x i8] c"  and $0xfffffff0, %%edi\00", align 1
@.str.240 = private unnamed_addr constant [23 x i8] c"  mov %d(%%rbp), %%rcx\00", align 1
@.str.241 = private unnamed_addr constant [19 x i8] c"  sub %%rsp, %%rcx\00", align 1
@.str.242 = private unnamed_addr constant [19 x i8] c"  mov %%rsp, %%rax\00", align 1
@.str.243 = private unnamed_addr constant [19 x i8] c"  sub %%rdi, %%rsp\00", align 1
@.str.244 = private unnamed_addr constant [19 x i8] c"  mov %%rsp, %%rdx\00", align 1
@.str.245 = private unnamed_addr constant [16 x i8] c"  cmp $0, %%rcx\00", align 1
@.str.246 = private unnamed_addr constant [8 x i8] c"  je 2f\00", align 1
@.str.247 = private unnamed_addr constant [21 x i8] c"  mov (%%rax), %%r8b\00", align 1
@.str.248 = private unnamed_addr constant [21 x i8] c"  mov %%r8b, (%%rdx)\00", align 1
@.str.249 = private unnamed_addr constant [12 x i8] c"  inc %%rdx\00", align 1
@.str.250 = private unnamed_addr constant [12 x i8] c"  inc %%rax\00", align 1
@.str.251 = private unnamed_addr constant [12 x i8] c"  dec %%rcx\00", align 1
@.str.252 = private unnamed_addr constant [9 x i8] c"  jmp 1b\00", align 1
@.str.253 = private unnamed_addr constant [3 x i8] c"2:\00", align 1
@.str.254 = private unnamed_addr constant [19 x i8] c"  sub %%rdi, %%rax\00", align 1
@.str.255 = private unnamed_addr constant [23 x i8] c"  mov %%rax, %d(%%rbp)\00", align 1
@.str.256 = private unnamed_addr constant [16 x i8] c"  sub $8, %%rsp\00", align 1
@.str.257 = private unnamed_addr constant [17 x i8] c"  sub $16, %%rsp\00", align 1
@.str.258 = private unnamed_addr constant [16 x i8] c"  fstpt (%%rsp)\00", align 1
@.str.259 = private unnamed_addr constant [24 x i8] c"  mov %d(%%rax), %%r10b\00", align 1
@.str.260 = private unnamed_addr constant [24 x i8] c"  mov %%r10b, %d(%%rsp)\00", align 1
@.str.261 = private unnamed_addr constant [9 x i8] c"  pop %s\00", align 1
@.str.262 = private unnamed_addr constant [25 x i8] c"  movsd (%%rsp), %%xmm%d\00", align 1
@.str.263 = private unnamed_addr constant [16 x i8] c"  add $8, %%rsp\00", align 1
@.str.264 = private unnamed_addr constant [31 x i8] c"ty->size == 4 || 8 <= ty->size\00", align 1
@__PRETTY_FUNCTION__.copy_ret_buffer = private unnamed_addr constant [28 x i8] c"void copy_ret_buffer(Obj *)\00", align 1
@.str.265 = private unnamed_addr constant [26 x i8] c"  movss %%xmm0, %d(%%rbp)\00", align 1
@.str.266 = private unnamed_addr constant [22 x i8] c"  mov %%al, %d(%%rbp)\00", align 1
@.str.267 = private unnamed_addr constant [16 x i8] c"  shr $8, %%rax\00", align 1
@.str.268 = private unnamed_addr constant [33 x i8] c"ty->size == 12 || ty->size == 16\00", align 1
@.str.269 = private unnamed_addr constant [24 x i8] c"  movsd %%xmm0, (%%rsp)\00", align 1
@.str.270 = private unnamed_addr constant [23 x i8] c"  xorps %%xmm1, %%xmm1\00", align 1
@.str.271 = private unnamed_addr constant [25 x i8] c"  ucomiss %%xmm1, %%xmm0\00", align 1
@.str.272 = private unnamed_addr constant [23 x i8] c"  xorpd %%xmm1, %%xmm1\00", align 1
@.str.273 = private unnamed_addr constant [25 x i8] c"  ucomisd %%xmm1, %%xmm0\00", align 1
@.str.274 = private unnamed_addr constant [7 x i8] c"  fldz\00", align 1
@.str.275 = private unnamed_addr constant [10 x i8] c"  fucomip\00", align 1
@.str.276 = private unnamed_addr constant [16 x i8] c"  cmp $0, %%eax\00", align 1
@.str.277 = private unnamed_addr constant [16 x i8] c"  cmp $0, %%rax\00", align 1
@__PRETTY_FUNCTION__.copy_struct_reg = private unnamed_addr constant [27 x i8] c"void copy_struct_reg(void)\00", align 1
@.str.278 = private unnamed_addr constant [24 x i8] c"  movss (%%rdi), %%xmm0\00", align 1
@.str.279 = private unnamed_addr constant [24 x i8] c"  movsd (%%rdi), %%xmm0\00", align 1
@.str.280 = private unnamed_addr constant [16 x i8] c"  shl $8, %%rax\00", align 1
@.str.281 = private unnamed_addr constant [22 x i8] c"  mov %d(%%rdi), %%al\00", align 1
@.str.282 = private unnamed_addr constant [26 x i8] c"  movss 8(%%rdi), %%xmm%d\00", align 1
@.str.283 = private unnamed_addr constant [26 x i8] c"  movsd 8(%%rdi), %%xmm%d\00", align 1
@.str.284 = private unnamed_addr constant [13 x i8] c"  shl $8, %s\00", align 1
@.str.285 = private unnamed_addr constant [20 x i8] c"  mov %d(%%rdi), %s\00", align 1
@.str.286 = private unnamed_addr constant [23 x i8] c"  mov %d(%%rbp), %%rdi\00", align 1
@.str.287 = private unnamed_addr constant [22 x i8] c"  mov %d(%%rax), %%dl\00", align 1
@.str.288 = private unnamed_addr constant [22 x i8] c"  mov %%dl, %d(%%rdi)\00", align 1
@.str.289 = private unnamed_addr constant [9 x i8] c"TK_IDENT\00", align 1
@.str.1.290 = private unnamed_addr constant [9 x i8] c"TK_PUNCT\00", align 1
@.str.2.291 = private unnamed_addr constant [11 x i8] c"TK_KEYWORD\00", align 1
@.str.3.292 = private unnamed_addr constant [7 x i8] c"TK_STR\00", align 1
@.str.4.293 = private unnamed_addr constant [7 x i8] c"TK_NUM\00", align 1
@.str.5.294 = private unnamed_addr constant [10 x i8] c"TK_PP_NUM\00", align 1
@.str.6.295 = private unnamed_addr constant [7 x i8] c"TK_EOF\00", align 1
@.str.7.296 = private unnamed_addr constant [12 x i8] c"UNREACHABLE\00", align 1
@.str.8.297 = private unnamed_addr constant [46 x i8] c"=====================file : %s, function: %s\0A\00", align 1
@.str.9.298 = private unnamed_addr constant [68 x i8] c"token->kind: %s, token->len: %d, token->val: %ld, token->fval:%Lf \0A\00", align 1
@.str.10.299 = private unnamed_addr constant [81 x i8] c"     token->str: %s, token->filename: %s, token->line_no: %d, token->at_bol:%d \0A\00", align 1
@.str.11.300 = private unnamed_addr constant [22 x i8] c"     token->loc: %s \0A\00", align 1
@asmExt = internal global %struct.AsmExtended* null, align 8
@nbInput = internal global i32 0, align 4
@nbOutput = internal global i32 0, align 4
@nbClobber = internal global i32 0, align 4
@nbLabel = internal global i32 0, align 4
@.str.301 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.1.302 = private unnamed_addr constant [50 x i8] c"%s : in extended_asm function : register is null!\00", align 1
@.str.2.303 = private unnamed_addr constant [15 x i8] c"extended_asm.c\00", align 1
@.str.3.304 = private unnamed_addr constant [57 x i8] c"%s : in extended_asm function : clobber not managed yet!\00", align 1
@.str.4.305 = private unnamed_addr constant [55 x i8] c"%s : in extended_asm function : label not managed yet!\00", align 1
@.str.5.306 = private unnamed_addr constant [94 x i8] c"%s : in extended_asm function : too much parameters or complex extended assembly not managed!\00", align 1
@.str.6.307 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.7.308 = private unnamed_addr constant [3 x i8] c" %\00", align 1
@.str.8.309 = private unnamed_addr constant [3 x i8] c"%%\00", align 1
@.str.9.310 = private unnamed_addr constant [3 x i8] c" {\00", align 1
@.str.10.311 = private unnamed_addr constant [3 x i8] c"%{\00", align 1
@.str.11.312 = private unnamed_addr constant [3 x i8] c" |\00", align 1
@.str.12.313 = private unnamed_addr constant [3 x i8] c"%|\00", align 1
@.str.13.314 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@.str.14.315 = private unnamed_addr constant [3 x i8] c"%}\00", align 1
@.str.15.359 = private unnamed_addr constant [3 x i8] c"=r\00", align 1
@.str.16.360 = private unnamed_addr constant [3 x i8] c"+r\00", align 1
@.str.17.361 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.18.362 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.19.363 = private unnamed_addr constant [5 x i8] c"%rax\00", align 1
@.str.20.364 = private unnamed_addr constant [3 x i8] c"=m\00", align 1
@.str.21.365 = private unnamed_addr constant [3 x i8] c"+m\00", align 1
@.str.22.366 = private unnamed_addr constant [3 x i8] c"=a\00", align 1
@.str.23.367 = private unnamed_addr constant [3 x i8] c"=b\00", align 1
@.str.24.368 = private unnamed_addr constant [3 x i8] c"=c\00", align 1
@.str.25.369 = private unnamed_addr constant [3 x i8] c"=d\00", align 1
@.str.26.370 = private unnamed_addr constant [5 x i8] c"%rbx\00", align 1
@.str.27.371 = private unnamed_addr constant [5 x i8] c"%rcx\00", align 1
@.str.28.372 = private unnamed_addr constant [5 x i8] c"%rdx\00", align 1
@.str.29.373 = private unnamed_addr constant [51 x i8] c"%s : in output_asm function : not implemented yet!\00", align 1
@.str.30.351 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.31.344 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.32.374 = private unnamed_addr constant [49 x i8] c"%s : in output_asm function : variable undefined\00", align 1
@.str.33.375 = private unnamed_addr constant [52 x i8] c"%s : in output_asm function : variable type unknown\00", align 1
@.str.34.346 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.35.376 = private unnamed_addr constant [50 x i8] c"%s : in output_asm function : output_str is null!\00", align 1
@.str.36.349 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.37.377 = private unnamed_addr constant [50 x i8] c"%s : in output_asm function : variable undefined2\00", align 1
@.str.38.378 = private unnamed_addr constant [53 x i8] c"%s : in output_asm function : variable type unknown2\00", align 1
@.str.39.379 = private unnamed_addr constant [51 x i8] c"%s : in output_asm function : output_str is null!2\00", align 1
@.str.40.380 = private unnamed_addr constant [51 x i8] c"%s : in output_asm function : identifier expected!\00", align 1
@.str.41.381 = private unnamed_addr constant [65 x i8] c"%s : in output_asm function : output constraint not managed yet!\00", align 1
@.str.42.330 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.43.331 = private unnamed_addr constant [3 x i8] c"%0\00", align 1
@.str.44.332 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.45.333 = private unnamed_addr constant [3 x i8] c"%1\00", align 1
@.str.46.334 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.47.335 = private unnamed_addr constant [3 x i8] c"%2\00", align 1
@.str.48.336 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.49.337 = private unnamed_addr constant [3 x i8] c"%3\00", align 1
@.str.50.338 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.51.339 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.52.340 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.53.341 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.54.342 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.55.343 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.56.345 = private unnamed_addr constant [48 x i8] c"%s : in input_asm function : variable undefined\00", align 1
@.str.57.347 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.58.348 = private unnamed_addr constant [3 x i8] c"0 \00", align 1
@.str.59.350 = private unnamed_addr constant [49 x i8] c"%s : in input_asm function : variable undefined2\00", align 1
@.str.60.352 = private unnamed_addr constant [71 x i8] c"%s : in input_asm function : input complex constraint not managed yet!\00", align 1
@.str.61.316 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.62.317 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.63.318 = private unnamed_addr constant [3 x i8] c" $\00", align 1
@.str.64.355 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.65.356 = private unnamed_addr constant [8 x i8] c"  movq \00", align 1
@.str.66.357 = private unnamed_addr constant [8 x i8] c", %rsi\0A\00", align 1
@.str.67.358 = private unnamed_addr constant [10 x i8] c", (%rsi)\0A\00", align 1
@.str.68.319 = private unnamed_addr constant [10 x i8] c"-12(%rbp)\00", align 1
@.str.69.320 = private unnamed_addr constant [10 x i8] c"-24(%rbp)\00", align 1
@.str.70.321 = private unnamed_addr constant [10 x i8] c"-32(%rbp)\00", align 1
@.str.71.322 = private unnamed_addr constant [10 x i8] c"-40(%rbp)\00", align 1
@.str.72.323 = private unnamed_addr constant [10 x i8] c"-48(%rbp)\00", align 1
@.str.73.324 = private unnamed_addr constant [61 x i8] c"%s: in load_variable : nb of parameters > 5 not managed yet!\00", align 1
@.str.74.325 = private unnamed_addr constant [9 x i8] c"\0A  movb \00", align 1
@.str.75.326 = private unnamed_addr constant [9 x i8] c"\0A  movw \00", align 1
@.str.76.327 = private unnamed_addr constant [9 x i8] c"\0A  movl \00", align 1
@.str.77.328 = private unnamed_addr constant [9 x i8] c"\0A  movq \00", align 1
@.str.78.329 = private unnamed_addr constant [36 x i8] c"%s: in opcode : size %d unexpected!\00", align 1
@.str.79.382 = private unnamed_addr constant [49 x i8] c"%s: in update_register_size : reg %s unexpected!\00", align 1
@.str.80.353 = private unnamed_addr constant [3 x i8] c"%4\00", align 1
@.str.81.354 = private unnamed_addr constant [3 x i8] c"%5\00", align 1
@.str.389 = private unnamed_addr constant [7 x i8] c"key %d\00", align 1
@.str.1.390 = private unnamed_addr constant [51 x i8] c"(size_t)hashmap_get(map, format(\22key %d\22, i)) == i\00", align 1
@.str.2.384 = private unnamed_addr constant [10 x i8] c"hashmap.c\00", align 1
@__PRETTY_FUNCTION__.hashmap_test = private unnamed_addr constant [24 x i8] c"void hashmap_test(void)\00", align 1
@.str.3.391 = private unnamed_addr constant [12 x i8] c"no such key\00", align 1
@.str.4.392 = private unnamed_addr constant [40 x i8] c"hashmap_get(map, \22no such key\22) == NULL\00", align 1
@.str.5.393 = private unnamed_addr constant [4 x i8] c"OK\0A\00", align 1
@.str.6.383 = private unnamed_addr constant [24 x i8] c"internal error at %s:%d\00", align 1
@.str.7.385 = private unnamed_addr constant [49 x i8] c"%s: in get_or_insert_entry map->buckets is null!\00", align 1
@.str.8.386 = private unnamed_addr constant [8 x i8] c"cap > 0\00", align 1
@__PRETTY_FUNCTION__.rehash = private unnamed_addr constant [23 x i8] c"void rehash(HashMap *)\00", align 1
@.str.9.387 = private unnamed_addr constant [36 x i8] c"%s: in rehash map2.buckets is null!\00", align 1
@.str.10.388 = private unnamed_addr constant [19 x i8] c"map2.used == nkeys\00", align 1
@opt_fcommon = dso_local global i8 1, align 1
@isDebug = dso_local global i8 0, align 1
@.str.396 = private unnamed_addr constant [2 x i8] c" \00", align 1
@previousfile = dso_local global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.396, i32 0, i32 0), align 8
@.str.1.401 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2.402 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.3.403 = private unnamed_addr constant [18 x i8] c"x86_64-linux-gnu\0A\00", align 1
@f = dso_local global %struct._IO_FILE* null, align 8
@logFile = internal global [17 x i8] c"/tmp/chibicc.log\00", align 16
@.str.4.404 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.5.405 = private unnamed_addr constant [59 x i8] c"%s : in main Issue with -debug parameter, file not opened!\00", align 1
@.str.6.406 = private unnamed_addr constant [7 x i8] c"main.c\00", align 1
@opt_cc1 = internal global i8 0, align 1
@isCc1input = internal global i8 0, align 1
@.str.7.407 = private unnamed_addr constant [58 x i8] c"%s : in main with -cc1 parameter -cc1-input is mandatory!\00", align 1
@input_paths = internal global %struct.StringArray zeroinitializer, align 8
@opt_c = internal global i8 0, align 1
@opt_S = internal global i8 0, align 1
@opt_E = internal global i8 0, align 1
@.str.8.408 = private unnamed_addr constant [77 x i8] c"%s : in main cannot specify '-o' with '-c,' '-S' or '-E' with multiple files\00", align 1
@.str.9.409 = private unnamed_addr constant [3 x i8] c"-l\00", align 1
@.str.10.410 = private unnamed_addr constant [5 x i8] c"-Wl,\00", align 1
@.str.11.411 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.12.412 = private unnamed_addr constant [3 x i8] c".s\00", align 1
@.str.13.413 = private unnamed_addr constant [3 x i8] c".o\00", align 1
@.str.14.414 = private unnamed_addr constant [15 x i8] c"type == FILE_C\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@opt_M = internal global i8 0, align 1
@.str.15.415 = private unnamed_addr constant [6 x i8] c"a.out\00", align 1
@opt_MT = internal global i8* null, align 8
@opt_fpic = dso_local global i8 0, align 1
@dot_file = dso_local global i8* null, align 8
@tmpfiles = internal global %struct.StringArray zeroinitializer, align 8
@.str.16.573 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.17.492 = private unnamed_addr constant [84 x i8] c"parameter without value! the following parameters need to be followed by a value :\0A\00", align 1
@.str.18.493 = private unnamed_addr constant [130 x i8] c"-o, -I, -idirafter, -include, -x, -MF, -MQ, -MT, -Xlinker, -cc1-input, -cc1-output, -fuse-ld, -soname, -rpath, --version-script \0A\00", align 1
@.str.19.494 = private unnamed_addr constant [5 x i8] c"-###\00", align 1
@opt_hash_hash_hash = internal global i8 0, align 1
@.str.20.463 = private unnamed_addr constant [5 x i8] c"-cc1\00", align 1
@.str.21.495 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.22.496 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.23.497 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@.str.24.498 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@.str.25.499 = private unnamed_addr constant [9 x i8] c"-fuse-ld\00", align 1
@opt_linker = internal global i8* null, align 8
@.str.26.417 = private unnamed_addr constant [3 x i8] c"-o\00", align 1
@.str.27.500 = private unnamed_addr constant [3 x i8] c"-S\00", align 1
@.str.28.501 = private unnamed_addr constant [7 x i8] c"-debug\00", align 1
@.str.29.502 = private unnamed_addr constant [9 x i8] c"-dotfile\00", align 1
@.str.30.503 = private unnamed_addr constant [9 x i8] c"-fcommon\00", align 1
@.str.31.504 = private unnamed_addr constant [12 x i8] c"-fno-common\00", align 1
@.str.32.505 = private unnamed_addr constant [13 x i8] c"-fno-builtin\00", align 1
@.str.33.467 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.34.506 = private unnamed_addr constant [3 x i8] c"-E\00", align 1
@.str.35.507 = private unnamed_addr constant [3 x i8] c"-I\00", align 1
@.str.36.508 = private unnamed_addr constant [3 x i8] c"-D\00", align 1
@.str.37.509 = private unnamed_addr constant [3 x i8] c"-U\00", align 1
@.str.38.510 = private unnamed_addr constant [9 x i8] c"-include\00", align 1
@opt_include = internal global %struct.StringArray zeroinitializer, align 8
@.str.39.511 = private unnamed_addr constant [3 x i8] c"-x\00", align 1
@opt_x = internal global i32 0, align 4
@.str.40.512 = private unnamed_addr constant [7 x i8] c"-Wl,-z\00", align 1
@.str.41.513 = private unnamed_addr constant [9 x i8] c"-Xlinker\00", align 1
@ld_extra_args = internal global %struct.StringArray zeroinitializer, align 8
@.str.42.514 = private unnamed_addr constant [16 x i8] c"-version-script\00", align 1
@.str.43.515 = private unnamed_addr constant [17 x i8] c"--version-script\00", align 1
@.str.44.516 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@.str.45.517 = private unnamed_addr constant [3 x i8] c"-M\00", align 1
@.str.46.518 = private unnamed_addr constant [4 x i8] c"-MF\00", align 1
@opt_MF = internal global i8* null, align 8
@.str.47.519 = private unnamed_addr constant [4 x i8] c"-MP\00", align 1
@opt_MP = internal global i8 0, align 1
@.str.48.520 = private unnamed_addr constant [4 x i8] c"-MT\00", align 1
@.str.49.521 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.50.522 = private unnamed_addr constant [4 x i8] c"-MD\00", align 1
@opt_MD = internal global i8 0, align 1
@.str.51.523 = private unnamed_addr constant [4 x i8] c"-MQ\00", align 1
@.str.52.524 = private unnamed_addr constant [5 x i8] c"-MMD\00", align 1
@opt_MMD = internal global i8 0, align 1
@.str.53.525 = private unnamed_addr constant [6 x i8] c"-fpic\00", align 1
@.str.54.526 = private unnamed_addr constant [6 x i8] c"-fPIC\00", align 1
@.str.55.527 = private unnamed_addr constant [9 x i8] c"-fno-pic\00", align 1
@.str.56.464 = private unnamed_addr constant [11 x i8] c"-cc1-input\00", align 1
@.str.57.465 = private unnamed_addr constant [12 x i8] c"-cc1-output\00", align 1
@isCc1output = internal global i8 0, align 1
@output_file.476 = internal global i8* null, align 8
@.str.58.528 = private unnamed_addr constant [11 x i8] c"-idirafter\00", align 1
@.str.59.529 = private unnamed_addr constant [8 x i8] c"-static\00", align 1
@opt_static = internal global i8 0, align 1
@.str.60.530 = private unnamed_addr constant [8 x i8] c"-shared\00", align 1
@opt_shared = internal global i8 0, align 1
@.str.61.531 = private unnamed_addr constant [9 x i8] c"-pthread\00", align 1
@.str.62.532 = private unnamed_addr constant [10 x i8] c"-lpthread\00", align 1
@.str.63.533 = private unnamed_addr constant [3 x i8] c"-L\00", align 1
@.str.64.534 = private unnamed_addr constant [14 x i8] c"-hashmap-test\00", align 1
@.str.65.535 = private unnamed_addr constant [13 x i8] c"-dumpmachine\00", align 1
@.str.66.536 = private unnamed_addr constant [8 x i8] c"-soname\00", align 1
@.str.67.537 = private unnamed_addr constant [7 x i8] c"-rpath\00", align 1
@r_path = internal global i8* null, align 8
@.str.68.538 = private unnamed_addr constant [3 x i8] c"-O\00", align 1
@.str.69.539 = private unnamed_addr constant [3 x i8] c"-W\00", align 1
@.str.70.540 = private unnamed_addr constant [3 x i8] c"-g\00", align 1
@.str.71.541 = private unnamed_addr constant [6 x i8] c"-std=\00", align 1
@.str.72.542 = private unnamed_addr constant [5 x i8] c"-std\00", align 1
@.str.73.543 = private unnamed_addr constant [15 x i8] c"-ffreestanding\00", align 1
@.str.74.544 = private unnamed_addr constant [24 x i8] c"-fno-omit-frame-pointer\00", align 1
@.str.75.545 = private unnamed_addr constant [21 x i8] c"-fno-stack-protector\00", align 1
@.str.76.546 = private unnamed_addr constant [21 x i8] c"-fno-strict-aliasing\00", align 1
@.str.77.547 = private unnamed_addr constant [5 x i8] c"-m64\00", align 1
@.str.78.548 = private unnamed_addr constant [5 x i8] c"-m32\00", align 1
@.str.79.549 = private unnamed_addr constant [16 x i8] c"--whole-archive\00", align 1
@.str.80.550 = private unnamed_addr constant [19 x i8] c"--no-whole-archive\00", align 1
@.str.81.551 = private unnamed_addr constant [14 x i8] c"-fsigned-char\00", align 1
@.str.82.552 = private unnamed_addr constant [11 x i8] c"-Bsymbolic\00", align 1
@.str.83.553 = private unnamed_addr constant [3 x i8] c"-z\00", align 1
@.str.84.554 = private unnamed_addr constant [5 x i8] c"defs\00", align 1
@.str.85.555 = private unnamed_addr constant [6 x i8] c"-flto\00", align 1
@.str.86.556 = private unnamed_addr constant [10 x i8] c"-pedantic\00", align 1
@.str.87.557 = private unnamed_addr constant [10 x i8] c"-nostdinc\00", align 1
@.str.88.558 = private unnamed_addr constant [14 x i8] c"-mno-red-zone\00", align 1
@.str.89.559 = private unnamed_addr constant [3 x i8] c"-w\00", align 1
@.str.90.560 = private unnamed_addr constant [38 x i8] c"%s in parse_args unknown argument: %s\00", align 1
@.str.91.561 = private unnamed_addr constant [34 x i8] c"%s : in parse_args no input files\00", align 1
@__const.take_arg.x = private unnamed_addr constant [15 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.417, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.507, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58.528, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38.510, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39.511, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46.518, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48.520, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51.523, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41.513, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56.464, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57.465, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25.499, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66.536, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67.537, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.515, i32 0, i32 0)], align 16
@.str.92.571 = private unnamed_addr constant [215 x i8] c"chibicc is a C compiler based on chibicc created by Rui Ueyama.\0A See original project https://github.com/rui314/chibicc for more information\0A this chibicc contains only some differences for now like new parameters\0A\00", align 1
@.str.93.572 = private unnamed_addr constant [3029 x i8] c"chibicc usage :\0A --help or -h print the help\0A --version or -v print the version of chibicc\0A -cc1 run the cc1 function needs -cc1-input (-cc1-output optional) parameter \0A -fuse-ld to specify other linker than ld used by default \0A -x Specify the language of the following input files.\0A     Permissible languages include: c assembler none\0A     'none' means revert to the default behavior of\0A     guessing the language based on the file's extension.\0A -S generate assembly file \0A -o path to output executable if omitted a.out generated\0A -c path to source to compile \0A -Xlinker <arg> Pass <arg> on to the linker.\0A -Wl,<options> Pass comma-separated <options> on to the linker.\0A -z <arg> Pass <arg> on to the linker. \0A -soname <arg> Pass -soname <arg> on to the linker. \0A --version-script <arg> Pass --version-script <arg> to the linker.\0A -I<path> Pass path to the include directories \0A -L<path> Pass path to the lib directories \0A -D<macro> define macro example -DM13 \0A -U<macro> undefine macro example -UM13\0A -s to strip all symbols during linkage phasis \0A -M -MD -MP -MMD -MF <arg> -MT <arg> -MQ <arg> compiler write a list of input files to \0A     stdout in a format that \22make\22 command can read. This feature is\0A     used to automate file dependency management\0A -fpic or -fPIC Generate position-independent code (PIC)\0A -fno-pic disables the generation of position-independent code with relative address references\0A -fcommon is the default if not specified, it's mainly useful to enable legacy code to link without errors\0A -fno-common specifies that the compiler places uninitialized global variables in the BSS section of the object file.\0A -static  pass to the linker to link a program statically\0A -pthread pass to the linker to link with lpthread library \0A -shared pass to the linker to produce a shared object which can then be linked with other objects to form an executable.\0A -hashmap-test to test the hashmap function \0A -idirafter <dir> apply to lookup for both the #include \22file\22 and #include <file> directives.\0A -### to dump all commands executed by chibicc \0A -debug to dump all commands executed by chibicc in a log file in /tmp/chibicc.log\0A -E Stop after the preprocessing stage; do not run the compiler proper. \0A     The output is in the form of preprocessed source code, which is sent to the standard output.\0A     Input files that don\E2\80\99t require preprocessing are ignored.\0A -rpath <dir> Add a directory to the runtime library search path this parameter is passed to the linker. \0A     This is used when linking an ELF executable with shared objects.\0A     All -rpath arguments are concatenated and passed to the runtime linker,\0A     which uses them to locate shared objects at runtime. \0A     The -rpath option is also used when locating shared objects \0A     which are needed by shared objects explicitly included in the link. \0A -dumpmachine it's required by some projects returns x86_64-linux-gnu\0A -dotfile generates a file with .dot extension that can be visualized using graphviz package \0A chibicc [ -o <path> ] <file>\0A\00", align 1
@.str.94.568 = private unnamed_addr constant [17 x i8] c"%s version : %s\0A\00", align 1
@.str.95.569 = private unnamed_addr constant [8 x i8] c"chibicc\00", align 1
@.str.96.570 = private unnamed_addr constant [7 x i8] c"1.0.17\00", align 1
@.str.97.567 = private unnamed_addr constant [63 x i8] c"%s : in check_parms_length maximum length parameter overpassed\00", align 1
@.str.98.566 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.99.562 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.100.563 = private unnamed_addr constant [10 x i8] c"assembler\00", align 1
@.str.101.564 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.102.565 = private unnamed_addr constant [64 x i8] c"%s : in parse_opt_x <command line>: unknown argument for -x: %s\00", align 1
@.str.103.485 = private unnamed_addr constant [42 x i8] c"%s in quote_makefile buf pointer is null!\00", align 1
@.str.104.487 = private unnamed_addr constant [11 x i8] c"%s/include\00", align 1
@.str.105.488 = private unnamed_addr constant [19 x i8] c"/usr/local/include\00", align 1
@.str.106.489 = private unnamed_addr constant [30 x i8] c"/usr/include/x86_64-linux-gnu\00", align 1
@.str.107.490 = private unnamed_addr constant [13 x i8] c"/usr/include\00", align 1
@.str.108.491 = private unnamed_addr constant [29 x i8] c"/usr/include/chibicc/include\00", align 1
@std_include_paths = internal global %struct.StringArray zeroinitializer, align 8
@.str.109.475 = private unnamed_addr constant [29 x i8] c"%s : in cc1 -include: %s: %s\00", align 1
@.str.110.486 = private unnamed_addr constant [34 x i8] c"%s : in must_tokenize_file %s: %s\00", align 1
@.str.111.480 = private unnamed_addr constant [3 x i8] c".d\00", align 1
@.str.112.477 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.113.481 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@.str.114.482 = private unnamed_addr constant [8 x i8] c" \\\0A  %s\00", align 1
@.str.115.483 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.116.484 = private unnamed_addr constant [6 x i8] c"%s:\0A\0A\00", align 1
@.str.117.447 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.118.479 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str.119.478 = private unnamed_addr constant [50 x i8] c"%s : in open_file cannot open output file: %s: %s\00", align 1
@.str.120.468 = private unnamed_addr constant [3 x i8] c".a\00", align 1
@.str.121.469 = private unnamed_addr constant [4 x i8] c".so\00", align 1
@.str.122.470 = private unnamed_addr constant [5 x i8] c".so.\00", align 1
@.str.123.471 = private unnamed_addr constant [4 x i8] c".lo\00", align 1
@.str.124.472 = private unnamed_addr constant [3 x i8] c".c\00", align 1
@.str.125.473 = private unnamed_addr constant [6 x i8] c".so.4\00", align 1
@.str.126.474 = private unnamed_addr constant [65 x i8] c"%s : in get_file_type <command line>: unknown file extension: %s\00", align 1
@.str.127.466 = private unnamed_addr constant [3 x i8] c"as\00", align 1
@.str.128.446 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.129.448 = private unnamed_addr constant [44 x i8] c"%s : in run_subprocess exec failed: %s: %s\0A\00", align 1
@.str.130.462 = private unnamed_addr constant [29 x i8] c"%s : in run_cc1 args is null\00", align 1
@.str.131.459 = private unnamed_addr constant [20 x i8] c"/tmp/chibicc-XXXXXX\00", align 1
@.str.132.460 = private unnamed_addr constant [41 x i8] c"%s : in create_tmpfile path path is null\00", align 1
@.str.133.461 = private unnamed_addr constant [42 x i8] c"%s : in create_tmpfile mkstemp failed: %s\00", align 1
@.str.134.416 = private unnamed_addr constant [3 x i8] c"ld\00", align 1
@.str.135.418 = private unnamed_addr constant [3 x i8] c"-m\00", align 1
@.str.136.419 = private unnamed_addr constant [11 x i8] c"elf_x86_64\00", align 1
@.str.137.420 = private unnamed_addr constant [10 x i8] c"%s/crti.o\00", align 1
@.str.138.421 = private unnamed_addr constant [15 x i8] c"%s/crtbeginS.o\00", align 1
@.str.139.422 = private unnamed_addr constant [10 x i8] c"%s/crt1.o\00", align 1
@.str.140.423 = private unnamed_addr constant [14 x i8] c"%s/crtbegin.o\00", align 1
@.str.141.424 = private unnamed_addr constant [4 x i8] c"-L.\00", align 1
@.str.142.425 = private unnamed_addr constant [5 x i8] c"-L%s\00", align 1
@.str.143.426 = private unnamed_addr constant [28 x i8] c"-L/usr/lib/x86_64-linux-gnu\00", align 1
@.str.144.427 = private unnamed_addr constant [13 x i8] c"-L/usr/lib64\00", align 1
@.str.145.428 = private unnamed_addr constant [9 x i8] c"-L/lib64\00", align 1
@.str.146.429 = private unnamed_addr constant [31 x i8] c"-L/usr/lib/x86_64-pc-linux-gnu\00", align 1
@.str.147.430 = private unnamed_addr constant [31 x i8] c"-L/usr/lib/x86_64-redhat-linux\00", align 1
@.str.148.431 = private unnamed_addr constant [11 x i8] c"-L/usr/lib\00", align 1
@.str.149.432 = private unnamed_addr constant [7 x i8] c"-L/lib\00", align 1
@.str.150.433 = private unnamed_addr constant [16 x i8] c"-dynamic-linker\00", align 1
@.str.151.434 = private unnamed_addr constant [28 x i8] c"/lib64/ld-linux-x86-64.so.2\00", align 1
@.str.152.435 = private unnamed_addr constant [14 x i8] c"--start-group\00", align 1
@.str.153.436 = private unnamed_addr constant [6 x i8] c"-lgcc\00", align 1
@.str.154.437 = private unnamed_addr constant [9 x i8] c"-lgcc_eh\00", align 1
@.str.155.438 = private unnamed_addr constant [4 x i8] c"-lc\00", align 1
@.str.156.439 = private unnamed_addr constant [12 x i8] c"--end-group\00", align 1
@.str.157.440 = private unnamed_addr constant [12 x i8] c"--as-needed\00", align 1
@.str.158.441 = private unnamed_addr constant [8 x i8] c"-lgcc_s\00", align 1
@.str.159.442 = private unnamed_addr constant [15 x i8] c"--no-as-needed\00", align 1
@.str.160.443 = private unnamed_addr constant [13 x i8] c"%s/crtendS.o\00", align 1
@.str.161.444 = private unnamed_addr constant [12 x i8] c"%s/crtend.o\00", align 1
@.str.162.445 = private unnamed_addr constant [10 x i8] c"%s/crtn.o\00", align 1
@.str.163.454 = private unnamed_addr constant [33 x i8] c"/usr/lib/x86_64-linux-gnu/crti.o\00", align 1
@.str.164.455 = private unnamed_addr constant [26 x i8] c"/usr/lib/x86_64-linux-gnu\00", align 1
@.str.165.456 = private unnamed_addr constant [18 x i8] c"/usr/lib64/crti.o\00", align 1
@.str.166.457 = private unnamed_addr constant [11 x i8] c"/usr/lib64\00", align 1
@.str.167.458 = private unnamed_addr constant [47 x i8] c"%s : in find_libpath library path is not found\00", align 1
@.str.168.450 = private unnamed_addr constant [43 x i8] c"/usr/lib/gcc/x86_64-linux-gnu/*/crtbegin.o\00", align 1
@.str.169.451 = private unnamed_addr constant [35 x i8] c"/usr/lib/gcc/x86_64-*/*/crtbegin.o\00", align 1
@.str.170.452 = private unnamed_addr constant [46 x i8] c"/usr/lib/gcc/x86_64-pc-linux-gnu/*/crtbegin.o\00", align 1
@.str.171.453 = private unnamed_addr constant [46 x i8] c"/usr/lib/gcc/x86_64-redhat-linux/*/crtbegin.o\00", align 1
@__const.find_gcc_libpath.paths = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.168.450, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.169.451, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.170.452, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.171.453, i32 0, i32 0)], align 16
@.str.172.449 = private unnamed_addr constant [55 x i8] c"%s : in find_gcc_libpath gcc library path is not found\00", align 1
@scope = internal global %struct.Scope* @.compoundliteral, align 8
@.str.576 = private unnamed_addr constant [31 x i8] c"%s: in new_cast : node is null\00", align 1
@.str.1.577 = private unnamed_addr constant [8 x i8] c"parse.c\00", align 1
@isDotfile = dso_local global i8 0, align 1
@dotf = dso_local global %struct._IO_FILE* null, align 8
@opt_o = dso_local global i8* null, align 8
@.str.2.820 = private unnamed_addr constant [44 x i8] c"%s: in parse base_file and opt_o are null!\0A\00", align 1
@.str.3.821 = private unnamed_addr constant [5 x i8] c".dot\00", align 1
@.str.4.822 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.5.823 = private unnamed_addr constant [39 x i8] c"%s: in parse dot file cannot be opend\0A\00", align 1
@.str.6.824 = private unnamed_addr constant [13 x i8] c"digraph A {\0A\00", align 1
@opt_fbuiltin = dso_local global i8 1, align 1
@globals = internal global %struct.Obj* null, align 8
@.str.7.604 = private unnamed_addr constant [10 x i8] c"NULL_EXPR\00", align 1
@.str.8.605 = private unnamed_addr constant [4 x i8] c"ADD\00", align 1
@.str.9.606 = private unnamed_addr constant [4 x i8] c"SUB\00", align 1
@.str.10.607 = private unnamed_addr constant [4 x i8] c"MUL\00", align 1
@.str.11.608 = private unnamed_addr constant [4 x i8] c"DIV\00", align 1
@.str.12.609 = private unnamed_addr constant [4 x i8] c"NEG\00", align 1
@.str.13.610 = private unnamed_addr constant [4 x i8] c"MOD\00", align 1
@.str.14.611 = private unnamed_addr constant [7 x i8] c"BITAND\00", align 1
@.str.15.612 = private unnamed_addr constant [6 x i8] c"BITOR\00", align 1
@.str.16.613 = private unnamed_addr constant [7 x i8] c"BITXOR\00", align 1
@.str.17.614 = private unnamed_addr constant [4 x i8] c"SHL\00", align 1
@.str.18.615 = private unnamed_addr constant [4 x i8] c"SHR\00", align 1
@.str.19.616 = private unnamed_addr constant [3 x i8] c"EQ\00", align 1
@.str.20.617 = private unnamed_addr constant [3 x i8] c"NE\00", align 1
@.str.21.618 = private unnamed_addr constant [3 x i8] c"LT\00", align 1
@.str.22.619 = private unnamed_addr constant [3 x i8] c"LE\00", align 1
@.str.23.620 = private unnamed_addr constant [7 x i8] c"ASSIGN\00", align 1
@.str.24.621 = private unnamed_addr constant [5 x i8] c"COND\00", align 1
@.str.25.622 = private unnamed_addr constant [6 x i8] c"COMMA\00", align 1
@.str.26.623 = private unnamed_addr constant [7 x i8] c"MEMBER\00", align 1
@.str.27.624 = private unnamed_addr constant [5 x i8] c"ADDR\00", align 1
@.str.28.625 = private unnamed_addr constant [6 x i8] c"DEREF\00", align 1
@.str.29.626 = private unnamed_addr constant [4 x i8] c"NOT\00", align 1
@.str.30.627 = private unnamed_addr constant [7 x i8] c"BITNOT\00", align 1
@.str.31.628 = private unnamed_addr constant [7 x i8] c"LOGAND\00", align 1
@.str.32.629 = private unnamed_addr constant [6 x i8] c"LOGOR\00", align 1
@.str.33.630 = private unnamed_addr constant [7 x i8] c"RETURN\00", align 1
@.str.34.631 = private unnamed_addr constant [3 x i8] c"IF\00", align 1
@.str.35.632 = private unnamed_addr constant [4 x i8] c"FOR\00", align 1
@.str.36.633 = private unnamed_addr constant [3 x i8] c"DO\00", align 1
@.str.37.634 = private unnamed_addr constant [7 x i8] c"SWITCH\00", align 1
@.str.38.635 = private unnamed_addr constant [5 x i8] c"CASE\00", align 1
@.str.39.636 = private unnamed_addr constant [6 x i8] c"BLOCK\00", align 1
@.str.40.637 = private unnamed_addr constant [5 x i8] c"GOTO\00", align 1
@.str.41.638 = private unnamed_addr constant [10 x i8] c"GOTO_EXPR\00", align 1
@.str.42.639 = private unnamed_addr constant [6 x i8] c"LABLE\00", align 1
@.str.43.640 = private unnamed_addr constant [10 x i8] c"LABEL_VAL\00", align 1
@.str.44.641 = private unnamed_addr constant [9 x i8] c"FUNCCALL\00", align 1
@.str.45.642 = private unnamed_addr constant [9 x i8] c"EXPRSTMR\00", align 1
@.str.46.643 = private unnamed_addr constant [9 x i8] c"STMTEXPR\00", align 1
@.str.47.644 = private unnamed_addr constant [4 x i8] c"VAR\00", align 1
@.str.48.645 = private unnamed_addr constant [7 x i8] c"VLAPTR\00", align 1
@.str.49.646 = private unnamed_addr constant [4 x i8] c"NUM\00", align 1
@.str.50.647 = private unnamed_addr constant [5 x i8] c"CAST\00", align 1
@.str.51.648 = private unnamed_addr constant [8 x i8] c"MEMZERO\00", align 1
@.str.52.649 = private unnamed_addr constant [4 x i8] c"ASM\00", align 1
@.str.53.650 = private unnamed_addr constant [4 x i8] c"CAS\00", align 1
@.str.54.651 = private unnamed_addr constant [5 x i8] c"EXCH\00", align 1
@.str.55.652 = private unnamed_addr constant [12 x i8] c"UNREACHABLE\00", align 1
@.compoundliteral = internal global %struct.Scope zeroinitializer, align 8
@.str.56.578 = private unnamed_addr constant [43 x i8] c"%s: in eval2 : not a compile-time constant\00", align 1
@.str.57.579 = private unnamed_addr constant [35 x i8] c"%s: in eval2 : invalid initializer\00", align 1
@.str.58.580 = private unnamed_addr constant [44 x i8] c"%s: in eval2 : not a compile-time constant2\00", align 1
@.str.59.581 = private unnamed_addr constant [36 x i8] c"%s: in eval2 : invalid initializer2\00", align 1
@.str.60.582 = private unnamed_addr constant [44 x i8] c"%s: in eval2 : not a compile-time constant3\00", align 1
@.str.61.585 = private unnamed_addr constant [50 x i8] c"%s : in eval_double : not a compile-time constant\00", align 1
@.str.62.583 = private unnamed_addr constant [44 x i8] c"%s: in eval2 : not a compile-time constant4\00", align 1
@.str.63.584 = private unnamed_addr constant [36 x i8] c"%s: in eval2 : invalid initializer3\00", align 1
@.str.64.586 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.65.587 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.66.588 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.67.658 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.68.659 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.69.660 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.70.661 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.71.662 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.72.663 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.73.664 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.74.665 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.75.666 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.76.667 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.77.668 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.78.669 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.79.670 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.80.671 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.81.672 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.82.674 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.83.675 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.84.676 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.85.677 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.86.678 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.87.679 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@is_typename.map = internal global %struct.HashMap zeroinitializer, align 8
@is_typename.kw = internal global [31 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88.747, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89.781, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90.782, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91.783, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92.784, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93.785, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.94.777, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95.778, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96.766, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97.779, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98.745, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99.767, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.100.775, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101.788, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102.789, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103.748, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104.736, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105.772, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106.773, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107.746, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.108.749, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109.750, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.110.774, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111.786, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112.787, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113.780, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114.737, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115.768, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116.769, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117.751, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118.752, i32 0, i32 0)], align 16
@.str.88.747 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.89.781 = private unnamed_addr constant [6 x i8] c"_Bool\00", align 1
@.str.90.782 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.91.783 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.92.784 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.93.785 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.94.777 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.95.778 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.96.766 = private unnamed_addr constant [8 x i8] c"typedef\00", align 1
@.str.97.779 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.98.745 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@.str.99.767 = private unnamed_addr constant [7 x i8] c"extern\00", align 1
@.str.100.775 = private unnamed_addr constant [9 x i8] c"_Alignas\00", align 1
@.str.101.788 = private unnamed_addr constant [7 x i8] c"signed\00", align 1
@.str.102.789 = private unnamed_addr constant [9 x i8] c"unsigned\00", align 1
@.str.103.748 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.104.736 = private unnamed_addr constant [9 x i8] c"volatile\00", align 1
@.str.105.772 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.106.773 = private unnamed_addr constant [9 x i8] c"register\00", align 1
@.str.107.746 = private unnamed_addr constant [9 x i8] c"restrict\00", align 1
@.str.108.749 = private unnamed_addr constant [11 x i8] c"__restrict\00", align 1
@.str.109.750 = private unnamed_addr constant [13 x i8] c"__restrict__\00", align 1
@.str.110.774 = private unnamed_addr constant [10 x i8] c"_Noreturn\00", align 1
@.str.111.786 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.112.787 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.113.780 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.114.737 = private unnamed_addr constant [7 x i8] c"inline\00", align 1
@.str.115.768 = private unnamed_addr constant [14 x i8] c"_Thread_local\00", align 1
@.str.116.769 = private unnamed_addr constant [9 x i8] c"__thread\00", align 1
@.str.117.751 = private unnamed_addr constant [8 x i8] c"_Atomic\00", align 1
@.str.118.752 = private unnamed_addr constant [9 x i8] c"_Complex\00", align 1
@.str.119.685 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.120.723 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.121.714 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.122.589 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.123.694 = private unnamed_addr constant [7 x i8] c"sizeof\00", align 1
@.str.124.695 = private unnamed_addr constant [9 x i8] c"_Alignof\00", align 1
@.str.125.686 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.126.680 = private unnamed_addr constant [47 x i8] c"%s: in unary : cannot take address of bitfield\00", align 1
@.str.127.681 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.128.682 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.129.683 = private unnamed_addr constant [3 x i8] c"++\00", align 1
@.str.130.684 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@gotos = internal global %struct.Node* null, align 8
@.str.131.603 = private unnamed_addr constant [14 x i8] c"%s%d -> %s%d\0A\00", align 1
@new_unique_name.id = internal global i32 0, align 4
@.str.132.602 = private unnamed_addr constant [7 x i8] c".L..%d\00", align 1
@.str.133.817 = private unnamed_addr constant [42 x i8] c"%s: in get_ident : expected an identifier\00", align 1
@.str.134.687 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.135.688 = private unnamed_addr constant [3 x i8] c"->\00", align 1
@.str.136.656 = private unnamed_addr constant [29 x i8] c"%s: in new_var : var is null\00", align 1
@.str.137.657 = private unnamed_addr constant [32 x i8] c"%s: in push_scope : sc is null!\00", align 1
@.str.138.815 = private unnamed_addr constant [39 x i8] c"%s: in gvar_initializer : buf is null!\00", align 1
@.str.139.811 = private unnamed_addr constant [38 x i8] c"%s: in new_initializer : init is null\00", align 1
@.str.140.812 = private unnamed_addr constant [48 x i8] c"%s: in new_initializer : init->children is null\00", align 1
@.str.141.813 = private unnamed_addr constant [54 x i8] c"%s: in new_initializer : init->children is null (bis)\00", align 1
@.str.142.814 = private unnamed_addr constant [39 x i8] c"%s: in new_initializer : child is null\00", align 1
@.str.143.712 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.144.810 = private unnamed_addr constant [89 x i8] c"%s: in string_initializer : array of inappropriate type initialized from string constant\00", align 1
@.str.145.805 = private unnamed_addr constant [70 x i8] c"%s: in array_designator : array designator index exceeds array bounds\00", align 1
@.str.146.806 = private unnamed_addr constant [53 x i8] c"%s: in array designator : index exceeds array bounds\00", align 1
@.str.147.807 = private unnamed_addr constant [50 x i8] c"%s: in array designator : range [%d, %d] is empty\00", align 1
@.str.148.803 = private unnamed_addr constant [58 x i8] c"%s: in designation : array index in non-array initializer\00", align 1
@.str.149.804 = private unnamed_addr constant [66 x i8] c"%s: in designation: field name not in struct or union initializer\00", align 1
@.str.150.590 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.151.808 = private unnamed_addr constant [55 x i8] c"%s: in struct_designator : expected a field designator\00", align 1
@.str.152.809 = private unnamed_addr constant [53 x i8] c"%s: in struct_designator : struct has no such member\00", align 1
@.str.153.591 = private unnamed_addr constant [3 x i8] c"+=\00", align 1
@.str.154.592 = private unnamed_addr constant [3 x i8] c"-=\00", align 1
@.str.155.593 = private unnamed_addr constant [3 x i8] c"*=\00", align 1
@.str.156.594 = private unnamed_addr constant [3 x i8] c"/=\00", align 1
@.str.157.595 = private unnamed_addr constant [3 x i8] c"%=\00", align 1
@.str.158.596 = private unnamed_addr constant [3 x i8] c"&=\00", align 1
@.str.159.597 = private unnamed_addr constant [3 x i8] c"|=\00", align 1
@.str.160.598 = private unnamed_addr constant [3 x i8] c"^=\00", align 1
@.str.161.599 = private unnamed_addr constant [4 x i8] c"<<=\00", align 1
@.str.162.600 = private unnamed_addr constant [4 x i8] c">>=\00", align 1
@.str.163.802 = private unnamed_addr constant [37 x i8] c"%s: in copy_struct_type :  m is null\00", align 1
@.str.164.816 = private unnamed_addr constant [37 x i8] c"%s: in write_gvar_data : rel is null\00", align 1
@.str.165.790 = private unnamed_addr constant [24 x i8] c"internal error at %s:%d\00", align 1
@.str.166.696 = private unnamed_addr constant [9 x i8] c"_Generic\00", align 1
@.str.167.697 = private unnamed_addr constant [29 x i8] c"__builtin_types_compatible_p\00", align 1
@.str.168.698 = private unnamed_addr constant [20 x i8] c"__builtin_reg_class\00", align 1
@.str.169.699 = private unnamed_addr constant [27 x i8] c"__builtin_compare_and_swap\00", align 1
@.str.170.700 = private unnamed_addr constant [26 x i8] c"__builtin_atomic_exchange\00", align 1
@.str.171.701 = private unnamed_addr constant [26 x i8] c"__builtin_atomic_fetch_op\00", align 1
@.str.172.702 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.173.703 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.174.704 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.175.705 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.176.706 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.177.707 = private unnamed_addr constant [40 x i8] c"%s: in primary : invalid fetch operator\00", align 1
@current_fn.708 = internal global %struct.Obj* null, align 8
@.str.178.709 = private unnamed_addr constant [43 x i8] c"%s: in primary : error: undefined variable\00", align 1
@.str.179.710 = private unnamed_addr constant [40 x i8] c"%s: in primary : expected an expression\00", align 1
@.str.180.801 = private unnamed_addr constant [41 x i8] c"%s: in enter_scope : sc pointer is null!\00", align 1
@.str.181.740 = private unnamed_addr constant [44 x i8] c"%s: in declaration : variable declared void\00", align 1
@.str.182.741 = private unnamed_addr constant [44 x i8] c"%s: in declaration : variable name omitted1\00", align 1
@.str.183.742 = private unnamed_addr constant [65 x i8] c"%s: in declaration: variable-sized object may not be initialized\00", align 1
@.str.184.743 = private unnamed_addr constant [50 x i8] c"%s: in declaration : variable has incomplete type\00", align 1
@builtin_alloca.744 = internal global %struct.Obj* null, align 8
@.str.185.713 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.186.715 = private unnamed_addr constant [54 x i8] c"%s: in stmt : Non-void function must return something\00", align 1
@.str.187.716 = private unnamed_addr constant [61 x i8] c"%s: in stmt : Void function must return void type expression\00", align 1
@.str.188.717 = private unnamed_addr constant [67 x i8] c"%s: in stmt : Non-void function cannot return void type expression\00", align 1
@.str.189.718 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.190.719 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.191.720 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@current_switch = internal global %struct.Node* null, align 8
@brk_label = internal global i8* null, align 8
@.str.192.721 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.193.722 = private unnamed_addr constant [25 x i8] c"%s: in stmt : stray case\00", align 1
@.str.194.724 = private unnamed_addr constant [41 x i8] c"%s: in stmt : empty case range specified\00", align 1
@.str.195.711 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.196.725 = private unnamed_addr constant [28 x i8] c"%s: in stmt : stray default\00", align 1
@.str.197.726 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@cont_label = internal global i8* null, align 8
@.str.198.727 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.199.728 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.200.729 = private unnamed_addr constant [4 x i8] c"asm\00", align 1
@.str.201.730 = private unnamed_addr constant [8 x i8] c"__asm__\00", align 1
@.str.202.731 = private unnamed_addr constant [5 x i8] c"goto\00", align 1
@.str.203.732 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.204.733 = private unnamed_addr constant [26 x i8] c"%s: in stmt : stray break\00", align 1
@.str.205.734 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.206.735 = private unnamed_addr constant [29 x i8] c"%s: in stmt : stray continue\00", align 1
@labels = internal global %struct.Node* null, align 8
@.str.207.738 = private unnamed_addr constant [42 x i8] c"%s: in asm_stmt : expected string literal\00", align 1
@.str.208.739 = private unnamed_addr constant [68 x i8] c"%s: in asm_stmt : error during extended_asm function null returned!\00", align 1
@.str.209.691 = private unnamed_addr constant [32 x i8] c"%s: in funcall : not a function\00", align 1
@.str.210.692 = private unnamed_addr constant [36 x i8] c"%s: in funcall : too many arguments\00", align 1
@.str.211.693 = private unnamed_addr constant [35 x i8] c"%s: in funcall : too few arguments\00", align 1
@.str.212.689 = private unnamed_addr constant [45 x i8] c"%s: in struct_ref : not a struct nor a union\00", align 1
@.str.213.690 = private unnamed_addr constant [35 x i8] c"%s: in struct_ref : no such member\00", align 1
@.str.214.653 = private unnamed_addr constant [34 x i8] c"%s: in new_add : invalid operands\00", align 1
@.str.215.601 = private unnamed_addr constant [34 x i8] c"%s: in new_sub : invalid operands\00", align 1
@locals = internal global %struct.Obj* null, align 8
@order = internal global i32 0, align 4
@.str.216.655 = private unnamed_addr constant [55 x i8] c"%s: in new_binary : Cannot assign void type expression\00", align 1
@new_node.count = internal global i32 0, align 4
@.str.217.654 = private unnamed_addr constant [31 x i8] c"%s: in new_node : node is null\00", align 1
@.str.218.825 = private unnamed_addr constant [7 x i8] c"alloca\00", align 1
@.str.219.770 = private unnamed_addr constant [74 x i8] c"%s : in declspec : storage class specifier is not allowed in this context\00", align 1
@.str.220.771 = private unnamed_addr constant [106 x i8] c"%s: in declspec : typedef may not be used together with static, extern, inline, __thread or _Thread_local\00", align 1
@.str.221.776 = private unnamed_addr constant [58 x i8] c"%s: in declspec : _Alignas is not allowed in this context\00", align 1
@.str.222.791 = private unnamed_addr constant [31 x i8] c"%s: in declspec : invalid type\00", align 1
@.str.223.797 = private unnamed_addr constant [14 x i8] c"__attribute__\00", align 1
@.str.224.798 = private unnamed_addr constant [7 x i8] c"packed\00", align 1
@.str.225.799 = private unnamed_addr constant [8 x i8] c"aligned\00", align 1
@.str.226.800 = private unnamed_addr constant [42 x i8] c"%s: in attribute_list : unknown attribute\00", align 1
@.str.227.794 = private unnamed_addr constant [36 x i8] c"%s: in struct_members : mem is null\00", align 1
@.str.228.795 = private unnamed_addr constant [42 x i8] c"%s: in struct_members : mem is null (bis)\00", align 1
@.str.229.796 = private unnamed_addr constant [55 x i8] c"%s: in struct_members : only integers can be bitfields\00", align 1
@.str.230.792 = private unnamed_addr constant [42 x i8] c"%s: in enum_specifier : unknown enum type\00", align 1
@.str.231.793 = private unnamed_addr constant [40 x i8] c"%s: in enum_specifier : not an enum tag\00", align 1
@.str.232.765 = private unnamed_addr constant [44 x i8] c"%s: in parse_typedef : typedef name omitted\00", align 1
@.str.233.754 = private unnamed_addr constant [40 x i8] c"%s: in function : function name omitted\00", align 1
@.str.234.757 = private unnamed_addr constant [59 x i8] c"%s: in function : redeclared as a different kind of symbol\00", align 1
@.str.235.758 = private unnamed_addr constant [37 x i8] c"%s: in function : redefinition of %s\00", align 1
@.str.236.759 = private unnamed_addr constant [70 x i8] c"%s: in function : static declaration follows a non-static declaration\00", align 1
@.str.237.760 = private unnamed_addr constant [12 x i8] c"__va_area__\00", align 1
@.str.238.761 = private unnamed_addr constant [16 x i8] c"__alloca_size__\00", align 1
@.str.239.762 = private unnamed_addr constant [9 x i8] c"__func__\00", align 1
@.str.240.763 = private unnamed_addr constant [13 x i8] c"__FUNCTION__\00", align 1
@.str.241.764 = private unnamed_addr constant [53 x i8] c"%s: in resolve_goto_labels : use of undeclared label\00", align 1
@.str.242.753 = private unnamed_addr constant [47 x i8] c"%s: in global_variable : variable name omitted\00", align 1
@search_include_paths.cache = internal global %struct.HashMap zeroinitializer, align 8
@include_paths = dso_local global %struct.StringArray zeroinitializer, align 8
@.str.828 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@include_next_idx = internal global i32 0, align 4
@.str.1.831 = private unnamed_addr constant [16 x i8] c"__has_attribute\00", align 1
@.str.2.832 = private unnamed_addr constant [11 x i8] c"<built-in>\00", align 1
@macros = internal global %struct.HashMap zeroinitializer, align 8
@.str.3.839 = private unnamed_addr constant [6 x i8] c"_LP64\00", align 1
@.str.4.840 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.5.841 = private unnamed_addr constant [25 x i8] c"__C99_MACRO_WITH_VA_ARGS\00", align 1
@.str.6.842 = private unnamed_addr constant [8 x i8] c"__ELF__\00", align 1
@.str.7.843 = private unnamed_addr constant [9 x i8] c"__LP64__\00", align 1
@.str.8.844 = private unnamed_addr constant [18 x i8] c"__SIZEOF_DOUBLE__\00", align 1
@.str.9.845 = private unnamed_addr constant [2 x i8] c"8\00", align 1
@.str.10.846 = private unnamed_addr constant [17 x i8] c"__SIZEOF_FLOAT__\00", align 1
@.str.11.847 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.12.848 = private unnamed_addr constant [15 x i8] c"__SIZEOF_INT__\00", align 1
@.str.13.849 = private unnamed_addr constant [23 x i8] c"__SIZEOF_LONG_DOUBLE__\00", align 1
@.str.14.850 = private unnamed_addr constant [21 x i8] c"__SIZEOF_LONG_LONG__\00", align 1
@.str.15.851 = private unnamed_addr constant [16 x i8] c"__SIZEOF_LONG__\00", align 1
@.str.16.852 = private unnamed_addr constant [19 x i8] c"__SIZEOF_POINTER__\00", align 1
@.str.17.853 = private unnamed_addr constant [21 x i8] c"__SIZEOF_PTRDIFF_T__\00", align 1
@.str.18.854 = private unnamed_addr constant [17 x i8] c"__SIZEOF_SHORT__\00", align 1
@.str.19.855 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.20.856 = private unnamed_addr constant [18 x i8] c"__SIZEOF_SIZE_T__\00", align 1
@.str.21.857 = private unnamed_addr constant [14 x i8] c"__SIZE_TYPE__\00", align 1
@.str.22.858 = private unnamed_addr constant [14 x i8] c"unsigned long\00", align 1
@.str.23.859 = private unnamed_addr constant [16 x i8] c"__STDC_HOSTED__\00", align 1
@.str.24.860 = private unnamed_addr constant [20 x i8] c"__STDC_NO_COMPLEX__\00", align 1
@.str.25.861 = private unnamed_addr constant [16 x i8] c"__STDC_UTF_16__\00", align 1
@.str.26.862 = private unnamed_addr constant [16 x i8] c"__STDC_UTF_32__\00", align 1
@.str.27.863 = private unnamed_addr constant [17 x i8] c"__STDC_VERSION__\00", align 1
@.str.28.864 = private unnamed_addr constant [8 x i8] c"201112L\00", align 1
@.str.29.865 = private unnamed_addr constant [9 x i8] c"__STDC__\00", align 1
@.str.30.866 = private unnamed_addr constant [22 x i8] c"__USER_LABEL_PREFIX__\00", align 1
@.str.31.867 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.32.868 = private unnamed_addr constant [12 x i8] c"__alignof__\00", align 1
@.str.33.869 = private unnamed_addr constant [9 x i8] c"_Alignof\00", align 1
@.str.34.870 = private unnamed_addr constant [8 x i8] c"__amd64\00", align 1
@.str.35.871 = private unnamed_addr constant [10 x i8] c"__amd64__\00", align 1
@.str.36.872 = private unnamed_addr constant [12 x i8] c"__chibicc__\00", align 1
@.str.37.873 = private unnamed_addr constant [10 x i8] c"__const__\00", align 1
@.str.38.874 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.39.875 = private unnamed_addr constant [14 x i8] c"__gnu_linux__\00", align 1
@.str.40.876 = private unnamed_addr constant [11 x i8] c"__inline__\00", align 1
@.str.41.877 = private unnamed_addr constant [7 x i8] c"inline\00", align 1
@.str.42.878 = private unnamed_addr constant [8 x i8] c"__linux\00", align 1
@.str.43.879 = private unnamed_addr constant [10 x i8] c"__linux__\00", align 1
@.str.44.880 = private unnamed_addr constant [11 x i8] c"__signed__\00", align 1
@.str.45.881 = private unnamed_addr constant [7 x i8] c"signed\00", align 1
@.str.46.882 = private unnamed_addr constant [11 x i8] c"__typeof__\00", align 1
@.str.47.883 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.48.884 = private unnamed_addr constant [7 x i8] c"__unix\00", align 1
@.str.49.885 = private unnamed_addr constant [9 x i8] c"__unix__\00", align 1
@.str.50.886 = private unnamed_addr constant [13 x i8] c"__volatile__\00", align 1
@.str.51.887 = private unnamed_addr constant [9 x i8] c"volatile\00", align 1
@.str.52.888 = private unnamed_addr constant [9 x i8] c"__x86_64\00", align 1
@.str.53.889 = private unnamed_addr constant [11 x i8] c"__x86_64__\00", align 1
@.str.54.890 = private unnamed_addr constant [6 x i8] c"linux\00", align 1
@.str.55.891 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.56.892 = private unnamed_addr constant [8 x i8] c"nonnull\00", align 1
@.str.57.893 = private unnamed_addr constant [9 x i8] c"__FILE__\00", align 1
@.str.58.894 = private unnamed_addr constant [9 x i8] c"__LINE__\00", align 1
@.str.59.895 = private unnamed_addr constant [12 x i8] c"__COUNTER__\00", align 1
@.str.60.896 = private unnamed_addr constant [14 x i8] c"__TIMESTAMP__\00", align 1
@.str.61.897 = private unnamed_addr constant [14 x i8] c"__BASE_FILE__\00", align 1
@.str.62.898 = private unnamed_addr constant [9 x i8] c"__DATE__\00", align 1
@.str.63.899 = private unnamed_addr constant [9 x i8] c"__TIME__\00", align 1
@cond_incl = internal global %struct.CondIncl* null, align 8
@.str.64.907 = private unnamed_addr constant [55 x i8] c"%s: in preprocess : unterminated conditional directive\00", align 1
@.str.65.834 = private unnamed_addr constant [13 x i8] c"preprocess.c\00", align 1
@.str.66.833 = private unnamed_addr constant [29 x i8] c"%s: in add_macro : m is null\00", align 1
@.str.67.902 = private unnamed_addr constant [34 x i8] c"%s: in quote_string : buf is null\00", align 1
@.str.68.904 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@counter_macro.i = internal global i32 0, align 4
@.str.69.903 = private unnamed_addr constant [25 x i8] c"??? ??? ?? ??:??:?? ????\00", align 1
@base_file = dso_local global i8* null, align 8
@format_date.mon = internal global [12 x [4 x i8]] [[4 x i8] c"Jan\00", [4 x i8] c"Feb\00", [4 x i8] c"Mar\00", [4 x i8] c"Apr\00", [4 x i8] c"May\00", [4 x i8] c"Jun\00", [4 x i8] c"Jul\00", [4 x i8] c"Aug\00", [4 x i8] c"Sep\00", [4 x i8] c"Oct\00", [4 x i8] c"Nov\00", [4 x i8] c"Dec\00"], align 16
@.str.70.901 = private unnamed_addr constant [12 x i8] c"\22%s %2d %d\22\00", align 1
@.str.71.900 = private unnamed_addr constant [17 x i8] c"\22%02d:%02d:%02d\22\00", align 1
@.str.72.931 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str.73.932 = private unnamed_addr constant [13 x i8] c"include_next\00", align 1
@.str.74.933 = private unnamed_addr constant [7 x i8] c"define\00", align 1
@.str.75.934 = private unnamed_addr constant [6 x i8] c"undef\00", align 1
@.str.76.935 = private unnamed_addr constant [54 x i8] c"%s: in preprocess2 : macro name must be an identifier\00", align 1
@.str.77.936 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.78.937 = private unnamed_addr constant [6 x i8] c"ifdef\00", align 1
@.str.79.938 = private unnamed_addr constant [7 x i8] c"ifndef\00", align 1
@.str.80.939 = private unnamed_addr constant [5 x i8] c"elif\00", align 1
@.str.81.940 = private unnamed_addr constant [33 x i8] c"%s: in preprocess2 : stray #elif\00", align 1
@.str.82.941 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.83.942 = private unnamed_addr constant [33 x i8] c"%s: in preprocess2 : stray #else\00", align 1
@.str.84.943 = private unnamed_addr constant [6 x i8] c"endif\00", align 1
@.str.85.944 = private unnamed_addr constant [34 x i8] c"%s: in preprocess2 : stray #endif\00", align 1
@.str.86.945 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.87.946 = private unnamed_addr constant [7 x i8] c"pragma\00", align 1
@.str.88.947 = private unnamed_addr constant [5 x i8] c"once\00", align 1
@pragma_once = internal global %struct.HashMap zeroinitializer, align 8
@.str.89.948 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.90.949 = private unnamed_addr constant [27 x i8] c"%s: in preprocess2 : error\00", align 1
@.str.91.950 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.92.951 = private unnamed_addr constant [13 x i8] c"warning: %s\0A\00", align 1
@.str.93.952 = private unnamed_addr constant [52 x i8] c"%s: in preprocess2 : invalid preprocessor directive\00", align 1
@.str.94.914 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.95.966 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.96.967 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.97.968 = private unnamed_addr constant [44 x i8] c"%s: in read_include_filename : expected '>'\00", align 1
@.str.98.969 = private unnamed_addr constant [51 x i8] c"%s: in read_include_filename : expected a filename\00", align 1
@.str.99.927 = private unnamed_addr constant [33 x i8] c"%s: in join_tokens : buf is null\00", align 1
@.str.100.910 = private unnamed_addr constant [30 x i8] c"%s: in copy_token : t is null\00", align 1
@include_file.include_guards = internal global %struct.HashMap zeroinitializer, align 8
@.str.101.965 = private unnamed_addr constant [47 x i8] c"%s: in include_file : %s: cannot open file: %s\00", align 1
@.str.102.961 = private unnamed_addr constant [64 x i8] c"%s: in read_macro_definition : macro name must be an identifier\00", align 1
@.str.103.913 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.104.921 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.105.916 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.106.962 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.107.922 = private unnamed_addr constant [12 x i8] c"__VA_ARGS__\00", align 1
@.str.108.963 = private unnamed_addr constant [49 x i8] c"%s in read_macro_params : expected an identifier\00", align 1
@.str.109.964 = private unnamed_addr constant [37 x i8] c"%s: in read_macro_params : m is null\00", align 1
@.str.110.960 = private unnamed_addr constant [12 x i8] c"extra token\00", align 1
@.str.111.956 = private unnamed_addr constant [39 x i8] c"%s: in eval_const_expr : no expression\00", align 1
@.str.112.957 = private unnamed_addr constant [37 x i8] c"%s: in eval_const_expr : extra token\00", align 1
@.str.113.958 = private unnamed_addr constant [8 x i8] c"defined\00", align 1
@.str.114.959 = private unnamed_addr constant [58 x i8] c"%s: in read_const_expr : macro name must be an identifier\00", align 1
@.str.115.955 = private unnamed_addr constant [35 x i8] c"%s: in push_cond_incl : ci is null\00", align 1
@.str.116.953 = private unnamed_addr constant [46 x i8] c"%s: in read_line_marker : invalid line marker\00", align 1
@.str.117.954 = private unnamed_addr constant [44 x i8] c"%s: in read_line_marker : filename expected\00", align 1
@.str.118.908 = private unnamed_addr constant [97 x i8] c"%s: in join_adjacent_string_literals : unsupported non-standard concatenation of string literals\00", align 1
@.str.119.909 = private unnamed_addr constant [52 x i8] c"%s: in join_adjacent_string_literals :  buf is null\00", align 1
@.str.120.911 = private unnamed_addr constant [3 x i8] c"u8\00", align 1
@.str.121.912 = private unnamed_addr constant [24 x i8] c"internal error at %s:%d\00", align 1
@.str.122.930 = private unnamed_addr constant [32 x i8] c"%s: in new_hideset : hs is null\00", align 1
@.str.123.928 = private unnamed_addr constant [37 x i8] c"%s: in read_macro_args : arg is null\00", align 1
@.str.124.929 = private unnamed_addr constant [44 x i8] c"%s: in read_macro_args : too many arguments\00", align 1
@.str.125.923 = private unnamed_addr constant [51 x i8] c"%s: in read_macro_arg_one : premature end of input\00", align 1
@.str.126.924 = private unnamed_addr constant [40 x i8] c"%s: in read_macro_arg_one : arg is null\00", align 1
@.str.127.915 = private unnamed_addr constant [56 x i8] c"%s: in subst : '#' is not followed by a macro parameter\00", align 1
@.str.128.917 = private unnamed_addr constant [3 x i8] c"##\00", align 1
@.str.129.918 = private unnamed_addr constant [62 x i8] c"%s: in subst : '##' cannot appear at start of macro expansion\00", align 1
@.str.130.919 = private unnamed_addr constant [60 x i8] c"%s: in subst : '##' cannot appear at end of macro expansion\00", align 1
@.str.131.920 = private unnamed_addr constant [11 x i8] c"__VA_OPT__\00", align 1
@.str.132.925 = private unnamed_addr constant [9 x i8] c"%.*s%.*s\00", align 1
@.str.133.926 = private unnamed_addr constant [52 x i8] c"%s: in paste : pasting forms '%s', an invalid token\00", align 1
@.str.972 = private unnamed_addr constant [55 x i8] c"%s: in strarray_push reallocation of arr->data failed!\00", align 1
@.str.1.973 = private unnamed_addr constant [10 x i8] c"strings.c\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.978 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@current_file = internal global %struct.File* null, align 8
@.str.1.992 = private unnamed_addr constant [28 x i8] c"%s: in skip : expected '%s'\00", align 1
@.str.2.993 = private unnamed_addr constant [11 x i8] c"tokenize.c\00", align 1
@at_bol = internal global i8 0, align 1
@has_space = internal global i8 0, align 1
@.str.3.1067 = private unnamed_addr constant [3 x i8] c"//\00", align 1
@.str.4.1068 = private unnamed_addr constant [3 x i8] c"/*\00", align 1
@.str.5.1069 = private unnamed_addr constant [3 x i8] c"*/\00", align 1
@.str.6.1070 = private unnamed_addr constant [41 x i8] c"%s: in tokenize : unclosed block comment\00", align 1
@.str.7.1071 = private unnamed_addr constant [5 x i8] c"eEpP\00", align 1
@.str.8.1072 = private unnamed_addr constant [3 x i8] c"+-\00", align 1
@.str.9.1073 = private unnamed_addr constant [4 x i8] c"u8\22\00", align 1
@.str.10.1074 = private unnamed_addr constant [3 x i8] c"u\22\00", align 1
@.str.11.1075 = private unnamed_addr constant [3 x i8] c"L\22\00", align 1
@.str.12.1076 = private unnamed_addr constant [3 x i8] c"U\22\00", align 1
@.str.13.1077 = private unnamed_addr constant [3 x i8] c"u'\00", align 1
@.str.14.1078 = private unnamed_addr constant [3 x i8] c"L'\00", align 1
@.str.15.1079 = private unnamed_addr constant [3 x i8] c"U'\00", align 1
@.str.16.1080 = private unnamed_addr constant [32 x i8] c"%s: in tokenize : invalid token\00", align 1
@input_files = internal global %struct.File** null, align 8
@.str.17.1110 = private unnamed_addr constant [30 x i8] c"%s: in new_file file is null!\00", align 1
@.str.18.1113 = private unnamed_addr constant [4 x i8] c"\EF\BB\BF\00", align 1
@tokenize_file.file_no = internal global i32 0, align 4
@.str.19.1114 = private unnamed_addr constant [42 x i8] c"%s: in tokenize_file input_files is null!\00", align 1
@.str.20.979 = private unnamed_addr constant [8 x i8] c"%s:%d: \00", align 1
@.str.21.980 = private unnamed_addr constant [6 x i8] c"%.*s\0A\00", align 1
@.str.22.981 = private unnamed_addr constant [4 x i8] c"%*s\00", align 1
@.str.23.982 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.24.983 = private unnamed_addr constant [3 x i8] c"^ \00", align 1
@is_keyword.map = internal global %struct.HashMap zeroinitializer, align 8
@is_keyword.kw = internal global [45 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25.1013, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.1014, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27.1015, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28.1016, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29.1017, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30.1018, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31.1019, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32.1020, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33.1021, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34.1022, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35.1023, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36.1024, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37.1025, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38.1026, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39.1027, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40.1028, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41.1029, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42.1030, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43.1031, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44.1032, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45.1033, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46.1034, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47.1035, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48.1036, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49.1037, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50.1038, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51.1039, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52.1040, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53.1041, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54.1042, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55.1043, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56.1044, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.1045, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58.1046, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59.1047, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60.1048, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61.1049, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62.1050, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63.1051, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64.1052, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65.1053, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66.1054, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67.1055, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68.1056, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.69.1057, i32 0, i32 0)], align 16
@.str.25.1013 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.26.1014 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.27.1015 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.28.1016 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.29.1017 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.30.1018 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.31.1019 = private unnamed_addr constant [7 x i8] c"sizeof\00", align 1
@.str.32.1020 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.33.1021 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.34.1022 = private unnamed_addr constant [6 x i8] c"union\00", align 1
@.str.35.1023 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.36.1024 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.37.1025 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.38.1026 = private unnamed_addr constant [8 x i8] c"typedef\00", align 1
@.str.39.1027 = private unnamed_addr constant [6 x i8] c"_Bool\00", align 1
@.str.40.1028 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.41.1029 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@.str.42.1030 = private unnamed_addr constant [5 x i8] c"goto\00", align 1
@.str.43.1031 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.44.1032 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.45.1033 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.46.1034 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.47.1035 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.48.1036 = private unnamed_addr constant [7 x i8] c"extern\00", align 1
@.str.49.1037 = private unnamed_addr constant [9 x i8] c"_Alignof\00", align 1
@.str.50.1038 = private unnamed_addr constant [9 x i8] c"_Alignas\00", align 1
@.str.51.1039 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.52.1040 = private unnamed_addr constant [7 x i8] c"signed\00", align 1
@.str.53.1041 = private unnamed_addr constant [9 x i8] c"unsigned\00", align 1
@.str.54.1042 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.55.1043 = private unnamed_addr constant [9 x i8] c"volatile\00", align 1
@.str.56.1044 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.57.1045 = private unnamed_addr constant [9 x i8] c"register\00", align 1
@.str.58.1046 = private unnamed_addr constant [9 x i8] c"restrict\00", align 1
@.str.59.1047 = private unnamed_addr constant [11 x i8] c"__restrict\00", align 1
@.str.60.1048 = private unnamed_addr constant [13 x i8] c"__restrict__\00", align 1
@.str.61.1049 = private unnamed_addr constant [10 x i8] c"_Noreturn\00", align 1
@.str.62.1050 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.63.1051 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.64.1052 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.65.1053 = private unnamed_addr constant [4 x i8] c"asm\00", align 1
@.str.66.1054 = private unnamed_addr constant [14 x i8] c"_Thread_local\00", align 1
@.str.67.1055 = private unnamed_addr constant [9 x i8] c"__thread\00", align 1
@.str.68.1056 = private unnamed_addr constant [8 x i8] c"_Atomic\00", align 1
@.str.69.1057 = private unnamed_addr constant [14 x i8] c"__attribute__\00", align 1
@.str.70.998 = private unnamed_addr constant [52 x i8] c"%s: in convert_pp_number : invalid numeric constant\00", align 1
@.str.71.999 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.str.72.1000 = private unnamed_addr constant [3 x i8] c"0b\00", align 1
@.str.73.1001 = private unnamed_addr constant [4 x i8] c"LLU\00", align 1
@.str.74.1002 = private unnamed_addr constant [4 x i8] c"LLu\00", align 1
@.str.75.1003 = private unnamed_addr constant [4 x i8] c"llU\00", align 1
@.str.76.1004 = private unnamed_addr constant [4 x i8] c"llu\00", align 1
@.str.77.1005 = private unnamed_addr constant [4 x i8] c"ULL\00", align 1
@.str.78.1006 = private unnamed_addr constant [4 x i8] c"Ull\00", align 1
@.str.79.1007 = private unnamed_addr constant [4 x i8] c"uLL\00", align 1
@.str.80.1008 = private unnamed_addr constant [4 x i8] c"ull\00", align 1
@.str.81.1009 = private unnamed_addr constant [3 x i8] c"lu\00", align 1
@.str.82.1010 = private unnamed_addr constant [3 x i8] c"ul\00", align 1
@.str.83.1011 = private unnamed_addr constant [3 x i8] c"LL\00", align 1
@.str.84.1012 = private unnamed_addr constant [3 x i8] c"ll\00", align 1
@.str.85.1064 = private unnamed_addr constant [46 x i8] c"%s: in read_utf16_string_literal buf is null!\00", align 1
@.str.86.1063 = private unnamed_addr constant [52 x i8] c"%s: in string_literal_end : unclosed string literal\00", align 1
@.str.87.1062 = private unnamed_addr constant [55 x i8] c"%s: in read_escaped_char : invalid hex escape sequence\00", align 1
@.str.88.1060 = private unnamed_addr constant [46 x i8] c"%s: in read_utf32_string_literal buf is null!\00", align 1
@.str.89.1061 = private unnamed_addr constant [30 x i8] c"%s: in new_token tok is null!\00", align 1
@.str.90.1105 = private unnamed_addr constant [40 x i8] c"%s: in read_string_literal buf is null!\00", align 1
@.str.91.1104 = private unnamed_addr constant [49 x i8] c"%s: in read_char_literal : unclosed char literal\00", align 1
@read_punct.kw = internal global [23 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92.1081, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93.1082, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94.1083, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95.1084, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96.1085, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97.1086, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98.1087, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99.1088, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100.1089, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101.1090, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.102.1091, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103.1092, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104.1093, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105.1094, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.106.1095, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107.1096, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108.1097, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.109.1098, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.110.1099, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111.1100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.112.1101, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.113.1102, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.114.1103, i32 0, i32 0)], align 16
@.str.92.1081 = private unnamed_addr constant [4 x i8] c"<<=\00", align 1
@.str.93.1082 = private unnamed_addr constant [4 x i8] c">>=\00", align 1
@.str.94.1083 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.95.1084 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.96.1085 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.97.1086 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.98.1087 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.99.1088 = private unnamed_addr constant [3 x i8] c"->\00", align 1
@.str.100.1089 = private unnamed_addr constant [3 x i8] c"+=\00", align 1
@.str.101.1090 = private unnamed_addr constant [3 x i8] c"-=\00", align 1
@.str.102.1091 = private unnamed_addr constant [3 x i8] c"*=\00", align 1
@.str.103.1092 = private unnamed_addr constant [3 x i8] c"/=\00", align 1
@.str.104.1093 = private unnamed_addr constant [3 x i8] c"++\00", align 1
@.str.105.1094 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.106.1095 = private unnamed_addr constant [3 x i8] c"%=\00", align 1
@.str.107.1096 = private unnamed_addr constant [3 x i8] c"&=\00", align 1
@.str.108.1097 = private unnamed_addr constant [3 x i8] c"|=\00", align 1
@.str.109.1098 = private unnamed_addr constant [3 x i8] c"^=\00", align 1
@.str.110.1099 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.111.1100 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.112.1101 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.113.1102 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.114.1103 = private unnamed_addr constant [3 x i8] c"##\00", align 1
@.str.115.1117 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@stdin = external global %struct._IO_FILE*, align 8
@.str.116.1118 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.117.1115 = private unnamed_addr constant [3 x i8] c"\\u\00", align 1
@.str.118.1116 = private unnamed_addr constant [3 x i8] c"\\U\00", align 1
@.compoundliteral.1121 = internal global %struct.Type { i32 0, i32 1, i32 1, i8 0, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_void = dso_local global %struct.Type* @.compoundliteral.1121, align 8
@.compoundliteral.1 = internal global %struct.Type { i32 1, i32 1, i32 1, i8 0, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_bool = dso_local global %struct.Type* @.compoundliteral.1, align 8
@.compoundliteral.2 = internal global %struct.Type { i32 2, i32 1, i32 1, i8 0, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_char = dso_local global %struct.Type* @.compoundliteral.2, align 8
@.compoundliteral.3 = internal global %struct.Type { i32 3, i32 2, i32 2, i8 0, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_short = dso_local global %struct.Type* @.compoundliteral.3, align 8
@.compoundliteral.4 = internal global %struct.Type { i32 4, i32 4, i32 4, i8 0, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_int = dso_local global %struct.Type* @.compoundliteral.4, align 8
@.compoundliteral.5 = internal global %struct.Type { i32 5, i32 8, i32 8, i8 0, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_long = dso_local global %struct.Type* @.compoundliteral.5, align 8
@.compoundliteral.6 = internal global %struct.Type { i32 2, i32 1, i32 1, i8 1, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_uchar = dso_local global %struct.Type* @.compoundliteral.6, align 8
@.compoundliteral.7 = internal global %struct.Type { i32 3, i32 2, i32 2, i8 1, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_ushort = dso_local global %struct.Type* @.compoundliteral.7, align 8
@.compoundliteral.8 = internal global %struct.Type { i32 4, i32 4, i32 4, i8 1, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_uint = dso_local global %struct.Type* @.compoundliteral.8, align 8
@.compoundliteral.9 = internal global %struct.Type { i32 5, i32 8, i32 8, i8 1, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_ulong = dso_local global %struct.Type* @.compoundliteral.9, align 8
@.compoundliteral.10 = internal global %struct.Type { i32 6, i32 4, i32 4, i8 0, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_float = dso_local global %struct.Type* @.compoundliteral.10, align 8
@.compoundliteral.11 = internal global %struct.Type { i32 7, i32 8, i32 8, i8 0, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_double = dso_local global %struct.Type* @.compoundliteral.11, align 8
@.compoundliteral.12 = internal global %struct.Type { i32 8, i32 16, i32 16, i8 0, i8 0, i8 0, %struct.Type* null, %struct.Type* null, %struct.Type* null, %struct.Token* null, %struct.Token* null, i32 0, %struct.Node* null, %struct.Obj* null, %struct.Member* null, i8 0, i8 0, %struct.Type* null, %struct.Type* null, i8 0, %struct.Type* null }, align 8
@ty_ldouble = dso_local global %struct.Type* @.compoundliteral.12, align 8
@.str.1156 = private unnamed_addr constant [30 x i8] c"%s: in copy_type ret is null!\00", align 1
@.str.13.1157 = private unnamed_addr constant [7 x i8] c"type.c\00", align 1
@.str.14.1173 = private unnamed_addr constant [17 x i8] c"%s not an lvalue\00", align 1
@.str.15.1174 = private unnamed_addr constant [31 x i8] c"%s invalid pointer dereference\00", align 1
@.str.16.1175 = private unnamed_addr constant [32 x i8] c"%s dereferencing a void pointer\00", align 1
@.str.17.1176 = private unnamed_addr constant [56 x i8] c"%s statement expression returning void is not supported\00", align 1
@.str.18.1177 = private unnamed_addr constant [20 x i8] c"%s pointer expected\00", align 1
@.str.19.1160 = private unnamed_addr constant [28 x i8] c"%s: in new_type ty is null!\00", align 1
@.str.1182 = private unnamed_addr constant [26 x i8] c"%s invalid UTF-8 sequence\00", align 1
@.str.1.1183 = private unnamed_addr constant [10 x i8] c"unicode.c\00", align 1
@is_ident1.range = internal global [107 x i32] [i32 95, i32 95, i32 97, i32 122, i32 65, i32 90, i32 36, i32 36, i32 168, i32 168, i32 170, i32 170, i32 173, i32 173, i32 175, i32 175, i32 178, i32 181, i32 183, i32 186, i32 188, i32 190, i32 192, i32 214, i32 216, i32 246, i32 248, i32 255, i32 256, i32 767, i32 880, i32 5759, i32 5761, i32 6157, i32 6159, i32 7615, i32 7680, i32 8191, i32 8203, i32 8205, i32 8234, i32 8238, i32 8255, i32 8256, i32 8276, i32 8276, i32 8288, i32 8303, i32 8304, i32 8399, i32 8448, i32 8591, i32 9312, i32 9471, i32 10102, i32 10131, i32 11264, i32 11775, i32 11904, i32 12287, i32 12292, i32 12295, i32 12321, i32 12335, i32 12337, i32 12351, i32 12352, i32 55295, i32 63744, i32 64829, i32 64832, i32 64975, i32 65008, i32 65055, i32 65072, i32 65092, i32 65095, i32 65533, i32 65536, i32 131069, i32 131072, i32 196605, i32 196608, i32 262141, i32 262144, i32 327677, i32 327680, i32 393213, i32 393216, i32 458749, i32 458752, i32 524285, i32 524288, i32 589821, i32 589824, i32 655357, i32 655360, i32 720893, i32 720896, i32 786429, i32 786432, i32 851965, i32 851968, i32 917501, i32 917504, i32 983037, i32 -1], align 16
@is_ident2.range = internal global [19 x i32] [i32 95, i32 95, i32 97, i32 122, i32 65, i32 90, i32 48, i32 57, i32 36, i32 36, i32 768, i32 879, i32 7616, i32 7679, i32 8400, i32 8447, i32 65056, i32 65071, i32 -1], align 16
@is_ident3.range = internal global [109 x i32] [i32 95, i32 95, i32 97, i32 122, i32 65, i32 90, i32 48, i32 57, i32 36, i32 36, i32 168, i32 168, i32 170, i32 170, i32 173, i32 173, i32 175, i32 175, i32 178, i32 181, i32 183, i32 186, i32 188, i32 190, i32 192, i32 214, i32 216, i32 246, i32 248, i32 255, i32 256, i32 767, i32 880, i32 5759, i32 5761, i32 6157, i32 6159, i32 7615, i32 7680, i32 8191, i32 8203, i32 8205, i32 8234, i32 8238, i32 8255, i32 8256, i32 8276, i32 8276, i32 8288, i32 8303, i32 8304, i32 8399, i32 8448, i32 8591, i32 9312, i32 9471, i32 10102, i32 10131, i32 11264, i32 11775, i32 11904, i32 12287, i32 12292, i32 12295, i32 12321, i32 12335, i32 12337, i32 12351, i32 12352, i32 55295, i32 63744, i32 64829, i32 64832, i32 64975, i32 65008, i32 65055, i32 65072, i32 65092, i32 65095, i32 65533, i32 65536, i32 131069, i32 131072, i32 196605, i32 196608, i32 262141, i32 262144, i32 327677, i32 327680, i32 393213, i32 393216, i32 458749, i32 458752, i32 524285, i32 524288, i32 589821, i32 589824, i32 655357, i32 655360, i32 720893, i32 720896, i32 786429, i32 786432, i32 851965, i32 851968, i32 917501, i32 917504, i32 983037, i32 -1], align 16
@char_width.range1 = internal global [289 x i32] [i32 0, i32 31, i32 127, i32 160, i32 768, i32 879, i32 1155, i32 1158, i32 1160, i32 1161, i32 1425, i32 1469, i32 1471, i32 1471, i32 1473, i32 1474, i32 1476, i32 1477, i32 1479, i32 1479, i32 1536, i32 1539, i32 1552, i32 1557, i32 1611, i32 1630, i32 1648, i32 1648, i32 1750, i32 1764, i32 1767, i32 1768, i32 1770, i32 1773, i32 1807, i32 1807, i32 1809, i32 1809, i32 1840, i32 1866, i32 1958, i32 1968, i32 2027, i32 2035, i32 2305, i32 2306, i32 2364, i32 2364, i32 2369, i32 2376, i32 2381, i32 2381, i32 2385, i32 2388, i32 2402, i32 2403, i32 2433, i32 2433, i32 2492, i32 2492, i32 2497, i32 2500, i32 2509, i32 2509, i32 2530, i32 2531, i32 2561, i32 2562, i32 2620, i32 2620, i32 2625, i32 2626, i32 2631, i32 2632, i32 2635, i32 2637, i32 2672, i32 2673, i32 2689, i32 2690, i32 2748, i32 2748, i32 2753, i32 2757, i32 2759, i32 2760, i32 2765, i32 2765, i32 2786, i32 2787, i32 2817, i32 2817, i32 2876, i32 2876, i32 2879, i32 2879, i32 2881, i32 2883, i32 2893, i32 2893, i32 2902, i32 2902, i32 2946, i32 2946, i32 3008, i32 3008, i32 3021, i32 3021, i32 3134, i32 3136, i32 3142, i32 3144, i32 3146, i32 3149, i32 3157, i32 3158, i32 3260, i32 3260, i32 3263, i32 3263, i32 3270, i32 3270, i32 3276, i32 3277, i32 3298, i32 3299, i32 3393, i32 3395, i32 3405, i32 3405, i32 3530, i32 3530, i32 3538, i32 3540, i32 3542, i32 3542, i32 3633, i32 3633, i32 3636, i32 3642, i32 3655, i32 3662, i32 3761, i32 3761, i32 3764, i32 3769, i32 3771, i32 3772, i32 3784, i32 3789, i32 3864, i32 3865, i32 3893, i32 3893, i32 3895, i32 3895, i32 3897, i32 3897, i32 3953, i32 3966, i32 3968, i32 3972, i32 3974, i32 3975, i32 3984, i32 3991, i32 3993, i32 4028, i32 4038, i32 4038, i32 4141, i32 4144, i32 4146, i32 4146, i32 4150, i32 4151, i32 4153, i32 4153, i32 4184, i32 4185, i32 4448, i32 4607, i32 4959, i32 4959, i32 5906, i32 5908, i32 5938, i32 5940, i32 5970, i32 5971, i32 6002, i32 6003, i32 6068, i32 6069, i32 6071, i32 6077, i32 6086, i32 6086, i32 6089, i32 6099, i32 6109, i32 6109, i32 6155, i32 6157, i32 6313, i32 6313, i32 6432, i32 6434, i32 6439, i32 6440, i32 6450, i32 6450, i32 6457, i32 6459, i32 6679, i32 6680, i32 6912, i32 6915, i32 6964, i32 6964, i32 6966, i32 6970, i32 6972, i32 6972, i32 6978, i32 6978, i32 7019, i32 7027, i32 7616, i32 7626, i32 7678, i32 7679, i32 8203, i32 8207, i32 8234, i32 8238, i32 8288, i32 8291, i32 8298, i32 8303, i32 8400, i32 8431, i32 12330, i32 12335, i32 12441, i32 12442, i32 43014, i32 43014, i32 43019, i32 43019, i32 43045, i32 43046, i32 64286, i32 64286, i32 65024, i32 65039, i32 65056, i32 65059, i32 65279, i32 65279, i32 65529, i32 65531, i32 68097, i32 68099, i32 68101, i32 68102, i32 68108, i32 68111, i32 68152, i32 68154, i32 68159, i32 68159, i32 119143, i32 119145, i32 119155, i32 119170, i32 119173, i32 119179, i32 119210, i32 119213, i32 119362, i32 119364, i32 917505, i32 917505, i32 917536, i32 917631, i32 917760, i32 917999, i32 -1], align 16
@char_width.range2 = internal global [29 x i32] [i32 4352, i32 4447, i32 9001, i32 9001, i32 9002, i32 9002, i32 11904, i32 12350, i32 12352, i32 42191, i32 44032, i32 55203, i32 63744, i32 64255, i32 65040, i32 65049, i32 65072, i32 65135, i32 65280, i32 65376, i32 65504, i32 65510, i32 126976, i32 128580, i32 131072, i32 196605, i32 196608, i32 262141, i32 -1], align 16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @align_to(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = add nsw i32 %5, %6
  %8 = sub nsw i32 %7, 1
  %9 = load i32, i32* %4, align 4
  %10 = sdiv i32 %8, %9
  %11 = load i32, i32* %4, align 4
  %12 = mul nsw i32 %10, %11
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @reg_dx(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %10 [
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
    i32 8, label %8
    i32 16, label %9
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %2, align 8
  br label %11

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %2, align 8
  br label %11

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %2, align 8
  br label %11

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %2, align 8
  br label %11

10:                                               ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 81) #11
  unreachable

11:                                               ; preds = %9, %8, %7, %6, %5
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @reg_bx(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %10 [
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
    i32 8, label %8
    i32 16, label %9
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %2, align 8
  br label %11

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8** %2, align 8
  br label %11

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %2, align 8
  br label %11

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %2, align 8
  br label %11

10:                                               ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 99) #11
  unreachable

11:                                               ; preds = %9, %8, %7, %6, %5
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @reg_cx(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %10 [
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
    i32 8, label %8
    i32 16, label %9
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8** %2, align 8
  br label %11

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %2, align 8
  br label %11

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %2, align 8
  br label %11

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %2, align 8
  br label %11

10:                                               ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 117) #11
  unreachable

11:                                               ; preds = %9, %8, %7, %6, %5
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @reg_ax(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %10 [
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
    i32 8, label %8
    i32 16, label %9
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8** %2, align 8
  br label %11

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i8** %2, align 8
  br label %11

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8** %2, align 8
  br label %11

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %2, align 8
  br label %11

10:                                               ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 135) #11
  unreachable

11:                                               ; preds = %9, %8, %7, %6, %5
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @codegen(%struct.Obj* noundef %0, %struct._IO_FILE* noundef %1) #0 {
  %3 = alloca %struct.Obj*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.File**, align 8
  %6 = alloca i32, align 4
  store %struct.Obj* %0, %struct.Obj** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %7, %struct._IO_FILE** @output_file, align 8
  %8 = call %struct.File** @get_input_files()
  store %struct.File** %8, %struct.File*** %5, align 8
  store i32 0, i32* %6, align 4
  br label %9

9:                                                ; preds = %31, %2
  %10 = load %struct.File**, %struct.File*** %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.File*, %struct.File** %10, i64 %12
  %14 = load %struct.File*, %struct.File** %13, align 8
  %15 = icmp ne %struct.File* %14, null
  br i1 %15, label %16, label %34

16:                                               ; preds = %9
  %17 = load %struct.File**, %struct.File*** %5, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.File*, %struct.File** %17, i64 %19
  %21 = load %struct.File*, %struct.File** %20, align 8
  %22 = getelementptr inbounds %struct.File, %struct.File* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = load %struct.File**, %struct.File*** %5, align 8
  %25 = load i32, i32* %6, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.File*, %struct.File** %24, i64 %26
  %28 = load %struct.File*, %struct.File** %27, align 8
  %29 = getelementptr inbounds %struct.File, %struct.File* %28, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i32 noundef %23, i8* noundef %30)
  br label %31

31:                                               ; preds = %16
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %6, align 4
  br label %9, !llvm.loop !6

34:                                               ; preds = %9
  %35 = load %struct.Obj*, %struct.Obj** %3, align 8
  call void @assign_lvar_offsets(%struct.Obj* noundef %35)
  %36 = load %struct.Obj*, %struct.Obj** %3, align 8
  call void @emit_data(%struct.Obj* noundef %36)
  %37 = load %struct.Obj*, %struct.Obj** %3, align 8
  call void @emit_text(%struct.Obj* noundef %37)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @println(i8* noundef %0, ...) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %2, align 8
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %5 = bitcast %struct.__va_list_tag* %4 to i8*
  call void @llvm.va_start(i8* %5)
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @output_file, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %9 = call i32 @vfprintf(%struct._IO_FILE* noundef %6, i8* noundef %7, %struct.__va_list_tag* noundef %8)
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %11 = bitcast %struct.__va_list_tag* %10 to i8*
  call void @llvm.va_end(i8* %11)
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @output_file, align 8
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %12, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @assign_lvar_offsets(%struct.Obj* noundef %0) #0 {
  %2 = alloca %struct.Obj*, align 8
  %3 = alloca %struct.Obj*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.Obj*, align 8
  %9 = alloca %struct.Type*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca %struct.Obj*, align 8
  %13 = alloca i32, align 4
  store %struct.Obj* %0, %struct.Obj** %2, align 8
  %14 = load %struct.Obj*, %struct.Obj** %2, align 8
  store %struct.Obj* %14, %struct.Obj** %3, align 8
  br label %15

15:                                               ; preds = %194, %1
  %16 = load %struct.Obj*, %struct.Obj** %3, align 8
  %17 = icmp ne %struct.Obj* %16, null
  br i1 %17, label %18, label %198

18:                                               ; preds = %15
  %19 = load %struct.Obj*, %struct.Obj** %3, align 8
  %20 = getelementptr inbounds %struct.Obj, %struct.Obj* %19, i32 0, i32 10
  %21 = load i8, i8* %20, align 4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  br label %194

24:                                               ; preds = %18
  store i32 16, i32* %4, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %25 = load %struct.Obj*, %struct.Obj** %3, align 8
  %26 = getelementptr inbounds %struct.Obj, %struct.Obj* %25, i32 0, i32 18
  %27 = load %struct.Obj*, %struct.Obj** %26, align 8
  store %struct.Obj* %27, %struct.Obj** %8, align 8
  br label %28

28:                                               ; preds = %122, %24
  %29 = load %struct.Obj*, %struct.Obj** %8, align 8
  %30 = icmp ne %struct.Obj* %29, null
  br i1 %30, label %31, label %126

31:                                               ; preds = %28
  %32 = load %struct.Obj*, %struct.Obj** %8, align 8
  %33 = getelementptr inbounds %struct.Obj, %struct.Obj* %32, i32 0, i32 3
  %34 = load %struct.Type*, %struct.Type** %33, align 8
  store %struct.Type* %34, %struct.Type** %9, align 8
  %35 = load %struct.Type*, %struct.Type** %9, align 8
  %36 = getelementptr inbounds %struct.Type, %struct.Type* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  switch i32 %37, label %103 [
    i32 14, label %38
    i32 15, label %38
    i32 6, label %96
    i32 7, label %96
    i32 8, label %102
  ]

38:                                               ; preds = %31, %31
  %39 = load %struct.Type*, %struct.Type** %9, align 8
  %40 = getelementptr inbounds %struct.Type, %struct.Type* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp sle i32 %41, 16
  br i1 %42, label %43, label %95

43:                                               ; preds = %38
  %44 = load %struct.Type*, %struct.Type** %9, align 8
  %45 = call zeroext i1 @has_flonum(%struct.Type* noundef %44, i32 noundef 0, i32 noundef 8, i32 noundef 0)
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %10, align 1
  %47 = load %struct.Type*, %struct.Type** %9, align 8
  %48 = call zeroext i1 @has_flonum(%struct.Type* noundef %47, i32 noundef 8, i32 noundef 16, i32 noundef 8)
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %11, align 1
  %50 = load i32, i32* %7, align 4
  %51 = load i8, i8* %10, align 1
  %52 = trunc i8 %51 to i1
  %53 = zext i1 %52 to i32
  %54 = add nsw i32 %50, %53
  %55 = load i8, i8* %11, align 1
  %56 = trunc i8 %55 to i1
  %57 = zext i1 %56 to i32
  %58 = add nsw i32 %54, %57
  %59 = icmp slt i32 %58, 8
  br i1 %59, label %60, label %94

60:                                               ; preds = %43
  %61 = load i32, i32* %6, align 4
  %62 = load i8, i8* %10, align 1
  %63 = trunc i8 %62 to i1
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = add nsw i32 %61, %65
  %67 = load i8, i8* %11, align 1
  %68 = trunc i8 %67 to i1
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = add nsw i32 %66, %70
  %72 = icmp slt i32 %71, 6
  br i1 %72, label %73, label %94

73:                                               ; preds = %60
  %74 = load i32, i32* %7, align 4
  %75 = load i8, i8* %10, align 1
  %76 = trunc i8 %75 to i1
  %77 = zext i1 %76 to i32
  %78 = add nsw i32 %74, %77
  %79 = load i8, i8* %11, align 1
  %80 = trunc i8 %79 to i1
  %81 = zext i1 %80 to i32
  %82 = add nsw i32 %78, %81
  store i32 %82, i32* %7, align 4
  %83 = load i32, i32* %6, align 4
  %84 = load i8, i8* %10, align 1
  %85 = trunc i8 %84 to i1
  %86 = xor i1 %85, true
  %87 = zext i1 %86 to i32
  %88 = add nsw i32 %83, %87
  %89 = load i8, i8* %11, align 1
  %90 = trunc i8 %89 to i1
  %91 = xor i1 %90, true
  %92 = zext i1 %91 to i32
  %93 = add nsw i32 %88, %92
  store i32 %93, i32* %6, align 4
  br label %122

94:                                               ; preds = %60, %43
  br label %95

95:                                               ; preds = %94, %38
  br label %109

96:                                               ; preds = %31, %31
  %97 = load i32, i32* %7, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %7, align 4
  %99 = icmp slt i32 %97, 8
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  br label %122

101:                                              ; preds = %96
  br label %109

102:                                              ; preds = %31
  br label %109

103:                                              ; preds = %31
  %104 = load i32, i32* %6, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %6, align 4
  %106 = icmp slt i32 %104, 6
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  br label %122

108:                                              ; preds = %103
  br label %109

109:                                              ; preds = %108, %102, %101, %95
  %110 = load i32, i32* %4, align 4
  %111 = call i32 @align_to(i32 noundef %110, i32 noundef 8)
  store i32 %111, i32* %4, align 4
  %112 = load i32, i32* %4, align 4
  %113 = load %struct.Obj*, %struct.Obj** %8, align 8
  %114 = getelementptr inbounds %struct.Obj, %struct.Obj* %113, i32 0, i32 7
  store i32 %112, i32* %114, align 8
  %115 = load %struct.Obj*, %struct.Obj** %8, align 8
  %116 = getelementptr inbounds %struct.Obj, %struct.Obj* %115, i32 0, i32 3
  %117 = load %struct.Type*, %struct.Type** %116, align 8
  %118 = getelementptr inbounds %struct.Type, %struct.Type* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = load i32, i32* %4, align 4
  %121 = add nsw i32 %120, %119
  store i32 %121, i32* %4, align 4
  br label %122

122:                                              ; preds = %109, %107, %100, %73
  %123 = load %struct.Obj*, %struct.Obj** %8, align 8
  %124 = getelementptr inbounds %struct.Obj, %struct.Obj* %123, i32 0, i32 0
  %125 = load %struct.Obj*, %struct.Obj** %124, align 8
  store %struct.Obj* %125, %struct.Obj** %8, align 8
  br label %28, !llvm.loop !8

126:                                              ; preds = %28
  %127 = load %struct.Obj*, %struct.Obj** %3, align 8
  %128 = getelementptr inbounds %struct.Obj, %struct.Obj* %127, i32 0, i32 20
  %129 = load %struct.Obj*, %struct.Obj** %128, align 8
  store %struct.Obj* %129, %struct.Obj** %12, align 8
  br label %130

130:                                              ; preds = %185, %126
  %131 = load %struct.Obj*, %struct.Obj** %12, align 8
  %132 = icmp ne %struct.Obj* %131, null
  br i1 %132, label %133, label %189

133:                                              ; preds = %130
  %134 = load %struct.Obj*, %struct.Obj** %12, align 8
  %135 = getelementptr inbounds %struct.Obj, %struct.Obj* %134, i32 0, i32 7
  %136 = load i32, i32* %135, align 8
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %133
  br label %185

139:                                              ; preds = %133
  %140 = load %struct.Obj*, %struct.Obj** %12, align 8
  %141 = getelementptr inbounds %struct.Obj, %struct.Obj* %140, i32 0, i32 3
  %142 = load %struct.Type*, %struct.Type** %141, align 8
  %143 = getelementptr inbounds %struct.Type, %struct.Type* %142, i32 0, i32 0
  %144 = load i32, i32* %143, align 8
  %145 = icmp eq i32 %144, 12
  br i1 %145, label %146, label %165

146:                                              ; preds = %139
  %147 = load %struct.Obj*, %struct.Obj** %12, align 8
  %148 = getelementptr inbounds %struct.Obj, %struct.Obj* %147, i32 0, i32 3
  %149 = load %struct.Type*, %struct.Type** %148, align 8
  %150 = getelementptr inbounds %struct.Type, %struct.Type* %149, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp sge i32 %151, 16
  br i1 %152, label %153, label %165

153:                                              ; preds = %146
  %154 = load %struct.Obj*, %struct.Obj** %12, align 8
  %155 = getelementptr inbounds %struct.Obj, %struct.Obj* %154, i32 0, i32 6
  %156 = load i32, i32* %155, align 4
  %157 = icmp slt i32 16, %156
  br i1 %157, label %158, label %162

158:                                              ; preds = %153
  %159 = load %struct.Obj*, %struct.Obj** %12, align 8
  %160 = getelementptr inbounds %struct.Obj, %struct.Obj* %159, i32 0, i32 6
  %161 = load i32, i32* %160, align 4
  br label %163

162:                                              ; preds = %153
  br label %163

163:                                              ; preds = %162, %158
  %164 = phi i32 [ %161, %158 ], [ 16, %162 ]
  br label %169

165:                                              ; preds = %146, %139
  %166 = load %struct.Obj*, %struct.Obj** %12, align 8
  %167 = getelementptr inbounds %struct.Obj, %struct.Obj* %166, i32 0, i32 6
  %168 = load i32, i32* %167, align 4
  br label %169

169:                                              ; preds = %165, %163
  %170 = phi i32 [ %164, %163 ], [ %168, %165 ]
  store i32 %170, i32* %13, align 4
  %171 = load %struct.Obj*, %struct.Obj** %12, align 8
  %172 = getelementptr inbounds %struct.Obj, %struct.Obj* %171, i32 0, i32 3
  %173 = load %struct.Type*, %struct.Type** %172, align 8
  %174 = getelementptr inbounds %struct.Type, %struct.Type* %173, i32 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = load i32, i32* %5, align 4
  %177 = add nsw i32 %176, %175
  store i32 %177, i32* %5, align 4
  %178 = load i32, i32* %5, align 4
  %179 = load i32, i32* %13, align 4
  %180 = call i32 @align_to(i32 noundef %178, i32 noundef %179)
  store i32 %180, i32* %5, align 4
  %181 = load i32, i32* %5, align 4
  %182 = sub nsw i32 0, %181
  %183 = load %struct.Obj*, %struct.Obj** %12, align 8
  %184 = getelementptr inbounds %struct.Obj, %struct.Obj* %183, i32 0, i32 7
  store i32 %182, i32* %184, align 8
  br label %185

185:                                              ; preds = %169, %138
  %186 = load %struct.Obj*, %struct.Obj** %12, align 8
  %187 = getelementptr inbounds %struct.Obj, %struct.Obj* %186, i32 0, i32 0
  %188 = load %struct.Obj*, %struct.Obj** %187, align 8
  store %struct.Obj* %188, %struct.Obj** %12, align 8
  br label %130, !llvm.loop !9

189:                                              ; preds = %130
  %190 = load i32, i32* %5, align 4
  %191 = call i32 @align_to(i32 noundef %190, i32 noundef 16)
  %192 = load %struct.Obj*, %struct.Obj** %3, align 8
  %193 = getelementptr inbounds %struct.Obj, %struct.Obj* %192, i32 0, i32 23
  store i32 %191, i32* %193, align 8
  br label %194

194:                                              ; preds = %189, %23
  %195 = load %struct.Obj*, %struct.Obj** %3, align 8
  %196 = getelementptr inbounds %struct.Obj, %struct.Obj* %195, i32 0, i32 0
  %197 = load %struct.Obj*, %struct.Obj** %196, align 8
  store %struct.Obj* %197, %struct.Obj** %3, align 8
  br label %15, !llvm.loop !10

198:                                              ; preds = %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_data(%struct.Obj* noundef %0) #0 {
  %2 = alloca %struct.Obj*, align 8
  %3 = alloca %struct.Obj*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.Relocation*, align 8
  %6 = alloca i32, align 4
  store %struct.Obj* %0, %struct.Obj** %2, align 8
  %7 = load %struct.Obj*, %struct.Obj** %2, align 8
  store %struct.Obj* %7, %struct.Obj** %3, align 8
  br label %8

8:                                                ; preds = %174, %1
  %9 = load %struct.Obj*, %struct.Obj** %3, align 8
  %10 = icmp ne %struct.Obj* %9, null
  br i1 %10, label %11, label %178

11:                                               ; preds = %8
  %12 = load %struct.Obj*, %struct.Obj** %3, align 8
  %13 = getelementptr inbounds %struct.Obj, %struct.Obj* %12, i32 0, i32 10
  %14 = load i8, i8* %13, align 4
  %15 = trunc i8 %14 to i1
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = load %struct.Obj*, %struct.Obj** %3, align 8
  %18 = getelementptr inbounds %struct.Obj, %struct.Obj* %17, i32 0, i32 11
  %19 = load i8, i8* %18, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %22, label %21

21:                                               ; preds = %16, %11
  br label %174

22:                                               ; preds = %16
  %23 = load %struct.Obj*, %struct.Obj** %3, align 8
  %24 = getelementptr inbounds %struct.Obj, %struct.Obj* %23, i32 0, i32 12
  %25 = load i8, i8* %24, align 2
  %26 = trunc i8 %25 to i1
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = load %struct.Obj*, %struct.Obj** %3, align 8
  %29 = getelementptr inbounds %struct.Obj, %struct.Obj* %28, i32 0, i32 1
  %30 = load i8*, i8** %29, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), i8* noundef %30)
  br label %35

31:                                               ; preds = %22
  %32 = load %struct.Obj*, %struct.Obj** %3, align 8
  %33 = getelementptr inbounds %struct.Obj, %struct.Obj* %32, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), i8* noundef %34)
  br label %35

35:                                               ; preds = %31, %27
  %36 = load %struct.Obj*, %struct.Obj** %3, align 8
  %37 = getelementptr inbounds %struct.Obj, %struct.Obj* %36, i32 0, i32 3
  %38 = load %struct.Type*, %struct.Type** %37, align 8
  %39 = getelementptr inbounds %struct.Type, %struct.Type* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 12
  br i1 %41, label %42, label %61

42:                                               ; preds = %35
  %43 = load %struct.Obj*, %struct.Obj** %3, align 8
  %44 = getelementptr inbounds %struct.Obj, %struct.Obj* %43, i32 0, i32 3
  %45 = load %struct.Type*, %struct.Type** %44, align 8
  %46 = getelementptr inbounds %struct.Type, %struct.Type* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp sge i32 %47, 16
  br i1 %48, label %49, label %61

49:                                               ; preds = %42
  %50 = load %struct.Obj*, %struct.Obj** %3, align 8
  %51 = getelementptr inbounds %struct.Obj, %struct.Obj* %50, i32 0, i32 6
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 16, %52
  br i1 %53, label %54, label %58

54:                                               ; preds = %49
  %55 = load %struct.Obj*, %struct.Obj** %3, align 8
  %56 = getelementptr inbounds %struct.Obj, %struct.Obj* %55, i32 0, i32 6
  %57 = load i32, i32* %56, align 4
  br label %59

58:                                               ; preds = %49
  br label %59

59:                                               ; preds = %58, %54
  %60 = phi i32 [ %57, %54 ], [ 16, %58 ]
  br label %65

61:                                               ; preds = %42, %35
  %62 = load %struct.Obj*, %struct.Obj** %3, align 8
  %63 = getelementptr inbounds %struct.Obj, %struct.Obj* %62, i32 0, i32 6
  %64 = load i32, i32* %63, align 4
  br label %65

65:                                               ; preds = %61, %59
  %66 = phi i32 [ %60, %59 ], [ %64, %61 ]
  store i32 %66, i32* %4, align 4
  %67 = load i8, i8* @opt_fcommon, align 1
  %68 = trunc i8 %67 to i1
  br i1 %68, label %69, label %84

69:                                               ; preds = %65
  %70 = load %struct.Obj*, %struct.Obj** %3, align 8
  %71 = getelementptr inbounds %struct.Obj, %struct.Obj* %70, i32 0, i32 13
  %72 = load i8, i8* %71, align 1
  %73 = trunc i8 %72 to i1
  br i1 %73, label %74, label %84

74:                                               ; preds = %69
  %75 = load %struct.Obj*, %struct.Obj** %3, align 8
  %76 = getelementptr inbounds %struct.Obj, %struct.Obj* %75, i32 0, i32 1
  %77 = load i8*, i8** %76, align 8
  %78 = load %struct.Obj*, %struct.Obj** %3, align 8
  %79 = getelementptr inbounds %struct.Obj, %struct.Obj* %78, i32 0, i32 3
  %80 = load %struct.Type*, %struct.Type** %79, align 8
  %81 = getelementptr inbounds %struct.Type, %struct.Type* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* %4, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0), i8* noundef %77, i32 noundef %82, i32 noundef %83)
  br label %174

84:                                               ; preds = %69, %65
  %85 = load %struct.Obj*, %struct.Obj** %3, align 8
  %86 = getelementptr inbounds %struct.Obj, %struct.Obj* %85, i32 0, i32 15
  %87 = load i8*, i8** %86, align 8
  %88 = icmp ne i8* %87, null
  br i1 %88, label %89, label %157

89:                                               ; preds = %84
  %90 = load %struct.Obj*, %struct.Obj** %3, align 8
  %91 = getelementptr inbounds %struct.Obj, %struct.Obj* %90, i32 0, i32 14
  %92 = load i8, i8* %91, align 8
  %93 = trunc i8 %92 to i1
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i64 0, i64 0))
  br label %96

95:                                               ; preds = %89
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0))
  br label %96

96:                                               ; preds = %95, %94
  %97 = load %struct.Obj*, %struct.Obj** %3, align 8
  %98 = getelementptr inbounds %struct.Obj, %struct.Obj* %97, i32 0, i32 1
  %99 = load i8*, i8** %98, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0), i8* noundef %99)
  %100 = load %struct.Obj*, %struct.Obj** %3, align 8
  %101 = getelementptr inbounds %struct.Obj, %struct.Obj* %100, i32 0, i32 1
  %102 = load i8*, i8** %101, align 8
  %103 = load %struct.Obj*, %struct.Obj** %3, align 8
  %104 = getelementptr inbounds %struct.Obj, %struct.Obj* %103, i32 0, i32 3
  %105 = load %struct.Type*, %struct.Type** %104, align 8
  %106 = getelementptr inbounds %struct.Type, %struct.Type* %105, i32 0, i32 1
  %107 = load i32, i32* %106, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i8* noundef %102, i32 noundef %107)
  %108 = load i32, i32* %4, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i32 noundef %108)
  %109 = load %struct.Obj*, %struct.Obj** %3, align 8
  %110 = getelementptr inbounds %struct.Obj, %struct.Obj* %109, i32 0, i32 1
  %111 = load i8*, i8** %110, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %111)
  %112 = load %struct.Obj*, %struct.Obj** %3, align 8
  %113 = getelementptr inbounds %struct.Obj, %struct.Obj* %112, i32 0, i32 16
  %114 = load %struct.Relocation*, %struct.Relocation** %113, align 8
  store %struct.Relocation* %114, %struct.Relocation** %5, align 8
  store i32 0, i32* %6, align 4
  br label %115

115:                                              ; preds = %155, %96
  %116 = load i32, i32* %6, align 4
  %117 = load %struct.Obj*, %struct.Obj** %3, align 8
  %118 = getelementptr inbounds %struct.Obj, %struct.Obj* %117, i32 0, i32 3
  %119 = load %struct.Type*, %struct.Type** %118, align 8
  %120 = getelementptr inbounds %struct.Type, %struct.Type* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %116, %121
  br i1 %122, label %123, label %156

123:                                              ; preds = %115
  %124 = load %struct.Relocation*, %struct.Relocation** %5, align 8
  %125 = icmp ne %struct.Relocation* %124, null
  br i1 %125, label %126, label %145

126:                                              ; preds = %123
  %127 = load %struct.Relocation*, %struct.Relocation** %5, align 8
  %128 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %127, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = load i32, i32* %6, align 4
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %132, label %145

132:                                              ; preds = %126
  %133 = load %struct.Relocation*, %struct.Relocation** %5, align 8
  %134 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %133, i32 0, i32 2
  %135 = load i8**, i8*** %134, align 8
  %136 = load i8*, i8** %135, align 8
  %137 = load %struct.Relocation*, %struct.Relocation** %5, align 8
  %138 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %137, i32 0, i32 3
  %139 = load i64, i64* %138, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0), i8* noundef %136, i64 noundef %139)
  %140 = load %struct.Relocation*, %struct.Relocation** %5, align 8
  %141 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %140, i32 0, i32 0
  %142 = load %struct.Relocation*, %struct.Relocation** %141, align 8
  store %struct.Relocation* %142, %struct.Relocation** %5, align 8
  %143 = load i32, i32* %6, align 4
  %144 = add nsw i32 %143, 8
  store i32 %144, i32* %6, align 4
  br label %155

145:                                              ; preds = %126, %123
  %146 = load %struct.Obj*, %struct.Obj** %3, align 8
  %147 = getelementptr inbounds %struct.Obj, %struct.Obj* %146, i32 0, i32 15
  %148 = load i8*, i8** %147, align 8
  %149 = load i32, i32* %6, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %6, align 4
  %151 = sext i32 %149 to i64
  %152 = getelementptr inbounds i8, i8* %148, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 %153 to i32
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i32 noundef %154)
  br label %155

155:                                              ; preds = %145, %132
  br label %115, !llvm.loop !11

156:                                              ; preds = %115
  br label %174

157:                                              ; preds = %84
  %158 = load %struct.Obj*, %struct.Obj** %3, align 8
  %159 = getelementptr inbounds %struct.Obj, %struct.Obj* %158, i32 0, i32 14
  %160 = load i8, i8* %159, align 8
  %161 = trunc i8 %160 to i1
  br i1 %161, label %162, label %163

162:                                              ; preds = %157
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31, i64 0, i64 0))
  br label %164

163:                                              ; preds = %157
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0))
  br label %164

164:                                              ; preds = %163, %162
  %165 = load i32, i32* %4, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i32 noundef %165)
  %166 = load %struct.Obj*, %struct.Obj** %3, align 8
  %167 = getelementptr inbounds %struct.Obj, %struct.Obj* %166, i32 0, i32 1
  %168 = load i8*, i8** %167, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %168)
  %169 = load %struct.Obj*, %struct.Obj** %3, align 8
  %170 = getelementptr inbounds %struct.Obj, %struct.Obj* %169, i32 0, i32 3
  %171 = load %struct.Type*, %struct.Type** %170, align 8
  %172 = getelementptr inbounds %struct.Type, %struct.Type* %171, i32 0, i32 1
  %173 = load i32, i32* %172, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0), i32 noundef %173)
  br label %174

174:                                              ; preds = %164, %156, %74, %21
  %175 = load %struct.Obj*, %struct.Obj** %3, align 8
  %176 = getelementptr inbounds %struct.Obj, %struct.Obj* %175, i32 0, i32 0
  %177 = load %struct.Obj*, %struct.Obj** %176, align 8
  store %struct.Obj* %177, %struct.Obj** %3, align 8
  br label %8, !llvm.loop !12

178:                                              ; preds = %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_text(%struct.Obj* noundef %0) #0 {
  %2 = alloca %struct.Obj*, align 8
  %3 = alloca %struct.Obj*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.Obj*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.Obj*, align 8
  %11 = alloca %struct.Type*, align 8
  store %struct.Obj* %0, %struct.Obj** %2, align 8
  %12 = load %struct.Obj*, %struct.Obj** %2, align 8
  store %struct.Obj* %12, %struct.Obj** %3, align 8
  br label %13

13:                                               ; preds = %279, %1
  %14 = load %struct.Obj*, %struct.Obj** %3, align 8
  %15 = icmp ne %struct.Obj* %14, null
  br i1 %15, label %16, label %283

16:                                               ; preds = %13
  %17 = load %struct.Obj*, %struct.Obj** %3, align 8
  %18 = getelementptr inbounds %struct.Obj, %struct.Obj* %17, i32 0, i32 10
  %19 = load i8, i8* %18, align 4
  %20 = trunc i8 %19 to i1
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = load %struct.Obj*, %struct.Obj** %3, align 8
  %23 = getelementptr inbounds %struct.Obj, %struct.Obj* %22, i32 0, i32 11
  %24 = load i8, i8* %23, align 1
  %25 = trunc i8 %24 to i1
  br i1 %25, label %27, label %26

26:                                               ; preds = %21, %16
  br label %279

27:                                               ; preds = %21
  %28 = load %struct.Obj*, %struct.Obj** %3, align 8
  %29 = getelementptr inbounds %struct.Obj, %struct.Obj* %28, i32 0, i32 24
  %30 = load i8, i8* %29, align 4
  %31 = trunc i8 %30 to i1
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  br label %279

33:                                               ; preds = %27
  %34 = load %struct.Obj*, %struct.Obj** %3, align 8
  %35 = getelementptr inbounds %struct.Obj, %struct.Obj* %34, i32 0, i32 12
  %36 = load i8, i8* %35, align 2
  %37 = trunc i8 %36 to i1
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = load %struct.Obj*, %struct.Obj** %3, align 8
  %40 = getelementptr inbounds %struct.Obj, %struct.Obj* %39, i32 0, i32 1
  %41 = load i8*, i8** %40, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), i8* noundef %41)
  br label %46

42:                                               ; preds = %33
  %43 = load %struct.Obj*, %struct.Obj** %3, align 8
  %44 = getelementptr inbounds %struct.Obj, %struct.Obj* %43, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), i8* noundef %45)
  br label %46

46:                                               ; preds = %42, %38
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0))
  %47 = load %struct.Obj*, %struct.Obj** %3, align 8
  %48 = getelementptr inbounds %struct.Obj, %struct.Obj* %47, i32 0, i32 1
  %49 = load i8*, i8** %48, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.35, i64 0, i64 0), i8* noundef %49)
  %50 = load %struct.Obj*, %struct.Obj** %3, align 8
  %51 = getelementptr inbounds %struct.Obj, %struct.Obj* %50, i32 0, i32 1
  %52 = load i8*, i8** %51, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %52)
  %53 = load %struct.Obj*, %struct.Obj** %3, align 8
  store %struct.Obj* %53, %struct.Obj** @current_fn, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0))
  %54 = load %struct.Obj*, %struct.Obj** %3, align 8
  %55 = getelementptr inbounds %struct.Obj, %struct.Obj* %54, i32 0, i32 23
  %56 = load i32, i32* %55, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 noundef %56)
  %57 = load %struct.Obj*, %struct.Obj** %3, align 8
  %58 = getelementptr inbounds %struct.Obj, %struct.Obj* %57, i32 0, i32 22
  %59 = load %struct.Obj*, %struct.Obj** %58, align 8
  %60 = getelementptr inbounds %struct.Obj, %struct.Obj* %59, i32 0, i32 7
  %61 = load i32, i32* %60, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i32 noundef %61)
  %62 = load %struct.Obj*, %struct.Obj** %3, align 8
  %63 = getelementptr inbounds %struct.Obj, %struct.Obj* %62, i32 0, i32 21
  %64 = load %struct.Obj*, %struct.Obj** %63, align 8
  %65 = icmp ne %struct.Obj* %64, null
  br i1 %65, label %66, label %141

66:                                               ; preds = %46
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %67 = load %struct.Obj*, %struct.Obj** %3, align 8
  %68 = getelementptr inbounds %struct.Obj, %struct.Obj* %67, i32 0, i32 18
  %69 = load %struct.Obj*, %struct.Obj** %68, align 8
  store %struct.Obj* %69, %struct.Obj** %6, align 8
  br label %70

70:                                               ; preds = %85, %66
  %71 = load %struct.Obj*, %struct.Obj** %6, align 8
  %72 = icmp ne %struct.Obj* %71, null
  br i1 %72, label %73, label %89

73:                                               ; preds = %70
  %74 = load %struct.Obj*, %struct.Obj** %6, align 8
  %75 = getelementptr inbounds %struct.Obj, %struct.Obj* %74, i32 0, i32 3
  %76 = load %struct.Type*, %struct.Type** %75, align 8
  %77 = call zeroext i1 @is_flonum(%struct.Type* noundef %76)
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = load i32, i32* %5, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %5, align 4
  br label %84

81:                                               ; preds = %73
  %82 = load i32, i32* %4, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %4, align 4
  br label %84

84:                                               ; preds = %81, %78
  br label %85

85:                                               ; preds = %84
  %86 = load %struct.Obj*, %struct.Obj** %6, align 8
  %87 = getelementptr inbounds %struct.Obj, %struct.Obj* %86, i32 0, i32 0
  %88 = load %struct.Obj*, %struct.Obj** %87, align 8
  store %struct.Obj* %88, %struct.Obj** %6, align 8
  br label %70, !llvm.loop !13

89:                                               ; preds = %70
  %90 = load %struct.Obj*, %struct.Obj** %3, align 8
  %91 = getelementptr inbounds %struct.Obj, %struct.Obj* %90, i32 0, i32 21
  %92 = load %struct.Obj*, %struct.Obj** %91, align 8
  %93 = getelementptr inbounds %struct.Obj, %struct.Obj* %92, i32 0, i32 7
  %94 = load i32, i32* %93, align 8
  store i32 %94, i32* %7, align 4
  %95 = load i32, i32* %4, align 4
  %96 = mul nsw i32 %95, 8
  %97 = load i32, i32* %7, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i64 0, i64 0), i32 noundef %96, i32 noundef %97)
  %98 = load i32, i32* %5, align 4
  %99 = mul nsw i32 %98, 8
  %100 = add nsw i32 %99, 48
  %101 = load i32, i32* %7, align 4
  %102 = add nsw i32 %101, 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i64 0, i64 0), i32 noundef %100, i32 noundef %102)
  %103 = load i32, i32* %7, align 4
  %104 = add nsw i32 %103, 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0), i32 noundef %104)
  %105 = load i32, i32* %7, align 4
  %106 = add nsw i32 %105, 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42, i64 0, i64 0), i32 noundef %106)
  %107 = load i32, i32* %7, align 4
  %108 = add nsw i32 %107, 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0), i32 noundef %108)
  %109 = load i32, i32* %7, align 4
  %110 = add nsw i32 %109, 24
  %111 = load i32, i32* %7, align 4
  %112 = add nsw i32 %111, 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i64 0, i64 0), i32 noundef %110, i32 noundef %112)
  %113 = load i32, i32* %7, align 4
  %114 = add nsw i32 %113, 24
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.44, i64 0, i64 0), i32 noundef %114)
  %115 = load i32, i32* %7, align 4
  %116 = add nsw i32 %115, 32
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i64 0, i64 0), i32 noundef %116)
  %117 = load i32, i32* %7, align 4
  %118 = add nsw i32 %117, 40
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i64 0, i64 0), i32 noundef %118)
  %119 = load i32, i32* %7, align 4
  %120 = add nsw i32 %119, 48
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i64 0, i64 0), i32 noundef %120)
  %121 = load i32, i32* %7, align 4
  %122 = add nsw i32 %121, 56
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0), i32 noundef %122)
  %123 = load i32, i32* %7, align 4
  %124 = add nsw i32 %123, 64
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i64 0, i64 0), i32 noundef %124)
  %125 = load i32, i32* %7, align 4
  %126 = add nsw i32 %125, 72
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.50, i64 0, i64 0), i32 noundef %126)
  %127 = load i32, i32* %7, align 4
  %128 = add nsw i32 %127, 80
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.51, i64 0, i64 0), i32 noundef %128)
  %129 = load i32, i32* %7, align 4
  %130 = add nsw i32 %129, 88
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.52, i64 0, i64 0), i32 noundef %130)
  %131 = load i32, i32* %7, align 4
  %132 = add nsw i32 %131, 96
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0), i32 noundef %132)
  %133 = load i32, i32* %7, align 4
  %134 = add nsw i32 %133, 104
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.54, i64 0, i64 0), i32 noundef %134)
  %135 = load i32, i32* %7, align 4
  %136 = add nsw i32 %135, 112
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.55, i64 0, i64 0), i32 noundef %136)
  %137 = load i32, i32* %7, align 4
  %138 = add nsw i32 %137, 120
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.56, i64 0, i64 0), i32 noundef %138)
  %139 = load i32, i32* %7, align 4
  %140 = add nsw i32 %139, 128
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i64 0, i64 0), i32 noundef %140)
  br label %141

141:                                              ; preds = %89, %46
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %142 = load %struct.Obj*, %struct.Obj** %3, align 8
  %143 = getelementptr inbounds %struct.Obj, %struct.Obj* %142, i32 0, i32 18
  %144 = load %struct.Obj*, %struct.Obj** %143, align 8
  store %struct.Obj* %144, %struct.Obj** %10, align 8
  br label %145

145:                                              ; preds = %256, %141
  %146 = load %struct.Obj*, %struct.Obj** %10, align 8
  %147 = icmp ne %struct.Obj* %146, null
  br i1 %147, label %148, label %260

148:                                              ; preds = %145
  %149 = load %struct.Obj*, %struct.Obj** %10, align 8
  %150 = getelementptr inbounds %struct.Obj, %struct.Obj* %149, i32 0, i32 7
  %151 = load i32, i32* %150, align 8
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %148
  br label %256

154:                                              ; preds = %148
  %155 = load %struct.Obj*, %struct.Obj** %10, align 8
  %156 = getelementptr inbounds %struct.Obj, %struct.Obj* %155, i32 0, i32 3
  %157 = load %struct.Type*, %struct.Type** %156, align 8
  store %struct.Type* %157, %struct.Type** %11, align 8
  %158 = load %struct.Type*, %struct.Type** %11, align 8
  %159 = getelementptr inbounds %struct.Type, %struct.Type* %158, i32 0, i32 0
  %160 = load i32, i32* %159, align 8
  switch i32 %160, label %246 [
    i32 14, label %161
    i32 15, label %161
    i32 6, label %237
    i32 7, label %237
  ]

161:                                              ; preds = %154, %154
  %162 = load %struct.Type*, %struct.Type** %11, align 8
  %163 = getelementptr inbounds %struct.Type, %struct.Type* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp sle i32 %164, 16
  br i1 %165, label %166, label %167

166:                                              ; preds = %161
  br label %168

167:                                              ; preds = %161
  call void @__assert_fail(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 1792, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__PRETTY_FUNCTION__.emit_text, i64 0, i64 0)) #12
  unreachable

168:                                              ; preds = %166
  %169 = load %struct.Type*, %struct.Type** %11, align 8
  %170 = call zeroext i1 @has_flonum(%struct.Type* noundef %169, i32 noundef 0, i32 noundef 8, i32 noundef 0)
  br i1 %170, label %171, label %188

171:                                              ; preds = %168
  %172 = load i32, i32* %9, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %9, align 4
  %174 = load %struct.Obj*, %struct.Obj** %10, align 8
  %175 = getelementptr inbounds %struct.Obj, %struct.Obj* %174, i32 0, i32 7
  %176 = load i32, i32* %175, align 8
  %177 = load %struct.Type*, %struct.Type** %11, align 8
  %178 = getelementptr inbounds %struct.Type, %struct.Type* %177, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = icmp slt i32 8, %179
  br i1 %180, label %181, label %182

181:                                              ; preds = %171
  br label %186

182:                                              ; preds = %171
  %183 = load %struct.Type*, %struct.Type** %11, align 8
  %184 = getelementptr inbounds %struct.Type, %struct.Type* %183, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  br label %186

186:                                              ; preds = %182, %181
  %187 = phi i32 [ 8, %181 ], [ %185, %182 ]
  call void @store_fp(i32 noundef %172, i32 noundef %176, i32 noundef %187)
  br label %205

188:                                              ; preds = %168
  %189 = load i32, i32* %8, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %8, align 4
  %191 = load %struct.Obj*, %struct.Obj** %10, align 8
  %192 = getelementptr inbounds %struct.Obj, %struct.Obj* %191, i32 0, i32 7
  %193 = load i32, i32* %192, align 8
  %194 = load %struct.Type*, %struct.Type** %11, align 8
  %195 = getelementptr inbounds %struct.Type, %struct.Type* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = icmp slt i32 8, %196
  br i1 %197, label %198, label %199

198:                                              ; preds = %188
  br label %203

199:                                              ; preds = %188
  %200 = load %struct.Type*, %struct.Type** %11, align 8
  %201 = getelementptr inbounds %struct.Type, %struct.Type* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  br label %203

203:                                              ; preds = %199, %198
  %204 = phi i32 [ 8, %198 ], [ %202, %199 ]
  call void @store_gp(i32 noundef %189, i32 noundef %193, i32 noundef %204)
  br label %205

205:                                              ; preds = %203, %186
  %206 = load %struct.Type*, %struct.Type** %11, align 8
  %207 = getelementptr inbounds %struct.Type, %struct.Type* %206, i32 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = icmp sgt i32 %208, 8
  br i1 %209, label %210, label %236

210:                                              ; preds = %205
  %211 = load %struct.Type*, %struct.Type** %11, align 8
  %212 = call zeroext i1 @has_flonum(%struct.Type* noundef %211, i32 noundef 8, i32 noundef 16, i32 noundef 0)
  br i1 %212, label %213, label %224

213:                                              ; preds = %210
  %214 = load i32, i32* %9, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %9, align 4
  %216 = load %struct.Obj*, %struct.Obj** %10, align 8
  %217 = getelementptr inbounds %struct.Obj, %struct.Obj* %216, i32 0, i32 7
  %218 = load i32, i32* %217, align 8
  %219 = add nsw i32 %218, 8
  %220 = load %struct.Type*, %struct.Type** %11, align 8
  %221 = getelementptr inbounds %struct.Type, %struct.Type* %220, i32 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = sub nsw i32 %222, 8
  call void @store_fp(i32 noundef %214, i32 noundef %219, i32 noundef %223)
  br label %235

224:                                              ; preds = %210
  %225 = load i32, i32* %8, align 4
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %8, align 4
  %227 = load %struct.Obj*, %struct.Obj** %10, align 8
  %228 = getelementptr inbounds %struct.Obj, %struct.Obj* %227, i32 0, i32 7
  %229 = load i32, i32* %228, align 8
  %230 = add nsw i32 %229, 8
  %231 = load %struct.Type*, %struct.Type** %11, align 8
  %232 = getelementptr inbounds %struct.Type, %struct.Type* %231, i32 0, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = sub nsw i32 %233, 8
  call void @store_gp(i32 noundef %225, i32 noundef %230, i32 noundef %234)
  br label %235

235:                                              ; preds = %224, %213
  br label %236

236:                                              ; preds = %235, %205
  br label %255

237:                                              ; preds = %154, %154
  %238 = load i32, i32* %9, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %9, align 4
  %240 = load %struct.Obj*, %struct.Obj** %10, align 8
  %241 = getelementptr inbounds %struct.Obj, %struct.Obj* %240, i32 0, i32 7
  %242 = load i32, i32* %241, align 8
  %243 = load %struct.Type*, %struct.Type** %11, align 8
  %244 = getelementptr inbounds %struct.Type, %struct.Type* %243, i32 0, i32 1
  %245 = load i32, i32* %244, align 4
  call void @store_fp(i32 noundef %238, i32 noundef %242, i32 noundef %245)
  br label %255

246:                                              ; preds = %154
  %247 = load i32, i32* %8, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %8, align 4
  %249 = load %struct.Obj*, %struct.Obj** %10, align 8
  %250 = getelementptr inbounds %struct.Obj, %struct.Obj* %249, i32 0, i32 7
  %251 = load i32, i32* %250, align 8
  %252 = load %struct.Type*, %struct.Type** %11, align 8
  %253 = getelementptr inbounds %struct.Type, %struct.Type* %252, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  call void @store_gp(i32 noundef %247, i32 noundef %251, i32 noundef %254)
  br label %255

255:                                              ; preds = %246, %237, %236
  br label %256

256:                                              ; preds = %255, %153
  %257 = load %struct.Obj*, %struct.Obj** %10, align 8
  %258 = getelementptr inbounds %struct.Obj, %struct.Obj* %257, i32 0, i32 0
  %259 = load %struct.Obj*, %struct.Obj** %258, align 8
  store %struct.Obj* %259, %struct.Obj** %10, align 8
  br label %145, !llvm.loop !14

260:                                              ; preds = %145
  %261 = load %struct.Obj*, %struct.Obj** %3, align 8
  %262 = getelementptr inbounds %struct.Obj, %struct.Obj* %261, i32 0, i32 19
  %263 = load %struct.Node*, %struct.Node** %262, align 8
  call void @gen_stmt(%struct.Node* noundef %263)
  %264 = load i32, i32* @depth, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %260
  br label %268

267:                                              ; preds = %260
  call void @__assert_fail(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 1817, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__PRETTY_FUNCTION__.emit_text, i64 0, i64 0)) #12
  unreachable

268:                                              ; preds = %266
  %269 = load %struct.Obj*, %struct.Obj** %3, align 8
  %270 = getelementptr inbounds %struct.Obj, %struct.Obj* %269, i32 0, i32 1
  %271 = load i8*, i8** %270, align 8
  %272 = call i32 @strcmp(i8* noundef %271, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0)) #13
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %268
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i64 0, i64 0))
  br label %275

275:                                              ; preds = %274, %268
  %276 = load %struct.Obj*, %struct.Obj** %3, align 8
  %277 = getelementptr inbounds %struct.Obj, %struct.Obj* %276, i32 0, i32 1
  %278 = load i8*, i8** %277, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i64 0, i64 0), i8* noundef %278)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.63, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0))
  br label %279

279:                                              ; preds = %275, %32, %26
  %280 = load %struct.Obj*, %struct.Obj** %3, align 8
  %281 = getelementptr inbounds %struct.Obj, %struct.Obj* %280, i32 0, i32 0
  %282 = load %struct.Obj*, %struct.Obj** %281, align 8
  store %struct.Obj* %282, %struct.Obj** %3, align 8
  br label %13, !llvm.loop !15

283:                                              ; preds = %13
  ret void
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8* noundef, i8* noundef, i32 noundef, i8* noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_flonum(%struct.Type* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca i1, align 1
  %6 = alloca %struct.Type*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.Member*, align 8
  %11 = alloca i32, align 4
  store %struct.Type* %0, %struct.Type** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %12 = load %struct.Type*, %struct.Type** %6, align 8
  %13 = getelementptr inbounds %struct.Type, %struct.Type* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 14
  br i1 %15, label %21, label %16

16:                                               ; preds = %4
  %17 = load %struct.Type*, %struct.Type** %6, align 8
  %18 = getelementptr inbounds %struct.Type, %struct.Type* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 15
  br i1 %20, label %21, label %47

21:                                               ; preds = %16, %4
  %22 = load %struct.Type*, %struct.Type** %6, align 8
  %23 = getelementptr inbounds %struct.Type, %struct.Type* %22, i32 0, i32 14
  %24 = load %struct.Member*, %struct.Member** %23, align 8
  store %struct.Member* %24, %struct.Member** %10, align 8
  br label %25

25:                                               ; preds = %42, %21
  %26 = load %struct.Member*, %struct.Member** %10, align 8
  %27 = icmp ne %struct.Member* %26, null
  br i1 %27, label %28, label %46

28:                                               ; preds = %25
  %29 = load %struct.Member*, %struct.Member** %10, align 8
  %30 = getelementptr inbounds %struct.Member, %struct.Member* %29, i32 0, i32 1
  %31 = load %struct.Type*, %struct.Type** %30, align 8
  %32 = load i32, i32* %7, align 4
  %33 = load i32, i32* %8, align 4
  %34 = load i32, i32* %9, align 4
  %35 = load %struct.Member*, %struct.Member** %10, align 8
  %36 = getelementptr inbounds %struct.Member, %struct.Member* %35, i32 0, i32 6
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %34, %37
  %39 = call zeroext i1 @has_flonum(%struct.Type* noundef %31, i32 noundef %32, i32 noundef %33, i32 noundef %38)
  br i1 %39, label %41, label %40

40:                                               ; preds = %28
  store i1 false, i1* %5, align 1
  br label %101

41:                                               ; preds = %28
  br label %42

42:                                               ; preds = %41
  %43 = load %struct.Member*, %struct.Member** %10, align 8
  %44 = getelementptr inbounds %struct.Member, %struct.Member* %43, i32 0, i32 0
  %45 = load %struct.Member*, %struct.Member** %44, align 8
  store %struct.Member* %45, %struct.Member** %10, align 8
  br label %25, !llvm.loop !16

46:                                               ; preds = %25
  store i1 true, i1* %5, align 1
  br label %101

47:                                               ; preds = %16
  %48 = load %struct.Type*, %struct.Type** %6, align 8
  %49 = getelementptr inbounds %struct.Type, %struct.Type* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 12
  br i1 %51, label %52, label %81

52:                                               ; preds = %47
  store i32 0, i32* %11, align 4
  br label %53

53:                                               ; preds = %77, %52
  %54 = load i32, i32* %11, align 4
  %55 = load %struct.Type*, %struct.Type** %6, align 8
  %56 = getelementptr inbounds %struct.Type, %struct.Type* %55, i32 0, i32 11
  %57 = load i32, i32* %56, align 8
  %58 = icmp slt i32 %54, %57
  br i1 %58, label %59, label %80

59:                                               ; preds = %53
  %60 = load %struct.Type*, %struct.Type** %6, align 8
  %61 = getelementptr inbounds %struct.Type, %struct.Type* %60, i32 0, i32 8
  %62 = load %struct.Type*, %struct.Type** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = load i32, i32* %8, align 4
  %65 = load i32, i32* %9, align 4
  %66 = load %struct.Type*, %struct.Type** %6, align 8
  %67 = getelementptr inbounds %struct.Type, %struct.Type* %66, i32 0, i32 8
  %68 = load %struct.Type*, %struct.Type** %67, align 8
  %69 = getelementptr inbounds %struct.Type, %struct.Type* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = load i32, i32* %11, align 4
  %72 = mul nsw i32 %70, %71
  %73 = add nsw i32 %65, %72
  %74 = call zeroext i1 @has_flonum(%struct.Type* noundef %62, i32 noundef %63, i32 noundef %64, i32 noundef %73)
  br i1 %74, label %76, label %75

75:                                               ; preds = %59
  store i1 false, i1* %5, align 1
  br label %101

76:                                               ; preds = %59
  br label %77

77:                                               ; preds = %76
  %78 = load i32, i32* %11, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %11, align 4
  br label %53, !llvm.loop !17

80:                                               ; preds = %53
  store i1 true, i1* %5, align 1
  br label %101

81:                                               ; preds = %47
  %82 = load i32, i32* %9, align 4
  %83 = load i32, i32* %7, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %99, label %85

85:                                               ; preds = %81
  %86 = load i32, i32* %8, align 4
  %87 = load i32, i32* %9, align 4
  %88 = icmp sle i32 %86, %87
  br i1 %88, label %99, label %89

89:                                               ; preds = %85
  %90 = load %struct.Type*, %struct.Type** %6, align 8
  %91 = getelementptr inbounds %struct.Type, %struct.Type* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 6
  br i1 %93, label %99, label %94

94:                                               ; preds = %89
  %95 = load %struct.Type*, %struct.Type** %6, align 8
  %96 = getelementptr inbounds %struct.Type, %struct.Type* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 7
  br label %99

99:                                               ; preds = %94, %89, %85, %81
  %100 = phi i1 [ true, %89 ], [ true, %85 ], [ true, %81 ], [ %98, %94 ]
  store i1 %100, i1* %5, align 1
  br label %101

101:                                              ; preds = %99, %80, %75, %46, %40
  %102 = load i1, i1* %5, align 1
  ret i1 %102
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @store_fp(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %14 [
    i32 4, label %8
    i32 8, label %11
  ]

8:                                                ; preds = %3
  %9 = load i32, i32* %4, align 4
  %10 = load i32, i32* %5, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.66, i64 0, i64 0), i32 noundef %9, i32 noundef %10)
  br label %15

11:                                               ; preds = %3
  %12 = load i32, i32* %4, align 4
  %13 = load i32, i32* %5, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0), i32 noundef %12, i32 noundef %13)
  br label %15

14:                                               ; preds = %3
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 1683) #11
  unreachable

15:                                               ; preds = %11, %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @store_gp(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load i32, i32* %6, align 4
  switch i32 %8, label %33 [
    i32 1, label %9
    i32 2, label %15
    i32 4, label %21
    i32 8, label %27
  ]

9:                                                ; preds = %3
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg8, i64 0, i64 %11
  %13 = load i8*, i8** %12, align 8
  %14 = load i32, i32* %5, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i64 0, i64 0), i8* noundef %13, i32 noundef %14)
  br label %54

15:                                               ; preds = %3
  %16 = load i32, i32* %4, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg16, i64 0, i64 %17
  %19 = load i8*, i8** %18, align 8
  %20 = load i32, i32* %5, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i64 0, i64 0), i8* noundef %19, i32 noundef %20)
  br label %54

21:                                               ; preds = %3
  %22 = load i32, i32* %4, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg32, i64 0, i64 %23
  %25 = load i8*, i8** %24, align 8
  %26 = load i32, i32* %5, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i64 0, i64 0), i8* noundef %25, i32 noundef %26)
  br label %54

27:                                               ; preds = %3
  %28 = load i32, i32* %4, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg64, i64 0, i64 %29
  %31 = load i8*, i8** %30, align 8
  %32 = load i32, i32* %5, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i64 0, i64 0), i8* noundef %31, i32 noundef %32)
  br label %54

33:                                               ; preds = %3
  store i32 0, i32* %7, align 4
  br label %34

34:                                               ; preds = %50, %33
  %35 = load i32, i32* %7, align 4
  %36 = load i32, i32* %6, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %53

38:                                               ; preds = %34
  %39 = load i32, i32* %4, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg8, i64 0, i64 %40
  %42 = load i8*, i8** %41, align 8
  %43 = load i32, i32* %5, align 4
  %44 = load i32, i32* %7, align 4
  %45 = add nsw i32 %43, %44
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i64 0, i64 0), i8* noundef %42, i32 noundef %45)
  %46 = load i32, i32* %4, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg64, i64 0, i64 %47
  %49 = load i8*, i8** %48, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i64 0, i64 0), i8* noundef %49)
  br label %50

50:                                               ; preds = %38
  %51 = load i32, i32* %7, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %7, align 4
  br label %34, !llvm.loop !18

53:                                               ; preds = %34
  br label %54

54:                                               ; preds = %53, %27, %21, %15, %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @gen_stmt(%struct.Node* noundef %0) #0 {
  %2 = alloca %struct.Node*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.Node*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.Node*, align 8
  %10 = alloca %struct.Type*, align 8
  store %struct.Node* %0, %struct.Node** %2, align 8
  %11 = load %struct.Node*, %struct.Node** %2, align 8
  %12 = getelementptr inbounds %struct.Node, %struct.Node* %11, i32 0, i32 3
  %13 = load %struct.Token*, %struct.Token** %12, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 8
  %15 = load %struct.File*, %struct.File** %14, align 16
  %16 = getelementptr inbounds %struct.File, %struct.File* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = load %struct.Node*, %struct.Node** %2, align 8
  %19 = getelementptr inbounds %struct.Node, %struct.Node* %18, i32 0, i32 3
  %20 = load %struct.Token*, %struct.Token** %19, align 8
  %21 = getelementptr inbounds %struct.Token, %struct.Token* %20, i32 0, i32 10
  %22 = load i32, i32* %21, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i64 0, i64 0), i32 noundef %17, i32 noundef %22)
  %23 = load %struct.Node*, %struct.Node** %2, align 8
  %24 = getelementptr inbounds %struct.Node, %struct.Node* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 16
  switch i32 %25, label %284 [
    i32 27, label %26
    i32 28, label %52
    i32 29, label %100
    i32 30, label %121
    i32 31, label %210
    i32 32, label %217
    i32 33, label %231
    i32 34, label %235
    i32 35, label %239
    i32 26, label %246
    i32 38, label %276
    i32 45, label %280
  ]

26:                                               ; preds = %1
  %27 = call i32 @count()
  store i32 %27, i32* %3, align 4
  %28 = load %struct.Node*, %struct.Node** %2, align 8
  %29 = getelementptr inbounds %struct.Node, %struct.Node* %28, i32 0, i32 6
  %30 = load %struct.Node*, %struct.Node** %29, align 16
  call void @gen_expr(%struct.Node* noundef %30)
  %31 = load %struct.Node*, %struct.Node** %2, align 8
  %32 = getelementptr inbounds %struct.Node, %struct.Node* %31, i32 0, i32 6
  %33 = load %struct.Node*, %struct.Node** %32, align 16
  %34 = getelementptr inbounds %struct.Node, %struct.Node* %33, i32 0, i32 2
  %35 = load %struct.Type*, %struct.Type** %34, align 16
  call void @cmp_zero(%struct.Type* noundef %35)
  %36 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i64 0, i64 0), i32 noundef %36)
  %37 = load %struct.Node*, %struct.Node** %2, align 8
  %38 = getelementptr inbounds %struct.Node, %struct.Node* %37, i32 0, i32 7
  %39 = load %struct.Node*, %struct.Node** %38, align 8
  call void @gen_stmt(%struct.Node* noundef %39)
  %40 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i64 0, i64 0), i32 noundef %40)
  %41 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), i32 noundef %41)
  %42 = load %struct.Node*, %struct.Node** %2, align 8
  %43 = getelementptr inbounds %struct.Node, %struct.Node* %42, i32 0, i32 8
  %44 = load %struct.Node*, %struct.Node** %43, align 16
  %45 = icmp ne %struct.Node* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %26
  %47 = load %struct.Node*, %struct.Node** %2, align 8
  %48 = getelementptr inbounds %struct.Node, %struct.Node* %47, i32 0, i32 8
  %49 = load %struct.Node*, %struct.Node** %48, align 16
  call void @gen_stmt(%struct.Node* noundef %49)
  br label %50

50:                                               ; preds = %46, %26
  %51 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i32 noundef %51)
  br label %288

52:                                               ; preds = %1
  %53 = call i32 @count()
  store i32 %53, i32* %4, align 4
  %54 = load %struct.Node*, %struct.Node** %2, align 8
  %55 = getelementptr inbounds %struct.Node, %struct.Node* %54, i32 0, i32 9
  %56 = load %struct.Node*, %struct.Node** %55, align 8
  %57 = icmp ne %struct.Node* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %52
  %59 = load %struct.Node*, %struct.Node** %2, align 8
  %60 = getelementptr inbounds %struct.Node, %struct.Node* %59, i32 0, i32 9
  %61 = load %struct.Node*, %struct.Node** %60, align 8
  call void @gen_stmt(%struct.Node* noundef %61)
  br label %62

62:                                               ; preds = %58, %52
  %63 = load i32, i32* %4, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i64 0, i64 0), i32 noundef %63)
  %64 = load %struct.Node*, %struct.Node** %2, align 8
  %65 = getelementptr inbounds %struct.Node, %struct.Node* %64, i32 0, i32 6
  %66 = load %struct.Node*, %struct.Node** %65, align 16
  %67 = icmp ne %struct.Node* %66, null
  br i1 %67, label %68, label %80

68:                                               ; preds = %62
  %69 = load %struct.Node*, %struct.Node** %2, align 8
  %70 = getelementptr inbounds %struct.Node, %struct.Node* %69, i32 0, i32 6
  %71 = load %struct.Node*, %struct.Node** %70, align 16
  call void @gen_expr(%struct.Node* noundef %71)
  %72 = load %struct.Node*, %struct.Node** %2, align 8
  %73 = getelementptr inbounds %struct.Node, %struct.Node* %72, i32 0, i32 6
  %74 = load %struct.Node*, %struct.Node** %73, align 16
  %75 = getelementptr inbounds %struct.Node, %struct.Node* %74, i32 0, i32 2
  %76 = load %struct.Type*, %struct.Type** %75, align 16
  call void @cmp_zero(%struct.Type* noundef %76)
  %77 = load %struct.Node*, %struct.Node** %2, align 8
  %78 = getelementptr inbounds %struct.Node, %struct.Node* %77, i32 0, i32 11
  %79 = load i8*, i8** %78, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), i8* noundef %79)
  br label %80

80:                                               ; preds = %68, %62
  %81 = load %struct.Node*, %struct.Node** %2, align 8
  %82 = getelementptr inbounds %struct.Node, %struct.Node* %81, i32 0, i32 7
  %83 = load %struct.Node*, %struct.Node** %82, align 8
  call void @gen_stmt(%struct.Node* noundef %83)
  %84 = load %struct.Node*, %struct.Node** %2, align 8
  %85 = getelementptr inbounds %struct.Node, %struct.Node* %84, i32 0, i32 12
  %86 = load i8*, i8** %85, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %86)
  %87 = load %struct.Node*, %struct.Node** %2, align 8
  %88 = getelementptr inbounds %struct.Node, %struct.Node* %87, i32 0, i32 10
  %89 = load %struct.Node*, %struct.Node** %88, align 16
  %90 = icmp ne %struct.Node* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %80
  %92 = load %struct.Node*, %struct.Node** %2, align 8
  %93 = getelementptr inbounds %struct.Node, %struct.Node* %92, i32 0, i32 10
  %94 = load %struct.Node*, %struct.Node** %93, align 16
  call void @gen_expr(%struct.Node* noundef %94)
  br label %95

95:                                               ; preds = %91, %80
  %96 = load i32, i32* %4, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.93, i64 0, i64 0), i32 noundef %96)
  %97 = load %struct.Node*, %struct.Node** %2, align 8
  %98 = getelementptr inbounds %struct.Node, %struct.Node* %97, i32 0, i32 11
  %99 = load i8*, i8** %98, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %99)
  br label %288

100:                                              ; preds = %1
  %101 = call i32 @count()
  store i32 %101, i32* %5, align 4
  %102 = load i32, i32* %5, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i64 0, i64 0), i32 noundef %102)
  %103 = load %struct.Node*, %struct.Node** %2, align 8
  %104 = getelementptr inbounds %struct.Node, %struct.Node* %103, i32 0, i32 7
  %105 = load %struct.Node*, %struct.Node** %104, align 8
  call void @gen_stmt(%struct.Node* noundef %105)
  %106 = load %struct.Node*, %struct.Node** %2, align 8
  %107 = getelementptr inbounds %struct.Node, %struct.Node* %106, i32 0, i32 12
  %108 = load i8*, i8** %107, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %108)
  %109 = load %struct.Node*, %struct.Node** %2, align 8
  %110 = getelementptr inbounds %struct.Node, %struct.Node* %109, i32 0, i32 6
  %111 = load %struct.Node*, %struct.Node** %110, align 16
  call void @gen_expr(%struct.Node* noundef %111)
  %112 = load %struct.Node*, %struct.Node** %2, align 8
  %113 = getelementptr inbounds %struct.Node, %struct.Node* %112, i32 0, i32 6
  %114 = load %struct.Node*, %struct.Node** %113, align 16
  %115 = getelementptr inbounds %struct.Node, %struct.Node* %114, i32 0, i32 2
  %116 = load %struct.Type*, %struct.Type** %115, align 16
  call void @cmp_zero(%struct.Type* noundef %116)
  %117 = load i32, i32* %5, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.94, i64 0, i64 0), i32 noundef %117)
  %118 = load %struct.Node*, %struct.Node** %2, align 8
  %119 = getelementptr inbounds %struct.Node, %struct.Node* %118, i32 0, i32 11
  %120 = load i8*, i8** %119, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %120)
  br label %288

121:                                              ; preds = %1
  %122 = load %struct.Node*, %struct.Node** %2, align 8
  %123 = getelementptr inbounds %struct.Node, %struct.Node* %122, i32 0, i32 6
  %124 = load %struct.Node*, %struct.Node** %123, align 16
  call void @gen_expr(%struct.Node* noundef %124)
  %125 = load %struct.Node*, %struct.Node** %2, align 8
  %126 = getelementptr inbounds %struct.Node, %struct.Node* %125, i32 0, i32 22
  %127 = load %struct.Node*, %struct.Node** %126, align 16
  store %struct.Node* %127, %struct.Node** %6, align 8
  br label %128

128:                                              ; preds = %185, %121
  %129 = load %struct.Node*, %struct.Node** %6, align 8
  %130 = icmp ne %struct.Node* %129, null
  br i1 %130, label %131, label %189

131:                                              ; preds = %128
  %132 = load %struct.Node*, %struct.Node** %2, align 8
  %133 = getelementptr inbounds %struct.Node, %struct.Node* %132, i32 0, i32 6
  %134 = load %struct.Node*, %struct.Node** %133, align 16
  %135 = getelementptr inbounds %struct.Node, %struct.Node* %134, i32 0, i32 2
  %136 = load %struct.Type*, %struct.Type** %135, align 16
  %137 = getelementptr inbounds %struct.Type, %struct.Type* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 8
  %140 = zext i1 %139 to i64
  %141 = select i1 %139, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)
  store i8* %141, i8** %7, align 8
  %142 = load %struct.Node*, %struct.Node** %2, align 8
  %143 = getelementptr inbounds %struct.Node, %struct.Node* %142, i32 0, i32 6
  %144 = load %struct.Node*, %struct.Node** %143, align 16
  %145 = getelementptr inbounds %struct.Node, %struct.Node* %144, i32 0, i32 2
  %146 = load %struct.Type*, %struct.Type** %145, align 16
  %147 = getelementptr inbounds %struct.Type, %struct.Type* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 8
  %150 = zext i1 %149 to i64
  %151 = select i1 %149, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0)
  store i8* %151, i8** %8, align 8
  %152 = load %struct.Node*, %struct.Node** %6, align 8
  %153 = getelementptr inbounds %struct.Node, %struct.Node* %152, i32 0, i32 24
  %154 = load i64, i64* %153, align 16
  %155 = load %struct.Node*, %struct.Node** %6, align 8
  %156 = getelementptr inbounds %struct.Node, %struct.Node* %155, i32 0, i32 25
  %157 = load i64, i64* %156, align 8
  %158 = icmp eq i64 %154, %157
  br i1 %158, label %159, label %167

159:                                              ; preds = %131
  %160 = load %struct.Node*, %struct.Node** %6, align 8
  %161 = getelementptr inbounds %struct.Node, %struct.Node* %160, i32 0, i32 24
  %162 = load i64, i64* %161, align 16
  %163 = load i8*, i8** %7, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i64 noundef %162, i8* noundef %163)
  %164 = load %struct.Node*, %struct.Node** %6, align 8
  %165 = getelementptr inbounds %struct.Node, %struct.Node* %164, i32 0, i32 19
  %166 = load i8*, i8** %165, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), i8* noundef %166)
  br label %185

167:                                              ; preds = %131
  %168 = load i8*, i8** %7, align 8
  %169 = load i8*, i8** %8, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i64 0, i64 0), i8* noundef %168, i8* noundef %169)
  %170 = load %struct.Node*, %struct.Node** %6, align 8
  %171 = getelementptr inbounds %struct.Node, %struct.Node* %170, i32 0, i32 24
  %172 = load i64, i64* %171, align 16
  %173 = load i8*, i8** %8, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i64 0, i64 0), i64 noundef %172, i8* noundef %173)
  %174 = load %struct.Node*, %struct.Node** %6, align 8
  %175 = getelementptr inbounds %struct.Node, %struct.Node* %174, i32 0, i32 25
  %176 = load i64, i64* %175, align 8
  %177 = load %struct.Node*, %struct.Node** %6, align 8
  %178 = getelementptr inbounds %struct.Node, %struct.Node* %177, i32 0, i32 24
  %179 = load i64, i64* %178, align 16
  %180 = sub nsw i64 %176, %179
  %181 = load i8*, i8** %8, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i64 noundef %180, i8* noundef %181)
  %182 = load %struct.Node*, %struct.Node** %6, align 8
  %183 = getelementptr inbounds %struct.Node, %struct.Node* %182, i32 0, i32 19
  %184 = load i8*, i8** %183, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i64 0, i64 0), i8* noundef %184)
  br label %185

185:                                              ; preds = %167, %159
  %186 = load %struct.Node*, %struct.Node** %6, align 8
  %187 = getelementptr inbounds %struct.Node, %struct.Node* %186, i32 0, i32 22
  %188 = load %struct.Node*, %struct.Node** %187, align 16
  store %struct.Node* %188, %struct.Node** %6, align 8
  br label %128, !llvm.loop !19

189:                                              ; preds = %128
  %190 = load %struct.Node*, %struct.Node** %2, align 8
  %191 = getelementptr inbounds %struct.Node, %struct.Node* %190, i32 0, i32 23
  %192 = load %struct.Node*, %struct.Node** %191, align 8
  %193 = icmp ne %struct.Node* %192, null
  br i1 %193, label %194, label %200

194:                                              ; preds = %189
  %195 = load %struct.Node*, %struct.Node** %2, align 8
  %196 = getelementptr inbounds %struct.Node, %struct.Node* %195, i32 0, i32 23
  %197 = load %struct.Node*, %struct.Node** %196, align 8
  %198 = getelementptr inbounds %struct.Node, %struct.Node* %197, i32 0, i32 19
  %199 = load i8*, i8** %198, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i64 0, i64 0), i8* noundef %199)
  br label %200

200:                                              ; preds = %194, %189
  %201 = load %struct.Node*, %struct.Node** %2, align 8
  %202 = getelementptr inbounds %struct.Node, %struct.Node* %201, i32 0, i32 11
  %203 = load i8*, i8** %202, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i64 0, i64 0), i8* noundef %203)
  %204 = load %struct.Node*, %struct.Node** %2, align 8
  %205 = getelementptr inbounds %struct.Node, %struct.Node* %204, i32 0, i32 7
  %206 = load %struct.Node*, %struct.Node** %205, align 8
  call void @gen_stmt(%struct.Node* noundef %206)
  %207 = load %struct.Node*, %struct.Node** %2, align 8
  %208 = getelementptr inbounds %struct.Node, %struct.Node* %207, i32 0, i32 11
  %209 = load i8*, i8** %208, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %209)
  br label %288

210:                                              ; preds = %1
  %211 = load %struct.Node*, %struct.Node** %2, align 8
  %212 = getelementptr inbounds %struct.Node, %struct.Node* %211, i32 0, i32 19
  %213 = load i8*, i8** %212, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %213)
  %214 = load %struct.Node*, %struct.Node** %2, align 8
  %215 = getelementptr inbounds %struct.Node, %struct.Node* %214, i32 0, i32 4
  %216 = load %struct.Node*, %struct.Node** %215, align 16
  call void @gen_stmt(%struct.Node* noundef %216)
  br label %288

217:                                              ; preds = %1
  %218 = load %struct.Node*, %struct.Node** %2, align 8
  %219 = getelementptr inbounds %struct.Node, %struct.Node* %218, i32 0, i32 13
  %220 = load %struct.Node*, %struct.Node** %219, align 8
  store %struct.Node* %220, %struct.Node** %9, align 8
  br label %221

221:                                              ; preds = %226, %217
  %222 = load %struct.Node*, %struct.Node** %9, align 8
  %223 = icmp ne %struct.Node* %222, null
  br i1 %223, label %224, label %230

224:                                              ; preds = %221
  %225 = load %struct.Node*, %struct.Node** %9, align 8
  call void @gen_stmt(%struct.Node* noundef %225)
  br label %226

226:                                              ; preds = %224
  %227 = load %struct.Node*, %struct.Node** %9, align 8
  %228 = getelementptr inbounds %struct.Node, %struct.Node* %227, i32 0, i32 1
  %229 = load %struct.Node*, %struct.Node** %228, align 8
  store %struct.Node* %229, %struct.Node** %9, align 8
  br label %221, !llvm.loop !20

230:                                              ; preds = %221
  br label %288

231:                                              ; preds = %1
  %232 = load %struct.Node*, %struct.Node** %2, align 8
  %233 = getelementptr inbounds %struct.Node, %struct.Node* %232, i32 0, i32 20
  %234 = load i8*, i8** %233, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i64 0, i64 0), i8* noundef %234)
  br label %288

235:                                              ; preds = %1
  %236 = load %struct.Node*, %struct.Node** %2, align 8
  %237 = getelementptr inbounds %struct.Node, %struct.Node* %236, i32 0, i32 4
  %238 = load %struct.Node*, %struct.Node** %237, align 16
  call void @gen_expr(%struct.Node* noundef %238)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.100, i64 0, i64 0))
  br label %288

239:                                              ; preds = %1
  %240 = load %struct.Node*, %struct.Node** %2, align 8
  %241 = getelementptr inbounds %struct.Node, %struct.Node* %240, i32 0, i32 20
  %242 = load i8*, i8** %241, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* noundef %242)
  %243 = load %struct.Node*, %struct.Node** %2, align 8
  %244 = getelementptr inbounds %struct.Node, %struct.Node* %243, i32 0, i32 4
  %245 = load %struct.Node*, %struct.Node** %244, align 16
  call void @gen_stmt(%struct.Node* noundef %245)
  br label %288

246:                                              ; preds = %1
  %247 = load %struct.Node*, %struct.Node** %2, align 8
  %248 = getelementptr inbounds %struct.Node, %struct.Node* %247, i32 0, i32 4
  %249 = load %struct.Node*, %struct.Node** %248, align 16
  %250 = icmp ne %struct.Node* %249, null
  br i1 %250, label %251, label %272

251:                                              ; preds = %246
  %252 = load %struct.Node*, %struct.Node** %2, align 8
  %253 = getelementptr inbounds %struct.Node, %struct.Node* %252, i32 0, i32 4
  %254 = load %struct.Node*, %struct.Node** %253, align 16
  call void @gen_expr(%struct.Node* noundef %254)
  %255 = load %struct.Node*, %struct.Node** %2, align 8
  %256 = getelementptr inbounds %struct.Node, %struct.Node* %255, i32 0, i32 4
  %257 = load %struct.Node*, %struct.Node** %256, align 16
  %258 = getelementptr inbounds %struct.Node, %struct.Node* %257, i32 0, i32 2
  %259 = load %struct.Type*, %struct.Type** %258, align 16
  store %struct.Type* %259, %struct.Type** %10, align 8
  %260 = load %struct.Type*, %struct.Type** %10, align 8
  %261 = getelementptr inbounds %struct.Type, %struct.Type* %260, i32 0, i32 0
  %262 = load i32, i32* %261, align 8
  switch i32 %262, label %271 [
    i32 14, label %263
    i32 15, label %263
  ]

263:                                              ; preds = %251, %251
  %264 = load %struct.Type*, %struct.Type** %10, align 8
  %265 = getelementptr inbounds %struct.Type, %struct.Type* %264, i32 0, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = icmp sle i32 %266, 16
  br i1 %267, label %268, label %269

268:                                              ; preds = %263
  call void @copy_struct_reg()
  br label %270

269:                                              ; preds = %263
  call void @copy_struct_mem()
  br label %270

270:                                              ; preds = %269, %268
  br label %271

271:                                              ; preds = %270, %251
  br label %272

272:                                              ; preds = %271, %246
  %273 = load %struct.Obj*, %struct.Obj** @current_fn, align 8
  %274 = getelementptr inbounds %struct.Obj, %struct.Obj* %273, i32 0, i32 1
  %275 = load i8*, i8** %274, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.101, i64 0, i64 0), i8* noundef %275)
  br label %288

276:                                              ; preds = %1
  %277 = load %struct.Node*, %struct.Node** %2, align 8
  %278 = getelementptr inbounds %struct.Node, %struct.Node* %277, i32 0, i32 4
  %279 = load %struct.Node*, %struct.Node** %278, align 16
  call void @gen_expr(%struct.Node* noundef %279)
  br label %288

280:                                              ; preds = %1
  %281 = load %struct.Node*, %struct.Node** %2, align 8
  %282 = getelementptr inbounds %struct.Node, %struct.Node* %281, i32 0, i32 26
  %283 = load i8*, i8** %282, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i64 0, i64 0), i8* noundef %283)
  br label %288

284:                                              ; preds = %1
  %285 = load %struct.Node*, %struct.Node** %2, align 8
  %286 = getelementptr inbounds %struct.Node, %struct.Node* %285, i32 0, i32 3
  %287 = load %struct.Token*, %struct.Token** %286, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %287, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.103, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

288:                                              ; preds = %280, %276, %272, %239, %235, %231, %230, %210, %200, %100, %95, %50
  ret void
}

; Function Attrs: nounwind readonly willreturn
declare i32 @strcmp(i8* noundef, i8* noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @count() #0 {
  %1 = load i32, i32* @count.i, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @count.i, align 4
  ret i32 %1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @gen_expr(%struct.Node* noundef %0) #0 {
  %2 = alloca %struct.Node*, align 8
  %3 = alloca %union.anon, align 4
  %4 = alloca %union.anon.0, align 8
  %5 = alloca %union.anon.1, align 16
  %6 = alloca %struct.Member*, align 8
  %7 = alloca %struct.Member*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.Node*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.Node*, align 8
  %17 = alloca %struct.Type*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  store %struct.Node* %0, %struct.Node** %2, align 8
  %26 = load %struct.Node*, %struct.Node** %2, align 8
  %27 = getelementptr inbounds %struct.Node, %struct.Node* %26, i32 0, i32 3
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 8
  %30 = load %struct.File*, %struct.File** %29, align 16
  %31 = getelementptr inbounds %struct.File, %struct.File* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = load %struct.Node*, %struct.Node** %2, align 8
  %34 = getelementptr inbounds %struct.Node, %struct.Node* %33, i32 0, i32 3
  %35 = load %struct.Token*, %struct.Token** %34, align 8
  %36 = getelementptr inbounds %struct.Token, %struct.Token* %35, i32 0, i32 10
  %37 = load i32, i32* %36, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i64 0, i64 0), i32 noundef %32, i32 noundef %37)
  %38 = load %struct.Node*, %struct.Node** %2, align 8
  %39 = getelementptr inbounds %struct.Node, %struct.Node* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 16
  switch i32 %40, label %611 [
    i32 0, label %41
    i32 42, label %42
    i32 5, label %89
    i32 40, label %102
    i32 19, label %107
    i32 21, label %146
    i32 20, label %153
    i32 16, label %157
    i32 39, label %230
    i32 18, label %244
    i32 43, label %251
    i32 44, label %263
    i32 17, label %276
    i32 22, label %296
    i32 23, label %305
    i32 24, label %309
    i32 25, label %332
    i32 37, label %355
    i32 36, label %559
    i32 46, label %563
    i32 47, label %593
  ]

41:                                               ; preds = %1
  br label %864

42:                                               ; preds = %1
  %43 = load %struct.Node*, %struct.Node** %2, align 8
  %44 = getelementptr inbounds %struct.Node, %struct.Node* %43, i32 0, i32 2
  %45 = load %struct.Type*, %struct.Type** %44, align 16
  %46 = getelementptr inbounds %struct.Type, %struct.Type* %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  switch i32 %47, label %85 [
    i32 6, label %48
    i32 7, label %59
    i32 8, label %70
  ]

48:                                               ; preds = %42
  %49 = bitcast %union.anon* %3 to float*
  %50 = load %struct.Node*, %struct.Node** %2, align 8
  %51 = getelementptr inbounds %struct.Node, %struct.Node* %50, i32 0, i32 35
  %52 = load x86_fp80, x86_fp80* %51, align 16
  %53 = fptrunc x86_fp80 %52 to float
  store float %53, float* %49, align 4
  %54 = bitcast %union.anon* %3 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.Node*, %struct.Node** %2, align 8
  %57 = getelementptr inbounds %struct.Node, %struct.Node* %56, i32 0, i32 35
  %58 = load x86_fp80, x86_fp80* %57, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.104, i64 0, i64 0), i32 noundef %55, x86_fp80 noundef %58)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.105, i64 0, i64 0))
  br label %864

59:                                               ; preds = %42
  %60 = bitcast %union.anon.0* %4 to double*
  %61 = load %struct.Node*, %struct.Node** %2, align 8
  %62 = getelementptr inbounds %struct.Node, %struct.Node* %61, i32 0, i32 35
  %63 = load x86_fp80, x86_fp80* %62, align 16
  %64 = fptrunc x86_fp80 %63 to double
  store double %64, double* %60, align 8
  %65 = bitcast %union.anon.0* %4 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = load %struct.Node*, %struct.Node** %2, align 8
  %68 = getelementptr inbounds %struct.Node, %struct.Node* %67, i32 0, i32 35
  %69 = load x86_fp80, x86_fp80* %68, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.106, i64 0, i64 0), i64 noundef %66, x86_fp80 noundef %69)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.105, i64 0, i64 0))
  br label %864

70:                                               ; preds = %42
  %71 = bitcast %union.anon.1* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %71, i8 0, i64 16, i1 false)
  %72 = load %struct.Node*, %struct.Node** %2, align 8
  %73 = getelementptr inbounds %struct.Node, %struct.Node* %72, i32 0, i32 35
  %74 = load x86_fp80, x86_fp80* %73, align 16
  %75 = bitcast %union.anon.1* %5 to x86_fp80*
  store x86_fp80 %74, x86_fp80* %75, align 16
  %76 = bitcast %union.anon.1* %5 to [2 x i64]*
  %77 = getelementptr inbounds [2 x i64], [2 x i64]* %76, i64 0, i64 0
  %78 = load i64, i64* %77, align 16
  %79 = load %struct.Node*, %struct.Node** %2, align 8
  %80 = getelementptr inbounds %struct.Node, %struct.Node* %79, i32 0, i32 35
  %81 = load x86_fp80, x86_fp80* %80, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.107, i64 0, i64 0), i64 noundef %78, x86_fp80 noundef %81)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.108, i64 0, i64 0))
  %82 = bitcast %union.anon.1* %5 to [2 x i64]*
  %83 = getelementptr inbounds [2 x i64], [2 x i64]* %82, i64 0, i64 1
  %84 = load i64, i64* %83, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.109, i64 0, i64 0), i64 noundef %84)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.110, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.111, i64 0, i64 0))
  br label %864

85:                                               ; preds = %42
  %86 = load %struct.Node*, %struct.Node** %2, align 8
  %87 = getelementptr inbounds %struct.Node, %struct.Node* %86, i32 0, i32 34
  %88 = load i64, i64* %87, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.112, i64 0, i64 0), i64 noundef %88)
  br label %864

89:                                               ; preds = %1
  %90 = load %struct.Node*, %struct.Node** %2, align 8
  %91 = getelementptr inbounds %struct.Node, %struct.Node* %90, i32 0, i32 4
  %92 = load %struct.Node*, %struct.Node** %91, align 16
  call void @gen_expr(%struct.Node* noundef %92)
  %93 = load %struct.Node*, %struct.Node** %2, align 8
  %94 = getelementptr inbounds %struct.Node, %struct.Node* %93, i32 0, i32 2
  %95 = load %struct.Type*, %struct.Type** %94, align 16
  %96 = getelementptr inbounds %struct.Type, %struct.Type* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  switch i32 %97, label %101 [
    i32 6, label %98
    i32 7, label %99
    i32 8, label %100
  ]

98:                                               ; preds = %89
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.113, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.114, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.115, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.116, i64 0, i64 0))
  br label %864

99:                                               ; preds = %89
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.113, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.117, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.115, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.118, i64 0, i64 0))
  br label %864

100:                                              ; preds = %89
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i64 0, i64 0))
  br label %864

101:                                              ; preds = %89
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.120, i64 0, i64 0))
  br label %864

102:                                              ; preds = %1
  %103 = load %struct.Node*, %struct.Node** %2, align 8
  call void @gen_addr(%struct.Node* noundef %103)
  %104 = load %struct.Node*, %struct.Node** %2, align 8
  %105 = getelementptr inbounds %struct.Node, %struct.Node* %104, i32 0, i32 2
  %106 = load %struct.Type*, %struct.Type** %105, align 16
  call void @load(%struct.Type* noundef %106)
  br label %864

107:                                              ; preds = %1
  %108 = load %struct.Node*, %struct.Node** %2, align 8
  call void @gen_addr(%struct.Node* noundef %108)
  %109 = load %struct.Node*, %struct.Node** %2, align 8
  %110 = getelementptr inbounds %struct.Node, %struct.Node* %109, i32 0, i32 2
  %111 = load %struct.Type*, %struct.Type** %110, align 16
  call void @load(%struct.Type* noundef %111)
  %112 = load %struct.Node*, %struct.Node** %2, align 8
  %113 = getelementptr inbounds %struct.Node, %struct.Node* %112, i32 0, i32 14
  %114 = load %struct.Member*, %struct.Member** %113, align 16
  store %struct.Member* %114, %struct.Member** %6, align 8
  %115 = load %struct.Member*, %struct.Member** %6, align 8
  %116 = getelementptr inbounds %struct.Member, %struct.Member* %115, i32 0, i32 7
  %117 = load i8, i8* %116, align 4
  %118 = trunc i8 %117 to i1
  br i1 %118, label %119, label %145

119:                                              ; preds = %107
  %120 = load %struct.Member*, %struct.Member** %6, align 8
  %121 = getelementptr inbounds %struct.Member, %struct.Member* %120, i32 0, i32 9
  %122 = load i32, i32* %121, align 4
  %123 = sub nsw i32 64, %122
  %124 = load %struct.Member*, %struct.Member** %6, align 8
  %125 = getelementptr inbounds %struct.Member, %struct.Member* %124, i32 0, i32 8
  %126 = load i32, i32* %125, align 8
  %127 = sub nsw i32 %123, %126
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.121, i64 0, i64 0), i32 noundef %127)
  %128 = load %struct.Member*, %struct.Member** %6, align 8
  %129 = getelementptr inbounds %struct.Member, %struct.Member* %128, i32 0, i32 1
  %130 = load %struct.Type*, %struct.Type** %129, align 8
  %131 = getelementptr inbounds %struct.Type, %struct.Type* %130, i32 0, i32 3
  %132 = load i8, i8* %131, align 4
  %133 = trunc i8 %132 to i1
  br i1 %133, label %134, label %139

134:                                              ; preds = %119
  %135 = load %struct.Member*, %struct.Member** %6, align 8
  %136 = getelementptr inbounds %struct.Member, %struct.Member* %135, i32 0, i32 9
  %137 = load i32, i32* %136, align 4
  %138 = sub nsw i32 64, %137
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.122, i64 0, i64 0), i32 noundef %138)
  br label %144

139:                                              ; preds = %119
  %140 = load %struct.Member*, %struct.Member** %6, align 8
  %141 = getelementptr inbounds %struct.Member, %struct.Member* %140, i32 0, i32 9
  %142 = load i32, i32* %141, align 4
  %143 = sub nsw i32 64, %142
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.123, i64 0, i64 0), i32 noundef %143)
  br label %144

144:                                              ; preds = %139, %134
  br label %145

145:                                              ; preds = %144, %107
  br label %864

146:                                              ; preds = %1
  %147 = load %struct.Node*, %struct.Node** %2, align 8
  %148 = getelementptr inbounds %struct.Node, %struct.Node* %147, i32 0, i32 4
  %149 = load %struct.Node*, %struct.Node** %148, align 16
  call void @gen_expr(%struct.Node* noundef %149)
  %150 = load %struct.Node*, %struct.Node** %2, align 8
  %151 = getelementptr inbounds %struct.Node, %struct.Node* %150, i32 0, i32 2
  %152 = load %struct.Type*, %struct.Type** %151, align 16
  call void @load(%struct.Type* noundef %152)
  br label %864

153:                                              ; preds = %1
  %154 = load %struct.Node*, %struct.Node** %2, align 8
  %155 = getelementptr inbounds %struct.Node, %struct.Node* %154, i32 0, i32 4
  %156 = load %struct.Node*, %struct.Node** %155, align 16
  call void @gen_addr(%struct.Node* noundef %156)
  br label %864

157:                                              ; preds = %1
  %158 = load %struct.Node*, %struct.Node** %2, align 8
  %159 = getelementptr inbounds %struct.Node, %struct.Node* %158, i32 0, i32 4
  %160 = load %struct.Node*, %struct.Node** %159, align 16
  call void @gen_addr(%struct.Node* noundef %160)
  call void @push()
  %161 = load %struct.Node*, %struct.Node** %2, align 8
  %162 = getelementptr inbounds %struct.Node, %struct.Node* %161, i32 0, i32 5
  %163 = load %struct.Node*, %struct.Node** %162, align 8
  call void @gen_expr(%struct.Node* noundef %163)
  %164 = load %struct.Node*, %struct.Node** %2, align 8
  %165 = getelementptr inbounds %struct.Node, %struct.Node* %164, i32 0, i32 4
  %166 = load %struct.Node*, %struct.Node** %165, align 16
  %167 = getelementptr inbounds %struct.Node, %struct.Node* %166, i32 0, i32 0
  %168 = load i32, i32* %167, align 16
  %169 = icmp eq i32 %168, 19
  br i1 %169, label %170, label %226

170:                                              ; preds = %157
  %171 = load %struct.Node*, %struct.Node** %2, align 8
  %172 = getelementptr inbounds %struct.Node, %struct.Node* %171, i32 0, i32 4
  %173 = load %struct.Node*, %struct.Node** %172, align 16
  %174 = getelementptr inbounds %struct.Node, %struct.Node* %173, i32 0, i32 14
  %175 = load %struct.Member*, %struct.Member** %174, align 16
  %176 = getelementptr inbounds %struct.Member, %struct.Member* %175, i32 0, i32 7
  %177 = load i8, i8* %176, align 4
  %178 = trunc i8 %177 to i1
  br i1 %178, label %179, label %226

179:                                              ; preds = %170
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.124, i64 0, i64 0))
  %180 = load %struct.Node*, %struct.Node** %2, align 8
  %181 = getelementptr inbounds %struct.Node, %struct.Node* %180, i32 0, i32 4
  %182 = load %struct.Node*, %struct.Node** %181, align 16
  %183 = getelementptr inbounds %struct.Node, %struct.Node* %182, i32 0, i32 14
  %184 = load %struct.Member*, %struct.Member** %183, align 16
  store %struct.Member* %184, %struct.Member** %7, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.125, i64 0, i64 0))
  %185 = load %struct.Member*, %struct.Member** %7, align 8
  %186 = getelementptr inbounds %struct.Member, %struct.Member* %185, i32 0, i32 9
  %187 = load i32, i32* %186, align 4
  %188 = icmp sge i32 %187, 32
  br i1 %188, label %189, label %196

189:                                              ; preds = %179
  %190 = load %struct.Member*, %struct.Member** %7, align 8
  %191 = getelementptr inbounds %struct.Member, %struct.Member* %190, i32 0, i32 9
  %192 = load i32, i32* %191, align 4
  %193 = zext i32 %192 to i64
  %194 = shl i64 1, %193
  %195 = sub nsw i64 %194, 1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.112, i64 0, i64 0), i64 noundef %195)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.126, i64 0, i64 0))
  br label %203

196:                                              ; preds = %179
  %197 = load %struct.Member*, %struct.Member** %7, align 8
  %198 = getelementptr inbounds %struct.Member, %struct.Member* %197, i32 0, i32 9
  %199 = load i32, i32* %198, align 4
  %200 = zext i32 %199 to i64
  %201 = shl i64 1, %200
  %202 = sub nsw i64 %201, 1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.127, i64 0, i64 0), i64 noundef %202)
  br label %203

203:                                              ; preds = %196, %189
  %204 = load %struct.Member*, %struct.Member** %7, align 8
  %205 = getelementptr inbounds %struct.Member, %struct.Member* %204, i32 0, i32 8
  %206 = load i32, i32* %205, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.128, i64 0, i64 0), i32 noundef %206)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.129, i64 0, i64 0))
  %207 = load %struct.Member*, %struct.Member** %7, align 8
  %208 = getelementptr inbounds %struct.Member, %struct.Member* %207, i32 0, i32 1
  %209 = load %struct.Type*, %struct.Type** %208, align 8
  call void @load(%struct.Type* noundef %209)
  %210 = load %struct.Member*, %struct.Member** %7, align 8
  %211 = getelementptr inbounds %struct.Member, %struct.Member* %210, i32 0, i32 9
  %212 = load i32, i32* %211, align 4
  %213 = zext i32 %212 to i64
  %214 = shl i64 1, %213
  %215 = sub nsw i64 %214, 1
  %216 = load %struct.Member*, %struct.Member** %7, align 8
  %217 = getelementptr inbounds %struct.Member, %struct.Member* %216, i32 0, i32 8
  %218 = load i32, i32* %217, align 8
  %219 = zext i32 %218 to i64
  %220 = shl i64 %215, %219
  store i64 %220, i64* %8, align 8
  %221 = load i64, i64* %8, align 8
  %222 = xor i64 %221, -1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.130, i64 0, i64 0), i64 noundef %222)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.132, i64 0, i64 0))
  %223 = load %struct.Node*, %struct.Node** %2, align 8
  %224 = getelementptr inbounds %struct.Node, %struct.Node* %223, i32 0, i32 2
  %225 = load %struct.Type*, %struct.Type** %224, align 16
  call void @store(%struct.Type* noundef %225)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133, i64 0, i64 0))
  br label %864

226:                                              ; preds = %170, %157
  %227 = load %struct.Node*, %struct.Node** %2, align 8
  %228 = getelementptr inbounds %struct.Node, %struct.Node* %227, i32 0, i32 2
  %229 = load %struct.Type*, %struct.Type** %228, align 16
  call void @store(%struct.Type* noundef %229)
  br label %864

230:                                              ; preds = %1
  %231 = load %struct.Node*, %struct.Node** %2, align 8
  %232 = getelementptr inbounds %struct.Node, %struct.Node* %231, i32 0, i32 13
  %233 = load %struct.Node*, %struct.Node** %232, align 8
  store %struct.Node* %233, %struct.Node** %9, align 8
  br label %234

234:                                              ; preds = %239, %230
  %235 = load %struct.Node*, %struct.Node** %9, align 8
  %236 = icmp ne %struct.Node* %235, null
  br i1 %236, label %237, label %243

237:                                              ; preds = %234
  %238 = load %struct.Node*, %struct.Node** %9, align 8
  call void @gen_stmt(%struct.Node* noundef %238)
  br label %239

239:                                              ; preds = %237
  %240 = load %struct.Node*, %struct.Node** %9, align 8
  %241 = getelementptr inbounds %struct.Node, %struct.Node* %240, i32 0, i32 1
  %242 = load %struct.Node*, %struct.Node** %241, align 8
  store %struct.Node* %242, %struct.Node** %9, align 8
  br label %234, !llvm.loop !21

243:                                              ; preds = %234
  br label %864

244:                                              ; preds = %1
  %245 = load %struct.Node*, %struct.Node** %2, align 8
  %246 = getelementptr inbounds %struct.Node, %struct.Node* %245, i32 0, i32 4
  %247 = load %struct.Node*, %struct.Node** %246, align 16
  call void @gen_expr(%struct.Node* noundef %247)
  %248 = load %struct.Node*, %struct.Node** %2, align 8
  %249 = getelementptr inbounds %struct.Node, %struct.Node* %248, i32 0, i32 5
  %250 = load %struct.Node*, %struct.Node** %249, align 8
  call void @gen_expr(%struct.Node* noundef %250)
  br label %864

251:                                              ; preds = %1
  %252 = load %struct.Node*, %struct.Node** %2, align 8
  %253 = getelementptr inbounds %struct.Node, %struct.Node* %252, i32 0, i32 4
  %254 = load %struct.Node*, %struct.Node** %253, align 16
  call void @gen_expr(%struct.Node* noundef %254)
  %255 = load %struct.Node*, %struct.Node** %2, align 8
  %256 = getelementptr inbounds %struct.Node, %struct.Node* %255, i32 0, i32 4
  %257 = load %struct.Node*, %struct.Node** %256, align 16
  %258 = getelementptr inbounds %struct.Node, %struct.Node* %257, i32 0, i32 2
  %259 = load %struct.Type*, %struct.Type** %258, align 16
  %260 = load %struct.Node*, %struct.Node** %2, align 8
  %261 = getelementptr inbounds %struct.Node, %struct.Node* %260, i32 0, i32 2
  %262 = load %struct.Type*, %struct.Type** %261, align 16
  call void @cast(%struct.Type* noundef %259, %struct.Type* noundef %262)
  br label %864

263:                                              ; preds = %1
  %264 = load %struct.Node*, %struct.Node** %2, align 8
  %265 = getelementptr inbounds %struct.Node, %struct.Node* %264, i32 0, i32 33
  %266 = load %struct.Obj*, %struct.Obj** %265, align 8
  %267 = getelementptr inbounds %struct.Obj, %struct.Obj* %266, i32 0, i32 3
  %268 = load %struct.Type*, %struct.Type** %267, align 8
  %269 = getelementptr inbounds %struct.Type, %struct.Type* %268, i32 0, i32 1
  %270 = load i32, i32* %269, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.134, i64 0, i64 0), i32 noundef %270)
  %271 = load %struct.Node*, %struct.Node** %2, align 8
  %272 = getelementptr inbounds %struct.Node, %struct.Node* %271, i32 0, i32 33
  %273 = load %struct.Obj*, %struct.Obj** %272, align 8
  %274 = getelementptr inbounds %struct.Obj, %struct.Obj* %273, i32 0, i32 7
  %275 = load i32, i32* %274, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.135, i64 0, i64 0), i32 noundef %275)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.136, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.137, i64 0, i64 0))
  br label %864

276:                                              ; preds = %1
  %277 = call i32 @count()
  store i32 %277, i32* %10, align 4
  %278 = load %struct.Node*, %struct.Node** %2, align 8
  %279 = getelementptr inbounds %struct.Node, %struct.Node* %278, i32 0, i32 6
  %280 = load %struct.Node*, %struct.Node** %279, align 16
  call void @gen_expr(%struct.Node* noundef %280)
  %281 = load %struct.Node*, %struct.Node** %2, align 8
  %282 = getelementptr inbounds %struct.Node, %struct.Node* %281, i32 0, i32 6
  %283 = load %struct.Node*, %struct.Node** %282, align 16
  %284 = getelementptr inbounds %struct.Node, %struct.Node* %283, i32 0, i32 2
  %285 = load %struct.Type*, %struct.Type** %284, align 16
  call void @cmp_zero(%struct.Type* noundef %285)
  %286 = load i32, i32* %10, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.138, i64 0, i64 0), i32 noundef %286)
  %287 = load %struct.Node*, %struct.Node** %2, align 8
  %288 = getelementptr inbounds %struct.Node, %struct.Node* %287, i32 0, i32 7
  %289 = load %struct.Node*, %struct.Node** %288, align 8
  call void @gen_expr(%struct.Node* noundef %289)
  %290 = load i32, i32* %10, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i64 0, i64 0), i32 noundef %290)
  %291 = load i32, i32* %10, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), i32 noundef %291)
  %292 = load %struct.Node*, %struct.Node** %2, align 8
  %293 = getelementptr inbounds %struct.Node, %struct.Node* %292, i32 0, i32 8
  %294 = load %struct.Node*, %struct.Node** %293, align 16
  call void @gen_expr(%struct.Node* noundef %294)
  %295 = load i32, i32* %10, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i32 noundef %295)
  br label %864

296:                                              ; preds = %1
  %297 = load %struct.Node*, %struct.Node** %2, align 8
  %298 = getelementptr inbounds %struct.Node, %struct.Node* %297, i32 0, i32 4
  %299 = load %struct.Node*, %struct.Node** %298, align 16
  call void @gen_expr(%struct.Node* noundef %299)
  %300 = load %struct.Node*, %struct.Node** %2, align 8
  %301 = getelementptr inbounds %struct.Node, %struct.Node* %300, i32 0, i32 4
  %302 = load %struct.Node*, %struct.Node** %301, align 16
  %303 = getelementptr inbounds %struct.Node, %struct.Node* %302, i32 0, i32 2
  %304 = load %struct.Type*, %struct.Type** %303, align 16
  call void @cmp_zero(%struct.Type* noundef %304)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.139, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.140, i64 0, i64 0))
  br label %864

305:                                              ; preds = %1
  %306 = load %struct.Node*, %struct.Node** %2, align 8
  %307 = getelementptr inbounds %struct.Node, %struct.Node* %306, i32 0, i32 4
  %308 = load %struct.Node*, %struct.Node** %307, align 16
  call void @gen_expr(%struct.Node* noundef %308)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.141, i64 0, i64 0))
  br label %864

309:                                              ; preds = %1
  %310 = call i32 @count()
  store i32 %310, i32* %11, align 4
  %311 = load %struct.Node*, %struct.Node** %2, align 8
  %312 = getelementptr inbounds %struct.Node, %struct.Node* %311, i32 0, i32 4
  %313 = load %struct.Node*, %struct.Node** %312, align 16
  call void @gen_expr(%struct.Node* noundef %313)
  %314 = load %struct.Node*, %struct.Node** %2, align 8
  %315 = getelementptr inbounds %struct.Node, %struct.Node* %314, i32 0, i32 4
  %316 = load %struct.Node*, %struct.Node** %315, align 16
  %317 = getelementptr inbounds %struct.Node, %struct.Node* %316, i32 0, i32 2
  %318 = load %struct.Type*, %struct.Type** %317, align 16
  call void @cmp_zero(%struct.Type* noundef %318)
  %319 = load i32, i32* %11, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i64 0, i64 0), i32 noundef %319)
  %320 = load %struct.Node*, %struct.Node** %2, align 8
  %321 = getelementptr inbounds %struct.Node, %struct.Node* %320, i32 0, i32 5
  %322 = load %struct.Node*, %struct.Node** %321, align 8
  call void @gen_expr(%struct.Node* noundef %322)
  %323 = load %struct.Node*, %struct.Node** %2, align 8
  %324 = getelementptr inbounds %struct.Node, %struct.Node* %323, i32 0, i32 5
  %325 = load %struct.Node*, %struct.Node** %324, align 8
  %326 = getelementptr inbounds %struct.Node, %struct.Node* %325, i32 0, i32 2
  %327 = load %struct.Type*, %struct.Type** %326, align 16
  call void @cmp_zero(%struct.Type* noundef %327)
  %328 = load i32, i32* %11, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i64 0, i64 0), i32 noundef %328)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.113, i64 0, i64 0))
  %329 = load i32, i32* %11, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i64 0, i64 0), i32 noundef %329)
  %330 = load i32, i32* %11, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.143, i64 0, i64 0), i32 noundef %330)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i64 0, i64 0))
  %331 = load i32, i32* %11, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i32 noundef %331)
  br label %864

332:                                              ; preds = %1
  %333 = call i32 @count()
  store i32 %333, i32* %12, align 4
  %334 = load %struct.Node*, %struct.Node** %2, align 8
  %335 = getelementptr inbounds %struct.Node, %struct.Node* %334, i32 0, i32 4
  %336 = load %struct.Node*, %struct.Node** %335, align 16
  call void @gen_expr(%struct.Node* noundef %336)
  %337 = load %struct.Node*, %struct.Node** %2, align 8
  %338 = getelementptr inbounds %struct.Node, %struct.Node* %337, i32 0, i32 4
  %339 = load %struct.Node*, %struct.Node** %338, align 16
  %340 = getelementptr inbounds %struct.Node, %struct.Node* %339, i32 0, i32 2
  %341 = load %struct.Type*, %struct.Type** %340, align 16
  call void @cmp_zero(%struct.Type* noundef %341)
  %342 = load i32, i32* %12, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.144, i64 0, i64 0), i32 noundef %342)
  %343 = load %struct.Node*, %struct.Node** %2, align 8
  %344 = getelementptr inbounds %struct.Node, %struct.Node* %343, i32 0, i32 5
  %345 = load %struct.Node*, %struct.Node** %344, align 8
  call void @gen_expr(%struct.Node* noundef %345)
  %346 = load %struct.Node*, %struct.Node** %2, align 8
  %347 = getelementptr inbounds %struct.Node, %struct.Node* %346, i32 0, i32 5
  %348 = load %struct.Node*, %struct.Node** %347, align 8
  %349 = getelementptr inbounds %struct.Node, %struct.Node* %348, i32 0, i32 2
  %350 = load %struct.Type*, %struct.Type** %349, align 16
  call void @cmp_zero(%struct.Type* noundef %350)
  %351 = load i32, i32* %12, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.144, i64 0, i64 0), i32 noundef %351)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i64 0, i64 0))
  %352 = load i32, i32* %12, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i64 0, i64 0), i32 noundef %352)
  %353 = load i32, i32* %12, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.145, i64 0, i64 0), i32 noundef %353)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.113, i64 0, i64 0))
  %354 = load i32, i32* %12, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), i32 noundef %354)
  br label %864

355:                                              ; preds = %1
  %356 = load %struct.Node*, %struct.Node** %2, align 8
  %357 = getelementptr inbounds %struct.Node, %struct.Node* %356, i32 0, i32 4
  %358 = load %struct.Node*, %struct.Node** %357, align 16
  %359 = getelementptr inbounds %struct.Node, %struct.Node* %358, i32 0, i32 0
  %360 = load i32, i32* %359, align 16
  %361 = icmp eq i32 %360, 40
  br i1 %361, label %362, label %376

362:                                              ; preds = %355
  %363 = load %struct.Node*, %struct.Node** %2, align 8
  %364 = getelementptr inbounds %struct.Node, %struct.Node* %363, i32 0, i32 4
  %365 = load %struct.Node*, %struct.Node** %364, align 16
  %366 = getelementptr inbounds %struct.Node, %struct.Node* %365, i32 0, i32 33
  %367 = load %struct.Obj*, %struct.Obj** %366, align 8
  %368 = getelementptr inbounds %struct.Obj, %struct.Obj* %367, i32 0, i32 1
  %369 = load i8*, i8** %368, align 8
  %370 = call i32 @strcmp(i8* noundef %369, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i64 0, i64 0)) #13
  %371 = icmp ne i32 %370, 0
  br i1 %371, label %376, label %372

372:                                              ; preds = %362
  %373 = load %struct.Node*, %struct.Node** %2, align 8
  %374 = getelementptr inbounds %struct.Node, %struct.Node* %373, i32 0, i32 16
  %375 = load %struct.Node*, %struct.Node** %374, align 16
  call void @gen_expr(%struct.Node* noundef %375)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.125, i64 0, i64 0))
  call void @builtin_alloca()
  br label %864

376:                                              ; preds = %362, %355
  %377 = load %struct.Node*, %struct.Node** %2, align 8
  %378 = call i32 @push_args(%struct.Node* noundef %377)
  store i32 %378, i32* %13, align 4
  %379 = load %struct.Node*, %struct.Node** %2, align 8
  %380 = getelementptr inbounds %struct.Node, %struct.Node* %379, i32 0, i32 4
  %381 = load %struct.Node*, %struct.Node** %380, align 16
  call void @gen_expr(%struct.Node* noundef %381)
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %382 = load %struct.Node*, %struct.Node** %2, align 8
  %383 = getelementptr inbounds %struct.Node, %struct.Node* %382, i32 0, i32 18
  %384 = load %struct.Obj*, %struct.Obj** %383, align 16
  %385 = icmp ne %struct.Obj* %384, null
  br i1 %385, label %386, label %399

386:                                              ; preds = %376
  %387 = load %struct.Node*, %struct.Node** %2, align 8
  %388 = getelementptr inbounds %struct.Node, %struct.Node* %387, i32 0, i32 2
  %389 = load %struct.Type*, %struct.Type** %388, align 16
  %390 = getelementptr inbounds %struct.Type, %struct.Type* %389, i32 0, i32 1
  %391 = load i32, i32* %390, align 4
  %392 = icmp sgt i32 %391, 16
  br i1 %392, label %393, label %399

393:                                              ; preds = %386
  %394 = load i32, i32* %14, align 4
  %395 = add nsw i32 %394, 1
  store i32 %395, i32* %14, align 4
  %396 = sext i32 %394 to i64
  %397 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg64, i64 0, i64 %396
  %398 = load i8*, i8** %397, align 8
  call void @pop(i8* noundef %398)
  br label %399

399:                                              ; preds = %393, %386, %376
  %400 = load %struct.Node*, %struct.Node** %2, align 8
  %401 = getelementptr inbounds %struct.Node, %struct.Node* %400, i32 0, i32 16
  %402 = load %struct.Node*, %struct.Node** %401, align 16
  store %struct.Node* %402, %struct.Node** %16, align 8
  br label %403

403:                                              ; preds = %500, %399
  %404 = load %struct.Node*, %struct.Node** %16, align 8
  %405 = icmp ne %struct.Node* %404, null
  br i1 %405, label %406, label %504

406:                                              ; preds = %403
  %407 = load %struct.Node*, %struct.Node** %16, align 8
  %408 = getelementptr inbounds %struct.Node, %struct.Node* %407, i32 0, i32 2
  %409 = load %struct.Type*, %struct.Type** %408, align 16
  store %struct.Type* %409, %struct.Type** %17, align 8
  %410 = load %struct.Type*, %struct.Type** %17, align 8
  %411 = getelementptr inbounds %struct.Type, %struct.Type* %410, i32 0, i32 0
  %412 = load i32, i32* %411, align 8
  switch i32 %412, label %489 [
    i32 14, label %413
    i32 15, label %413
    i32 6, label %481
    i32 7, label %481
    i32 8, label %488
  ]

413:                                              ; preds = %406, %406
  %414 = load %struct.Type*, %struct.Type** %17, align 8
  %415 = getelementptr inbounds %struct.Type, %struct.Type* %414, i32 0, i32 1
  %416 = load i32, i32* %415, align 4
  %417 = icmp sgt i32 %416, 16
  br i1 %417, label %418, label %419

418:                                              ; preds = %413
  br label %500

419:                                              ; preds = %413
  %420 = load %struct.Type*, %struct.Type** %17, align 8
  %421 = call zeroext i1 @has_flonum1(%struct.Type* noundef %420)
  %422 = zext i1 %421 to i8
  store i8 %422, i8* %18, align 1
  %423 = load %struct.Type*, %struct.Type** %17, align 8
  %424 = call zeroext i1 @has_flonum2(%struct.Type* noundef %423)
  %425 = zext i1 %424 to i8
  store i8 %425, i8* %19, align 1
  %426 = load i32, i32* %15, align 4
  %427 = load i8, i8* %18, align 1
  %428 = trunc i8 %427 to i1
  %429 = zext i1 %428 to i32
  %430 = add nsw i32 %426, %429
  %431 = load i8, i8* %19, align 1
  %432 = trunc i8 %431 to i1
  %433 = zext i1 %432 to i32
  %434 = add nsw i32 %430, %433
  %435 = icmp slt i32 %434, 8
  br i1 %435, label %436, label %480

436:                                              ; preds = %419
  %437 = load i32, i32* %14, align 4
  %438 = load i8, i8* %18, align 1
  %439 = trunc i8 %438 to i1
  %440 = xor i1 %439, true
  %441 = zext i1 %440 to i32
  %442 = add nsw i32 %437, %441
  %443 = load i8, i8* %19, align 1
  %444 = trunc i8 %443 to i1
  %445 = xor i1 %444, true
  %446 = zext i1 %445 to i32
  %447 = add nsw i32 %442, %446
  %448 = icmp slt i32 %447, 6
  br i1 %448, label %449, label %480

449:                                              ; preds = %436
  %450 = load i8, i8* %18, align 1
  %451 = trunc i8 %450 to i1
  br i1 %451, label %452, label %455

452:                                              ; preds = %449
  %453 = load i32, i32* %15, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %15, align 4
  call void @popf(i32 noundef %453)
  br label %461

455:                                              ; preds = %449
  %456 = load i32, i32* %14, align 4
  %457 = add nsw i32 %456, 1
  store i32 %457, i32* %14, align 4
  %458 = sext i32 %456 to i64
  %459 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg64, i64 0, i64 %458
  %460 = load i8*, i8** %459, align 8
  call void @pop(i8* noundef %460)
  br label %461

461:                                              ; preds = %455, %452
  %462 = load %struct.Type*, %struct.Type** %17, align 8
  %463 = getelementptr inbounds %struct.Type, %struct.Type* %462, i32 0, i32 1
  %464 = load i32, i32* %463, align 4
  %465 = icmp sgt i32 %464, 8
  br i1 %465, label %466, label %479

466:                                              ; preds = %461
  %467 = load i8, i8* %19, align 1
  %468 = trunc i8 %467 to i1
  br i1 %468, label %469, label %472

469:                                              ; preds = %466
  %470 = load i32, i32* %15, align 4
  %471 = add nsw i32 %470, 1
  store i32 %471, i32* %15, align 4
  call void @popf(i32 noundef %470)
  br label %478

472:                                              ; preds = %466
  %473 = load i32, i32* %14, align 4
  %474 = add nsw i32 %473, 1
  store i32 %474, i32* %14, align 4
  %475 = sext i32 %473 to i64
  %476 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg64, i64 0, i64 %475
  %477 = load i8*, i8** %476, align 8
  call void @pop(i8* noundef %477)
  br label %478

478:                                              ; preds = %472, %469
  br label %479

479:                                              ; preds = %478, %461
  br label %480

480:                                              ; preds = %479, %436, %419
  br label %499

481:                                              ; preds = %406, %406
  %482 = load i32, i32* %15, align 4
  %483 = icmp slt i32 %482, 8
  br i1 %483, label %484, label %487

484:                                              ; preds = %481
  %485 = load i32, i32* %15, align 4
  %486 = add nsw i32 %485, 1
  store i32 %486, i32* %15, align 4
  call void @popf(i32 noundef %485)
  br label %487

487:                                              ; preds = %484, %481
  br label %499

488:                                              ; preds = %406
  br label %499

489:                                              ; preds = %406
  %490 = load i32, i32* %14, align 4
  %491 = icmp slt i32 %490, 6
  br i1 %491, label %492, label %498

492:                                              ; preds = %489
  %493 = load i32, i32* %14, align 4
  %494 = add nsw i32 %493, 1
  store i32 %494, i32* %14, align 4
  %495 = sext i32 %493 to i64
  %496 = getelementptr inbounds [6 x i8*], [6 x i8*]* @argreg64, i64 0, i64 %495
  %497 = load i8*, i8** %496, align 8
  call void @pop(i8* noundef %497)
  br label %498

498:                                              ; preds = %492, %489
  br label %499

499:                                              ; preds = %498, %488, %487, %480
  br label %500

500:                                              ; preds = %499, %418
  %501 = load %struct.Node*, %struct.Node** %16, align 8
  %502 = getelementptr inbounds %struct.Node, %struct.Node* %501, i32 0, i32 1
  %503 = load %struct.Node*, %struct.Node** %502, align 8
  store %struct.Node* %503, %struct.Node** %16, align 8
  br label %403, !llvm.loop !22

504:                                              ; preds = %403
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.147, i64 0, i64 0))
  %505 = load i32, i32* %15, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.148, i64 0, i64 0), i32 noundef %505)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i64 0, i64 0))
  %506 = load i32, i32* %13, align 4
  %507 = mul nsw i32 %506, 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.150, i64 0, i64 0), i32 noundef %507)
  %508 = load i32, i32* %13, align 4
  %509 = load i32, i32* @depth, align 4
  %510 = sub nsw i32 %509, %508
  store i32 %510, i32* @depth, align 4
  %511 = load %struct.Node*, %struct.Node** %2, align 8
  %512 = getelementptr inbounds %struct.Node, %struct.Node* %511, i32 0, i32 2
  %513 = load %struct.Type*, %struct.Type** %512, align 16
  %514 = getelementptr inbounds %struct.Type, %struct.Type* %513, i32 0, i32 0
  %515 = load i32, i32* %514, align 8
  switch i32 %515, label %537 [
    i32 1, label %516
    i32 2, label %517
    i32 3, label %527
  ]

516:                                              ; preds = %504
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.151, i64 0, i64 0))
  br label %864

517:                                              ; preds = %504
  %518 = load %struct.Node*, %struct.Node** %2, align 8
  %519 = getelementptr inbounds %struct.Node, %struct.Node* %518, i32 0, i32 2
  %520 = load %struct.Type*, %struct.Type** %519, align 16
  %521 = getelementptr inbounds %struct.Type, %struct.Type* %520, i32 0, i32 3
  %522 = load i8, i8* %521, align 4
  %523 = trunc i8 %522 to i1
  br i1 %523, label %524, label %525

524:                                              ; preds = %517
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.152, i64 0, i64 0))
  br label %526

525:                                              ; preds = %517
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.153, i64 0, i64 0))
  br label %526

526:                                              ; preds = %525, %524
  br label %864

527:                                              ; preds = %504
  %528 = load %struct.Node*, %struct.Node** %2, align 8
  %529 = getelementptr inbounds %struct.Node, %struct.Node* %528, i32 0, i32 2
  %530 = load %struct.Type*, %struct.Type** %529, align 16
  %531 = getelementptr inbounds %struct.Type, %struct.Type* %530, i32 0, i32 3
  %532 = load i8, i8* %531, align 4
  %533 = trunc i8 %532 to i1
  br i1 %533, label %534, label %535

534:                                              ; preds = %527
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.154, i64 0, i64 0))
  br label %536

535:                                              ; preds = %527
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.155, i64 0, i64 0))
  br label %536

536:                                              ; preds = %535, %534
  br label %864

537:                                              ; preds = %504
  %538 = load %struct.Node*, %struct.Node** %2, align 8
  %539 = getelementptr inbounds %struct.Node, %struct.Node* %538, i32 0, i32 18
  %540 = load %struct.Obj*, %struct.Obj** %539, align 16
  %541 = icmp ne %struct.Obj* %540, null
  br i1 %541, label %542, label %558

542:                                              ; preds = %537
  %543 = load %struct.Node*, %struct.Node** %2, align 8
  %544 = getelementptr inbounds %struct.Node, %struct.Node* %543, i32 0, i32 2
  %545 = load %struct.Type*, %struct.Type** %544, align 16
  %546 = getelementptr inbounds %struct.Type, %struct.Type* %545, i32 0, i32 1
  %547 = load i32, i32* %546, align 4
  %548 = icmp sle i32 %547, 16
  br i1 %548, label %549, label %558

549:                                              ; preds = %542
  %550 = load %struct.Node*, %struct.Node** %2, align 8
  %551 = getelementptr inbounds %struct.Node, %struct.Node* %550, i32 0, i32 18
  %552 = load %struct.Obj*, %struct.Obj** %551, align 16
  call void @copy_ret_buffer(%struct.Obj* noundef %552)
  %553 = load %struct.Node*, %struct.Node** %2, align 8
  %554 = getelementptr inbounds %struct.Node, %struct.Node* %553, i32 0, i32 18
  %555 = load %struct.Obj*, %struct.Obj** %554, align 16
  %556 = getelementptr inbounds %struct.Obj, %struct.Obj* %555, i32 0, i32 7
  %557 = load i32, i32* %556, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0), i32 noundef %557)
  br label %558

558:                                              ; preds = %549, %542, %537
  br label %864

559:                                              ; preds = %1
  %560 = load %struct.Node*, %struct.Node** %2, align 8
  %561 = getelementptr inbounds %struct.Node, %struct.Node* %560, i32 0, i32 20
  %562 = load i8*, i8** %561, align 16
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.157, i64 0, i64 0), i8* noundef %562)
  br label %864

563:                                              ; preds = %1
  %564 = load %struct.Node*, %struct.Node** %2, align 8
  %565 = getelementptr inbounds %struct.Node, %struct.Node* %564, i32 0, i32 27
  %566 = load %struct.Node*, %struct.Node** %565, align 8
  call void @gen_expr(%struct.Node* noundef %566)
  call void @push()
  %567 = load %struct.Node*, %struct.Node** %2, align 8
  %568 = getelementptr inbounds %struct.Node, %struct.Node* %567, i32 0, i32 29
  %569 = load %struct.Node*, %struct.Node** %568, align 8
  call void @gen_expr(%struct.Node* noundef %569)
  call void @push()
  %570 = load %struct.Node*, %struct.Node** %2, align 8
  %571 = getelementptr inbounds %struct.Node, %struct.Node* %570, i32 0, i32 28
  %572 = load %struct.Node*, %struct.Node** %571, align 16
  call void @gen_expr(%struct.Node* noundef %572)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.124, i64 0, i64 0))
  %573 = load %struct.Node*, %struct.Node** %2, align 8
  %574 = getelementptr inbounds %struct.Node, %struct.Node* %573, i32 0, i32 28
  %575 = load %struct.Node*, %struct.Node** %574, align 16
  %576 = getelementptr inbounds %struct.Node, %struct.Node* %575, i32 0, i32 2
  %577 = load %struct.Type*, %struct.Type** %576, align 16
  %578 = getelementptr inbounds %struct.Type, %struct.Type* %577, i32 0, i32 8
  %579 = load %struct.Type*, %struct.Type** %578, align 8
  call void @load(%struct.Type* noundef %579)
  call void @pop(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  call void @pop(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0))
  %580 = load %struct.Node*, %struct.Node** %2, align 8
  %581 = getelementptr inbounds %struct.Node, %struct.Node* %580, i32 0, i32 27
  %582 = load %struct.Node*, %struct.Node** %581, align 8
  %583 = getelementptr inbounds %struct.Node, %struct.Node* %582, i32 0, i32 2
  %584 = load %struct.Type*, %struct.Type** %583, align 16
  %585 = getelementptr inbounds %struct.Type, %struct.Type* %584, i32 0, i32 8
  %586 = load %struct.Type*, %struct.Type** %585, align 8
  %587 = getelementptr inbounds %struct.Type, %struct.Type* %586, i32 0, i32 1
  %588 = load i32, i32* %587, align 4
  store i32 %588, i32* %20, align 4
  %589 = load i32, i32* %20, align 4
  %590 = call i8* @reg_dx(i32 noundef %589)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.158, i64 0, i64 0), i8* noundef %590)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.159, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.160, i64 0, i64 0))
  %591 = load i32, i32* %20, align 4
  %592 = call i8* @reg_ax(i32 noundef %591)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.161, i64 0, i64 0), i8* noundef %592)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.162, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.163, i64 0, i64 0))
  br label %864

593:                                              ; preds = %1
  %594 = load %struct.Node*, %struct.Node** %2, align 8
  %595 = getelementptr inbounds %struct.Node, %struct.Node* %594, i32 0, i32 4
  %596 = load %struct.Node*, %struct.Node** %595, align 16
  call void @gen_expr(%struct.Node* noundef %596)
  call void @push()
  %597 = load %struct.Node*, %struct.Node** %2, align 8
  %598 = getelementptr inbounds %struct.Node, %struct.Node* %597, i32 0, i32 5
  %599 = load %struct.Node*, %struct.Node** %598, align 8
  call void @gen_expr(%struct.Node* noundef %599)
  call void @pop(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0))
  %600 = load %struct.Node*, %struct.Node** %2, align 8
  %601 = getelementptr inbounds %struct.Node, %struct.Node* %600, i32 0, i32 4
  %602 = load %struct.Node*, %struct.Node** %601, align 16
  %603 = getelementptr inbounds %struct.Node, %struct.Node* %602, i32 0, i32 2
  %604 = load %struct.Type*, %struct.Type** %603, align 16
  %605 = getelementptr inbounds %struct.Type, %struct.Type* %604, i32 0, i32 8
  %606 = load %struct.Type*, %struct.Type** %605, align 8
  %607 = getelementptr inbounds %struct.Type, %struct.Type* %606, i32 0, i32 1
  %608 = load i32, i32* %607, align 4
  store i32 %608, i32* %21, align 4
  %609 = load i32, i32* %21, align 4
  %610 = call i8* @reg_ax(i32 noundef %609)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.164, i64 0, i64 0), i8* noundef %610)
  br label %864

611:                                              ; preds = %1
  %612 = load %struct.Node*, %struct.Node** %2, align 8
  %613 = getelementptr inbounds %struct.Node, %struct.Node* %612, i32 0, i32 4
  %614 = load %struct.Node*, %struct.Node** %613, align 16
  %615 = getelementptr inbounds %struct.Node, %struct.Node* %614, i32 0, i32 2
  %616 = load %struct.Type*, %struct.Type** %615, align 16
  %617 = getelementptr inbounds %struct.Type, %struct.Type* %616, i32 0, i32 0
  %618 = load i32, i32* %617, align 8
  switch i32 %618, label %714 [
    i32 6, label %619
    i32 7, label %619
    i32 8, label %674
  ]

619:                                              ; preds = %611, %611
  %620 = load %struct.Node*, %struct.Node** %2, align 8
  %621 = getelementptr inbounds %struct.Node, %struct.Node* %620, i32 0, i32 5
  %622 = load %struct.Node*, %struct.Node** %621, align 8
  call void @gen_expr(%struct.Node* noundef %622)
  call void @pushf()
  %623 = load %struct.Node*, %struct.Node** %2, align 8
  %624 = getelementptr inbounds %struct.Node, %struct.Node* %623, i32 0, i32 4
  %625 = load %struct.Node*, %struct.Node** %624, align 16
  call void @gen_expr(%struct.Node* noundef %625)
  call void @popf(i32 noundef 1)
  %626 = load %struct.Node*, %struct.Node** %2, align 8
  %627 = getelementptr inbounds %struct.Node, %struct.Node* %626, i32 0, i32 4
  %628 = load %struct.Node*, %struct.Node** %627, align 16
  %629 = getelementptr inbounds %struct.Node, %struct.Node* %628, i32 0, i32 2
  %630 = load %struct.Type*, %struct.Type** %629, align 16
  %631 = getelementptr inbounds %struct.Type, %struct.Type* %630, i32 0, i32 0
  %632 = load i32, i32* %631, align 8
  %633 = icmp eq i32 %632, 6
  %634 = zext i1 %633 to i64
  %635 = select i1 %633, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i64 0, i64 0)
  store i8* %635, i8** %22, align 8
  %636 = load %struct.Node*, %struct.Node** %2, align 8
  %637 = getelementptr inbounds %struct.Node, %struct.Node* %636, i32 0, i32 0
  %638 = load i32, i32* %637, align 16
  switch i32 %638, label %670 [
    i32 1, label %639
    i32 2, label %641
    i32 3, label %643
    i32 4, label %645
    i32 12, label %647
    i32 13, label %647
    i32 14, label %647
    i32 15, label %647
  ]

639:                                              ; preds = %619
  %640 = load i8*, i8** %22, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.167, i64 0, i64 0), i8* noundef %640)
  br label %864

641:                                              ; preds = %619
  %642 = load i8*, i8** %22, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.168, i64 0, i64 0), i8* noundef %642)
  br label %864

643:                                              ; preds = %619
  %644 = load i8*, i8** %22, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.169, i64 0, i64 0), i8* noundef %644)
  br label %864

645:                                              ; preds = %619
  %646 = load i8*, i8** %22, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.170, i64 0, i64 0), i8* noundef %646)
  br label %864

647:                                              ; preds = %619, %619, %619, %619
  %648 = load i8*, i8** %22, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.171, i64 0, i64 0), i8* noundef %648)
  %649 = load %struct.Node*, %struct.Node** %2, align 8
  %650 = getelementptr inbounds %struct.Node, %struct.Node* %649, i32 0, i32 0
  %651 = load i32, i32* %650, align 16
  %652 = icmp eq i32 %651, 12
  br i1 %652, label %653, label %654

653:                                              ; preds = %647
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.139, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.172, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.173, i64 0, i64 0))
  br label %669

654:                                              ; preds = %647
  %655 = load %struct.Node*, %struct.Node** %2, align 8
  %656 = getelementptr inbounds %struct.Node, %struct.Node* %655, i32 0, i32 0
  %657 = load i32, i32* %656, align 16
  %658 = icmp eq i32 %657, 13
  br i1 %658, label %659, label %660

659:                                              ; preds = %654
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.174, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.175, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.176, i64 0, i64 0))
  br label %668

660:                                              ; preds = %654
  %661 = load %struct.Node*, %struct.Node** %2, align 8
  %662 = getelementptr inbounds %struct.Node, %struct.Node* %661, i32 0, i32 0
  %663 = load i32, i32* %662, align 16
  %664 = icmp eq i32 %663, 14
  br i1 %664, label %665, label %666

665:                                              ; preds = %660
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.177, i64 0, i64 0))
  br label %667

666:                                              ; preds = %660
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.178, i64 0, i64 0))
  br label %667

667:                                              ; preds = %666, %665
  br label %668

668:                                              ; preds = %667, %659
  br label %669

669:                                              ; preds = %668, %653
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.179, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.180, i64 0, i64 0))
  br label %864

670:                                              ; preds = %619
  %671 = load %struct.Node*, %struct.Node** %2, align 8
  %672 = getelementptr inbounds %struct.Node, %struct.Node* %671, i32 0, i32 3
  %673 = load %struct.Token*, %struct.Token** %672, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %673, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.181, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

674:                                              ; preds = %611
  %675 = load %struct.Node*, %struct.Node** %2, align 8
  %676 = getelementptr inbounds %struct.Node, %struct.Node* %675, i32 0, i32 4
  %677 = load %struct.Node*, %struct.Node** %676, align 16
  call void @gen_expr(%struct.Node* noundef %677)
  %678 = load %struct.Node*, %struct.Node** %2, align 8
  %679 = getelementptr inbounds %struct.Node, %struct.Node* %678, i32 0, i32 5
  %680 = load %struct.Node*, %struct.Node** %679, align 8
  call void @gen_expr(%struct.Node* noundef %680)
  %681 = load %struct.Node*, %struct.Node** %2, align 8
  %682 = getelementptr inbounds %struct.Node, %struct.Node* %681, i32 0, i32 0
  %683 = load i32, i32* %682, align 16
  switch i32 %683, label %710 [
    i32 1, label %684
    i32 2, label %685
    i32 3, label %686
    i32 4, label %687
    i32 12, label %688
    i32 13, label %688
    i32 14, label %688
    i32 15, label %688
  ]

684:                                              ; preds = %674
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.182, i64 0, i64 0))
  br label %864

685:                                              ; preds = %674
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.183, i64 0, i64 0))
  br label %864

686:                                              ; preds = %674
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.184, i64 0, i64 0))
  br label %864

687:                                              ; preds = %674
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i64 0, i64 0))
  br label %864

688:                                              ; preds = %674, %674, %674, %674
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.186, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.187, i64 0, i64 0))
  %689 = load %struct.Node*, %struct.Node** %2, align 8
  %690 = getelementptr inbounds %struct.Node, %struct.Node* %689, i32 0, i32 0
  %691 = load i32, i32* %690, align 16
  %692 = icmp eq i32 %691, 12
  br i1 %692, label %693, label %694

693:                                              ; preds = %688
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.139, i64 0, i64 0))
  br label %709

694:                                              ; preds = %688
  %695 = load %struct.Node*, %struct.Node** %2, align 8
  %696 = getelementptr inbounds %struct.Node, %struct.Node* %695, i32 0, i32 0
  %697 = load i32, i32* %696, align 16
  %698 = icmp eq i32 %697, 13
  br i1 %698, label %699, label %700

699:                                              ; preds = %694
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.174, i64 0, i64 0))
  br label %708

700:                                              ; preds = %694
  %701 = load %struct.Node*, %struct.Node** %2, align 8
  %702 = getelementptr inbounds %struct.Node, %struct.Node* %701, i32 0, i32 0
  %703 = load i32, i32* %702, align 16
  %704 = icmp eq i32 %703, 14
  br i1 %704, label %705, label %706

705:                                              ; preds = %700
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.177, i64 0, i64 0))
  br label %707

706:                                              ; preds = %700
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.178, i64 0, i64 0))
  br label %707

707:                                              ; preds = %706, %705
  br label %708

708:                                              ; preds = %707, %699
  br label %709

709:                                              ; preds = %708, %693
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.180, i64 0, i64 0))
  br label %864

710:                                              ; preds = %674
  %711 = load %struct.Node*, %struct.Node** %2, align 8
  %712 = getelementptr inbounds %struct.Node, %struct.Node* %711, i32 0, i32 3
  %713 = load %struct.Token*, %struct.Token** %712, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %713, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.181, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

714:                                              ; preds = %611
  %715 = load %struct.Node*, %struct.Node** %2, align 8
  %716 = getelementptr inbounds %struct.Node, %struct.Node* %715, i32 0, i32 5
  %717 = load %struct.Node*, %struct.Node** %716, align 8
  call void @gen_expr(%struct.Node* noundef %717)
  call void @push()
  %718 = load %struct.Node*, %struct.Node** %2, align 8
  %719 = getelementptr inbounds %struct.Node, %struct.Node* %718, i32 0, i32 4
  %720 = load %struct.Node*, %struct.Node** %719, align 16
  call void @gen_expr(%struct.Node* noundef %720)
  call void @pop(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0))
  %721 = load %struct.Node*, %struct.Node** %2, align 8
  %722 = getelementptr inbounds %struct.Node, %struct.Node* %721, i32 0, i32 4
  %723 = load %struct.Node*, %struct.Node** %722, align 16
  %724 = getelementptr inbounds %struct.Node, %struct.Node* %723, i32 0, i32 2
  %725 = load %struct.Type*, %struct.Type** %724, align 16
  %726 = getelementptr inbounds %struct.Type, %struct.Type* %725, i32 0, i32 0
  %727 = load i32, i32* %726, align 8
  %728 = icmp eq i32 %727, 5
  br i1 %728, label %738, label %729

729:                                              ; preds = %714
  %730 = load %struct.Node*, %struct.Node** %2, align 8
  %731 = getelementptr inbounds %struct.Node, %struct.Node* %730, i32 0, i32 4
  %732 = load %struct.Node*, %struct.Node** %731, align 16
  %733 = getelementptr inbounds %struct.Node, %struct.Node* %732, i32 0, i32 2
  %734 = load %struct.Type*, %struct.Type** %733, align 16
  %735 = getelementptr inbounds %struct.Type, %struct.Type* %734, i32 0, i32 8
  %736 = load %struct.Type*, %struct.Type** %735, align 8
  %737 = icmp ne %struct.Type* %736, null
  br i1 %737, label %738, label %739

738:                                              ; preds = %729, %714
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8** %23, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0), i8** %24, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %25, align 8
  br label %740

739:                                              ; preds = %729
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i8** %23, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i8** %24, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %25, align 8
  br label %740

740:                                              ; preds = %739, %738
  %741 = load %struct.Node*, %struct.Node** %2, align 8
  %742 = getelementptr inbounds %struct.Node, %struct.Node* %741, i32 0, i32 0
  %743 = load i32, i32* %742, align 16
  switch i32 %743, label %860 [
    i32 1, label %744
    i32 2, label %747
    i32 3, label %750
    i32 4, label %753
    i32 6, label %753
    i32 7, label %783
    i32 8, label %786
    i32 9, label %789
    i32 12, label %792
    i32 13, label %792
    i32 14, label %792
    i32 15, label %792
    i32 10, label %844
    i32 11, label %846
  ]

744:                                              ; preds = %740
  %745 = load i8*, i8** %24, align 8
  %746 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.188, i64 0, i64 0), i8* noundef %745, i8* noundef %746)
  br label %864

747:                                              ; preds = %740
  %748 = load i8*, i8** %24, align 8
  %749 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.189, i64 0, i64 0), i8* noundef %748, i8* noundef %749)
  br label %864

750:                                              ; preds = %740
  %751 = load i8*, i8** %24, align 8
  %752 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.190, i64 0, i64 0), i8* noundef %751, i8* noundef %752)
  br label %864

753:                                              ; preds = %740, %740
  %754 = load %struct.Node*, %struct.Node** %2, align 8
  %755 = getelementptr inbounds %struct.Node, %struct.Node* %754, i32 0, i32 2
  %756 = load %struct.Type*, %struct.Type** %755, align 16
  %757 = getelementptr inbounds %struct.Type, %struct.Type* %756, i32 0, i32 3
  %758 = load i8, i8* %757, align 4
  %759 = trunc i8 %758 to i1
  br i1 %759, label %760, label %763

760:                                              ; preds = %753
  %761 = load i8*, i8** %25, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.191, i64 0, i64 0), i8* noundef %761)
  %762 = load i8*, i8** %24, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.192, i64 0, i64 0), i8* noundef %762)
  br label %776

763:                                              ; preds = %753
  %764 = load %struct.Node*, %struct.Node** %2, align 8
  %765 = getelementptr inbounds %struct.Node, %struct.Node* %764, i32 0, i32 4
  %766 = load %struct.Node*, %struct.Node** %765, align 16
  %767 = getelementptr inbounds %struct.Node, %struct.Node* %766, i32 0, i32 2
  %768 = load %struct.Type*, %struct.Type** %767, align 16
  %769 = getelementptr inbounds %struct.Type, %struct.Type* %768, i32 0, i32 1
  %770 = load i32, i32* %769, align 4
  %771 = icmp eq i32 %770, 8
  br i1 %771, label %772, label %773

772:                                              ; preds = %763
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.193, i64 0, i64 0))
  br label %774

773:                                              ; preds = %763
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i64 0, i64 0))
  br label %774

774:                                              ; preds = %773, %772
  %775 = load i8*, i8** %24, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.195, i64 0, i64 0), i8* noundef %775)
  br label %776

776:                                              ; preds = %774, %760
  %777 = load %struct.Node*, %struct.Node** %2, align 8
  %778 = getelementptr inbounds %struct.Node, %struct.Node* %777, i32 0, i32 0
  %779 = load i32, i32* %778, align 16
  %780 = icmp eq i32 %779, 6
  br i1 %780, label %781, label %782

781:                                              ; preds = %776
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.196, i64 0, i64 0))
  br label %782

782:                                              ; preds = %781, %776
  br label %864

783:                                              ; preds = %740
  %784 = load i8*, i8** %24, align 8
  %785 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.197, i64 0, i64 0), i8* noundef %784, i8* noundef %785)
  br label %864

786:                                              ; preds = %740
  %787 = load i8*, i8** %24, align 8
  %788 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.198, i64 0, i64 0), i8* noundef %787, i8* noundef %788)
  br label %864

789:                                              ; preds = %740
  %790 = load i8*, i8** %24, align 8
  %791 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.199, i64 0, i64 0), i8* noundef %790, i8* noundef %791)
  br label %864

792:                                              ; preds = %740, %740, %740, %740
  %793 = load i8*, i8** %24, align 8
  %794 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.200, i64 0, i64 0), i8* noundef %793, i8* noundef %794)
  %795 = load %struct.Node*, %struct.Node** %2, align 8
  %796 = getelementptr inbounds %struct.Node, %struct.Node* %795, i32 0, i32 0
  %797 = load i32, i32* %796, align 16
  %798 = icmp eq i32 %797, 12
  br i1 %798, label %799, label %800

799:                                              ; preds = %792
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.139, i64 0, i64 0))
  br label %843

800:                                              ; preds = %792
  %801 = load %struct.Node*, %struct.Node** %2, align 8
  %802 = getelementptr inbounds %struct.Node, %struct.Node* %801, i32 0, i32 0
  %803 = load i32, i32* %802, align 16
  %804 = icmp eq i32 %803, 13
  br i1 %804, label %805, label %806

805:                                              ; preds = %800
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.174, i64 0, i64 0))
  br label %842

806:                                              ; preds = %800
  %807 = load %struct.Node*, %struct.Node** %2, align 8
  %808 = getelementptr inbounds %struct.Node, %struct.Node* %807, i32 0, i32 0
  %809 = load i32, i32* %808, align 16
  %810 = icmp eq i32 %809, 14
  br i1 %810, label %811, label %823

811:                                              ; preds = %806
  %812 = load %struct.Node*, %struct.Node** %2, align 8
  %813 = getelementptr inbounds %struct.Node, %struct.Node* %812, i32 0, i32 4
  %814 = load %struct.Node*, %struct.Node** %813, align 16
  %815 = getelementptr inbounds %struct.Node, %struct.Node* %814, i32 0, i32 2
  %816 = load %struct.Type*, %struct.Type** %815, align 16
  %817 = getelementptr inbounds %struct.Type, %struct.Type* %816, i32 0, i32 3
  %818 = load i8, i8* %817, align 4
  %819 = trunc i8 %818 to i1
  br i1 %819, label %820, label %821

820:                                              ; preds = %811
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.201, i64 0, i64 0))
  br label %822

821:                                              ; preds = %811
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.202, i64 0, i64 0))
  br label %822

822:                                              ; preds = %821, %820
  br label %841

823:                                              ; preds = %806
  %824 = load %struct.Node*, %struct.Node** %2, align 8
  %825 = getelementptr inbounds %struct.Node, %struct.Node* %824, i32 0, i32 0
  %826 = load i32, i32* %825, align 16
  %827 = icmp eq i32 %826, 15
  br i1 %827, label %828, label %840

828:                                              ; preds = %823
  %829 = load %struct.Node*, %struct.Node** %2, align 8
  %830 = getelementptr inbounds %struct.Node, %struct.Node* %829, i32 0, i32 4
  %831 = load %struct.Node*, %struct.Node** %830, align 16
  %832 = getelementptr inbounds %struct.Node, %struct.Node* %831, i32 0, i32 2
  %833 = load %struct.Type*, %struct.Type** %832, align 16
  %834 = getelementptr inbounds %struct.Type, %struct.Type* %833, i32 0, i32 3
  %835 = load i8, i8* %834, align 4
  %836 = trunc i8 %835 to i1
  br i1 %836, label %837, label %838

837:                                              ; preds = %828
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.203, i64 0, i64 0))
  br label %839

838:                                              ; preds = %828
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.204, i64 0, i64 0))
  br label %839

839:                                              ; preds = %838, %837
  br label %840

840:                                              ; preds = %839, %823
  br label %841

841:                                              ; preds = %840, %822
  br label %842

842:                                              ; preds = %841, %805
  br label %843

843:                                              ; preds = %842, %799
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.180, i64 0, i64 0))
  br label %864

844:                                              ; preds = %740
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.205, i64 0, i64 0))
  %845 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.206, i64 0, i64 0), i8* noundef %845)
  br label %864

846:                                              ; preds = %740
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.205, i64 0, i64 0))
  %847 = load %struct.Node*, %struct.Node** %2, align 8
  %848 = getelementptr inbounds %struct.Node, %struct.Node* %847, i32 0, i32 4
  %849 = load %struct.Node*, %struct.Node** %848, align 16
  %850 = getelementptr inbounds %struct.Node, %struct.Node* %849, i32 0, i32 2
  %851 = load %struct.Type*, %struct.Type** %850, align 16
  %852 = getelementptr inbounds %struct.Type, %struct.Type* %851, i32 0, i32 3
  %853 = load i8, i8* %852, align 4
  %854 = trunc i8 %853 to i1
  br i1 %854, label %855, label %857

855:                                              ; preds = %846
  %856 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.207, i64 0, i64 0), i8* noundef %856)
  br label %859

857:                                              ; preds = %846
  %858 = load i8*, i8** %23, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.208, i64 0, i64 0), i8* noundef %858)
  br label %859

859:                                              ; preds = %857, %855
  br label %864

860:                                              ; preds = %740
  %861 = load %struct.Node*, %struct.Node** %2, align 8
  %862 = getelementptr inbounds %struct.Node, %struct.Node* %861, i32 0, i32 3
  %863 = load %struct.Token*, %struct.Token** %862, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %863, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.181, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

864:                                              ; preds = %859, %844, %843, %789, %786, %783, %782, %750, %747, %744, %709, %687, %686, %685, %684, %669, %645, %643, %641, %639, %593, %563, %559, %558, %536, %526, %516, %372, %332, %309, %305, %296, %276, %263, %251, %244, %243, %226, %203, %153, %146, %145, %102, %101, %100, %99, %98, %85, %70, %59, %48, %41
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cmp_zero(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %3 = load %struct.Type*, %struct.Type** %2, align 8
  %4 = getelementptr inbounds %struct.Type, %struct.Type* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %9 [
    i32 6, label %6
    i32 7, label %7
    i32 8, label %8
  ]

6:                                                ; preds = %1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.270, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.271, i64 0, i64 0))
  br label %19

7:                                                ; preds = %1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.272, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.273, i64 0, i64 0))
  br label %19

8:                                                ; preds = %1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.274, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.275, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.187, i64 0, i64 0))
  br label %19

9:                                                ; preds = %1
  %10 = load %struct.Type*, %struct.Type** %2, align 8
  %11 = call zeroext i1 @is_integer(%struct.Type* noundef %10)
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = load %struct.Type*, %struct.Type** %2, align 8
  %14 = getelementptr inbounds %struct.Type, %struct.Type* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sle i32 %15, 4
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.276, i64 0, i64 0))
  br label %19

18:                                               ; preds = %12, %9
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.277, i64 0, i64 0))
  br label %19

19:                                               ; preds = %18, %17, %8, %7, %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_struct_reg() #0 {
  %1 = alloca %struct.Type*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = load %struct.Obj*, %struct.Obj** @current_fn, align 8
  %9 = getelementptr inbounds %struct.Obj, %struct.Obj* %8, i32 0, i32 3
  %10 = load %struct.Type*, %struct.Type** %9, align 8
  %11 = getelementptr inbounds %struct.Type, %struct.Type* %10, i32 0, i32 17
  %12 = load %struct.Type*, %struct.Type** %11, align 8
  store %struct.Type* %12, %struct.Type** %1, align 8
  store i32 0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.125, i64 0, i64 0))
  %13 = load %struct.Type*, %struct.Type** %1, align 8
  %14 = call zeroext i1 @has_flonum(%struct.Type* noundef %13, i32 noundef 0, i32 noundef 8, i32 noundef 0)
  br i1 %14, label %15, label %37

15:                                               ; preds = %0
  %16 = load %struct.Type*, %struct.Type** %1, align 8
  %17 = getelementptr inbounds %struct.Type, %struct.Type* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = load %struct.Type*, %struct.Type** %1, align 8
  %22 = getelementptr inbounds %struct.Type, %struct.Type* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp sle i32 8, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %20, %15
  br label %27

26:                                               ; preds = %20
  call void @__assert_fail(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.264, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 745, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.copy_struct_reg, i64 0, i64 0)) #12
  unreachable

27:                                               ; preds = %25
  %28 = load %struct.Type*, %struct.Type** %1, align 8
  %29 = getelementptr inbounds %struct.Type, %struct.Type* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 4
  br i1 %31, label %32, label %33

32:                                               ; preds = %27
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.278, i64 0, i64 0))
  br label %34

33:                                               ; preds = %27
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.279, i64 0, i64 0))
  br label %34

34:                                               ; preds = %33, %32
  %35 = load i32, i32* %3, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %3, align 4
  br label %61

37:                                               ; preds = %0
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i64 0, i64 0))
  %38 = load %struct.Type*, %struct.Type** %1, align 8
  %39 = getelementptr inbounds %struct.Type, %struct.Type* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 8, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  br label %47

43:                                               ; preds = %37
  %44 = load %struct.Type*, %struct.Type** %1, align 8
  %45 = getelementptr inbounds %struct.Type, %struct.Type* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  br label %47

47:                                               ; preds = %43, %42
  %48 = phi i32 [ 8, %42 ], [ %46, %43 ]
  %49 = sub nsw i32 %48, 1
  store i32 %49, i32* %4, align 4
  br label %50

50:                                               ; preds = %55, %47
  %51 = load i32, i32* %4, align 4
  %52 = icmp sge i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.280, i64 0, i64 0))
  %54 = load i32, i32* %4, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.281, i64 0, i64 0), i32 noundef %54)
  br label %55

55:                                               ; preds = %53
  %56 = load i32, i32* %4, align 4
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %4, align 4
  br label %50, !llvm.loop !23

58:                                               ; preds = %50
  %59 = load i32, i32* %2, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %2, align 4
  br label %61

61:                                               ; preds = %58, %34
  %62 = load %struct.Type*, %struct.Type** %1, align 8
  %63 = getelementptr inbounds %struct.Type, %struct.Type* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, 8
  br i1 %65, label %66, label %125

66:                                               ; preds = %61
  %67 = load %struct.Type*, %struct.Type** %1, align 8
  %68 = call zeroext i1 @has_flonum(%struct.Type* noundef %67, i32 noundef 8, i32 noundef 16, i32 noundef 0)
  br i1 %68, label %69, label %91

69:                                               ; preds = %66
  %70 = load %struct.Type*, %struct.Type** %1, align 8
  %71 = getelementptr inbounds %struct.Type, %struct.Type* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 12
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  %75 = load %struct.Type*, %struct.Type** %1, align 8
  %76 = getelementptr inbounds %struct.Type, %struct.Type* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 16
  br i1 %78, label %79, label %80

79:                                               ; preds = %74, %69
  br label %81

80:                                               ; preds = %74
  call void @__assert_fail(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.268, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 767, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.copy_struct_reg, i64 0, i64 0)) #12
  unreachable

81:                                               ; preds = %79
  %82 = load %struct.Type*, %struct.Type** %1, align 8
  %83 = getelementptr inbounds %struct.Type, %struct.Type* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 12
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.282, i64 0, i64 0), i32 noundef %87)
  br label %90

88:                                               ; preds = %81
  %89 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.283, i64 0, i64 0), i32 noundef %89)
  br label %90

90:                                               ; preds = %88, %86
  br label %124

91:                                               ; preds = %66
  %92 = load i32, i32* %2, align 4
  %93 = icmp eq i32 %92, 0
  %94 = zext i1 %93 to i64
  %95 = select i1 %93, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)
  store i8* %95, i8** %5, align 8
  %96 = load i32, i32* %2, align 4
  %97 = icmp eq i32 %96, 0
  %98 = zext i1 %97 to i64
  %99 = select i1 %97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)
  store i8* %99, i8** %6, align 8
  %100 = load i8*, i8** %6, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.191, i64 0, i64 0), i8* noundef %100)
  %101 = load %struct.Type*, %struct.Type** %1, align 8
  %102 = getelementptr inbounds %struct.Type, %struct.Type* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 16, %103
  br i1 %104, label %105, label %106

105:                                              ; preds = %91
  br label %110

106:                                              ; preds = %91
  %107 = load %struct.Type*, %struct.Type** %1, align 8
  %108 = getelementptr inbounds %struct.Type, %struct.Type* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  br label %110

110:                                              ; preds = %106, %105
  %111 = phi i32 [ 16, %105 ], [ %109, %106 ]
  %112 = sub nsw i32 %111, 1
  store i32 %112, i32* %7, align 4
  br label %113

113:                                              ; preds = %120, %110
  %114 = load i32, i32* %7, align 4
  %115 = icmp sge i32 %114, 8
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = load i8*, i8** %6, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.284, i64 0, i64 0), i8* noundef %117)
  %118 = load i32, i32* %7, align 4
  %119 = load i8*, i8** %5, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.285, i64 0, i64 0), i32 noundef %118, i8* noundef %119)
  br label %120

120:                                              ; preds = %116
  %121 = load i32, i32* %7, align 4
  %122 = add nsw i32 %121, -1
  store i32 %122, i32* %7, align 4
  br label %113, !llvm.loop !24

123:                                              ; preds = %113
  br label %124

124:                                              ; preds = %123, %90
  br label %125

125:                                              ; preds = %124, %61
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_struct_mem() #0 {
  %1 = alloca %struct.Type*, align 8
  %2 = alloca %struct.Obj*, align 8
  %3 = alloca i32, align 4
  %4 = load %struct.Obj*, %struct.Obj** @current_fn, align 8
  %5 = getelementptr inbounds %struct.Obj, %struct.Obj* %4, i32 0, i32 3
  %6 = load %struct.Type*, %struct.Type** %5, align 8
  %7 = getelementptr inbounds %struct.Type, %struct.Type* %6, i32 0, i32 17
  %8 = load %struct.Type*, %struct.Type** %7, align 8
  store %struct.Type* %8, %struct.Type** %1, align 8
  %9 = load %struct.Obj*, %struct.Obj** @current_fn, align 8
  %10 = getelementptr inbounds %struct.Obj, %struct.Obj* %9, i32 0, i32 18
  %11 = load %struct.Obj*, %struct.Obj** %10, align 8
  store %struct.Obj* %11, %struct.Obj** %2, align 8
  %12 = load %struct.Obj*, %struct.Obj** %2, align 8
  %13 = getelementptr inbounds %struct.Obj, %struct.Obj* %12, i32 0, i32 7
  %14 = load i32, i32* %13, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.286, i64 0, i64 0), i32 noundef %14)
  store i32 0, i32* %3, align 4
  br label %15

15:                                               ; preds = %24, %0
  %16 = load i32, i32* %3, align 4
  %17 = load %struct.Type*, %struct.Type** %1, align 8
  %18 = getelementptr inbounds %struct.Type, %struct.Type* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %16, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %15
  %22 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.287, i64 0, i64 0), i32 noundef %22)
  %23 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.288, i64 0, i64 0), i32 noundef %23)
  br label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %3, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %3, align 4
  br label %15, !llvm.loop !25

27:                                               ; preds = %15
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @gen_addr(%struct.Node* noundef %0) #0 {
  %2 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %2, align 8
  %3 = load %struct.Node*, %struct.Node** %2, align 8
  %4 = getelementptr inbounds %struct.Node, %struct.Node* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 16
  switch i32 %5, label %153 [
    i32 40, label %6
    i32 21, label %102
    i32 18, label %106
    i32 19, label %113
    i32 37, label %122
    i32 16, label %130
    i32 17, label %130
    i32 41, label %147
  ]

6:                                                ; preds = %1
  %7 = load %struct.Node*, %struct.Node** %2, align 8
  %8 = getelementptr inbounds %struct.Node, %struct.Node* %7, i32 0, i32 33
  %9 = load %struct.Obj*, %struct.Obj** %8, align 8
  %10 = getelementptr inbounds %struct.Obj, %struct.Obj* %9, i32 0, i32 3
  %11 = load %struct.Type*, %struct.Type** %10, align 8
  %12 = getelementptr inbounds %struct.Type, %struct.Type* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 13
  br i1 %14, label %15, label %21

15:                                               ; preds = %6
  %16 = load %struct.Node*, %struct.Node** %2, align 8
  %17 = getelementptr inbounds %struct.Node, %struct.Node* %16, i32 0, i32 33
  %18 = load %struct.Obj*, %struct.Obj** %17, align 8
  %19 = getelementptr inbounds %struct.Obj, %struct.Obj* %18, i32 0, i32 7
  %20 = load i32, i32* %19, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.209, i64 0, i64 0), i32 noundef %20)
  br label %157

21:                                               ; preds = %6
  %22 = load %struct.Node*, %struct.Node** %2, align 8
  %23 = getelementptr inbounds %struct.Node, %struct.Node* %22, i32 0, i32 33
  %24 = load %struct.Obj*, %struct.Obj** %23, align 8
  %25 = getelementptr inbounds %struct.Obj, %struct.Obj* %24, i32 0, i32 5
  %26 = load i8, i8* %25, align 8
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %34

28:                                               ; preds = %21
  %29 = load %struct.Node*, %struct.Node** %2, align 8
  %30 = getelementptr inbounds %struct.Node, %struct.Node* %29, i32 0, i32 33
  %31 = load %struct.Obj*, %struct.Obj** %30, align 8
  %32 = getelementptr inbounds %struct.Obj, %struct.Obj* %31, i32 0, i32 7
  %33 = load i32, i32* %32, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0), i32 noundef %33)
  br label %157

34:                                               ; preds = %21
  %35 = load i8, i8* @opt_fpic, align 1
  %36 = trunc i8 %35 to i1
  br i1 %36, label %37, label %56

37:                                               ; preds = %34
  %38 = load %struct.Node*, %struct.Node** %2, align 8
  %39 = getelementptr inbounds %struct.Node, %struct.Node* %38, i32 0, i32 33
  %40 = load %struct.Obj*, %struct.Obj** %39, align 8
  %41 = getelementptr inbounds %struct.Obj, %struct.Obj* %40, i32 0, i32 14
  %42 = load i8, i8* %41, align 8
  %43 = trunc i8 %42 to i1
  br i1 %43, label %44, label %50

44:                                               ; preds = %37
  %45 = load %struct.Node*, %struct.Node** %2, align 8
  %46 = getelementptr inbounds %struct.Node, %struct.Node* %45, i32 0, i32 33
  %47 = load %struct.Obj*, %struct.Obj** %46, align 8
  %48 = getelementptr inbounds %struct.Obj, %struct.Obj* %47, i32 0, i32 1
  %49 = load i8*, i8** %48, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.210, i64 0, i64 0), i8* noundef %49)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.211, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.212, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.213, i64 0, i64 0))
  br label %157

50:                                               ; preds = %37
  %51 = load %struct.Node*, %struct.Node** %2, align 8
  %52 = getelementptr inbounds %struct.Node, %struct.Node* %51, i32 0, i32 33
  %53 = load %struct.Obj*, %struct.Obj** %52, align 8
  %54 = getelementptr inbounds %struct.Obj, %struct.Obj* %53, i32 0, i32 1
  %55 = load i8*, i8** %54, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.214, i64 0, i64 0), i8* noundef %55)
  br label %157

56:                                               ; preds = %34
  %57 = load %struct.Node*, %struct.Node** %2, align 8
  %58 = getelementptr inbounds %struct.Node, %struct.Node* %57, i32 0, i32 33
  %59 = load %struct.Obj*, %struct.Obj** %58, align 8
  %60 = getelementptr inbounds %struct.Obj, %struct.Obj* %59, i32 0, i32 14
  %61 = load i8, i8* %60, align 8
  %62 = trunc i8 %61 to i1
  br i1 %62, label %63, label %69

63:                                               ; preds = %56
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.215, i64 0, i64 0))
  %64 = load %struct.Node*, %struct.Node** %2, align 8
  %65 = getelementptr inbounds %struct.Node, %struct.Node* %64, i32 0, i32 33
  %66 = load %struct.Obj*, %struct.Obj** %65, align 8
  %67 = getelementptr inbounds %struct.Obj, %struct.Obj* %66, i32 0, i32 1
  %68 = load i8*, i8** %67, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.216, i64 0, i64 0), i8* noundef %68)
  br label %157

69:                                               ; preds = %56
  %70 = load %struct.Node*, %struct.Node** %2, align 8
  %71 = getelementptr inbounds %struct.Node, %struct.Node* %70, i32 0, i32 2
  %72 = load %struct.Type*, %struct.Type** %71, align 16
  %73 = getelementptr inbounds %struct.Type, %struct.Type* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 11
  br i1 %75, label %76, label %96

76:                                               ; preds = %69
  %77 = load %struct.Node*, %struct.Node** %2, align 8
  %78 = getelementptr inbounds %struct.Node, %struct.Node* %77, i32 0, i32 33
  %79 = load %struct.Obj*, %struct.Obj** %78, align 8
  %80 = getelementptr inbounds %struct.Obj, %struct.Obj* %79, i32 0, i32 11
  %81 = load i8, i8* %80, align 1
  %82 = trunc i8 %81 to i1
  br i1 %82, label %83, label %89

83:                                               ; preds = %76
  %84 = load %struct.Node*, %struct.Node** %2, align 8
  %85 = getelementptr inbounds %struct.Node, %struct.Node* %84, i32 0, i32 33
  %86 = load %struct.Obj*, %struct.Obj** %85, align 8
  %87 = getelementptr inbounds %struct.Obj, %struct.Obj* %86, i32 0, i32 1
  %88 = load i8*, i8** %87, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.157, i64 0, i64 0), i8* noundef %88)
  br label %95

89:                                               ; preds = %76
  %90 = load %struct.Node*, %struct.Node** %2, align 8
  %91 = getelementptr inbounds %struct.Node, %struct.Node* %90, i32 0, i32 33
  %92 = load %struct.Obj*, %struct.Obj** %91, align 8
  %93 = getelementptr inbounds %struct.Obj, %struct.Obj* %92, i32 0, i32 1
  %94 = load i8*, i8** %93, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.214, i64 0, i64 0), i8* noundef %94)
  br label %95

95:                                               ; preds = %89, %83
  br label %157

96:                                               ; preds = %69
  %97 = load %struct.Node*, %struct.Node** %2, align 8
  %98 = getelementptr inbounds %struct.Node, %struct.Node* %97, i32 0, i32 33
  %99 = load %struct.Obj*, %struct.Obj** %98, align 8
  %100 = getelementptr inbounds %struct.Obj, %struct.Obj* %99, i32 0, i32 1
  %101 = load i8*, i8** %100, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.157, i64 0, i64 0), i8* noundef %101)
  br label %157

102:                                              ; preds = %1
  %103 = load %struct.Node*, %struct.Node** %2, align 8
  %104 = getelementptr inbounds %struct.Node, %struct.Node* %103, i32 0, i32 4
  %105 = load %struct.Node*, %struct.Node** %104, align 16
  call void @gen_expr(%struct.Node* noundef %105)
  br label %157

106:                                              ; preds = %1
  %107 = load %struct.Node*, %struct.Node** %2, align 8
  %108 = getelementptr inbounds %struct.Node, %struct.Node* %107, i32 0, i32 4
  %109 = load %struct.Node*, %struct.Node** %108, align 16
  call void @gen_expr(%struct.Node* noundef %109)
  %110 = load %struct.Node*, %struct.Node** %2, align 8
  %111 = getelementptr inbounds %struct.Node, %struct.Node* %110, i32 0, i32 5
  %112 = load %struct.Node*, %struct.Node** %111, align 8
  call void @gen_addr(%struct.Node* noundef %112)
  br label %157

113:                                              ; preds = %1
  %114 = load %struct.Node*, %struct.Node** %2, align 8
  %115 = getelementptr inbounds %struct.Node, %struct.Node* %114, i32 0, i32 4
  %116 = load %struct.Node*, %struct.Node** %115, align 16
  call void @gen_addr(%struct.Node* noundef %116)
  %117 = load %struct.Node*, %struct.Node** %2, align 8
  %118 = getelementptr inbounds %struct.Node, %struct.Node* %117, i32 0, i32 14
  %119 = load %struct.Member*, %struct.Member** %118, align 16
  %120 = getelementptr inbounds %struct.Member, %struct.Member* %119, i32 0, i32 6
  %121 = load i32, i32* %120, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.217, i64 0, i64 0), i32 noundef %121)
  br label %157

122:                                              ; preds = %1
  %123 = load %struct.Node*, %struct.Node** %2, align 8
  %124 = getelementptr inbounds %struct.Node, %struct.Node* %123, i32 0, i32 18
  %125 = load %struct.Obj*, %struct.Obj** %124, align 16
  %126 = icmp ne %struct.Obj* %125, null
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  %128 = load %struct.Node*, %struct.Node** %2, align 8
  call void @gen_expr(%struct.Node* noundef %128)
  br label %157

129:                                              ; preds = %122
  br label %153

130:                                              ; preds = %1, %1
  %131 = load %struct.Node*, %struct.Node** %2, align 8
  %132 = getelementptr inbounds %struct.Node, %struct.Node* %131, i32 0, i32 2
  %133 = load %struct.Type*, %struct.Type** %132, align 16
  %134 = getelementptr inbounds %struct.Type, %struct.Type* %133, i32 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 14
  br i1 %136, label %144, label %137

137:                                              ; preds = %130
  %138 = load %struct.Node*, %struct.Node** %2, align 8
  %139 = getelementptr inbounds %struct.Node, %struct.Node* %138, i32 0, i32 2
  %140 = load %struct.Type*, %struct.Type** %139, align 16
  %141 = getelementptr inbounds %struct.Type, %struct.Type* %140, i32 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 15
  br i1 %143, label %144, label %146

144:                                              ; preds = %137, %130
  %145 = load %struct.Node*, %struct.Node** %2, align 8
  call void @gen_expr(%struct.Node* noundef %145)
  br label %157

146:                                              ; preds = %137
  br label %153

147:                                              ; preds = %1
  %148 = load %struct.Node*, %struct.Node** %2, align 8
  %149 = getelementptr inbounds %struct.Node, %struct.Node* %148, i32 0, i32 33
  %150 = load %struct.Obj*, %struct.Obj** %149, align 8
  %151 = getelementptr inbounds %struct.Obj, %struct.Obj* %150, i32 0, i32 7
  %152 = load i32, i32* %151, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0), i32 noundef %152)
  br label %157

153:                                              ; preds = %146, %129, %1
  %154 = load %struct.Node*, %struct.Node** %2, align 8
  %155 = getelementptr inbounds %struct.Node, %struct.Node* %154, i32 0, i32 3
  %156 = load %struct.Token*, %struct.Token** %155, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %156, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.218, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

157:                                              ; preds = %147, %144, %127, %113, %106, %102, %96, %95, %63, %50, %44, %28, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @load(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca i8*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %4 = load %struct.Type*, %struct.Type** %2, align 8
  %5 = getelementptr inbounds %struct.Type, %struct.Type* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %11 [
    i32 12, label %7
    i32 14, label %7
    i32 15, label %7
    i32 11, label %7
    i32 13, label %7
    i32 6, label %8
    i32 7, label %9
    i32 8, label %10
  ]

7:                                                ; preds = %1, %1, %1, %1, %1
  br label %40

8:                                                ; preds = %1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.219, i64 0, i64 0))
  br label %40

9:                                                ; preds = %1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.220, i64 0, i64 0))
  br label %40

10:                                               ; preds = %1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.221, i64 0, i64 0))
  br label %40

11:                                               ; preds = %1
  %12 = load %struct.Type*, %struct.Type** %2, align 8
  %13 = getelementptr inbounds %struct.Type, %struct.Type* %12, i32 0, i32 3
  %14 = load i8, i8* %13, align 4
  %15 = trunc i8 %14 to i1
  %16 = zext i1 %15 to i64
  %17 = select i1 %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.223, i64 0, i64 0)
  store i8* %17, i8** %3, align 8
  %18 = load %struct.Type*, %struct.Type** %2, align 8
  %19 = getelementptr inbounds %struct.Type, %struct.Type* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %11
  %23 = load i8*, i8** %3, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.224, i64 0, i64 0), i8* noundef %23)
  br label %40

24:                                               ; preds = %11
  %25 = load %struct.Type*, %struct.Type** %2, align 8
  %26 = getelementptr inbounds %struct.Type, %struct.Type* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.225, i64 0, i64 0), i8* noundef %30)
  br label %39

31:                                               ; preds = %24
  %32 = load %struct.Type*, %struct.Type** %2, align 8
  %33 = getelementptr inbounds %struct.Type, %struct.Type* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 4
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.226, i64 0, i64 0))
  br label %38

37:                                               ; preds = %31
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.227, i64 0, i64 0))
  br label %38

38:                                               ; preds = %37, %36
  br label %39

39:                                               ; preds = %38, %29
  br label %40

40:                                               ; preds = %39, %22, %10, %9, %8, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @push() #0 {
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.228, i64 0, i64 0))
  %1 = load i32, i32* @depth, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @depth, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @store(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca i32, align 4
  store %struct.Type* %0, %struct.Type** %2, align 8
  call void @pop(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0))
  %4 = load %struct.Type*, %struct.Type** %2, align 8
  %5 = getelementptr inbounds %struct.Type, %struct.Type* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %24 [
    i32 14, label %7
    i32 15, label %7
    i32 6, label %21
    i32 7, label %22
    i32 8, label %23
  ]

7:                                                ; preds = %1, %1
  store i32 0, i32* %3, align 4
  br label %8

8:                                                ; preds = %17, %7
  %9 = load i32, i32* %3, align 4
  %10 = load %struct.Type*, %struct.Type** %2, align 8
  %11 = getelementptr inbounds %struct.Type, %struct.Type* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.229, i64 0, i64 0), i32 noundef %15)
  %16 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.230, i64 0, i64 0), i32 noundef %16)
  br label %17

17:                                               ; preds = %14
  %18 = load i32, i32* %3, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %3, align 4
  br label %8, !llvm.loop !26

20:                                               ; preds = %8
  br label %45

21:                                               ; preds = %1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.231, i64 0, i64 0))
  br label %45

22:                                               ; preds = %1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.232, i64 0, i64 0))
  br label %45

23:                                               ; preds = %1
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.233, i64 0, i64 0))
  br label %45

24:                                               ; preds = %1
  %25 = load %struct.Type*, %struct.Type** %2, align 8
  %26 = getelementptr inbounds %struct.Type, %struct.Type* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.234, i64 0, i64 0))
  br label %45

30:                                               ; preds = %24
  %31 = load %struct.Type*, %struct.Type** %2, align 8
  %32 = getelementptr inbounds %struct.Type, %struct.Type* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 2
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.235, i64 0, i64 0))
  br label %44

36:                                               ; preds = %30
  %37 = load %struct.Type*, %struct.Type** %2, align 8
  %38 = getelementptr inbounds %struct.Type, %struct.Type* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 4
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.236, i64 0, i64 0))
  br label %43

42:                                               ; preds = %36
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.237, i64 0, i64 0))
  br label %43

43:                                               ; preds = %42, %41
  br label %44

44:                                               ; preds = %43, %35
  br label %45

45:                                               ; preds = %44, %29, %23, %22, %21, %20
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cast(%struct.Type* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca %struct.Type*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.Type* %0, %struct.Type** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  %7 = load %struct.Type*, %struct.Type** %4, align 8
  %8 = getelementptr inbounds %struct.Type, %struct.Type* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  br label %40

12:                                               ; preds = %2
  %13 = load %struct.Type*, %struct.Type** %4, align 8
  %14 = getelementptr inbounds %struct.Type, %struct.Type* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = load %struct.Type*, %struct.Type** %3, align 8
  call void @cmp_zero(%struct.Type* noundef %18)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.174, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.151, i64 0, i64 0))
  br label %40

19:                                               ; preds = %12
  %20 = load %struct.Type*, %struct.Type** %3, align 8
  %21 = call i32 @getTypeId(%struct.Type* noundef %20)
  store i32 %21, i32* %5, align 4
  %22 = load %struct.Type*, %struct.Type** %4, align 8
  %23 = call i32 @getTypeId(%struct.Type* noundef %22)
  store i32 %23, i32* %6, align 4
  %24 = load i32, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [11 x [11 x i8*]], [11 x [11 x i8*]]* @cast_table, i64 0, i64 %25
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [11 x i8*], [11 x i8*]* %26, i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %19
  %33 = load i32, i32* %5, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [11 x [11 x i8*]], [11 x [11 x i8*]]* @cast_table, i64 0, i64 %34
  %36 = load i32, i32* %6, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [11 x i8*], [11 x i8*]* %35, i64 0, i64 %37
  %39 = load i8*, i8** %38, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i64 0, i64 0), i8* noundef %39)
  br label %40

40:                                               ; preds = %32, %19, %17, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @builtin_alloca() #0 {
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.238, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.239, i64 0, i64 0))
  %1 = load %struct.Obj*, %struct.Obj** @current_fn, align 8
  %2 = getelementptr inbounds %struct.Obj, %struct.Obj* %1, i32 0, i32 22
  %3 = load %struct.Obj*, %struct.Obj** %2, align 8
  %4 = getelementptr inbounds %struct.Obj, %struct.Obj* %3, i32 0, i32 7
  %5 = load i32, i32* %4, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.240, i64 0, i64 0), i32 noundef %5)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.241, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.242, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.243, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.244, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.162, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.245, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.246, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.247, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.248, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.249, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.250, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.251, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.252, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.253, i64 0, i64 0))
  %6 = load %struct.Obj*, %struct.Obj** @current_fn, align 8
  %7 = getelementptr inbounds %struct.Obj, %struct.Obj* %6, i32 0, i32 22
  %8 = load %struct.Obj*, %struct.Obj** %7, align 8
  %9 = getelementptr inbounds %struct.Obj, %struct.Obj* %8, i32 0, i32 7
  %10 = load i32, i32* %9, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.209, i64 0, i64 0), i32 noundef %10)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.254, i64 0, i64 0))
  %11 = load %struct.Obj*, %struct.Obj** @current_fn, align 8
  %12 = getelementptr inbounds %struct.Obj, %struct.Obj* %11, i32 0, i32 22
  %13 = load %struct.Obj*, %struct.Obj** %12, align 8
  %14 = getelementptr inbounds %struct.Obj, %struct.Obj* %13, i32 0, i32 7
  %15 = load i32, i32* %14, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.255, i64 0, i64 0), i32 noundef %15)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @push_args(%struct.Node* noundef %0) #0 {
  %2 = alloca %struct.Node*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  store %struct.Node* %0, %struct.Node** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %10 = load %struct.Node*, %struct.Node** %2, align 8
  %11 = getelementptr inbounds %struct.Node, %struct.Node* %10, i32 0, i32 18
  %12 = load %struct.Obj*, %struct.Obj** %11, align 16
  %13 = icmp ne %struct.Obj* %12, null
  br i1 %13, label %14, label %24

14:                                               ; preds = %1
  %15 = load %struct.Node*, %struct.Node** %2, align 8
  %16 = getelementptr inbounds %struct.Node, %struct.Node* %15, i32 0, i32 2
  %17 = load %struct.Type*, %struct.Type** %16, align 16
  %18 = getelementptr inbounds %struct.Type, %struct.Type* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 16
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = load i32, i32* %4, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %4, align 4
  br label %24

24:                                               ; preds = %21, %14, %1
  %25 = load %struct.Node*, %struct.Node** %2, align 8
  %26 = getelementptr inbounds %struct.Node, %struct.Node* %25, i32 0, i32 16
  %27 = load %struct.Node*, %struct.Node** %26, align 16
  store %struct.Node* %27, %struct.Node** %6, align 8
  br label %28

28:                                               ; preds = %142, %24
  %29 = load %struct.Node*, %struct.Node** %6, align 8
  %30 = icmp ne %struct.Node* %29, null
  br i1 %30, label %31, label %146

31:                                               ; preds = %28
  %32 = load %struct.Node*, %struct.Node** %6, align 8
  %33 = getelementptr inbounds %struct.Node, %struct.Node* %32, i32 0, i32 2
  %34 = load %struct.Type*, %struct.Type** %33, align 16
  store %struct.Type* %34, %struct.Type** %7, align 8
  %35 = load %struct.Type*, %struct.Type** %7, align 8
  %36 = getelementptr inbounds %struct.Type, %struct.Type* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  switch i32 %37, label %131 [
    i32 14, label %38
    i32 15, label %38
    i32 6, label %116
    i32 7, label %116
    i32 8, label %126
  ]

38:                                               ; preds = %31, %31
  %39 = load %struct.Type*, %struct.Type** %7, align 8
  %40 = getelementptr inbounds %struct.Type, %struct.Type* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 16
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = load %struct.Node*, %struct.Node** %6, align 8
  %45 = getelementptr inbounds %struct.Node, %struct.Node* %44, i32 0, i32 17
  store i8 1, i8* %45, align 8
  %46 = load %struct.Type*, %struct.Type** %7, align 8
  %47 = getelementptr inbounds %struct.Type, %struct.Type* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = call i32 @align_to(i32 noundef %48, i32 noundef 8)
  %50 = sdiv i32 %49, 8
  %51 = load i32, i32* %3, align 4
  %52 = add nsw i32 %51, %50
  store i32 %52, i32* %3, align 4
  br label %115

53:                                               ; preds = %38
  %54 = load %struct.Type*, %struct.Type** %7, align 8
  %55 = call zeroext i1 @has_flonum1(%struct.Type* noundef %54)
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %8, align 1
  %57 = load %struct.Type*, %struct.Type** %7, align 8
  %58 = call zeroext i1 @has_flonum2(%struct.Type* noundef %57)
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %9, align 1
  %60 = load i32, i32* %5, align 4
  %61 = load i8, i8* %8, align 1
  %62 = trunc i8 %61 to i1
  %63 = zext i1 %62 to i32
  %64 = add nsw i32 %60, %63
  %65 = load i8, i8* %9, align 1
  %66 = trunc i8 %65 to i1
  %67 = zext i1 %66 to i32
  %68 = add nsw i32 %64, %67
  %69 = icmp slt i32 %68, 8
  br i1 %69, label %70, label %104

70:                                               ; preds = %53
  %71 = load i32, i32* %4, align 4
  %72 = load i8, i8* %8, align 1
  %73 = trunc i8 %72 to i1
  %74 = xor i1 %73, true
  %75 = zext i1 %74 to i32
  %76 = add nsw i32 %71, %75
  %77 = load i8, i8* %9, align 1
  %78 = trunc i8 %77 to i1
  %79 = xor i1 %78, true
  %80 = zext i1 %79 to i32
  %81 = add nsw i32 %76, %80
  %82 = icmp slt i32 %81, 6
  br i1 %82, label %83, label %104

83:                                               ; preds = %70
  %84 = load i32, i32* %5, align 4
  %85 = load i8, i8* %8, align 1
  %86 = trunc i8 %85 to i1
  %87 = zext i1 %86 to i32
  %88 = add nsw i32 %84, %87
  %89 = load i8, i8* %9, align 1
  %90 = trunc i8 %89 to i1
  %91 = zext i1 %90 to i32
  %92 = add nsw i32 %88, %91
  store i32 %92, i32* %5, align 4
  %93 = load i32, i32* %4, align 4
  %94 = load i8, i8* %8, align 1
  %95 = trunc i8 %94 to i1
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = add nsw i32 %93, %97
  %99 = load i8, i8* %9, align 1
  %100 = trunc i8 %99 to i1
  %101 = xor i1 %100, true
  %102 = zext i1 %101 to i32
  %103 = add nsw i32 %98, %102
  store i32 %103, i32* %4, align 4
  br label %114

104:                                              ; preds = %70, %53
  %105 = load %struct.Node*, %struct.Node** %6, align 8
  %106 = getelementptr inbounds %struct.Node, %struct.Node* %105, i32 0, i32 17
  store i8 1, i8* %106, align 8
  %107 = load %struct.Type*, %struct.Type** %7, align 8
  %108 = getelementptr inbounds %struct.Type, %struct.Type* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = call i32 @align_to(i32 noundef %109, i32 noundef 8)
  %111 = sdiv i32 %110, 8
  %112 = load i32, i32* %3, align 4
  %113 = add nsw i32 %112, %111
  store i32 %113, i32* %3, align 4
  br label %114

114:                                              ; preds = %104, %83
  br label %115

115:                                              ; preds = %114, %43
  br label %141

116:                                              ; preds = %31, %31
  %117 = load i32, i32* %5, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %5, align 4
  %119 = icmp sge i32 %117, 8
  br i1 %119, label %120, label %125

120:                                              ; preds = %116
  %121 = load %struct.Node*, %struct.Node** %6, align 8
  %122 = getelementptr inbounds %struct.Node, %struct.Node* %121, i32 0, i32 17
  store i8 1, i8* %122, align 8
  %123 = load i32, i32* %3, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %3, align 4
  br label %125

125:                                              ; preds = %120, %116
  br label %141

126:                                              ; preds = %31
  %127 = load %struct.Node*, %struct.Node** %6, align 8
  %128 = getelementptr inbounds %struct.Node, %struct.Node* %127, i32 0, i32 17
  store i8 1, i8* %128, align 8
  %129 = load i32, i32* %3, align 4
  %130 = add nsw i32 %129, 2
  store i32 %130, i32* %3, align 4
  br label %141

131:                                              ; preds = %31
  %132 = load i32, i32* %4, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %4, align 4
  %134 = icmp sge i32 %132, 6
  br i1 %134, label %135, label %140

135:                                              ; preds = %131
  %136 = load %struct.Node*, %struct.Node** %6, align 8
  %137 = getelementptr inbounds %struct.Node, %struct.Node* %136, i32 0, i32 17
  store i8 1, i8* %137, align 8
  %138 = load i32, i32* %3, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %3, align 4
  br label %140

140:                                              ; preds = %135, %131
  br label %141

141:                                              ; preds = %140, %126, %125, %115
  br label %142

142:                                              ; preds = %141
  %143 = load %struct.Node*, %struct.Node** %6, align 8
  %144 = getelementptr inbounds %struct.Node, %struct.Node* %143, i32 0, i32 1
  %145 = load %struct.Node*, %struct.Node** %144, align 8
  store %struct.Node* %145, %struct.Node** %6, align 8
  br label %28, !llvm.loop !27

146:                                              ; preds = %28
  %147 = load i32, i32* @depth, align 4
  %148 = load i32, i32* %3, align 4
  %149 = add nsw i32 %147, %148
  %150 = srem i32 %149, 2
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %157

152:                                              ; preds = %146
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.256, i64 0, i64 0))
  %153 = load i32, i32* @depth, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* @depth, align 4
  %155 = load i32, i32* %3, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %3, align 4
  br label %157

157:                                              ; preds = %152, %146
  %158 = load %struct.Node*, %struct.Node** %2, align 8
  %159 = getelementptr inbounds %struct.Node, %struct.Node* %158, i32 0, i32 16
  %160 = load %struct.Node*, %struct.Node** %159, align 16
  call void @push_args2(%struct.Node* noundef %160, i1 noundef zeroext true)
  %161 = load %struct.Node*, %struct.Node** %2, align 8
  %162 = getelementptr inbounds %struct.Node, %struct.Node* %161, i32 0, i32 16
  %163 = load %struct.Node*, %struct.Node** %162, align 16
  call void @push_args2(%struct.Node* noundef %163, i1 noundef zeroext false)
  %164 = load %struct.Node*, %struct.Node** %2, align 8
  %165 = getelementptr inbounds %struct.Node, %struct.Node* %164, i32 0, i32 18
  %166 = load %struct.Obj*, %struct.Obj** %165, align 16
  %167 = icmp ne %struct.Obj* %166, null
  br i1 %167, label %168, label %181

168:                                              ; preds = %157
  %169 = load %struct.Node*, %struct.Node** %2, align 8
  %170 = getelementptr inbounds %struct.Node, %struct.Node* %169, i32 0, i32 2
  %171 = load %struct.Type*, %struct.Type** %170, align 16
  %172 = getelementptr inbounds %struct.Type, %struct.Type* %171, i32 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = icmp sgt i32 %173, 16
  br i1 %174, label %175, label %181

175:                                              ; preds = %168
  %176 = load %struct.Node*, %struct.Node** %2, align 8
  %177 = getelementptr inbounds %struct.Node, %struct.Node* %176, i32 0, i32 18
  %178 = load %struct.Obj*, %struct.Obj** %177, align 16
  %179 = getelementptr inbounds %struct.Obj, %struct.Obj* %178, i32 0, i32 7
  %180 = load i32, i32* %179, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0), i32 noundef %180)
  call void @push()
  br label %181

181:                                              ; preds = %175, %168, %157
  %182 = load i32, i32* %3, align 4
  ret i32 %182
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @pop(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.261, i64 0, i64 0), i8* noundef %3)
  %4 = load i32, i32* @depth, align 4
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* @depth, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_flonum1(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %3 = load %struct.Type*, %struct.Type** %2, align 8
  %4 = call zeroext i1 @has_flonum(%struct.Type* noundef %3, i32 noundef 0, i32 noundef 8, i32 noundef 0)
  ret i1 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_flonum2(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %3 = load %struct.Type*, %struct.Type** %2, align 8
  %4 = call zeroext i1 @has_flonum(%struct.Type* noundef %3, i32 noundef 8, i32 noundef 16, i32 noundef 0)
  ret i1 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @popf(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.262, i64 0, i64 0), i32 noundef %3)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.263, i64 0, i64 0))
  %4 = load i32, i32* @depth, align 4
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* @depth, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_ret_buffer(%struct.Obj* noundef %0) #0 {
  %2 = alloca %struct.Obj*, align 8
  %3 = alloca %struct.Type*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %struct.Obj* %0, %struct.Obj** %2, align 8
  %10 = load %struct.Obj*, %struct.Obj** %2, align 8
  %11 = getelementptr inbounds %struct.Obj, %struct.Obj* %10, i32 0, i32 3
  %12 = load %struct.Type*, %struct.Type** %11, align 8
  store %struct.Type* %12, %struct.Type** %3, align 8
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %13 = load %struct.Type*, %struct.Type** %3, align 8
  %14 = call zeroext i1 @has_flonum1(%struct.Type* noundef %13)
  br i1 %14, label %15, label %43

15:                                               ; preds = %1
  %16 = load %struct.Type*, %struct.Type** %3, align 8
  %17 = getelementptr inbounds %struct.Type, %struct.Type* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = load %struct.Type*, %struct.Type** %3, align 8
  %22 = getelementptr inbounds %struct.Type, %struct.Type* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp sle i32 8, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %20, %15
  br label %27

26:                                               ; preds = %20
  call void @__assert_fail(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.264, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 696, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.copy_ret_buffer, i64 0, i64 0)) #12
  unreachable

27:                                               ; preds = %25
  %28 = load %struct.Type*, %struct.Type** %3, align 8
  %29 = getelementptr inbounds %struct.Type, %struct.Type* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 4
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  %33 = load %struct.Obj*, %struct.Obj** %2, align 8
  %34 = getelementptr inbounds %struct.Obj, %struct.Obj* %33, i32 0, i32 7
  %35 = load i32, i32* %34, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.265, i64 0, i64 0), i32 noundef %35)
  br label %40

36:                                               ; preds = %27
  %37 = load %struct.Obj*, %struct.Obj** %2, align 8
  %38 = getelementptr inbounds %struct.Obj, %struct.Obj* %37, i32 0, i32 7
  %39 = load i32, i32* %38, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.50, i64 0, i64 0), i32 noundef %39)
  br label %40

40:                                               ; preds = %36, %32
  %41 = load i32, i32* %5, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %5, align 4
  br label %70

43:                                               ; preds = %1
  store i32 0, i32* %6, align 4
  br label %44

44:                                               ; preds = %64, %43
  %45 = load i32, i32* %6, align 4
  %46 = load %struct.Type*, %struct.Type** %3, align 8
  %47 = getelementptr inbounds %struct.Type, %struct.Type* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 8, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %44
  br label %55

51:                                               ; preds = %44
  %52 = load %struct.Type*, %struct.Type** %3, align 8
  %53 = getelementptr inbounds %struct.Type, %struct.Type* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %51, %50
  %56 = phi i32 [ 8, %50 ], [ %54, %51 ]
  %57 = icmp slt i32 %45, %56
  br i1 %57, label %58, label %67

58:                                               ; preds = %55
  %59 = load %struct.Obj*, %struct.Obj** %2, align 8
  %60 = getelementptr inbounds %struct.Obj, %struct.Obj* %59, i32 0, i32 7
  %61 = load i32, i32* %60, align 8
  %62 = load i32, i32* %6, align 4
  %63 = add nsw i32 %61, %62
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.266, i64 0, i64 0), i32 noundef %63)
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.267, i64 0, i64 0))
  br label %64

64:                                               ; preds = %58
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %6, align 4
  br label %44, !llvm.loop !28

67:                                               ; preds = %55
  %68 = load i32, i32* %4, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %4, align 4
  br label %70

70:                                               ; preds = %67, %40
  %71 = load %struct.Type*, %struct.Type** %3, align 8
  %72 = getelementptr inbounds %struct.Type, %struct.Type* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, 8
  br i1 %74, label %75, label %144

75:                                               ; preds = %70
  %76 = load %struct.Type*, %struct.Type** %3, align 8
  %77 = call zeroext i1 @has_flonum2(%struct.Type* noundef %76)
  br i1 %77, label %78, label %108

78:                                               ; preds = %75
  %79 = load %struct.Type*, %struct.Type** %3, align 8
  %80 = getelementptr inbounds %struct.Type, %struct.Type* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 12
  br i1 %82, label %88, label %83

83:                                               ; preds = %78
  %84 = load %struct.Type*, %struct.Type** %3, align 8
  %85 = getelementptr inbounds %struct.Type, %struct.Type* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 16
  br i1 %87, label %88, label %89

88:                                               ; preds = %83, %78
  br label %90

89:                                               ; preds = %83
  call void @__assert_fail(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.268, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 noundef 717, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.copy_ret_buffer, i64 0, i64 0)) #12
  unreachable

90:                                               ; preds = %88
  %91 = load %struct.Type*, %struct.Type** %3, align 8
  %92 = getelementptr inbounds %struct.Type, %struct.Type* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 12
  br i1 %94, label %95, label %101

95:                                               ; preds = %90
  %96 = load i32, i32* %5, align 4
  %97 = load %struct.Obj*, %struct.Obj** %2, align 8
  %98 = getelementptr inbounds %struct.Obj, %struct.Obj* %97, i32 0, i32 7
  %99 = load i32, i32* %98, align 8
  %100 = add nsw i32 %99, 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.66, i64 0, i64 0), i32 noundef %96, i32 noundef %100)
  br label %107

101:                                              ; preds = %90
  %102 = load i32, i32* %5, align 4
  %103 = load %struct.Obj*, %struct.Obj** %2, align 8
  %104 = getelementptr inbounds %struct.Obj, %struct.Obj* %103, i32 0, i32 7
  %105 = load i32, i32* %104, align 8
  %106 = add nsw i32 %105, 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0), i32 noundef %102, i32 noundef %106)
  br label %107

107:                                              ; preds = %101, %95
  br label %143

108:                                              ; preds = %75
  %109 = load i32, i32* %4, align 4
  %110 = icmp eq i32 %109, 0
  %111 = zext i1 %110 to i64
  %112 = select i1 %110, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)
  store i8* %112, i8** %7, align 8
  %113 = load i32, i32* %4, align 4
  %114 = icmp eq i32 %113, 0
  %115 = zext i1 %114 to i64
  %116 = select i1 %114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)
  store i8* %116, i8** %8, align 8
  store i32 8, i32* %9, align 4
  br label %117

117:                                              ; preds = %139, %108
  %118 = load i32, i32* %9, align 4
  %119 = load %struct.Type*, %struct.Type** %3, align 8
  %120 = getelementptr inbounds %struct.Type, %struct.Type* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 16, %121
  br i1 %122, label %123, label %124

123:                                              ; preds = %117
  br label %128

124:                                              ; preds = %117
  %125 = load %struct.Type*, %struct.Type** %3, align 8
  %126 = getelementptr inbounds %struct.Type, %struct.Type* %125, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  br label %128

128:                                              ; preds = %124, %123
  %129 = phi i32 [ 16, %123 ], [ %127, %124 ]
  %130 = icmp slt i32 %118, %129
  br i1 %130, label %131, label %142

131:                                              ; preds = %128
  %132 = load i8*, i8** %7, align 8
  %133 = load %struct.Obj*, %struct.Obj** %2, align 8
  %134 = getelementptr inbounds %struct.Obj, %struct.Obj* %133, i32 0, i32 7
  %135 = load i32, i32* %134, align 8
  %136 = load i32, i32* %9, align 4
  %137 = add nsw i32 %135, %136
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i64 0, i64 0), i8* noundef %132, i32 noundef %137)
  %138 = load i8*, i8** %8, align 8
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i64 0, i64 0), i8* noundef %138)
  br label %139

139:                                              ; preds = %131
  %140 = load i32, i32* %9, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %9, align 4
  br label %117, !llvm.loop !29

142:                                              ; preds = %128
  br label %143

143:                                              ; preds = %142, %107
  br label %144

144:                                              ; preds = %143, %70
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @pushf() #0 {
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.256, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.269, i64 0, i64 0))
  %1 = load i32, i32* @depth, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @depth, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @push_args2(%struct.Node* noundef %0, i1 noundef zeroext %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca i8, align 1
  store %struct.Node* %0, %struct.Node** %3, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = load %struct.Node*, %struct.Node** %3, align 8
  %7 = icmp ne %struct.Node* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  br label %41

9:                                                ; preds = %2
  %10 = load %struct.Node*, %struct.Node** %3, align 8
  %11 = getelementptr inbounds %struct.Node, %struct.Node* %10, i32 0, i32 1
  %12 = load %struct.Node*, %struct.Node** %11, align 8
  %13 = load i8, i8* %4, align 1
  %14 = trunc i8 %13 to i1
  call void @push_args2(%struct.Node* noundef %12, i1 noundef zeroext %14)
  %15 = load i8, i8* %4, align 1
  %16 = trunc i8 %15 to i1
  %17 = zext i1 %16 to i32
  %18 = load %struct.Node*, %struct.Node** %3, align 8
  %19 = getelementptr inbounds %struct.Node, %struct.Node* %18, i32 0, i32 17
  %20 = load i8, i8* %19, align 8
  %21 = trunc i8 %20 to i1
  %22 = zext i1 %21 to i32
  %23 = icmp ne i32 %17, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %9
  br label %41

25:                                               ; preds = %9
  %26 = load %struct.Node*, %struct.Node** %3, align 8
  call void @gen_expr(%struct.Node* noundef %26)
  %27 = load %struct.Node*, %struct.Node** %3, align 8
  %28 = getelementptr inbounds %struct.Node, %struct.Node* %27, i32 0, i32 2
  %29 = load %struct.Type*, %struct.Type** %28, align 16
  %30 = getelementptr inbounds %struct.Type, %struct.Type* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  switch i32 %31, label %40 [
    i32 14, label %32
    i32 15, label %32
    i32 6, label %36
    i32 7, label %36
    i32 8, label %37
  ]

32:                                               ; preds = %25, %25
  %33 = load %struct.Node*, %struct.Node** %3, align 8
  %34 = getelementptr inbounds %struct.Node, %struct.Node* %33, i32 0, i32 2
  %35 = load %struct.Type*, %struct.Type** %34, align 16
  call void @push_struct(%struct.Type* noundef %35)
  br label %41

36:                                               ; preds = %25, %25
  call void @pushf()
  br label %41

37:                                               ; preds = %25
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.257, i64 0, i64 0))
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.258, i64 0, i64 0))
  %38 = load i32, i32* @depth, align 4
  %39 = add nsw i32 %38, 2
  store i32 %39, i32* @depth, align 4
  br label %41

40:                                               ; preds = %25
  call void @push()
  br label %41

41:                                               ; preds = %40, %37, %36, %32, %24, %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @push_struct(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.Type* %0, %struct.Type** %2, align 8
  %5 = load %struct.Type*, %struct.Type** %2, align 8
  %6 = getelementptr inbounds %struct.Type, %struct.Type* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = call i32 @align_to(i32 noundef %7, i32 noundef 8)
  store i32 %8, i32* %3, align 4
  %9 = load i32, i32* %3, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 noundef %9)
  %10 = load i32, i32* %3, align 4
  %11 = sdiv i32 %10, 8
  %12 = load i32, i32* @depth, align 4
  %13 = add nsw i32 %12, %11
  store i32 %13, i32* @depth, align 4
  store i32 0, i32* %4, align 4
  br label %14

14:                                               ; preds = %23, %1
  %15 = load i32, i32* %4, align 4
  %16 = load %struct.Type*, %struct.Type** %2, align 8
  %17 = getelementptr inbounds %struct.Type, %struct.Type* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %15, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = load i32, i32* %4, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.259, i64 0, i64 0), i32 noundef %21)
  %22 = load i32, i32* %4, align 4
  call void (i8*, ...) @println(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.260, i64 0, i64 0), i32 noundef %22)
  br label %23

23:                                               ; preds = %20
  %24 = load i32, i32* %4, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %4, align 4
  br label %14, !llvm.loop !30

26:                                               ; preds = %14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getTypeId(%struct.Type* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %3, align 8
  %4 = load %struct.Type*, %struct.Type** %3, align 8
  %5 = getelementptr inbounds %struct.Type, %struct.Type* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %38 [
    i32 2, label %7
    i32 3, label %14
    i32 4, label %21
    i32 5, label %28
    i32 6, label %35
    i32 7, label %36
    i32 8, label %37
  ]

7:                                                ; preds = %1
  %8 = load %struct.Type*, %struct.Type** %3, align 8
  %9 = getelementptr inbounds %struct.Type, %struct.Type* %8, i32 0, i32 3
  %10 = load i8, i8* %9, align 4
  %11 = trunc i8 %10 to i1
  %12 = zext i1 %11 to i64
  %13 = select i1 %11, i32 4, i32 0
  store i32 %13, i32* %2, align 4
  br label %39

14:                                               ; preds = %1
  %15 = load %struct.Type*, %struct.Type** %3, align 8
  %16 = getelementptr inbounds %struct.Type, %struct.Type* %15, i32 0, i32 3
  %17 = load i8, i8* %16, align 4
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i64
  %20 = select i1 %18, i32 5, i32 1
  store i32 %20, i32* %2, align 4
  br label %39

21:                                               ; preds = %1
  %22 = load %struct.Type*, %struct.Type** %3, align 8
  %23 = getelementptr inbounds %struct.Type, %struct.Type* %22, i32 0, i32 3
  %24 = load i8, i8* %23, align 4
  %25 = trunc i8 %24 to i1
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i32 6, i32 2
  store i32 %27, i32* %2, align 4
  br label %39

28:                                               ; preds = %1
  %29 = load %struct.Type*, %struct.Type** %3, align 8
  %30 = getelementptr inbounds %struct.Type, %struct.Type* %29, i32 0, i32 3
  %31 = load i8, i8* %30, align 4
  %32 = trunc i8 %31 to i1
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i32 7, i32 3
  store i32 %34, i32* %2, align 4
  br label %39

35:                                               ; preds = %1
  store i32 8, i32* %2, align 4
  br label %39

36:                                               ; preds = %1
  store i32 9, i32* %2, align 4
  br label %39

37:                                               ; preds = %1
  store i32 10, i32* %2, align 4
  br label %39

38:                                               ; preds = %1
  store i32 7, i32* %2, align 4
  br label %39

39:                                               ; preds = %38, %37, %36, %35, %28, %21, %14, %7
  %40 = load i32, i32* %2, align 4
  ret i32 %40
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #4

declare i32 @vfprintf(%struct._IO_FILE* noundef, i8* noundef, %struct.__va_list_tag* noundef) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #4

declare i32 @fprintf(%struct._IO_FILE* noundef, i8* noundef, ...) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @tokenkind2str(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %12 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
    i32 6, label %11
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.289, i64 0, i64 0), i8** %2, align 8
  br label %13

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.290, i64 0, i64 0), i8** %2, align 8
  br label %13

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.291, i64 0, i64 0), i8** %2, align 8
  br label %13

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.292, i64 0, i64 0), i8** %2, align 8
  br label %13

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.293, i64 0, i64 0), i8** %2, align 8
  br label %13

10:                                               ; preds = %1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.294, i64 0, i64 0), i8** %2, align 8
  br label %13

11:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.295, i64 0, i64 0), i8** %2, align 8
  br label %13

12:                                               ; preds = %1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.296, i64 0, i64 0), i8** %2, align 8
  br label %13

13:                                               ; preds = %12, %11, %10, %9, %8, %7, %6, %5
  %14 = load i8*, i8** %2, align 8
  ret i8* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @print_debug_tokens(i8* noundef %0, i8* noundef %1, %struct.Token* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.Token* %2, %struct.Token** %6, align 8
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %12 = load i8*, i8** %4, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %11, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8.297, i64 0, i64 0), i8* noundef %12, i8* noundef %13)
  %15 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %15, %struct.Token** %7, align 8
  br label %16

16:                                               ; preds = %79, %3
  %17 = load %struct.Token*, %struct.Token** %7, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 16
  %20 = icmp ne i32 %19, 6
  br i1 %20, label %21, label %83

21:                                               ; preds = %16
  %22 = load %struct.Token*, %struct.Token** %7, align 8
  %23 = getelementptr inbounds %struct.Token, %struct.Token* %22, i32 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %79

26:                                               ; preds = %21
  %27 = load %struct.Token*, %struct.Token** %7, align 8
  %28 = getelementptr inbounds %struct.Token, %struct.Token* %27, i32 0, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  %31 = zext i32 %30 to i64
  %32 = call i8* @llvm.stacksave()
  store i8* %32, i8** %8, align 8
  %33 = alloca i8, i64 %31, align 16
  store i64 %31, i64* %9, align 8
  call void @llvm.memset.p0i8.i64(i8* align 16 %33, i8 0, i64 %31, i1 false)
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  store i8* %34, i8** %10, align 8
  %35 = load i8*, i8** %10, align 8
  %36 = load %struct.Token*, %struct.Token** %7, align 8
  %37 = getelementptr inbounds %struct.Token, %struct.Token* %36, i32 0, i32 4
  %38 = load i8*, i8** %37, align 16
  %39 = load %struct.Token*, %struct.Token** %7, align 8
  %40 = getelementptr inbounds %struct.Token, %struct.Token* %39, i32 0, i32 5
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = call i8* @strncpy(i8* noundef %35, i8* noundef %38, i64 noundef %42) #14
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %45 = load %struct.Token*, %struct.Token** %7, align 8
  %46 = getelementptr inbounds %struct.Token, %struct.Token* %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 16
  %48 = call i8* @tokenkind2str(i32 noundef %47)
  %49 = load %struct.Token*, %struct.Token** %7, align 8
  %50 = getelementptr inbounds %struct.Token, %struct.Token* %49, i32 0, i32 5
  %51 = load i32, i32* %50, align 8
  %52 = load %struct.Token*, %struct.Token** %7, align 8
  %53 = getelementptr inbounds %struct.Token, %struct.Token* %52, i32 0, i32 2
  %54 = load i64, i64* %53, align 16
  %55 = load %struct.Token*, %struct.Token** %7, align 8
  %56 = getelementptr inbounds %struct.Token, %struct.Token* %55, i32 0, i32 3
  %57 = load x86_fp80, x86_fp80* %56, align 16
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %44, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.9.298, i64 0, i64 0), i8* noundef %48, i32 noundef %51, i64 noundef %54, x86_fp80 noundef %57)
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %60 = load %struct.Token*, %struct.Token** %7, align 8
  %61 = getelementptr inbounds %struct.Token, %struct.Token* %60, i32 0, i32 7
  %62 = load i8*, i8** %61, align 8
  %63 = load %struct.Token*, %struct.Token** %7, align 8
  %64 = getelementptr inbounds %struct.Token, %struct.Token* %63, i32 0, i32 9
  %65 = load i8*, i8** %64, align 8
  %66 = load %struct.Token*, %struct.Token** %7, align 8
  %67 = getelementptr inbounds %struct.Token, %struct.Token* %66, i32 0, i32 10
  %68 = load i32, i32* %67, align 16
  %69 = load %struct.Token*, %struct.Token** %7, align 8
  %70 = getelementptr inbounds %struct.Token, %struct.Token* %69, i32 0, i32 12
  %71 = load i8, i8* %70, align 8
  %72 = trunc i8 %71 to i1
  %73 = zext i1 %72 to i32
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %59, i8* noundef getelementptr inbounds ([81 x i8], [81 x i8]* @.str.10.299, i64 0, i64 0), i8* noundef %62, i8* noundef %65, i32 noundef %68, i32 noundef %73)
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %76 = load i8*, i8** %10, align 8
  %77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %75, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11.300, i64 0, i64 0), i8* noundef %76)
  %78 = load i8*, i8** %8, align 8
  call void @llvm.stackrestore(i8* %78)
  br label %79

79:                                               ; preds = %26, %21
  %80 = load %struct.Token*, %struct.Token** %7, align 8
  %81 = getelementptr inbounds %struct.Token, %struct.Token* %80, i32 0, i32 1
  %82 = load %struct.Token*, %struct.Token** %81, align 8
  store %struct.Token* %82, %struct.Token** %7, align 8
  br label %16, !llvm.loop !31

83:                                               ; preds = %16
  ret void
}

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #4

; Function Attrs: nounwind
declare i8* @strncpy(i8* noundef, i8* noundef, i64 noundef) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @extended_asm(%struct.Node* noundef %0, %struct.Token** noundef %1, %struct.Token* noundef %2) #0 {
  %4 = alloca %struct.Node*, align 8
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %struct.Node* %0, %struct.Node** %4, align 8
  store %struct.Token** %1, %struct.Token*** %5, align 8
  store %struct.Token* %2, %struct.Token** %6, align 8
  %24 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 264) #14
  %25 = bitcast i8* %24 to %struct.AsmExtended*
  store %struct.AsmExtended* %25, %struct.AsmExtended** @asmExt, align 8
  %26 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 16) #14
  %27 = bitcast i8* %26 to %struct.AsmTemplate*
  %28 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %29 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %28, i32 0, i32 0
  store %struct.AsmTemplate* %27, %struct.AsmTemplate** %29, align 8
  store i32 0, i32* %7, align 4
  br label %30

30:                                               ; preds = %41, %3
  %31 = load i32, i32* %7, align 4
  %32 = icmp slt i32 %31, 10
  br i1 %32, label %33, label %44

33:                                               ; preds = %30
  %34 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 48) #14
  %35 = bitcast i8* %34 to %struct.AsmInput*
  %36 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %37 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %36, i32 0, i32 2
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %37, i64 0, i64 %39
  store %struct.AsmInput* %35, %struct.AsmInput** %40, align 8
  br label %41

41:                                               ; preds = %33
  %42 = load i32, i32* %7, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %7, align 4
  br label %30, !llvm.loop !32

44:                                               ; preds = %30
  store i32 0, i32* %8, align 4
  br label %45

45:                                               ; preds = %56, %44
  %46 = load i32, i32* %8, align 4
  %47 = icmp slt i32 %46, 10
  br i1 %47, label %48, label %59

48:                                               ; preds = %45
  %49 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 56) #14
  %50 = bitcast i8* %49 to %struct.AsmOutput*
  %51 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %52 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %51, i32 0, i32 1
  %53 = load i32, i32* %8, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %52, i64 0, i64 %54
  store %struct.AsmOutput* %50, %struct.AsmOutput** %55, align 8
  br label %56

56:                                               ; preds = %48
  %57 = load i32, i32* %8, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %8, align 4
  br label %45, !llvm.loop !33

59:                                               ; preds = %45
  store i32 0, i32* %9, align 4
  br label %60

60:                                               ; preds = %71, %59
  %61 = load i32, i32* %9, align 4
  %62 = icmp slt i32 %61, 10
  br i1 %62, label %63, label %74

63:                                               ; preds = %60
  %64 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 8) #14
  %65 = bitcast i8* %64 to %struct.AsmClobber*
  %66 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %67 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %66, i32 0, i32 3
  %68 = load i32, i32* %9, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [10 x %struct.AsmClobber*], [10 x %struct.AsmClobber*]* %67, i64 0, i64 %69
  store %struct.AsmClobber* %65, %struct.AsmClobber** %70, align 8
  br label %71

71:                                               ; preds = %63
  %72 = load i32, i32* %9, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %9, align 4
  br label %60, !llvm.loop !34

74:                                               ; preds = %60
  %75 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 300) #14
  store i8* %75, i8** %10, align 8
  %76 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 300) #14
  store i8* %76, i8** %11, align 8
  %77 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 500) #14
  store i8* %77, i8** %12, align 8
  %78 = load %struct.Token*, %struct.Token** %6, align 8
  %79 = getelementptr inbounds %struct.Token, %struct.Token* %78, i32 0, i32 7
  %80 = load i8*, i8** %79, align 8
  store i8* %80, i8** %13, align 8
  %81 = load i8*, i8** %13, align 8
  %82 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %83 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %82, i32 0, i32 0
  %84 = load %struct.AsmTemplate*, %struct.AsmTemplate** %83, align 8
  %85 = getelementptr inbounds %struct.AsmTemplate, %struct.AsmTemplate* %84, i32 0, i32 0
  store i8* %81, i8** %85, align 8
  %86 = load i8*, i8** %13, align 8
  %87 = call zeroext i1 @check_template(i8* noundef %86)
  %88 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %89 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %88, i32 0, i32 0
  %90 = load %struct.AsmTemplate*, %struct.AsmTemplate** %89, align 8
  %91 = getelementptr inbounds %struct.AsmTemplate, %struct.AsmTemplate* %90, i32 0, i32 1
  %92 = zext i1 %87 to i8
  store i8 %92, i8* %91, align 8
  store i32 0, i32* %18, align 4
  store i32 0, i32* @nbInput, align 4
  store i32 0, i32* @nbOutput, align 4
  store i32 0, i32* @nbClobber, align 4
  store i32 0, i32* @nbLabel, align 4
  br label %93

93:                                               ; preds = %191, %74
  %94 = load %struct.Token*, %struct.Token** %6, align 8
  %95 = getelementptr inbounds %struct.Token, %struct.Token* %94, i32 0, i32 1
  %96 = load %struct.Token*, %struct.Token** %95, align 8
  %97 = call zeroext i1 @equal(%struct.Token* noundef %96, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i64 0, i64 0))
  br i1 %97, label %102, label %98

98:                                               ; preds = %93
  %99 = load %struct.Token*, %struct.Token** %6, align 8
  %100 = call zeroext i1 @equal(%struct.Token* noundef %99, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i64 0, i64 0))
  %101 = xor i1 %100, true
  br label %102

102:                                              ; preds = %98, %93
  %103 = phi i1 [ false, %93 ], [ %101, %98 ]
  br i1 %103, label %104, label %195

104:                                              ; preds = %102
  %105 = load i32, i32* %18, align 4
  switch i32 %105, label %183 [
    i32 0, label %106
    i32 1, label %107
    i32 2, label %123
    i32 3, label %177
    i32 4, label %179
  ]

106:                                              ; preds = %104
  br label %185

107:                                              ; preds = %104
  %108 = load %struct.Node*, %struct.Node** %4, align 8
  %109 = load %struct.Token**, %struct.Token*** %5, align 8
  %110 = load %struct.Token*, %struct.Token** %6, align 8
  %111 = call i8* @output_asm(%struct.Node* noundef %108, %struct.Token** noundef %109, %struct.Token* noundef %110)
  store i8* %111, i8** %15, align 8
  %112 = load i8*, i8** %15, align 8
  %113 = call i8* @generate_output_asm(i8* noundef %112)
  store i8* %113, i8** %16, align 8
  %114 = load i8*, i8** %10, align 8
  %115 = load i8*, i8** %16, align 8
  %116 = load i8*, i8** %16, align 8
  %117 = call i64 @strlen(i8* noundef %116) #13
  %118 = call i8* @strncat(i8* noundef %114, i8* noundef %115, i64 noundef %117) #14
  %119 = load i32, i32* @nbOutput, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* @nbOutput, align 4
  %121 = load %struct.Token**, %struct.Token*** %5, align 8
  %122 = load %struct.Token*, %struct.Token** %121, align 8
  store %struct.Token* %122, %struct.Token** %6, align 8
  br label %185

123:                                              ; preds = %104
  %124 = load %struct.Node*, %struct.Node** %4, align 8
  %125 = load %struct.Token**, %struct.Token*** %5, align 8
  %126 = load %struct.Token*, %struct.Token** %6, align 8
  %127 = call i8* @input_asm(%struct.Node* noundef %124, %struct.Token** noundef %125, %struct.Token* noundef %126)
  store i8* %127, i8** %17, align 8
  %128 = load i8*, i8** %17, align 8
  %129 = call i8* @generate_input_asm(i8* noundef %128)
  store i8* %129, i8** %14, align 8
  %130 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %131 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %130, i32 0, i32 2
  %132 = load i32, i32* @nbInput, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %131, i64 0, i64 %133
  %135 = load %struct.AsmInput*, %struct.AsmInput** %134, align 8
  %136 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %135, i32 0, i32 4
  %137 = load i8, i8* %136, align 4
  %138 = call i32 @retrieve_output_index(i8 noundef signext %137)
  store i32 %138, i32* %19, align 4
  %139 = load i32, i32* %19, align 4
  %140 = icmp slt i32 %139, 0
  br i1 %140, label %141, label %150

141:                                              ; preds = %123
  %142 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %143 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %142, i32 0, i32 2
  %144 = load i32, i32* @nbInput, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %143, i64 0, i64 %145
  %147 = load %struct.AsmInput*, %struct.AsmInput** %146, align 8
  %148 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %147, i32 0, i32 3
  %149 = load i32, i32* %148, align 8
  store i32 %149, i32* %19, align 4
  br label %150

150:                                              ; preds = %141, %123
  %151 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %152 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %151, i32 0, i32 1
  %153 = load i32, i32* %19, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %152, i64 0, i64 %154
  %156 = load %struct.AsmOutput*, %struct.AsmOutput** %155, align 8
  %157 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %156, i32 0, i32 3
  %158 = load i8*, i8** %157, align 8
  store i8* %158, i8** %20, align 8
  %159 = load i8*, i8** %20, align 8
  %160 = icmp ne i8* %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %150
  %162 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %162, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.302, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

163:                                              ; preds = %150
  %164 = load i8*, i8** %14, align 8
  %165 = load i8*, i8** %20, align 8
  %166 = load i8*, i8** %17, align 8
  %167 = call i8* @subst_asm(i8* noundef %164, i8* noundef %165, i8* noundef %166)
  store i8* %167, i8** %14, align 8
  %168 = load i8*, i8** %11, align 8
  %169 = load i8*, i8** %14, align 8
  %170 = load i8*, i8** %14, align 8
  %171 = call i64 @strlen(i8* noundef %170) #13
  %172 = call i8* @strncat(i8* noundef %168, i8* noundef %169, i64 noundef %171) #14
  %173 = load i32, i32* @nbInput, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* @nbInput, align 4
  %175 = load %struct.Token**, %struct.Token*** %5, align 8
  %176 = load %struct.Token*, %struct.Token** %175, align 8
  store %struct.Token* %176, %struct.Token** %6, align 8
  br label %185

177:                                              ; preds = %104
  %178 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %178, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.304, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

179:                                              ; preds = %104
  %180 = load i32, i32* @nbLabel, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* @nbLabel, align 4
  %182 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %182, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4.305, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

183:                                              ; preds = %104
  %184 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %184, i8* noundef getelementptr inbounds ([94 x i8], [94 x i8]* @.str.5.306, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

185:                                              ; preds = %163, %107, %106
  %186 = load %struct.Token*, %struct.Token** %6, align 8
  %187 = call zeroext i1 @equal(%struct.Token* noundef %186, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.307, i64 0, i64 0))
  br i1 %187, label %188, label %191

188:                                              ; preds = %185
  %189 = load i32, i32* %18, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %18, align 4
  br label %191

191:                                              ; preds = %188, %185
  %192 = load %struct.Token*, %struct.Token** %6, align 8
  %193 = getelementptr inbounds %struct.Token, %struct.Token* %192, i32 0, i32 1
  %194 = load %struct.Token*, %struct.Token** %193, align 8
  store %struct.Token* %194, %struct.Token** %6, align 8
  br label %93, !llvm.loop !35

195:                                              ; preds = %102
  %196 = load i8*, i8** %13, align 8
  %197 = load i8*, i8** %15, align 8
  %198 = load i8*, i8** %17, align 8
  %199 = call i8* @subst_asm(i8* noundef %196, i8* noundef %197, i8* noundef %198)
  store i8* %199, i8** %12, align 8
  %200 = load i8*, i8** %11, align 8
  %201 = icmp ne i8* %200, null
  br i1 %201, label %202, label %209

202:                                              ; preds = %195
  %203 = load i8*, i8** %11, align 8
  %204 = load i8*, i8** %12, align 8
  %205 = load i8*, i8** %12, align 8
  %206 = call i64 @strlen(i8* noundef %205) #13
  %207 = call i8* @strncat(i8* noundef %203, i8* noundef %204, i64 noundef %206) #14
  %208 = load i8*, i8** %11, align 8
  store i8* %208, i8** %12, align 8
  br label %209

209:                                              ; preds = %202, %195
  %210 = load i8*, i8** %10, align 8
  %211 = icmp ne i8* %210, null
  br i1 %211, label %212, label %218

212:                                              ; preds = %209
  %213 = load i8*, i8** %12, align 8
  %214 = load i8*, i8** %10, align 8
  %215 = load i8*, i8** %10, align 8
  %216 = call i64 @strlen(i8* noundef %215) #13
  %217 = call i8* @strncat(i8* noundef %213, i8* noundef %214, i64 noundef %216) #14
  br label %218

218:                                              ; preds = %212, %209
  %219 = load i8*, i8** %12, align 8
  %220 = call i8* @subst_asm(i8* noundef %219, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.308, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.309, i64 0, i64 0))
  store i8* %220, i8** %12, align 8
  %221 = load i8*, i8** %12, align 8
  %222 = call i8* @subst_asm(i8* noundef %221, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.310, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.311, i64 0, i64 0))
  store i8* %222, i8** %12, align 8
  %223 = load i8*, i8** %12, align 8
  %224 = call i8* @subst_asm(i8* noundef %223, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.312, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.313, i64 0, i64 0))
  store i8* %224, i8** %12, align 8
  %225 = load i8*, i8** %12, align 8
  %226 = call i8* @subst_asm(i8* noundef %225, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.314, i64 0, i64 0), i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.315, i64 0, i64 0))
  store i8* %226, i8** %12, align 8
  %227 = load %struct.Token*, %struct.Token** %6, align 8
  %228 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %227, %struct.Token** %228, align 8
  store i32 0, i32* %21, align 4
  br label %229

229:                                              ; preds = %240, %218
  %230 = load i32, i32* %21, align 4
  %231 = icmp slt i32 %230, 10
  br i1 %231, label %232, label %243

232:                                              ; preds = %229
  %233 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %234 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %233, i32 0, i32 2
  %235 = load i32, i32* %21, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %234, i64 0, i64 %236
  %238 = load %struct.AsmInput*, %struct.AsmInput** %237, align 8
  %239 = bitcast %struct.AsmInput* %238 to i8*
  call void @free(i8* noundef %239) #14
  br label %240

240:                                              ; preds = %232
  %241 = load i32, i32* %21, align 4
  %242 = add nsw i32 %241, 1
  store i32 %242, i32* %21, align 4
  br label %229, !llvm.loop !36

243:                                              ; preds = %229
  store i32 0, i32* %22, align 4
  br label %244

244:                                              ; preds = %255, %243
  %245 = load i32, i32* %22, align 4
  %246 = icmp slt i32 %245, 10
  br i1 %246, label %247, label %258

247:                                              ; preds = %244
  %248 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %249 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %248, i32 0, i32 1
  %250 = load i32, i32* %22, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %249, i64 0, i64 %251
  %253 = load %struct.AsmOutput*, %struct.AsmOutput** %252, align 8
  %254 = bitcast %struct.AsmOutput* %253 to i8*
  call void @free(i8* noundef %254) #14
  br label %255

255:                                              ; preds = %247
  %256 = load i32, i32* %22, align 4
  %257 = add nsw i32 %256, 1
  store i32 %257, i32* %22, align 4
  br label %244, !llvm.loop !37

258:                                              ; preds = %244
  store i32 0, i32* %23, align 4
  br label %259

259:                                              ; preds = %270, %258
  %260 = load i32, i32* %23, align 4
  %261 = icmp slt i32 %260, 10
  br i1 %261, label %262, label %273

262:                                              ; preds = %259
  %263 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %264 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %263, i32 0, i32 3
  %265 = load i32, i32* %23, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [10 x %struct.AsmClobber*], [10 x %struct.AsmClobber*]* %264, i64 0, i64 %266
  %268 = load %struct.AsmClobber*, %struct.AsmClobber** %267, align 8
  %269 = bitcast %struct.AsmClobber* %268 to i8*
  call void @free(i8* noundef %269) #14
  br label %270

270:                                              ; preds = %262
  %271 = load i32, i32* %23, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, i32* %23, align 4
  br label %259, !llvm.loop !38

273:                                              ; preds = %259
  %274 = load i8*, i8** %12, align 8
  ret i8* %274
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64 noundef, i64 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @check_template(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i8* @strchr(i8* noundef %3, i32 noundef 37) #13
  %5 = icmp ne i8* %4, null
  ret i1 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @output_asm(%struct.Node* noundef %0, %struct.Token** noundef %1, %struct.Token* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token**, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.VarScope*, align 8
  store %struct.Node* %0, %struct.Node** %5, align 8
  store %struct.Token** %1, %struct.Token*** %6, align 8
  store %struct.Token* %2, %struct.Token** %7, align 8
  br label %10

10:                                               ; preds = %626, %3
  %11 = load %struct.Token*, %struct.Token** %7, align 8
  %12 = getelementptr inbounds %struct.Token, %struct.Token* %11, i32 0, i32 1
  %13 = load %struct.Token*, %struct.Token** %12, align 8
  %14 = call zeroext i1 @equal(%struct.Token* noundef %13, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.307, i64 0, i64 0))
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = load %struct.Token*, %struct.Token** %7, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 1
  %18 = load %struct.Token*, %struct.Token** %17, align 8
  %19 = call zeroext i1 @equal(%struct.Token* noundef %18, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i64 0, i64 0))
  %20 = xor i1 %19, true
  br label %21

21:                                               ; preds = %15, %10
  %22 = phi i1 [ false, %10 ], [ %20, %15 ]
  br i1 %22, label %23, label %630

23:                                               ; preds = %21
  %24 = load %struct.Token*, %struct.Token** %7, align 8
  %25 = getelementptr inbounds %struct.Token, %struct.Token* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 16
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %335

28:                                               ; preds = %23
  %29 = load %struct.Token*, %struct.Token** %7, align 8
  %30 = getelementptr inbounds %struct.Token, %struct.Token* %29, i32 0, i32 7
  %31 = load i8*, i8** %30, align 8
  %32 = load %struct.Token*, %struct.Token** %7, align 8
  %33 = getelementptr inbounds %struct.Token, %struct.Token* %32, i32 0, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = call i32 @strncmp(i8* noundef %31, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.359, i64 0, i64 0), i64 noundef %35) #13
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %48

38:                                               ; preds = %28
  %39 = load %struct.Token*, %struct.Token** %7, align 8
  %40 = getelementptr inbounds %struct.Token, %struct.Token* %39, i32 0, i32 7
  %41 = load i8*, i8** %40, align 8
  %42 = load %struct.Token*, %struct.Token** %7, align 8
  %43 = getelementptr inbounds %struct.Token, %struct.Token* %42, i32 0, i32 5
  %44 = load i32, i32* %43, align 8
  %45 = sext i32 %44 to i64
  %46 = call i32 @strncmp(i8* noundef %41, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.360, i64 0, i64 0), i64 noundef %45) #13
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %96, label %48

48:                                               ; preds = %38, %28
  %49 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %50 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %49, i32 0, i32 1
  %51 = load i32, i32* @nbOutput, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %50, i64 0, i64 %52
  %54 = load %struct.AsmOutput*, %struct.AsmOutput** %53, align 8
  %55 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %54, i32 0, i32 7
  store i8 1, i8* %55, align 4
  %56 = load %struct.Token*, %struct.Token** %7, align 8
  %57 = getelementptr inbounds %struct.Token, %struct.Token* %56, i32 0, i32 7
  %58 = load i8*, i8** %57, align 8
  %59 = load %struct.Token*, %struct.Token** %7, align 8
  %60 = getelementptr inbounds %struct.Token, %struct.Token* %59, i32 0, i32 5
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = call i32 @strncmp(i8* noundef %58, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.359, i64 0, i64 0), i64 noundef %62) #13
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %48
  %66 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %67 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %66, i32 0, i32 1
  %68 = load i32, i32* @nbOutput, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %67, i64 0, i64 %69
  %71 = load %struct.AsmOutput*, %struct.AsmOutput** %70, align 8
  %72 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %71, i32 0, i32 2
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.361, i64 0, i64 0), i8** %72, align 8
  br label %81

73:                                               ; preds = %48
  %74 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %75 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %74, i32 0, i32 1
  %76 = load i32, i32* @nbOutput, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %75, i64 0, i64 %77
  %79 = load %struct.AsmOutput*, %struct.AsmOutput** %78, align 8
  %80 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %79, i32 0, i32 2
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18.362, i64 0, i64 0), i8** %80, align 8
  br label %81

81:                                               ; preds = %73, %65
  %82 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %83 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %82, i32 0, i32 1
  %84 = load i32, i32* @nbOutput, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %83, i64 0, i64 %85
  %87 = load %struct.AsmOutput*, %struct.AsmOutput** %86, align 8
  %88 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %87, i32 0, i32 3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.363, i64 0, i64 0), i8** %88, align 8
  %89 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %90 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %89, i32 0, i32 1
  %91 = load i32, i32* @nbOutput, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %90, i64 0, i64 %92
  %94 = load %struct.AsmOutput*, %struct.AsmOutput** %93, align 8
  %95 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %94, i32 0, i32 4
  store i8 114, i8* %95, align 8
  br label %326

96:                                               ; preds = %38
  %97 = load %struct.Token*, %struct.Token** %7, align 8
  %98 = getelementptr inbounds %struct.Token, %struct.Token* %97, i32 0, i32 7
  %99 = load i8*, i8** %98, align 8
  %100 = load %struct.Token*, %struct.Token** %7, align 8
  %101 = getelementptr inbounds %struct.Token, %struct.Token* %100, i32 0, i32 5
  %102 = load i32, i32* %101, align 8
  %103 = sext i32 %102 to i64
  %104 = call i32 @strncmp(i8* noundef %99, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.364, i64 0, i64 0), i64 noundef %103) #13
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %116

106:                                              ; preds = %96
  %107 = load %struct.Token*, %struct.Token** %7, align 8
  %108 = getelementptr inbounds %struct.Token, %struct.Token* %107, i32 0, i32 7
  %109 = load i8*, i8** %108, align 8
  %110 = load %struct.Token*, %struct.Token** %7, align 8
  %111 = getelementptr inbounds %struct.Token, %struct.Token* %110, i32 0, i32 5
  %112 = load i32, i32* %111, align 8
  %113 = sext i32 %112 to i64
  %114 = call i32 @strncmp(i8* noundef %109, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.365, i64 0, i64 0), i64 noundef %113) #13
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %164, label %116

116:                                              ; preds = %106, %96
  %117 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %118 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %117, i32 0, i32 1
  %119 = load i32, i32* @nbOutput, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %118, i64 0, i64 %120
  %122 = load %struct.AsmOutput*, %struct.AsmOutput** %121, align 8
  %123 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %122, i32 0, i32 8
  store i8 1, i8* %123, align 1
  %124 = load %struct.Token*, %struct.Token** %7, align 8
  %125 = getelementptr inbounds %struct.Token, %struct.Token* %124, i32 0, i32 7
  %126 = load i8*, i8** %125, align 8
  %127 = load %struct.Token*, %struct.Token** %7, align 8
  %128 = getelementptr inbounds %struct.Token, %struct.Token* %127, i32 0, i32 5
  %129 = load i32, i32* %128, align 8
  %130 = sext i32 %129 to i64
  %131 = call i32 @strncmp(i8* noundef %126, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.364, i64 0, i64 0), i64 noundef %130) #13
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %141, label %133

133:                                              ; preds = %116
  %134 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %135 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %134, i32 0, i32 1
  %136 = load i32, i32* @nbOutput, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %135, i64 0, i64 %137
  %139 = load %struct.AsmOutput*, %struct.AsmOutput** %138, align 8
  %140 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %139, i32 0, i32 2
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.361, i64 0, i64 0), i8** %140, align 8
  br label %149

141:                                              ; preds = %116
  %142 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %143 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %142, i32 0, i32 1
  %144 = load i32, i32* @nbOutput, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %143, i64 0, i64 %145
  %147 = load %struct.AsmOutput*, %struct.AsmOutput** %146, align 8
  %148 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %147, i32 0, i32 2
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18.362, i64 0, i64 0), i8** %148, align 8
  br label %149

149:                                              ; preds = %141, %133
  %150 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %151 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %150, i32 0, i32 1
  %152 = load i32, i32* @nbOutput, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %151, i64 0, i64 %153
  %155 = load %struct.AsmOutput*, %struct.AsmOutput** %154, align 8
  %156 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %155, i32 0, i32 3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.363, i64 0, i64 0), i8** %156, align 8
  %157 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %158 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %157, i32 0, i32 1
  %159 = load i32, i32* @nbOutput, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %158, i64 0, i64 %160
  %162 = load %struct.AsmOutput*, %struct.AsmOutput** %161, align 8
  %163 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %162, i32 0, i32 4
  store i8 109, i8* %163, align 8
  br label %325

164:                                              ; preds = %106
  %165 = load %struct.Token*, %struct.Token** %7, align 8
  %166 = getelementptr inbounds %struct.Token, %struct.Token* %165, i32 0, i32 7
  %167 = load i8*, i8** %166, align 8
  %168 = load %struct.Token*, %struct.Token** %7, align 8
  %169 = getelementptr inbounds %struct.Token, %struct.Token* %168, i32 0, i32 5
  %170 = load i32, i32* %169, align 8
  %171 = sext i32 %170 to i64
  %172 = call i32 @strncmp(i8* noundef %167, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.366, i64 0, i64 0), i64 noundef %171) #13
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %204

174:                                              ; preds = %164
  %175 = load %struct.Token*, %struct.Token** %7, align 8
  %176 = getelementptr inbounds %struct.Token, %struct.Token* %175, i32 0, i32 7
  %177 = load i8*, i8** %176, align 8
  %178 = load %struct.Token*, %struct.Token** %7, align 8
  %179 = getelementptr inbounds %struct.Token, %struct.Token* %178, i32 0, i32 5
  %180 = load i32, i32* %179, align 8
  %181 = sext i32 %180 to i64
  %182 = call i32 @strncmp(i8* noundef %177, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.367, i64 0, i64 0), i64 noundef %181) #13
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %184, label %204

184:                                              ; preds = %174
  %185 = load %struct.Token*, %struct.Token** %7, align 8
  %186 = getelementptr inbounds %struct.Token, %struct.Token* %185, i32 0, i32 7
  %187 = load i8*, i8** %186, align 8
  %188 = load %struct.Token*, %struct.Token** %7, align 8
  %189 = getelementptr inbounds %struct.Token, %struct.Token* %188, i32 0, i32 5
  %190 = load i32, i32* %189, align 8
  %191 = sext i32 %190 to i64
  %192 = call i32 @strncmp(i8* noundef %187, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.368, i64 0, i64 0), i64 noundef %191) #13
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %194, label %204

194:                                              ; preds = %184
  %195 = load %struct.Token*, %struct.Token** %7, align 8
  %196 = getelementptr inbounds %struct.Token, %struct.Token* %195, i32 0, i32 7
  %197 = load i8*, i8** %196, align 8
  %198 = load %struct.Token*, %struct.Token** %7, align 8
  %199 = getelementptr inbounds %struct.Token, %struct.Token* %198, i32 0, i32 5
  %200 = load i32, i32* %199, align 8
  %201 = sext i32 %200 to i64
  %202 = call i32 @strncmp(i8* noundef %197, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.369, i64 0, i64 0), i64 noundef %201) #13
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %324, label %204

204:                                              ; preds = %194, %184, %174, %164
  %205 = load %struct.Token*, %struct.Token** %7, align 8
  %206 = getelementptr inbounds %struct.Token, %struct.Token* %205, i32 0, i32 7
  %207 = load i8*, i8** %206, align 8
  %208 = load %struct.Token*, %struct.Token** %7, align 8
  %209 = getelementptr inbounds %struct.Token, %struct.Token* %208, i32 0, i32 5
  %210 = load i32, i32* %209, align 8
  %211 = sext i32 %210 to i64
  %212 = call i32 @strncmp(i8* noundef %207, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.366, i64 0, i64 0), i64 noundef %211) #13
  %213 = icmp ne i32 %212, 0
  br i1 %213, label %229, label %214

214:                                              ; preds = %204
  %215 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %216 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %215, i32 0, i32 1
  %217 = load i32, i32* @nbOutput, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %216, i64 0, i64 %218
  %220 = load %struct.AsmOutput*, %struct.AsmOutput** %219, align 8
  %221 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %220, i32 0, i32 3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.363, i64 0, i64 0), i8** %221, align 8
  %222 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %223 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %222, i32 0, i32 1
  %224 = load i32, i32* @nbOutput, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %223, i64 0, i64 %225
  %227 = load %struct.AsmOutput*, %struct.AsmOutput** %226, align 8
  %228 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %227, i32 0, i32 4
  store i8 97, i8* %228, align 8
  br label %309

229:                                              ; preds = %204
  %230 = load %struct.Token*, %struct.Token** %7, align 8
  %231 = getelementptr inbounds %struct.Token, %struct.Token* %230, i32 0, i32 7
  %232 = load i8*, i8** %231, align 8
  %233 = load %struct.Token*, %struct.Token** %7, align 8
  %234 = getelementptr inbounds %struct.Token, %struct.Token* %233, i32 0, i32 5
  %235 = load i32, i32* %234, align 8
  %236 = sext i32 %235 to i64
  %237 = call i32 @strncmp(i8* noundef %232, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.367, i64 0, i64 0), i64 noundef %236) #13
  %238 = icmp ne i32 %237, 0
  br i1 %238, label %254, label %239

239:                                              ; preds = %229
  %240 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %241 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %240, i32 0, i32 1
  %242 = load i32, i32* @nbOutput, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %241, i64 0, i64 %243
  %245 = load %struct.AsmOutput*, %struct.AsmOutput** %244, align 8
  %246 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %245, i32 0, i32 3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.370, i64 0, i64 0), i8** %246, align 8
  %247 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %248 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %247, i32 0, i32 1
  %249 = load i32, i32* @nbOutput, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %248, i64 0, i64 %250
  %252 = load %struct.AsmOutput*, %struct.AsmOutput** %251, align 8
  %253 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %252, i32 0, i32 4
  store i8 98, i8* %253, align 8
  br label %308

254:                                              ; preds = %229
  %255 = load %struct.Token*, %struct.Token** %7, align 8
  %256 = getelementptr inbounds %struct.Token, %struct.Token* %255, i32 0, i32 7
  %257 = load i8*, i8** %256, align 8
  %258 = load %struct.Token*, %struct.Token** %7, align 8
  %259 = getelementptr inbounds %struct.Token, %struct.Token* %258, i32 0, i32 5
  %260 = load i32, i32* %259, align 8
  %261 = sext i32 %260 to i64
  %262 = call i32 @strncmp(i8* noundef %257, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.368, i64 0, i64 0), i64 noundef %261) #13
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %279, label %264

264:                                              ; preds = %254
  %265 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %266 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %265, i32 0, i32 1
  %267 = load i32, i32* @nbOutput, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %266, i64 0, i64 %268
  %270 = load %struct.AsmOutput*, %struct.AsmOutput** %269, align 8
  %271 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %270, i32 0, i32 3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27.371, i64 0, i64 0), i8** %271, align 8
  %272 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %273 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %272, i32 0, i32 1
  %274 = load i32, i32* @nbOutput, align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %273, i64 0, i64 %275
  %277 = load %struct.AsmOutput*, %struct.AsmOutput** %276, align 8
  %278 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %277, i32 0, i32 4
  store i8 99, i8* %278, align 8
  br label %307

279:                                              ; preds = %254
  %280 = load %struct.Token*, %struct.Token** %7, align 8
  %281 = getelementptr inbounds %struct.Token, %struct.Token* %280, i32 0, i32 7
  %282 = load i8*, i8** %281, align 8
  %283 = load %struct.Token*, %struct.Token** %7, align 8
  %284 = getelementptr inbounds %struct.Token, %struct.Token* %283, i32 0, i32 5
  %285 = load i32, i32* %284, align 8
  %286 = sext i32 %285 to i64
  %287 = call i32 @strncmp(i8* noundef %282, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.369, i64 0, i64 0), i64 noundef %286) #13
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %304, label %289

289:                                              ; preds = %279
  %290 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %291 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %290, i32 0, i32 1
  %292 = load i32, i32* @nbOutput, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %291, i64 0, i64 %293
  %295 = load %struct.AsmOutput*, %struct.AsmOutput** %294, align 8
  %296 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %295, i32 0, i32 3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.372, i64 0, i64 0), i8** %296, align 8
  %297 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %298 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %297, i32 0, i32 1
  %299 = load i32, i32* @nbOutput, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %298, i64 0, i64 %300
  %302 = load %struct.AsmOutput*, %struct.AsmOutput** %301, align 8
  %303 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %302, i32 0, i32 4
  store i8 100, i8* %303, align 8
  br label %306

304:                                              ; preds = %279
  %305 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %305, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.29.373, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

306:                                              ; preds = %289
  br label %307

307:                                              ; preds = %306, %264
  br label %308

308:                                              ; preds = %307, %239
  br label %309

309:                                              ; preds = %308, %214
  %310 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %311 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %310, i32 0, i32 1
  %312 = load i32, i32* @nbOutput, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %311, i64 0, i64 %313
  %315 = load %struct.AsmOutput*, %struct.AsmOutput** %314, align 8
  %316 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %315, i32 0, i32 9
  store i8 1, i8* %316, align 2
  %317 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %318 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %317, i32 0, i32 1
  %319 = load i32, i32* @nbOutput, align 4
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %318, i64 0, i64 %320
  %322 = load %struct.AsmOutput*, %struct.AsmOutput** %321, align 8
  %323 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %322, i32 0, i32 2
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.361, i64 0, i64 0), i8** %323, align 8
  br label %324

324:                                              ; preds = %309, %194
  br label %325

325:                                              ; preds = %324, %149
  br label %326

326:                                              ; preds = %325, %81
  %327 = load i32, i32* @nbOutput, align 4
  %328 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %329 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %328, i32 0, i32 1
  %330 = load i32, i32* @nbOutput, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %329, i64 0, i64 %331
  %333 = load %struct.AsmOutput*, %struct.AsmOutput** %332, align 8
  %334 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %333, i32 0, i32 5
  store i32 %327, i32* %334, align 4
  br label %626

335:                                              ; preds = %23
  %336 = load %struct.Token*, %struct.Token** %7, align 8
  %337 = call zeroext i1 @equal(%struct.Token* noundef %336, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.351, i64 0, i64 0))
  br i1 %337, label %338, label %341

338:                                              ; preds = %335
  %339 = load %struct.Token*, %struct.Token** %7, align 8
  %340 = call %struct.Token* @skip(%struct.Token* noundef %339, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.351, i64 0, i64 0))
  store %struct.Token* %340, %struct.Token** %7, align 8
  br label %625

341:                                              ; preds = %335
  %342 = load %struct.Token*, %struct.Token** %7, align 8
  %343 = call zeroext i1 @equal(%struct.Token* noundef %342, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.344, i64 0, i64 0))
  br i1 %343, label %344, label %622

344:                                              ; preds = %341
  %345 = load %struct.Token*, %struct.Token** %7, align 8
  %346 = call %struct.Token* @skip(%struct.Token* noundef %345, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.344, i64 0, i64 0))
  store %struct.Token* %346, %struct.Token** %7, align 8
  %347 = load %struct.Token*, %struct.Token** %7, align 8
  %348 = getelementptr inbounds %struct.Token, %struct.Token* %347, i32 0, i32 0
  %349 = load i32, i32* %348, align 16
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %490

351:                                              ; preds = %344
  %352 = load %struct.Token*, %struct.Token** %7, align 8
  %353 = call %struct.VarScope* @find_var(%struct.Token* noundef %352)
  store %struct.VarScope* %353, %struct.VarScope** %9, align 8
  %354 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %355 = icmp ne %struct.VarScope* %354, null
  br i1 %355, label %358, label %356

356:                                              ; preds = %351
  %357 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %357, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.32.374, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

358:                                              ; preds = %351
  %359 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %360 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %359, i32 0, i32 0
  %361 = load %struct.Obj*, %struct.Obj** %360, align 8
  %362 = getelementptr inbounds %struct.Obj, %struct.Obj* %361, i32 0, i32 3
  %363 = load %struct.Type*, %struct.Type** %362, align 8
  %364 = icmp ne %struct.Type* %363, null
  br i1 %364, label %367, label %365

365:                                              ; preds = %358
  %366 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %366, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.33.375, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

367:                                              ; preds = %358
  %368 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %369 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %368, i32 0, i32 0
  %370 = load %struct.Obj*, %struct.Obj** %369, align 8
  %371 = getelementptr inbounds %struct.Obj, %struct.Obj* %370, i32 0, i32 3
  %372 = load %struct.Type*, %struct.Type** %371, align 8
  %373 = getelementptr inbounds %struct.Type, %struct.Type* %372, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %376 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %375, i32 0, i32 1
  %377 = load i32, i32* @nbOutput, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %376, i64 0, i64 %378
  %380 = load %struct.AsmOutput*, %struct.AsmOutput** %379, align 8
  %381 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %380, i32 0, i32 6
  store i32 %374, i32* %381, align 8
  %382 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %383 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %382, i32 0, i32 1
  %384 = load i32, i32* @nbOutput, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %383, i64 0, i64 %385
  %387 = load %struct.AsmOutput*, %struct.AsmOutput** %386, align 8
  %388 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %387, i32 0, i32 11
  store i8 1, i8* %388, align 4
  %389 = load %struct.Token*, %struct.Token** %7, align 8
  %390 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %391 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %390, i32 0, i32 1
  %392 = load i32, i32* @nbOutput, align 4
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %391, i64 0, i64 %393
  %395 = load %struct.AsmOutput*, %struct.AsmOutput** %394, align 8
  %396 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %395, i32 0, i32 0
  store %struct.Token* %389, %struct.Token** %396, align 8
  %397 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %398 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %397, i32 0, i32 0
  %399 = load %struct.Obj*, %struct.Obj** %398, align 8
  %400 = getelementptr inbounds %struct.Obj, %struct.Obj* %399, i32 0, i32 2
  %401 = load i8*, i8** %400, align 8
  %402 = icmp ne i8* %401, null
  br i1 %402, label %403, label %422

403:                                              ; preds = %367
  %404 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %405 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %404, i32 0, i32 0
  %406 = load %struct.Obj*, %struct.Obj** %405, align 8
  %407 = getelementptr inbounds %struct.Obj, %struct.Obj* %406, i32 0, i32 8
  %408 = load i32, i32* %407, align 4
  %409 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %410 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %409, i32 0, i32 0
  %411 = load %struct.Obj*, %struct.Obj** %410, align 8
  %412 = getelementptr inbounds %struct.Obj, %struct.Obj* %411, i32 0, i32 2
  %413 = load i8*, i8** %412, align 8
  %414 = call i32 @retrieve_parameter_order(i32 noundef %408, i8* noundef %413)
  %415 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %416 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %415, i32 0, i32 1
  %417 = load i32, i32* @nbOutput, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %416, i64 0, i64 %418
  %420 = load %struct.AsmOutput*, %struct.AsmOutput** %419, align 8
  %421 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %420, i32 0, i32 10
  store i32 %414, i32* %421, align 8
  br label %430

422:                                              ; preds = %367
  %423 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %424 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %423, i32 0, i32 1
  %425 = load i32, i32* @nbOutput, align 4
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %424, i64 0, i64 %426
  %428 = load %struct.AsmOutput*, %struct.AsmOutput** %427, align 8
  %429 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %428, i32 0, i32 10
  store i32 0, i32* %429, align 8
  br label %430

430:                                              ; preds = %422, %403
  %431 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %432 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %431, i32 0, i32 1
  %433 = load i32, i32* @nbOutput, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %432, i64 0, i64 %434
  %436 = load %struct.AsmOutput*, %struct.AsmOutput** %435, align 8
  %437 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %436, i32 0, i32 3
  %438 = load i8*, i8** %437, align 8
  %439 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %440 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %439, i32 0, i32 1
  %441 = load i32, i32* @nbOutput, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %440, i64 0, i64 %442
  %444 = load %struct.AsmOutput*, %struct.AsmOutput** %443, align 8
  %445 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %444, i32 0, i32 6
  %446 = load i32, i32* %445, align 8
  %447 = call i8* @update_register_size(i8* noundef %438, i32 noundef %446)
  %448 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %449 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %448, i32 0, i32 1
  %450 = load i32, i32* @nbOutput, align 4
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %449, i64 0, i64 %451
  %453 = load %struct.AsmOutput*, %struct.AsmOutput** %452, align 8
  %454 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %453, i32 0, i32 3
  store i8* %447, i8** %454, align 8
  %455 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %456 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %455, i32 0, i32 1
  %457 = load i32, i32* @nbOutput, align 4
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %456, i64 0, i64 %458
  %460 = load %struct.AsmOutput*, %struct.AsmOutput** %459, align 8
  %461 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %460, i32 0, i32 3
  %462 = load i8*, i8** %461, align 8
  %463 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %464 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %463, i32 0, i32 1
  %465 = load i32, i32* @nbOutput, align 4
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %464, i64 0, i64 %466
  %468 = load %struct.AsmOutput*, %struct.AsmOutput** %467, align 8
  %469 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %468, i32 0, i32 1
  store i8* %462, i8** %469, align 8
  %470 = load %struct.Token*, %struct.Token** %7, align 8
  %471 = getelementptr inbounds %struct.Token, %struct.Token* %470, i32 0, i32 1
  %472 = load %struct.Token*, %struct.Token** %471, align 8
  store %struct.Token* %472, %struct.Token** %7, align 8
  %473 = load %struct.Token*, %struct.Token** %7, align 8
  %474 = call %struct.Token* @skip(%struct.Token* noundef %473, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.346, i64 0, i64 0))
  %475 = load %struct.Token**, %struct.Token*** %6, align 8
  store %struct.Token* %474, %struct.Token** %475, align 8
  %476 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %477 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %476, i32 0, i32 1
  %478 = load i32, i32* @nbOutput, align 4
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %477, i64 0, i64 %479
  %481 = load %struct.AsmOutput*, %struct.AsmOutput** %480, align 8
  %482 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %481, i32 0, i32 1
  %483 = load i8*, i8** %482, align 8
  store i8* %483, i8** %8, align 8
  %484 = load i8*, i8** %8, align 8
  %485 = icmp ne i8* %484, null
  br i1 %485, label %488, label %486

486:                                              ; preds = %430
  %487 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %487, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.35.376, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

488:                                              ; preds = %430
  %489 = load i8*, i8** %8, align 8
  store i8* %489, i8** %4, align 8
  br label %631

490:                                              ; preds = %344
  %491 = load %struct.Token*, %struct.Token** %7, align 8
  %492 = call zeroext i1 @equal(%struct.Token* noundef %491, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36.349, i64 0, i64 0))
  br i1 %492, label %493, label %618

493:                                              ; preds = %490
  %494 = load %struct.Token*, %struct.Token** %7, align 8
  %495 = call zeroext i1 @consume(%struct.Token** noundef %7, %struct.Token* noundef %494, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36.349, i64 0, i64 0))
  %496 = load %struct.Token*, %struct.Token** %7, align 8
  %497 = getelementptr inbounds %struct.Token, %struct.Token* %496, i32 0, i32 0
  %498 = load i32, i32* %497, align 16
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %617

500:                                              ; preds = %493
  %501 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %502 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %501, i32 0, i32 1
  %503 = load i32, i32* @nbOutput, align 4
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %502, i64 0, i64 %504
  %506 = load %struct.AsmOutput*, %struct.AsmOutput** %505, align 8
  %507 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %506, i32 0, i32 12
  store i8 1, i8* %507, align 1
  %508 = load %struct.Token*, %struct.Token** %7, align 8
  %509 = call %struct.VarScope* @find_var(%struct.Token* noundef %508)
  store %struct.VarScope* %509, %struct.VarScope** %9, align 8
  %510 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %511 = icmp ne %struct.VarScope* %510, null
  br i1 %511, label %514, label %512

512:                                              ; preds = %500
  %513 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %513, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.37.377, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

514:                                              ; preds = %500
  %515 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %516 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %515, i32 0, i32 0
  %517 = load %struct.Obj*, %struct.Obj** %516, align 8
  %518 = getelementptr inbounds %struct.Obj, %struct.Obj* %517, i32 0, i32 3
  %519 = load %struct.Type*, %struct.Type** %518, align 8
  %520 = icmp ne %struct.Type* %519, null
  br i1 %520, label %523, label %521

521:                                              ; preds = %514
  %522 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %522, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.38.378, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

523:                                              ; preds = %514
  %524 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %525 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %524, i32 0, i32 0
  %526 = load %struct.Obj*, %struct.Obj** %525, align 8
  %527 = getelementptr inbounds %struct.Obj, %struct.Obj* %526, i32 0, i32 3
  %528 = load %struct.Type*, %struct.Type** %527, align 8
  %529 = getelementptr inbounds %struct.Type, %struct.Type* %528, i32 0, i32 6
  %530 = load %struct.Type*, %struct.Type** %529, align 8
  %531 = getelementptr inbounds %struct.Type, %struct.Type* %530, i32 0, i32 1
  %532 = load i32, i32* %531, align 4
  %533 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %534 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %533, i32 0, i32 1
  %535 = load i32, i32* @nbOutput, align 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %534, i64 0, i64 %536
  %538 = load %struct.AsmOutput*, %struct.AsmOutput** %537, align 8
  %539 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %538, i32 0, i32 6
  store i32 %532, i32* %539, align 8
  %540 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %541 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %540, i32 0, i32 0
  %542 = load %struct.Obj*, %struct.Obj** %541, align 8
  %543 = getelementptr inbounds %struct.Obj, %struct.Obj* %542, i32 0, i32 8
  %544 = load i32, i32* %543, align 4
  %545 = load %struct.VarScope*, %struct.VarScope** %9, align 8
  %546 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %545, i32 0, i32 0
  %547 = load %struct.Obj*, %struct.Obj** %546, align 8
  %548 = getelementptr inbounds %struct.Obj, %struct.Obj* %547, i32 0, i32 2
  %549 = load i8*, i8** %548, align 8
  %550 = call i32 @retrieve_parameter_order(i32 noundef %544, i8* noundef %549)
  %551 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %552 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %551, i32 0, i32 1
  %553 = load i32, i32* @nbOutput, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %552, i64 0, i64 %554
  %556 = load %struct.AsmOutput*, %struct.AsmOutput** %555, align 8
  %557 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %556, i32 0, i32 10
  store i32 %550, i32* %557, align 8
  %558 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %559 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %558, i32 0, i32 1
  %560 = load i32, i32* @nbOutput, align 4
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %559, i64 0, i64 %561
  %563 = load %struct.AsmOutput*, %struct.AsmOutput** %562, align 8
  %564 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %563, i32 0, i32 3
  %565 = load i8*, i8** %564, align 8
  %566 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %567 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %566, i32 0, i32 1
  %568 = load i32, i32* @nbOutput, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %567, i64 0, i64 %569
  %571 = load %struct.AsmOutput*, %struct.AsmOutput** %570, align 8
  %572 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %571, i32 0, i32 6
  %573 = load i32, i32* %572, align 8
  %574 = call i8* @update_register_size(i8* noundef %565, i32 noundef %573)
  %575 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %576 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %575, i32 0, i32 1
  %577 = load i32, i32* @nbOutput, align 4
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %576, i64 0, i64 %578
  %580 = load %struct.AsmOutput*, %struct.AsmOutput** %579, align 8
  %581 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %580, i32 0, i32 3
  store i8* %574, i8** %581, align 8
  %582 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %583 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %582, i32 0, i32 1
  %584 = load i32, i32* @nbOutput, align 4
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %583, i64 0, i64 %585
  %587 = load %struct.AsmOutput*, %struct.AsmOutput** %586, align 8
  %588 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %587, i32 0, i32 3
  %589 = load i8*, i8** %588, align 8
  %590 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %591 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %590, i32 0, i32 1
  %592 = load i32, i32* @nbOutput, align 4
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %591, i64 0, i64 %593
  %595 = load %struct.AsmOutput*, %struct.AsmOutput** %594, align 8
  %596 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %595, i32 0, i32 1
  store i8* %589, i8** %596, align 8
  %597 = load %struct.Token*, %struct.Token** %7, align 8
  %598 = getelementptr inbounds %struct.Token, %struct.Token* %597, i32 0, i32 1
  %599 = load %struct.Token*, %struct.Token** %598, align 8
  store %struct.Token* %599, %struct.Token** %7, align 8
  %600 = load %struct.Token*, %struct.Token** %7, align 8
  %601 = call %struct.Token* @skip(%struct.Token* noundef %600, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.346, i64 0, i64 0))
  %602 = load %struct.Token**, %struct.Token*** %6, align 8
  store %struct.Token* %601, %struct.Token** %602, align 8
  %603 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %604 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %603, i32 0, i32 1
  %605 = load i32, i32* @nbOutput, align 4
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %604, i64 0, i64 %606
  %608 = load %struct.AsmOutput*, %struct.AsmOutput** %607, align 8
  %609 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %608, i32 0, i32 1
  %610 = load i8*, i8** %609, align 8
  store i8* %610, i8** %8, align 8
  %611 = load i8*, i8** %8, align 8
  %612 = icmp ne i8* %611, null
  br i1 %612, label %615, label %613

613:                                              ; preds = %523
  %614 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %614, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.39.379, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

615:                                              ; preds = %523
  %616 = load i8*, i8** %8, align 8
  store i8* %616, i8** %4, align 8
  br label %631

617:                                              ; preds = %493
  br label %620

618:                                              ; preds = %490
  %619 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %619, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40.380, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

620:                                              ; preds = %617
  br label %621

621:                                              ; preds = %620
  br label %624

622:                                              ; preds = %341
  %623 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %623, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.41.381, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

624:                                              ; preds = %621
  br label %625

625:                                              ; preds = %624, %338
  br label %626

626:                                              ; preds = %625, %326
  %627 = load %struct.Token*, %struct.Token** %7, align 8
  %628 = getelementptr inbounds %struct.Token, %struct.Token* %627, i32 0, i32 1
  %629 = load %struct.Token*, %struct.Token** %628, align 8
  store %struct.Token* %629, %struct.Token** %7, align 8
  br label %10, !llvm.loop !39

630:                                              ; preds = %21
  store i8* null, i8** %4, align 8
  br label %631

631:                                              ; preds = %630, %615, %488
  %632 = load i8*, i8** %4, align 8
  ret i8* %632
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @generate_output_asm(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %5 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 300) #14
  store i8* %5, i8** %4, align 8
  %6 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %7 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %6, i32 0, i32 1
  %8 = load i32, i32* @nbOutput, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %7, i64 0, i64 %9
  %11 = load %struct.AsmOutput*, %struct.AsmOutput** %10, align 8
  %12 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %11, i32 0, i32 11
  %13 = load i8, i8* %12, align 4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %92

15:                                               ; preds = %1
  %16 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %17 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %16, i32 0, i32 1
  %18 = load i32, i32* @nbOutput, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %17, i64 0, i64 %19
  %21 = load %struct.AsmOutput*, %struct.AsmOutput** %20, align 8
  %22 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %21, i32 0, i32 12
  %23 = load i8, i8* %22, align 1
  %24 = trunc i8 %23 to i1
  br i1 %24, label %92, label %25

25:                                               ; preds = %15
  %26 = load i8*, i8** %4, align 8
  %27 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %28 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %27, i32 0, i32 1
  %29 = load i32, i32* @nbOutput, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %28, i64 0, i64 %30
  %32 = load %struct.AsmOutput*, %struct.AsmOutput** %31, align 8
  %33 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %32, i32 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = call i8* @opcode(i32 noundef %34)
  %36 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %37 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %36, i32 0, i32 1
  %38 = load i32, i32* @nbOutput, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %37, i64 0, i64 %39
  %41 = load %struct.AsmOutput*, %struct.AsmOutput** %40, align 8
  %42 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %41, i32 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = call i8* @opcode(i32 noundef %43)
  %45 = call i64 @strlen(i8* noundef %44) #13
  %46 = call i8* @strncat(i8* noundef %26, i8* noundef %35, i64 noundef %45) #14
  %47 = load i8*, i8** %4, align 8
  %48 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %49 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %48, i32 0, i32 1
  %50 = load i32, i32* @nbOutput, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %49, i64 0, i64 %51
  %53 = load %struct.AsmOutput*, %struct.AsmOutput** %52, align 8
  %54 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %53, i32 0, i32 1
  %55 = load i8*, i8** %54, align 8
  %56 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %57 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %56, i32 0, i32 1
  %58 = load i32, i32* @nbOutput, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %57, i64 0, i64 %59
  %61 = load %struct.AsmOutput*, %struct.AsmOutput** %60, align 8
  %62 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %61, i32 0, i32 1
  %63 = load i8*, i8** %62, align 8
  %64 = call i64 @strlen(i8* noundef %63) #13
  %65 = call i8* @strncat(i8* noundef %47, i8* noundef %55, i64 noundef %64) #14
  %66 = load i8*, i8** %4, align 8
  %67 = call i8* @strncat(i8* noundef %66, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61.316, i64 0, i64 0), i64 noundef 3) #14
  %68 = load i8*, i8** %4, align 8
  %69 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %70 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %69, i32 0, i32 1
  %71 = load i32, i32* @nbOutput, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %70, i64 0, i64 %72
  %74 = load %struct.AsmOutput*, %struct.AsmOutput** %73, align 8
  %75 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %74, i32 0, i32 10
  %76 = load i32, i32* %75, align 8
  %77 = call i8* @load_variable(i32 noundef %76)
  %78 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %79 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %78, i32 0, i32 1
  %80 = load i32, i32* @nbOutput, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %79, i64 0, i64 %81
  %83 = load %struct.AsmOutput*, %struct.AsmOutput** %82, align 8
  %84 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %83, i32 0, i32 10
  %85 = load i32, i32* %84, align 8
  %86 = call i8* @load_variable(i32 noundef %85)
  %87 = call i64 @strlen(i8* noundef %86) #13
  %88 = call i8* @strncat(i8* noundef %68, i8* noundef %77, i64 noundef %87) #14
  %89 = load i8*, i8** %4, align 8
  %90 = call i8* @strncat(i8* noundef %89, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.317, i64 0, i64 0), i64 noundef 3) #14
  %91 = load i8*, i8** %4, align 8
  store i8* %91, i8** %2, align 8
  br label %240

92:                                               ; preds = %15, %1
  %93 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %94 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %93, i32 0, i32 1
  %95 = load i32, i32* @nbOutput, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %94, i64 0, i64 %96
  %98 = load %struct.AsmOutput*, %struct.AsmOutput** %97, align 8
  %99 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %98, i32 0, i32 12
  %100 = load i8, i8* %99, align 1
  %101 = trunc i8 %100 to i1
  br i1 %101, label %169, label %102

102:                                              ; preds = %92
  %103 = load i8*, i8** %4, align 8
  %104 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %105 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %104, i32 0, i32 1
  %106 = load i32, i32* @nbOutput, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %105, i64 0, i64 %107
  %109 = load %struct.AsmOutput*, %struct.AsmOutput** %108, align 8
  %110 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %109, i32 0, i32 6
  %111 = load i32, i32* %110, align 8
  %112 = call i8* @opcode(i32 noundef %111)
  %113 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %114 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %113, i32 0, i32 1
  %115 = load i32, i32* @nbOutput, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %114, i64 0, i64 %116
  %118 = load %struct.AsmOutput*, %struct.AsmOutput** %117, align 8
  %119 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %118, i32 0, i32 6
  %120 = load i32, i32* %119, align 8
  %121 = call i8* @opcode(i32 noundef %120)
  %122 = call i64 @strlen(i8* noundef %121) #13
  %123 = call i8* @strncat(i8* noundef %103, i8* noundef %112, i64 noundef %122) #14
  %124 = load i8*, i8** %4, align 8
  %125 = call i8* @strncat(i8* noundef %124, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63.318, i64 0, i64 0), i64 noundef 3) #14
  %126 = load i8*, i8** %4, align 8
  %127 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %128 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %127, i32 0, i32 2
  %129 = load i32, i32* @nbInput, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %128, i64 0, i64 %130
  %132 = load %struct.AsmInput*, %struct.AsmInput** %131, align 8
  %133 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %132, i32 0, i32 2
  %134 = load i8*, i8** %133, align 8
  %135 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %136 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %135, i32 0, i32 2
  %137 = load i32, i32* @nbInput, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %136, i64 0, i64 %138
  %140 = load %struct.AsmInput*, %struct.AsmInput** %139, align 8
  %141 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %140, i32 0, i32 2
  %142 = load i8*, i8** %141, align 8
  %143 = call i64 @strlen(i8* noundef %142) #13
  %144 = call i8* @strncat(i8* noundef %126, i8* noundef %134, i64 noundef %143) #14
  %145 = load i8*, i8** %4, align 8
  %146 = call i8* @strncat(i8* noundef %145, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61.316, i64 0, i64 0), i64 noundef 3) #14
  %147 = load i8*, i8** %4, align 8
  %148 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %149 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %148, i32 0, i32 2
  %150 = load i32, i32* @nbInput, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %149, i64 0, i64 %151
  %153 = load %struct.AsmInput*, %struct.AsmInput** %152, align 8
  %154 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %153, i32 0, i32 1
  %155 = load i8*, i8** %154, align 8
  %156 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %157 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %156, i32 0, i32 2
  %158 = load i32, i32* @nbInput, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %157, i64 0, i64 %159
  %161 = load %struct.AsmInput*, %struct.AsmInput** %160, align 8
  %162 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %161, i32 0, i32 1
  %163 = load i8*, i8** %162, align 8
  %164 = call i64 @strlen(i8* noundef %163) #13
  %165 = call i8* @strncat(i8* noundef %147, i8* noundef %155, i64 noundef %164) #14
  %166 = load i8*, i8** %4, align 8
  %167 = call i8* @strncat(i8* noundef %166, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.317, i64 0, i64 0), i64 noundef 3) #14
  %168 = load i8*, i8** %4, align 8
  store i8* %168, i8** %2, align 8
  br label %240

169:                                              ; preds = %92
  %170 = load i8*, i8** %4, align 8
  %171 = call i8* @strncat(i8* noundef %170, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64.355, i64 0, i64 0), i64 noundef 2) #14
  %172 = load i8*, i8** %4, align 8
  %173 = call i8* @strncat(i8* noundef %172, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65.356, i64 0, i64 0), i64 noundef 8) #14
  %174 = load i8*, i8** %4, align 8
  %175 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %176 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %175, i32 0, i32 1
  %177 = load i32, i32* @nbOutput, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %176, i64 0, i64 %178
  %180 = load %struct.AsmOutput*, %struct.AsmOutput** %179, align 8
  %181 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %180, i32 0, i32 10
  %182 = load i32, i32* %181, align 8
  %183 = call i8* @load_variable(i32 noundef %182)
  %184 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %185 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %184, i32 0, i32 1
  %186 = load i32, i32* @nbOutput, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %185, i64 0, i64 %187
  %189 = load %struct.AsmOutput*, %struct.AsmOutput** %188, align 8
  %190 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %189, i32 0, i32 10
  %191 = load i32, i32* %190, align 8
  %192 = call i8* @load_variable(i32 noundef %191)
  %193 = call i64 @strlen(i8* noundef %192) #13
  %194 = call i8* @strncat(i8* noundef %174, i8* noundef %183, i64 noundef %193) #14
  %195 = load i8*, i8** %4, align 8
  %196 = call i8* @strncat(i8* noundef %195, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66.357, i64 0, i64 0), i64 noundef 8) #14
  %197 = load i8*, i8** %4, align 8
  %198 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %199 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %198, i32 0, i32 1
  %200 = load i32, i32* @nbOutput, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %199, i64 0, i64 %201
  %203 = load %struct.AsmOutput*, %struct.AsmOutput** %202, align 8
  %204 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %203, i32 0, i32 6
  %205 = load i32, i32* %204, align 8
  %206 = call i8* @opcode(i32 noundef %205)
  %207 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %208 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %207, i32 0, i32 1
  %209 = load i32, i32* @nbOutput, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %208, i64 0, i64 %210
  %212 = load %struct.AsmOutput*, %struct.AsmOutput** %211, align 8
  %213 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %212, i32 0, i32 6
  %214 = load i32, i32* %213, align 8
  %215 = call i8* @opcode(i32 noundef %214)
  %216 = call i64 @strlen(i8* noundef %215) #13
  %217 = call i8* @strncat(i8* noundef %197, i8* noundef %206, i64 noundef %216) #14
  %218 = load i8*, i8** %4, align 8
  %219 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %220 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %219, i32 0, i32 1
  %221 = load i32, i32* @nbOutput, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %220, i64 0, i64 %222
  %224 = load %struct.AsmOutput*, %struct.AsmOutput** %223, align 8
  %225 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %224, i32 0, i32 1
  %226 = load i8*, i8** %225, align 8
  %227 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %228 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %227, i32 0, i32 1
  %229 = load i32, i32* @nbOutput, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %228, i64 0, i64 %230
  %232 = load %struct.AsmOutput*, %struct.AsmOutput** %231, align 8
  %233 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %232, i32 0, i32 1
  %234 = load i8*, i8** %233, align 8
  %235 = call i64 @strlen(i8* noundef %234) #13
  %236 = call i8* @strncat(i8* noundef %218, i8* noundef %226, i64 noundef %235) #14
  %237 = load i8*, i8** %4, align 8
  %238 = call i8* @strncat(i8* noundef %237, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67.358, i64 0, i64 0), i64 noundef 10) #14
  %239 = load i8*, i8** %4, align 8
  store i8* %239, i8** %2, align 8
  br label %240

240:                                              ; preds = %169, %102, %25
  %241 = load i8*, i8** %2, align 8
  ret i8* %241
}

; Function Attrs: nounwind readonly willreturn
declare i64 @strlen(i8* noundef) #2

; Function Attrs: nounwind
declare i8* @strncat(i8* noundef, i8* noundef, i64 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @input_asm(%struct.Node* noundef %0, %struct.Token** noundef %1, %struct.Token* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token**, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca %struct.VarScope*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store %struct.Node* %0, %struct.Node** %5, align 8
  store %struct.Token** %1, %struct.Token*** %6, align 8
  store %struct.Token* %2, %struct.Token** %7, align 8
  %12 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 20) #14
  store i8* %12, i8** %9, align 8
  %13 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 20) #14
  store i8* %13, i8** %10, align 8
  br label %14

14:                                               ; preds = %554, %3
  %15 = load %struct.Token*, %struct.Token** %7, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call zeroext i1 @equal(%struct.Token* noundef %17, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.307, i64 0, i64 0))
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = load %struct.Token*, %struct.Token** %7, align 8
  %21 = getelementptr inbounds %struct.Token, %struct.Token* %20, i32 0, i32 1
  %22 = load %struct.Token*, %struct.Token** %21, align 8
  %23 = call zeroext i1 @equal(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i64 0, i64 0))
  %24 = xor i1 %23, true
  br label %25

25:                                               ; preds = %19, %14
  %26 = phi i1 [ false, %14 ], [ %24, %19 ]
  br i1 %26, label %27, label %558

27:                                               ; preds = %25
  %28 = load %struct.Token*, %struct.Token** %7, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 0
  %30 = load i32, i32* %29, align 16
  %31 = icmp eq i32 %30, 3
  br i1 %31, label %32, label %50

32:                                               ; preds = %27
  %33 = load %struct.Token*, %struct.Token** %7, align 8
  %34 = getelementptr inbounds %struct.Token, %struct.Token* %33, i32 0, i32 7
  %35 = load i8*, i8** %34, align 8
  %36 = load %struct.Token*, %struct.Token** %7, align 8
  %37 = getelementptr inbounds %struct.Token, %struct.Token* %36, i32 0, i32 5
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = call i32 @strncmp(i8* noundef %35, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42.330, i64 0, i64 0), i64 noundef %39) #13
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %32
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43.331, i64 0, i64 0), i8** %9, align 8
  %43 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %44 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %43, i32 0, i32 2
  %45 = load i32, i32* @nbInput, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %44, i64 0, i64 %46
  %48 = load %struct.AsmInput*, %struct.AsmInput** %47, align 8
  %49 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %48, i32 0, i32 3
  store i32 0, i32* %49, align 8
  br label %554

50:                                               ; preds = %32, %27
  %51 = load %struct.Token*, %struct.Token** %7, align 8
  %52 = getelementptr inbounds %struct.Token, %struct.Token* %51, i32 0, i32 0
  %53 = load i32, i32* %52, align 16
  %54 = icmp eq i32 %53, 3
  br i1 %54, label %55, label %73

55:                                               ; preds = %50
  %56 = load %struct.Token*, %struct.Token** %7, align 8
  %57 = getelementptr inbounds %struct.Token, %struct.Token* %56, i32 0, i32 7
  %58 = load i8*, i8** %57, align 8
  %59 = load %struct.Token*, %struct.Token** %7, align 8
  %60 = getelementptr inbounds %struct.Token, %struct.Token* %59, i32 0, i32 5
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = call i32 @strncmp(i8* noundef %58, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44.332, i64 0, i64 0), i64 noundef %62) #13
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %55
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45.333, i64 0, i64 0), i8** %9, align 8
  %66 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %67 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %66, i32 0, i32 2
  %68 = load i32, i32* @nbInput, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %67, i64 0, i64 %69
  %71 = load %struct.AsmInput*, %struct.AsmInput** %70, align 8
  %72 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %71, i32 0, i32 3
  store i32 1, i32* %72, align 8
  br label %553

73:                                               ; preds = %55, %50
  %74 = load %struct.Token*, %struct.Token** %7, align 8
  %75 = getelementptr inbounds %struct.Token, %struct.Token* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 16
  %77 = icmp eq i32 %76, 3
  br i1 %77, label %78, label %96

78:                                               ; preds = %73
  %79 = load %struct.Token*, %struct.Token** %7, align 8
  %80 = getelementptr inbounds %struct.Token, %struct.Token* %79, i32 0, i32 7
  %81 = load i8*, i8** %80, align 8
  %82 = load %struct.Token*, %struct.Token** %7, align 8
  %83 = getelementptr inbounds %struct.Token, %struct.Token* %82, i32 0, i32 5
  %84 = load i32, i32* %83, align 8
  %85 = sext i32 %84 to i64
  %86 = call i32 @strncmp(i8* noundef %81, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46.334, i64 0, i64 0), i64 noundef %85) #13
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %78
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47.335, i64 0, i64 0), i8** %9, align 8
  %89 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %90 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %89, i32 0, i32 2
  %91 = load i32, i32* @nbInput, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %90, i64 0, i64 %92
  %94 = load %struct.AsmInput*, %struct.AsmInput** %93, align 8
  %95 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %94, i32 0, i32 3
  store i32 2, i32* %95, align 8
  br label %552

96:                                               ; preds = %78, %73
  %97 = load %struct.Token*, %struct.Token** %7, align 8
  %98 = getelementptr inbounds %struct.Token, %struct.Token* %97, i32 0, i32 0
  %99 = load i32, i32* %98, align 16
  %100 = icmp eq i32 %99, 3
  br i1 %100, label %101, label %119

101:                                              ; preds = %96
  %102 = load %struct.Token*, %struct.Token** %7, align 8
  %103 = getelementptr inbounds %struct.Token, %struct.Token* %102, i32 0, i32 7
  %104 = load i8*, i8** %103, align 8
  %105 = load %struct.Token*, %struct.Token** %7, align 8
  %106 = getelementptr inbounds %struct.Token, %struct.Token* %105, i32 0, i32 5
  %107 = load i32, i32* %106, align 8
  %108 = sext i32 %107 to i64
  %109 = call i32 @strncmp(i8* noundef %104, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48.336, i64 0, i64 0), i64 noundef %108) #13
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %101
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49.337, i64 0, i64 0), i8** %9, align 8
  %112 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %113 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %112, i32 0, i32 2
  %114 = load i32, i32* @nbInput, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %113, i64 0, i64 %115
  %117 = load %struct.AsmInput*, %struct.AsmInput** %116, align 8
  %118 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %117, i32 0, i32 3
  store i32 3, i32* %118, align 8
  br label %551

119:                                              ; preds = %101, %96
  %120 = load %struct.Token*, %struct.Token** %7, align 8
  %121 = getelementptr inbounds %struct.Token, %struct.Token* %120, i32 0, i32 0
  %122 = load i32, i32* %121, align 16
  %123 = icmp eq i32 %122, 3
  br i1 %123, label %124, label %153

124:                                              ; preds = %119
  %125 = load %struct.Token*, %struct.Token** %7, align 8
  %126 = getelementptr inbounds %struct.Token, %struct.Token* %125, i32 0, i32 7
  %127 = load i8*, i8** %126, align 8
  %128 = load %struct.Token*, %struct.Token** %7, align 8
  %129 = getelementptr inbounds %struct.Token, %struct.Token* %128, i32 0, i32 5
  %130 = load i32, i32* %129, align 8
  %131 = sext i32 %130 to i64
  %132 = call i32 @strncmp(i8* noundef %127, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50.338, i64 0, i64 0), i64 noundef %131) #13
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %153, label %134

134:                                              ; preds = %124
  %135 = call i8* @retrieve_output_index_str(i8 noundef signext 97)
  store i8* %135, i8** %9, align 8
  %136 = load i32, i32* @nbOutput, align 4
  %137 = load i32, i32* @nbInput, align 4
  %138 = add nsw i32 %136, %137
  %139 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %140 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %139, i32 0, i32 2
  %141 = load i32, i32* @nbInput, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %140, i64 0, i64 %142
  %144 = load %struct.AsmInput*, %struct.AsmInput** %143, align 8
  %145 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %144, i32 0, i32 3
  store i32 %138, i32* %145, align 8
  %146 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %147 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %146, i32 0, i32 2
  %148 = load i32, i32* @nbInput, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %147, i64 0, i64 %149
  %151 = load %struct.AsmInput*, %struct.AsmInput** %150, align 8
  %152 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %151, i32 0, i32 4
  store i8 97, i8* %152, align 4
  br label %550

153:                                              ; preds = %124, %119
  %154 = load %struct.Token*, %struct.Token** %7, align 8
  %155 = getelementptr inbounds %struct.Token, %struct.Token* %154, i32 0, i32 0
  %156 = load i32, i32* %155, align 16
  %157 = icmp eq i32 %156, 3
  br i1 %157, label %158, label %187

158:                                              ; preds = %153
  %159 = load %struct.Token*, %struct.Token** %7, align 8
  %160 = getelementptr inbounds %struct.Token, %struct.Token* %159, i32 0, i32 7
  %161 = load i8*, i8** %160, align 8
  %162 = load %struct.Token*, %struct.Token** %7, align 8
  %163 = getelementptr inbounds %struct.Token, %struct.Token* %162, i32 0, i32 5
  %164 = load i32, i32* %163, align 8
  %165 = sext i32 %164 to i64
  %166 = call i32 @strncmp(i8* noundef %161, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51.339, i64 0, i64 0), i64 noundef %165) #13
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %187, label %168

168:                                              ; preds = %158
  %169 = call i8* @retrieve_output_index_str(i8 noundef signext 98)
  store i8* %169, i8** %9, align 8
  %170 = load i32, i32* @nbOutput, align 4
  %171 = load i32, i32* @nbInput, align 4
  %172 = add nsw i32 %170, %171
  %173 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %174 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %173, i32 0, i32 2
  %175 = load i32, i32* @nbInput, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %174, i64 0, i64 %176
  %178 = load %struct.AsmInput*, %struct.AsmInput** %177, align 8
  %179 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %178, i32 0, i32 3
  store i32 %172, i32* %179, align 8
  %180 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %181 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %180, i32 0, i32 2
  %182 = load i32, i32* @nbInput, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %181, i64 0, i64 %183
  %185 = load %struct.AsmInput*, %struct.AsmInput** %184, align 8
  %186 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %185, i32 0, i32 4
  store i8 98, i8* %186, align 4
  br label %549

187:                                              ; preds = %158, %153
  %188 = load %struct.Token*, %struct.Token** %7, align 8
  %189 = getelementptr inbounds %struct.Token, %struct.Token* %188, i32 0, i32 0
  %190 = load i32, i32* %189, align 16
  %191 = icmp eq i32 %190, 3
  br i1 %191, label %192, label %221

192:                                              ; preds = %187
  %193 = load %struct.Token*, %struct.Token** %7, align 8
  %194 = getelementptr inbounds %struct.Token, %struct.Token* %193, i32 0, i32 7
  %195 = load i8*, i8** %194, align 8
  %196 = load %struct.Token*, %struct.Token** %7, align 8
  %197 = getelementptr inbounds %struct.Token, %struct.Token* %196, i32 0, i32 5
  %198 = load i32, i32* %197, align 8
  %199 = sext i32 %198 to i64
  %200 = call i32 @strncmp(i8* noundef %195, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52.340, i64 0, i64 0), i64 noundef %199) #13
  %201 = icmp ne i32 %200, 0
  br i1 %201, label %221, label %202

202:                                              ; preds = %192
  %203 = call i8* @retrieve_output_index_str(i8 noundef signext 99)
  store i8* %203, i8** %9, align 8
  %204 = load i32, i32* @nbOutput, align 4
  %205 = load i32, i32* @nbInput, align 4
  %206 = add nsw i32 %204, %205
  %207 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %208 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %207, i32 0, i32 2
  %209 = load i32, i32* @nbInput, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %208, i64 0, i64 %210
  %212 = load %struct.AsmInput*, %struct.AsmInput** %211, align 8
  %213 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %212, i32 0, i32 3
  store i32 %206, i32* %213, align 8
  %214 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %215 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %214, i32 0, i32 2
  %216 = load i32, i32* @nbInput, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %215, i64 0, i64 %217
  %219 = load %struct.AsmInput*, %struct.AsmInput** %218, align 8
  %220 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %219, i32 0, i32 4
  store i8 99, i8* %220, align 4
  br label %548

221:                                              ; preds = %192, %187
  %222 = load %struct.Token*, %struct.Token** %7, align 8
  %223 = getelementptr inbounds %struct.Token, %struct.Token* %222, i32 0, i32 0
  %224 = load i32, i32* %223, align 16
  %225 = icmp eq i32 %224, 3
  br i1 %225, label %226, label %255

226:                                              ; preds = %221
  %227 = load %struct.Token*, %struct.Token** %7, align 8
  %228 = getelementptr inbounds %struct.Token, %struct.Token* %227, i32 0, i32 7
  %229 = load i8*, i8** %228, align 8
  %230 = load %struct.Token*, %struct.Token** %7, align 8
  %231 = getelementptr inbounds %struct.Token, %struct.Token* %230, i32 0, i32 5
  %232 = load i32, i32* %231, align 8
  %233 = sext i32 %232 to i64
  %234 = call i32 @strncmp(i8* noundef %229, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53.341, i64 0, i64 0), i64 noundef %233) #13
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %255, label %236

236:                                              ; preds = %226
  %237 = call i8* @retrieve_output_index_str(i8 noundef signext 100)
  store i8* %237, i8** %9, align 8
  %238 = load i32, i32* @nbOutput, align 4
  %239 = load i32, i32* @nbInput, align 4
  %240 = add nsw i32 %238, %239
  %241 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %242 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %241, i32 0, i32 2
  %243 = load i32, i32* @nbInput, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %242, i64 0, i64 %244
  %246 = load %struct.AsmInput*, %struct.AsmInput** %245, align 8
  %247 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %246, i32 0, i32 3
  store i32 %240, i32* %247, align 8
  %248 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %249 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %248, i32 0, i32 2
  %250 = load i32, i32* @nbInput, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %249, i64 0, i64 %251
  %253 = load %struct.AsmInput*, %struct.AsmInput** %252, align 8
  %254 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %253, i32 0, i32 4
  store i8 100, i8* %254, align 4
  br label %547

255:                                              ; preds = %226, %221
  %256 = load %struct.Token*, %struct.Token** %7, align 8
  %257 = getelementptr inbounds %struct.Token, %struct.Token* %256, i32 0, i32 0
  %258 = load i32, i32* %257, align 16
  %259 = icmp eq i32 %258, 3
  br i1 %259, label %260, label %289

260:                                              ; preds = %255
  %261 = load %struct.Token*, %struct.Token** %7, align 8
  %262 = getelementptr inbounds %struct.Token, %struct.Token* %261, i32 0, i32 7
  %263 = load i8*, i8** %262, align 8
  %264 = load %struct.Token*, %struct.Token** %7, align 8
  %265 = getelementptr inbounds %struct.Token, %struct.Token* %264, i32 0, i32 5
  %266 = load i32, i32* %265, align 8
  %267 = sext i32 %266 to i64
  %268 = call i32 @strncmp(i8* noundef %263, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54.342, i64 0, i64 0), i64 noundef %267) #13
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %289, label %270

270:                                              ; preds = %260
  %271 = call i8* @retrieve_output_index_str(i8 noundef signext 109)
  store i8* %271, i8** %9, align 8
  %272 = load i32, i32* @nbOutput, align 4
  %273 = load i32, i32* @nbInput, align 4
  %274 = add nsw i32 %272, %273
  %275 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %276 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %275, i32 0, i32 2
  %277 = load i32, i32* @nbInput, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %276, i64 0, i64 %278
  %280 = load %struct.AsmInput*, %struct.AsmInput** %279, align 8
  %281 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %280, i32 0, i32 3
  store i32 %274, i32* %281, align 8
  %282 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %283 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %282, i32 0, i32 2
  %284 = load i32, i32* @nbInput, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %283, i64 0, i64 %285
  %287 = load %struct.AsmInput*, %struct.AsmInput** %286, align 8
  %288 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %287, i32 0, i32 4
  store i8 109, i8* %288, align 4
  br label %546

289:                                              ; preds = %260, %255
  %290 = load %struct.Token*, %struct.Token** %7, align 8
  %291 = getelementptr inbounds %struct.Token, %struct.Token* %290, i32 0, i32 0
  %292 = load i32, i32* %291, align 16
  %293 = icmp eq i32 %292, 3
  br i1 %293, label %294, label %323

294:                                              ; preds = %289
  %295 = load %struct.Token*, %struct.Token** %7, align 8
  %296 = getelementptr inbounds %struct.Token, %struct.Token* %295, i32 0, i32 7
  %297 = load i8*, i8** %296, align 8
  %298 = load %struct.Token*, %struct.Token** %7, align 8
  %299 = getelementptr inbounds %struct.Token, %struct.Token* %298, i32 0, i32 5
  %300 = load i32, i32* %299, align 8
  %301 = sext i32 %300 to i64
  %302 = call i32 @strncmp(i8* noundef %297, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55.343, i64 0, i64 0), i64 noundef %301) #13
  %303 = icmp ne i32 %302, 0
  br i1 %303, label %323, label %304

304:                                              ; preds = %294
  %305 = call i8* @retrieve_output_index_str(i8 noundef signext 114)
  store i8* %305, i8** %9, align 8
  %306 = load i32, i32* @nbOutput, align 4
  %307 = load i32, i32* @nbInput, align 4
  %308 = add nsw i32 %306, %307
  %309 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %310 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %309, i32 0, i32 2
  %311 = load i32, i32* @nbInput, align 4
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %310, i64 0, i64 %312
  %314 = load %struct.AsmInput*, %struct.AsmInput** %313, align 8
  %315 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %314, i32 0, i32 3
  store i32 %308, i32* %315, align 8
  %316 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %317 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %316, i32 0, i32 2
  %318 = load i32, i32* @nbInput, align 4
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %317, i64 0, i64 %319
  %321 = load %struct.AsmInput*, %struct.AsmInput** %320, align 8
  %322 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %321, i32 0, i32 4
  store i8 114, i8* %322, align 4
  br label %545

323:                                              ; preds = %294, %289
  %324 = load %struct.Token*, %struct.Token** %7, align 8
  %325 = call zeroext i1 @equal(%struct.Token* noundef %324, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.344, i64 0, i64 0))
  br i1 %325, label %326, label %535

326:                                              ; preds = %323
  %327 = load %struct.Token*, %struct.Token** %7, align 8
  %328 = call %struct.Token* @skip(%struct.Token* noundef %327, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.344, i64 0, i64 0))
  store %struct.Token* %328, %struct.Token** %7, align 8
  %329 = load %struct.Token*, %struct.Token** %7, align 8
  %330 = getelementptr inbounds %struct.Token, %struct.Token* %329, i32 0, i32 0
  %331 = load i32, i32* %330, align 16
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %385

333:                                              ; preds = %326
  %334 = load %struct.Token*, %struct.Token** %7, align 8
  %335 = call %struct.VarScope* @find_var(%struct.Token* noundef %334)
  store %struct.VarScope* %335, %struct.VarScope** %8, align 8
  %336 = load %struct.VarScope*, %struct.VarScope** %8, align 8
  %337 = icmp ne %struct.VarScope* %336, null
  br i1 %337, label %340, label %338

338:                                              ; preds = %333
  %339 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %339, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.56.345, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

340:                                              ; preds = %333
  %341 = load %struct.Token*, %struct.Token** %7, align 8
  %342 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %343 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %342, i32 0, i32 2
  %344 = load i32, i32* @nbInput, align 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %343, i64 0, i64 %345
  %347 = load %struct.AsmInput*, %struct.AsmInput** %346, align 8
  %348 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %347, i32 0, i32 0
  store %struct.Token* %341, %struct.Token** %348, align 8
  %349 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %350 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %349, i32 0, i32 2
  %351 = load i32, i32* @nbInput, align 4
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %350, i64 0, i64 %352
  %354 = load %struct.AsmInput*, %struct.AsmInput** %353, align 8
  %355 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %354, i32 0, i32 7
  store i8 1, i8* %355, align 8
  %356 = load i8*, i8** %9, align 8
  %357 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %358 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %357, i32 0, i32 2
  %359 = load i32, i32* @nbInput, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %358, i64 0, i64 %360
  %362 = load %struct.AsmInput*, %struct.AsmInput** %361, align 8
  %363 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %362, i32 0, i32 1
  store i8* %356, i8** %363, align 8
  %364 = load %struct.VarScope*, %struct.VarScope** %8, align 8
  %365 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %364, i32 0, i32 0
  %366 = load %struct.Obj*, %struct.Obj** %365, align 8
  %367 = getelementptr inbounds %struct.Obj, %struct.Obj* %366, i32 0, i32 3
  %368 = load %struct.Type*, %struct.Type** %367, align 8
  %369 = getelementptr inbounds %struct.Type, %struct.Type* %368, i32 0, i32 1
  %370 = load i32, i32* %369, align 4
  %371 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %372 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %371, i32 0, i32 2
  %373 = load i32, i32* @nbInput, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %372, i64 0, i64 %374
  %376 = load %struct.AsmInput*, %struct.AsmInput** %375, align 8
  %377 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %376, i32 0, i32 6
  store i32 %370, i32* %377, align 4
  %378 = load %struct.Token*, %struct.Token** %7, align 8
  %379 = getelementptr inbounds %struct.Token, %struct.Token* %378, i32 0, i32 1
  %380 = load %struct.Token*, %struct.Token** %379, align 8
  store %struct.Token* %380, %struct.Token** %7, align 8
  %381 = load %struct.Token*, %struct.Token** %7, align 8
  %382 = call %struct.Token* @skip(%struct.Token* noundef %381, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.346, i64 0, i64 0))
  %383 = load %struct.Token**, %struct.Token*** %6, align 8
  store %struct.Token* %382, %struct.Token** %383, align 8
  %384 = load i8*, i8** %9, align 8
  store i8* %384, i8** %4, align 8
  br label %559

385:                                              ; preds = %326
  %386 = load %struct.Token*, %struct.Token** %7, align 8
  %387 = getelementptr inbounds %struct.Token, %struct.Token* %386, i32 0, i32 0
  %388 = load i32, i32* %387, align 16
  %389 = icmp eq i32 %388, 4
  br i1 %389, label %390, label %462

390:                                              ; preds = %385
  %391 = load %struct.Token*, %struct.Token** %7, align 8
  %392 = getelementptr inbounds %struct.Token, %struct.Token* %391, i32 0, i32 2
  %393 = load i64, i64* %392, align 16
  %394 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef null, i64 noundef 0, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57.347, i64 0, i64 0), i64 noundef %393) #14
  store i32 %394, i32* %11, align 4
  %395 = load %struct.Token*, %struct.Token** %7, align 8
  %396 = getelementptr inbounds %struct.Token, %struct.Token* %395, i32 0, i32 2
  %397 = load i64, i64* %396, align 16
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %399, label %402

399:                                              ; preds = %390
  %400 = load i8*, i8** %10, align 8
  %401 = call i8* @strncat(i8* noundef %400, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58.348, i64 0, i64 0), i64 noundef 3) #14
  br label %411

402:                                              ; preds = %390
  %403 = load i8*, i8** %10, align 8
  %404 = load i32, i32* %11, align 4
  %405 = add nsw i32 %404, 1
  %406 = sext i32 %405 to i64
  %407 = load %struct.Token*, %struct.Token** %7, align 8
  %408 = getelementptr inbounds %struct.Token, %struct.Token* %407, i32 0, i32 2
  %409 = load i64, i64* %408, align 16
  %410 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* noundef %403, i64 noundef %406, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57.347, i64 0, i64 0), i64 noundef %409) #14
  br label %411

411:                                              ; preds = %402, %399
  %412 = load %struct.Token*, %struct.Token** %7, align 8
  %413 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %414 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %413, i32 0, i32 2
  %415 = load i32, i32* @nbInput, align 4
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %414, i64 0, i64 %416
  %418 = load %struct.AsmInput*, %struct.AsmInput** %417, align 8
  %419 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %418, i32 0, i32 0
  store %struct.Token* %412, %struct.Token** %419, align 8
  %420 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %421 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %420, i32 0, i32 2
  %422 = load i32, i32* @nbInput, align 4
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %421, i64 0, i64 %423
  %425 = load %struct.AsmInput*, %struct.AsmInput** %424, align 8
  %426 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %425, i32 0, i32 7
  store i8 0, i8* %426, align 8
  %427 = load i8*, i8** %9, align 8
  %428 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %429 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %428, i32 0, i32 2
  %430 = load i32, i32* @nbInput, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %429, i64 0, i64 %431
  %433 = load %struct.AsmInput*, %struct.AsmInput** %432, align 8
  %434 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %433, i32 0, i32 1
  store i8* %427, i8** %434, align 8
  %435 = load i8*, i8** %10, align 8
  %436 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %437 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %436, i32 0, i32 2
  %438 = load i32, i32* @nbInput, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %437, i64 0, i64 %439
  %441 = load %struct.AsmInput*, %struct.AsmInput** %440, align 8
  %442 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %441, i32 0, i32 2
  store i8* %435, i8** %442, align 8
  %443 = load %struct.Token*, %struct.Token** %7, align 8
  %444 = getelementptr inbounds %struct.Token, %struct.Token* %443, i32 0, i32 6
  %445 = load %struct.Type*, %struct.Type** %444, align 16
  %446 = getelementptr inbounds %struct.Type, %struct.Type* %445, i32 0, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %449 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %448, i32 0, i32 2
  %450 = load i32, i32* @nbInput, align 4
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %449, i64 0, i64 %451
  %453 = load %struct.AsmInput*, %struct.AsmInput** %452, align 8
  %454 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %453, i32 0, i32 6
  store i32 %447, i32* %454, align 4
  %455 = load %struct.Token*, %struct.Token** %7, align 8
  %456 = getelementptr inbounds %struct.Token, %struct.Token* %455, i32 0, i32 1
  %457 = load %struct.Token*, %struct.Token** %456, align 8
  store %struct.Token* %457, %struct.Token** %7, align 8
  %458 = load %struct.Token*, %struct.Token** %7, align 8
  %459 = call %struct.Token* @skip(%struct.Token* noundef %458, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.346, i64 0, i64 0))
  %460 = load %struct.Token**, %struct.Token*** %6, align 8
  store %struct.Token* %459, %struct.Token** %460, align 8
  %461 = load i8*, i8** %9, align 8
  store i8* %461, i8** %4, align 8
  br label %559

462:                                              ; preds = %385
  %463 = load %struct.Token*, %struct.Token** %7, align 8
  %464 = call zeroext i1 @equal(%struct.Token* noundef %463, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36.349, i64 0, i64 0))
  br i1 %464, label %465, label %532

465:                                              ; preds = %462
  %466 = load %struct.Token*, %struct.Token** %7, align 8
  %467 = call zeroext i1 @consume(%struct.Token** noundef %7, %struct.Token* noundef %466, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36.349, i64 0, i64 0))
  %468 = load %struct.Token*, %struct.Token** %7, align 8
  %469 = getelementptr inbounds %struct.Token, %struct.Token* %468, i32 0, i32 0
  %470 = load i32, i32* %469, align 16
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %531

472:                                              ; preds = %465
  %473 = load %struct.Token*, %struct.Token** %7, align 8
  %474 = call %struct.VarScope* @find_var(%struct.Token* noundef %473)
  store %struct.VarScope* %474, %struct.VarScope** %8, align 8
  %475 = load %struct.VarScope*, %struct.VarScope** %8, align 8
  %476 = icmp ne %struct.VarScope* %475, null
  br i1 %476, label %479, label %477

477:                                              ; preds = %472
  %478 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %478, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.59.350, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

479:                                              ; preds = %472
  %480 = load %struct.Token*, %struct.Token** %7, align 8
  %481 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %482 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %481, i32 0, i32 2
  %483 = load i32, i32* @nbInput, align 4
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %482, i64 0, i64 %484
  %486 = load %struct.AsmInput*, %struct.AsmInput** %485, align 8
  %487 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %486, i32 0, i32 0
  store %struct.Token* %480, %struct.Token** %487, align 8
  %488 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %489 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %488, i32 0, i32 2
  %490 = load i32, i32* @nbInput, align 4
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %489, i64 0, i64 %491
  %493 = load %struct.AsmInput*, %struct.AsmInput** %492, align 8
  %494 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %493, i32 0, i32 7
  store i8 1, i8* %494, align 8
  %495 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %496 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %495, i32 0, i32 2
  %497 = load i32, i32* @nbInput, align 4
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %496, i64 0, i64 %498
  %500 = load %struct.AsmInput*, %struct.AsmInput** %499, align 8
  %501 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %500, i32 0, i32 8
  store i8 1, i8* %501, align 1
  %502 = load i8*, i8** %9, align 8
  %503 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %504 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %503, i32 0, i32 2
  %505 = load i32, i32* @nbInput, align 4
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %504, i64 0, i64 %506
  %508 = load %struct.AsmInput*, %struct.AsmInput** %507, align 8
  %509 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %508, i32 0, i32 1
  store i8* %502, i8** %509, align 8
  %510 = load %struct.VarScope*, %struct.VarScope** %8, align 8
  %511 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %510, i32 0, i32 0
  %512 = load %struct.Obj*, %struct.Obj** %511, align 8
  %513 = getelementptr inbounds %struct.Obj, %struct.Obj* %512, i32 0, i32 3
  %514 = load %struct.Type*, %struct.Type** %513, align 8
  %515 = getelementptr inbounds %struct.Type, %struct.Type* %514, i32 0, i32 1
  %516 = load i32, i32* %515, align 4
  %517 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %518 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %517, i32 0, i32 2
  %519 = load i32, i32* @nbInput, align 4
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %518, i64 0, i64 %520
  %522 = load %struct.AsmInput*, %struct.AsmInput** %521, align 8
  %523 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %522, i32 0, i32 6
  store i32 %516, i32* %523, align 4
  %524 = load %struct.Token*, %struct.Token** %7, align 8
  %525 = getelementptr inbounds %struct.Token, %struct.Token* %524, i32 0, i32 1
  %526 = load %struct.Token*, %struct.Token** %525, align 8
  store %struct.Token* %526, %struct.Token** %7, align 8
  %527 = load %struct.Token*, %struct.Token** %7, align 8
  %528 = call %struct.Token* @skip(%struct.Token* noundef %527, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.346, i64 0, i64 0))
  %529 = load %struct.Token**, %struct.Token*** %6, align 8
  store %struct.Token* %528, %struct.Token** %529, align 8
  %530 = load i8*, i8** %9, align 8
  store i8* %530, i8** %4, align 8
  br label %559

531:                                              ; preds = %465
  br label %532

532:                                              ; preds = %531, %462
  br label %533

533:                                              ; preds = %532
  br label %534

534:                                              ; preds = %533
  br label %544

535:                                              ; preds = %323
  %536 = load %struct.Token*, %struct.Token** %7, align 8
  %537 = call zeroext i1 @equal(%struct.Token* noundef %536, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.351, i64 0, i64 0))
  br i1 %537, label %538, label %541

538:                                              ; preds = %535
  %539 = load %struct.Token*, %struct.Token** %7, align 8
  %540 = call %struct.Token* @skip(%struct.Token* noundef %539, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30.351, i64 0, i64 0))
  store %struct.Token* %540, %struct.Token** %7, align 8
  br label %543

541:                                              ; preds = %535
  %542 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %542, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.60.352, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

543:                                              ; preds = %538
  br label %544

544:                                              ; preds = %543, %534
  br label %545

545:                                              ; preds = %544, %304
  br label %546

546:                                              ; preds = %545, %270
  br label %547

547:                                              ; preds = %546, %236
  br label %548

548:                                              ; preds = %547, %202
  br label %549

549:                                              ; preds = %548, %168
  br label %550

550:                                              ; preds = %549, %134
  br label %551

551:                                              ; preds = %550, %111
  br label %552

552:                                              ; preds = %551, %88
  br label %553

553:                                              ; preds = %552, %65
  br label %554

554:                                              ; preds = %553, %42
  %555 = load %struct.Token*, %struct.Token** %7, align 8
  %556 = getelementptr inbounds %struct.Token, %struct.Token* %555, i32 0, i32 1
  %557 = load %struct.Token*, %struct.Token** %556, align 8
  store %struct.Token* %557, %struct.Token** %7, align 8
  br label %14, !llvm.loop !40

558:                                              ; preds = %25
  store i8* null, i8** %4, align 8
  br label %559

559:                                              ; preds = %558, %479, %411, %340
  %560 = load i8*, i8** %4, align 8
  ret i8* %560
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @generate_input_asm(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %5 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 100) #14
  store i8* %5, i8** %4, align 8
  %6 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %7 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %6, i32 0, i32 2
  %8 = load i32, i32* @nbInput, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %7, i64 0, i64 %9
  %11 = load %struct.AsmInput*, %struct.AsmInput** %10, align 8
  %12 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %11, i32 0, i32 7
  %13 = load i8, i8* %12, align 8
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %82

15:                                               ; preds = %1
  %16 = load i8*, i8** %4, align 8
  %17 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %18 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %17, i32 0, i32 2
  %19 = load i32, i32* @nbInput, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %18, i64 0, i64 %20
  %22 = load %struct.AsmInput*, %struct.AsmInput** %21, align 8
  %23 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %22, i32 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = call i8* @opcode(i32 noundef %24)
  %26 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %27 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %26, i32 0, i32 2
  %28 = load i32, i32* @nbInput, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %27, i64 0, i64 %29
  %31 = load %struct.AsmInput*, %struct.AsmInput** %30, align 8
  %32 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %31, i32 0, i32 6
  %33 = load i32, i32* %32, align 4
  %34 = call i8* @opcode(i32 noundef %33)
  %35 = call i64 @strlen(i8* noundef %34) #13
  %36 = call i8* @strncat(i8* noundef %16, i8* noundef %25, i64 noundef %35) #14
  %37 = load i8*, i8** %4, align 8
  %38 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %39 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %38, i32 0, i32 2
  %40 = load i32, i32* @nbInput, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %39, i64 0, i64 %41
  %43 = load %struct.AsmInput*, %struct.AsmInput** %42, align 8
  %44 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %43, i32 0, i32 5
  %45 = load i32, i32* %44, align 8
  %46 = call i8* @load_variable(i32 noundef %45)
  %47 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %48 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %47, i32 0, i32 2
  %49 = load i32, i32* @nbInput, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %48, i64 0, i64 %50
  %52 = load %struct.AsmInput*, %struct.AsmInput** %51, align 8
  %53 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %52, i32 0, i32 5
  %54 = load i32, i32* %53, align 8
  %55 = call i8* @load_variable(i32 noundef %54)
  %56 = call i64 @strlen(i8* noundef %55) #13
  %57 = call i8* @strncat(i8* noundef %37, i8* noundef %46, i64 noundef %56) #14
  %58 = load i8*, i8** %4, align 8
  %59 = call i8* @strncat(i8* noundef %58, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61.316, i64 0, i64 0), i64 noundef 3) #14
  %60 = load i8*, i8** %4, align 8
  %61 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %62 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %61, i32 0, i32 2
  %63 = load i32, i32* @nbInput, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %62, i64 0, i64 %64
  %66 = load %struct.AsmInput*, %struct.AsmInput** %65, align 8
  %67 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %66, i32 0, i32 1
  %68 = load i8*, i8** %67, align 8
  %69 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %70 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %69, i32 0, i32 2
  %71 = load i32, i32* @nbInput, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %70, i64 0, i64 %72
  %74 = load %struct.AsmInput*, %struct.AsmInput** %73, align 8
  %75 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %74, i32 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = call i64 @strlen(i8* noundef %76) #13
  %78 = call i8* @strncat(i8* noundef %60, i8* noundef %68, i64 noundef %77) #14
  %79 = load i8*, i8** %4, align 8
  %80 = call i8* @strncat(i8* noundef %79, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.317, i64 0, i64 0), i64 noundef 3) #14
  %81 = load i8*, i8** %4, align 8
  store i8* %81, i8** %2, align 8
  br label %149

82:                                               ; preds = %1
  %83 = load i8*, i8** %4, align 8
  %84 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %85 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %84, i32 0, i32 2
  %86 = load i32, i32* @nbInput, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %85, i64 0, i64 %87
  %89 = load %struct.AsmInput*, %struct.AsmInput** %88, align 8
  %90 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %89, i32 0, i32 6
  %91 = load i32, i32* %90, align 4
  %92 = call i8* @opcode(i32 noundef %91)
  %93 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %94 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %93, i32 0, i32 2
  %95 = load i32, i32* @nbInput, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %94, i64 0, i64 %96
  %98 = load %struct.AsmInput*, %struct.AsmInput** %97, align 8
  %99 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %98, i32 0, i32 6
  %100 = load i32, i32* %99, align 4
  %101 = call i8* @opcode(i32 noundef %100)
  %102 = call i64 @strlen(i8* noundef %101) #13
  %103 = call i8* @strncat(i8* noundef %83, i8* noundef %92, i64 noundef %102) #14
  %104 = load i8*, i8** %4, align 8
  %105 = call i8* @strncat(i8* noundef %104, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63.318, i64 0, i64 0), i64 noundef 3) #14
  %106 = load i8*, i8** %4, align 8
  %107 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %108 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %107, i32 0, i32 2
  %109 = load i32, i32* @nbInput, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %108, i64 0, i64 %110
  %112 = load %struct.AsmInput*, %struct.AsmInput** %111, align 8
  %113 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %112, i32 0, i32 2
  %114 = load i8*, i8** %113, align 8
  %115 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %116 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %115, i32 0, i32 2
  %117 = load i32, i32* @nbInput, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %116, i64 0, i64 %118
  %120 = load %struct.AsmInput*, %struct.AsmInput** %119, align 8
  %121 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %120, i32 0, i32 2
  %122 = load i8*, i8** %121, align 8
  %123 = call i64 @strlen(i8* noundef %122) #13
  %124 = call i8* @strncat(i8* noundef %106, i8* noundef %114, i64 noundef %123) #14
  %125 = load i8*, i8** %4, align 8
  %126 = call i8* @strncat(i8* noundef %125, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61.316, i64 0, i64 0), i64 noundef 3) #14
  %127 = load i8*, i8** %4, align 8
  %128 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %129 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %128, i32 0, i32 2
  %130 = load i32, i32* @nbInput, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %129, i64 0, i64 %131
  %133 = load %struct.AsmInput*, %struct.AsmInput** %132, align 8
  %134 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %133, i32 0, i32 1
  %135 = load i8*, i8** %134, align 8
  %136 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %137 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %136, i32 0, i32 2
  %138 = load i32, i32* @nbInput, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [10 x %struct.AsmInput*], [10 x %struct.AsmInput*]* %137, i64 0, i64 %139
  %141 = load %struct.AsmInput*, %struct.AsmInput** %140, align 8
  %142 = getelementptr inbounds %struct.AsmInput, %struct.AsmInput* %141, i32 0, i32 1
  %143 = load i8*, i8** %142, align 8
  %144 = call i64 @strlen(i8* noundef %143) #13
  %145 = call i8* @strncat(i8* noundef %127, i8* noundef %135, i64 noundef %144) #14
  %146 = load i8*, i8** %4, align 8
  %147 = call i8* @strncat(i8* noundef %146, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.317, i64 0, i64 0), i64 noundef 3) #14
  %148 = load i8*, i8** %4, align 8
  store i8* %148, i8** %2, align 8
  br label %149

149:                                              ; preds = %82, %15
  %150 = load i8*, i8** %2, align 8
  ret i8* %150
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @retrieve_output_index(i8 noundef signext %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  store i8 %0, i8* %3, align 1
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %32, %1
  %6 = load i32, i32* %4, align 4
  %7 = load i32, i32* @nbOutput, align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %9, label %35

9:                                                ; preds = %5
  %10 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %11 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %10, i32 0, i32 1
  %12 = load i32, i32* %4, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %11, i64 0, i64 %13
  %15 = load %struct.AsmOutput*, %struct.AsmOutput** %14, align 8
  %16 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %15, i32 0, i32 4
  %17 = load i8, i8* %16, align 8
  %18 = sext i8 %17 to i32
  %19 = load i8, i8* %3, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %31

22:                                               ; preds = %9
  %23 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %24 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %23, i32 0, i32 1
  %25 = load i32, i32* %4, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %24, i64 0, i64 %26
  %28 = load %struct.AsmOutput*, %struct.AsmOutput** %27, align 8
  %29 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %28, i32 0, i32 5
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %2, align 4
  br label %36

31:                                               ; preds = %9
  br label %32

32:                                               ; preds = %31
  %33 = load i32, i32* %4, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %4, align 4
  br label %5, !llvm.loop !41

35:                                               ; preds = %5
  store i32 -1, i32* %2, align 4
  br label %36

36:                                               ; preds = %35, %22
  %37 = load i32, i32* %2, align 4
  ret i32 %37
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @subst_asm(i8* noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i8*, i8** %6, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = call i8* @string_replace(i8* noundef %7, i8* noundef %8, i8* noundef %9)
  ret i8* %10
}

; Function Attrs: nounwind
declare void @free(i8* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @string_replace(i8* noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = call i64 @strlen(i8* noundef %10) #13
  %12 = call i8* @llvm.stacksave()
  store i8* %12, i8** %7, align 8
  %13 = alloca i8, i64 %11, align 16
  store i64 %11, i64* %8, align 8
  call void @llvm.memset.p0i8.i64(i8* align 16 %13, i8 0, i64 %11, i1 false)
  store i32 0, i32* %9, align 4
  br label %14

14:                                               ; preds = %47, %3
  %15 = load i32, i32* %9, align 4
  %16 = sext i32 %15 to i64
  %17 = load i8*, i8** %4, align 8
  %18 = call i64 @strlen(i8* noundef %17) #13
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %50

20:                                               ; preds = %14
  %21 = load i8*, i8** %4, align 8
  %22 = load i32, i32* %9, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = load i8*, i8** %5, align 8
  %26 = load i8*, i8** %5, align 8
  %27 = call i64 @strlen(i8* noundef %26) #13
  %28 = call i32 @strncmp(i8* noundef %24, i8* noundef %25, i64 noundef %27) #13
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %20
  %31 = load i8*, i8** %6, align 8
  %32 = call i8* @strcat(i8* noundef %13, i8* noundef %31) #14
  %33 = load i8*, i8** %5, align 8
  %34 = call i64 @strlen(i8* noundef %33) #13
  %35 = sub i64 %34, 1
  %36 = load i32, i32* %9, align 4
  %37 = sext i32 %36 to i64
  %38 = add i64 %37, %35
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %9, align 4
  br label %46

40:                                               ; preds = %20
  %41 = load i8*, i8** %4, align 8
  %42 = load i32, i32* %9, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  %45 = call i8* @strncat(i8* noundef %13, i8* noundef %44, i64 noundef 1) #14
  br label %46

46:                                               ; preds = %40, %30
  br label %47

47:                                               ; preds = %46
  %48 = load i32, i32* %9, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %9, align 4
  br label %14, !llvm.loop !42

50:                                               ; preds = %14
  %51 = load i8*, i8** %4, align 8
  %52 = call i64 @strlen(i8* noundef %13) #13
  %53 = call i8* @strncpy(i8* noundef %51, i8* noundef %13, i64 noundef %52) #14
  %54 = load i8*, i8** %4, align 8
  %55 = load i8*, i8** %7, align 8
  call void @llvm.stackrestore(i8* %55)
  ret i8* %54
}

; Function Attrs: nounwind readonly willreturn
declare i32 @strncmp(i8* noundef, i8* noundef, i64 noundef) #2

; Function Attrs: nounwind
declare i8* @strcat(i8* noundef, i8* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @opcode(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %9 [
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
    i32 8, label %8
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.74.325, i64 0, i64 0), i8** %2, align 8
  br label %11

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75.326, i64 0, i64 0), i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76.327, i64 0, i64 0), i8** %2, align 8
  br label %11

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77.328, i64 0, i64 0), i8** %2, align 8
  br label %11

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.78.329, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0), i32 noundef %10) #11
  unreachable

11:                                               ; preds = %8, %7, %6, %5
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @load_variable(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %10 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68.319, i64 0, i64 0), i8** %2, align 8
  br label %11

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69.320, i64 0, i64 0), i8** %2, align 8
  br label %11

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70.321, i64 0, i64 0), i8** %2, align 8
  br label %11

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71.322, i64 0, i64 0), i8** %2, align 8
  br label %11

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72.323, i64 0, i64 0), i8** %2, align 8
  br label %11

10:                                               ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.73.324, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0)) #11
  unreachable

11:                                               ; preds = %9, %8, %7, %6, %5
  %12 = load i8*, i8** %2, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @retrieve_output_index_str(i8 noundef signext %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  store i8 %0, i8* %3, align 1
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %39, %1
  %6 = load i32, i32* %4, align 4
  %7 = load i32, i32* @nbOutput, align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %9, label %42

9:                                                ; preds = %5
  %10 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %11 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %10, i32 0, i32 1
  %12 = load i32, i32* %4, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %11, i64 0, i64 %13
  %15 = load %struct.AsmOutput*, %struct.AsmOutput** %14, align 8
  %16 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %15, i32 0, i32 4
  %17 = load i8, i8* %16, align 8
  %18 = sext i8 %17 to i32
  %19 = load i8, i8* %3, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %38

22:                                               ; preds = %9
  %23 = load %struct.AsmExtended*, %struct.AsmExtended** @asmExt, align 8
  %24 = getelementptr inbounds %struct.AsmExtended, %struct.AsmExtended* %23, i32 0, i32 1
  %25 = load i32, i32* %4, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [10 x %struct.AsmOutput*], [10 x %struct.AsmOutput*]* %24, i64 0, i64 %26
  %28 = load %struct.AsmOutput*, %struct.AsmOutput** %27, align 8
  %29 = getelementptr inbounds %struct.AsmOutput, %struct.AsmOutput* %28, i32 0, i32 5
  %30 = load i32, i32* %29, align 4
  switch i32 %30, label %37 [
    i32 0, label %31
    i32 1, label %32
    i32 2, label %33
    i32 3, label %34
    i32 4, label %35
    i32 5, label %36
  ]

31:                                               ; preds = %22
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43.331, i64 0, i64 0), i8** %2, align 8
  br label %43

32:                                               ; preds = %22
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45.333, i64 0, i64 0), i8** %2, align 8
  br label %43

33:                                               ; preds = %22
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47.335, i64 0, i64 0), i8** %2, align 8
  br label %43

34:                                               ; preds = %22
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49.337, i64 0, i64 0), i8** %2, align 8
  br label %43

35:                                               ; preds = %22
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80.353, i64 0, i64 0), i8** %2, align 8
  br label %43

36:                                               ; preds = %22
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81.354, i64 0, i64 0), i8** %2, align 8
  br label %43

37:                                               ; preds = %22
  br label %38

38:                                               ; preds = %37, %9
  br label %39

39:                                               ; preds = %38
  %40 = load i32, i32* %4, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %4, align 4
  br label %5, !llvm.loop !43

42:                                               ; preds = %5
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43.331, i64 0, i64 0), i8** %2, align 8
  br label %43

43:                                               ; preds = %42, %36, %35, %34, %33, %32, %31
  %44 = load i8*, i8** %2, align 8
  ret i8* %44
}

; Function Attrs: nounwind
declare i32 @snprintf(i8* noundef, i64 noundef, i8* noundef, ...) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @retrieve_parameter_order(i32 noundef %0, i8* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct.Obj*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  %7 = load i8*, i8** %5, align 8
  %8 = call %struct.Obj* @find_func(i8* noundef %7)
  store %struct.Obj* %8, %struct.Obj** %6, align 8
  %9 = load %struct.Obj*, %struct.Obj** %6, align 8
  %10 = icmp ne %struct.Obj* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = load %struct.Obj*, %struct.Obj** %6, align 8
  %13 = getelementptr inbounds %struct.Obj, %struct.Obj* %12, i32 0, i32 9
  %14 = load i32, i32* %13, align 8
  %15 = sub nsw i32 %14, 1
  %16 = load i32, i32* %4, align 4
  %17 = sub nsw i32 %15, %16
  store i32 %17, i32* %3, align 4
  br label %19

18:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %19

19:                                               ; preds = %18, %11
  %20 = load i32, i32* %3, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @update_register_size(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load i8*, i8** %4, align 8
  %7 = call i32 @strncmp(i8* noundef %6, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.363, i64 0, i64 0), i64 noundef 5) #13
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = load i32, i32* %5, align 4
  %11 = call i8* @reg_ax(i32 noundef %10)
  store i8* %11, i8** %3, align 8
  br label %35

12:                                               ; preds = %2
  %13 = load i8*, i8** %4, align 8
  %14 = call i32 @strncmp(i8* noundef %13, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.370, i64 0, i64 0), i64 noundef 5) #13
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = load i32, i32* %5, align 4
  %18 = call i8* @reg_bx(i32 noundef %17)
  store i8* %18, i8** %3, align 8
  br label %35

19:                                               ; preds = %12
  %20 = load i8*, i8** %4, align 8
  %21 = call i32 @strncmp(i8* noundef %20, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27.371, i64 0, i64 0), i64 noundef 5) #13
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4
  %25 = call i8* @reg_cx(i32 noundef %24)
  store i8* %25, i8** %3, align 8
  br label %35

26:                                               ; preds = %19
  %27 = load i8*, i8** %4, align 8
  %28 = call i32 @strncmp(i8* noundef %27, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.372, i64 0, i64 0), i64 noundef 5) #13
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = load i32, i32* %5, align 4
  %32 = call i8* @reg_dx(i32 noundef %31)
  store i8* %32, i8** %3, align 8
  br label %35

33:                                               ; preds = %26
  %34 = load i8*, i8** %4, align 8
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79.382, i64 0, i64 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.303, i64 0, i64 0), i8* noundef %34) #11
  unreachable

35:                                               ; preds = %30, %23, %16, %9
  %36 = load i8*, i8** %3, align 8
  ret i8* %36
}

; Function Attrs: nounwind readonly willreturn
declare i8* @strchr(i8* noundef, i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hashmap_get(%struct.HashMap* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.HashMap*, align 8
  %4 = alloca i8*, align 8
  store %struct.HashMap* %0, %struct.HashMap** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.HashMap*, %struct.HashMap** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i64 @strlen(i8* noundef %7) #13
  %9 = trunc i64 %8 to i32
  %10 = call i8* @hashmap_get2(%struct.HashMap* noundef %5, i8* noundef %6, i32 noundef %9)
  ret i8* %10
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hashmap_get2(%struct.HashMap* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.HashMap*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.HashEntry*, align 8
  store %struct.HashMap* %0, %struct.HashMap** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct.HashMap*, %struct.HashMap** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call %struct.HashEntry* @get_entry(%struct.HashMap* noundef %8, i8* noundef %9, i32 noundef %10)
  store %struct.HashEntry* %11, %struct.HashEntry** %7, align 8
  %12 = load %struct.HashEntry*, %struct.HashEntry** %7, align 8
  %13 = icmp ne %struct.HashEntry* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %3
  %15 = load %struct.HashEntry*, %struct.HashEntry** %7, align 8
  %16 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %15, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  br label %19

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18, %14
  %20 = phi i8* [ %17, %14 ], [ null, %18 ]
  ret i8* %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HashEntry* @get_entry(%struct.HashMap* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.HashEntry*, align 8
  %5 = alloca %struct.HashMap*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.HashEntry*, align 8
  store %struct.HashMap* %0, %struct.HashMap** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %11 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %12 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %11, i32 0, i32 0
  %13 = load %struct.HashEntry*, %struct.HashEntry** %12, align 8
  %14 = icmp ne %struct.HashEntry* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %3
  store %struct.HashEntry* null, %struct.HashEntry** %4, align 8
  br label %57

16:                                               ; preds = %3
  %17 = load i8*, i8** %6, align 8
  %18 = load i32, i32* %7, align 4
  %19 = call i64 @fnv_hash(i8* noundef %17, i32 noundef %18)
  store i64 %19, i64* %8, align 8
  store i32 0, i32* %9, align 4
  br label %20

20:                                               ; preds = %53, %16
  %21 = load i32, i32* %9, align 4
  %22 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %23 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %21, %24
  br i1 %25, label %26, label %56

26:                                               ; preds = %20
  %27 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %28 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %27, i32 0, i32 0
  %29 = load %struct.HashEntry*, %struct.HashEntry** %28, align 8
  %30 = load i64, i64* %8, align 8
  %31 = load i32, i32* %9, align 4
  %32 = sext i32 %31 to i64
  %33 = add i64 %30, %32
  %34 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %35 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = urem i64 %33, %37
  %39 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %29, i64 %38
  store %struct.HashEntry* %39, %struct.HashEntry** %10, align 8
  %40 = load %struct.HashEntry*, %struct.HashEntry** %10, align 8
  %41 = load i8*, i8** %6, align 8
  %42 = load i32, i32* %7, align 4
  %43 = call zeroext i1 @match(%struct.HashEntry* noundef %40, i8* noundef %41, i32 noundef %42)
  br i1 %43, label %44, label %46

44:                                               ; preds = %26
  %45 = load %struct.HashEntry*, %struct.HashEntry** %10, align 8
  store %struct.HashEntry* %45, %struct.HashEntry** %4, align 8
  br label %57

46:                                               ; preds = %26
  %47 = load %struct.HashEntry*, %struct.HashEntry** %10, align 8
  %48 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %47, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  store %struct.HashEntry* null, %struct.HashEntry** %4, align 8
  br label %57

52:                                               ; preds = %46
  br label %53

53:                                               ; preds = %52
  %54 = load i32, i32* %9, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %9, align 4
  br label %20, !llvm.loop !44

56:                                               ; preds = %20
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.383, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 83) #11
  unreachable

57:                                               ; preds = %51, %44, %15
  %58 = load %struct.HashEntry*, %struct.HashEntry** %4, align 8
  ret %struct.HashEntry* %58
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @fnv_hash(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i64 -3750763034362895579, i64* %5, align 8
  store i32 0, i32* %6, align 4
  br label %7

7:                                                ; preds = %22, %2
  %8 = load i32, i32* %6, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %25

11:                                               ; preds = %7
  %12 = load i64, i64* %5, align 8
  %13 = mul i64 %12, 1099511628211
  store i64 %13, i64* %5, align 8
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %6, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i64
  %20 = load i64, i64* %5, align 8
  %21 = xor i64 %20, %19
  store i64 %21, i64* %5, align 8
  br label %22

22:                                               ; preds = %11
  %23 = load i32, i32* %6, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %6, align 4
  br label %7, !llvm.loop !45

25:                                               ; preds = %7
  %26 = load i64, i64* %5, align 8
  ret i64 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @match(%struct.HashEntry* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.HashEntry*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.HashEntry* %0, %struct.HashEntry** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.HashEntry*, %struct.HashEntry** %4, align 8
  %8 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %31

11:                                               ; preds = %3
  %12 = load %struct.HashEntry*, %struct.HashEntry** %4, align 8
  %13 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %12, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp ne i8* %14, inttoptr (i64 -1 to i8*)
  br i1 %15, label %16, label %31

16:                                               ; preds = %11
  %17 = load %struct.HashEntry*, %struct.HashEntry** %4, align 8
  %18 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = load i32, i32* %6, align 4
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %31

22:                                               ; preds = %16
  %23 = load %struct.HashEntry*, %struct.HashEntry** %4, align 8
  %24 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %23, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = load i8*, i8** %5, align 8
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = call i32 @memcmp(i8* noundef %25, i8* noundef %26, i64 noundef %28) #13
  %30 = icmp eq i32 %29, 0
  br label %31

31:                                               ; preds = %22, %16, %11, %3
  %32 = phi i1 [ false, %16 ], [ false, %11 ], [ false, %3 ], [ %30, %22 ]
  ret i1 %32
}

; Function Attrs: nounwind readonly willreturn
declare i32 @memcmp(i8* noundef, i8* noundef, i64 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hashmap_put(%struct.HashMap* noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca %struct.HashMap*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %struct.HashMap* %0, %struct.HashMap** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %struct.HashMap*, %struct.HashMap** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = call i64 @strlen(i8* noundef %9) #13
  %11 = trunc i64 %10 to i32
  %12 = load i8*, i8** %6, align 8
  call void @hashmap_put2(%struct.HashMap* noundef %7, i8* noundef %8, i32 noundef %11, i8* noundef %12)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hashmap_put2(%struct.HashMap* noundef %0, i8* noundef %1, i32 noundef %2, i8* noundef %3) #0 {
  %5 = alloca %struct.HashMap*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %struct.HashEntry*, align 8
  store %struct.HashMap* %0, %struct.HashMap** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %10 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = load i32, i32* %7, align 4
  %13 = call %struct.HashEntry* @get_or_insert_entry(%struct.HashMap* noundef %10, i8* noundef %11, i32 noundef %12)
  store %struct.HashEntry* %13, %struct.HashEntry** %9, align 8
  %14 = load i8*, i8** %8, align 8
  %15 = load %struct.HashEntry*, %struct.HashEntry** %9, align 8
  %16 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %15, i32 0, i32 2
  store i8* %14, i8** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.HashEntry* @get_or_insert_entry(%struct.HashMap* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.HashEntry*, align 8
  %5 = alloca %struct.HashMap*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.HashEntry*, align 8
  store %struct.HashMap* %0, %struct.HashMap** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %11 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %12 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %11, i32 0, i32 0
  %13 = load %struct.HashEntry*, %struct.HashEntry** %12, align 8
  %14 = icmp ne %struct.HashEntry* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = call noalias i8* @calloc(i64 noundef 16, i64 noundef 24) #14
  %17 = bitcast i8* %16 to %struct.HashEntry*
  %18 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %19 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %18, i32 0, i32 0
  store %struct.HashEntry* %17, %struct.HashEntry** %19, align 8
  %20 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %21 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %20, i32 0, i32 0
  %22 = load %struct.HashEntry*, %struct.HashEntry** %21, align 8
  %23 = icmp eq %struct.HashEntry* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %15
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7.385, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0)) #11
  unreachable

25:                                               ; preds = %15
  %26 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %27 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %26, i32 0, i32 1
  store i32 16, i32* %27, align 8
  br label %41

28:                                               ; preds = %3
  %29 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %30 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %29, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = mul nsw i32 %31, 100
  %33 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %34 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = sdiv i32 %32, %35
  %37 = icmp sge i32 %36, 70
  br i1 %37, label %38, label %40

38:                                               ; preds = %28
  %39 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  call void @rehash(%struct.HashMap* noundef %39)
  br label %40

40:                                               ; preds = %38, %28
  br label %41

41:                                               ; preds = %40, %25
  %42 = load i8*, i8** %6, align 8
  %43 = load i32, i32* %7, align 4
  %44 = call i64 @fnv_hash(i8* noundef %42, i32 noundef %43)
  store i64 %44, i64* %8, align 8
  store i32 0, i32* %9, align 4
  br label %45

45:                                               ; preds = %89, %41
  %46 = load i32, i32* %9, align 4
  %47 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %48 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %46, %49
  br i1 %50, label %51, label %92

51:                                               ; preds = %45
  %52 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %53 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %52, i32 0, i32 0
  %54 = load %struct.HashEntry*, %struct.HashEntry** %53, align 8
  %55 = load i64, i64* %8, align 8
  %56 = load i32, i32* %9, align 4
  %57 = sext i32 %56 to i64
  %58 = add i64 %55, %57
  %59 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %60 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = urem i64 %58, %62
  %64 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %54, i64 %63
  store %struct.HashEntry* %64, %struct.HashEntry** %10, align 8
  %65 = load %struct.HashEntry*, %struct.HashEntry** %10, align 8
  %66 = load i8*, i8** %6, align 8
  %67 = load i32, i32* %7, align 4
  %68 = call zeroext i1 @match(%struct.HashEntry* noundef %65, i8* noundef %66, i32 noundef %67)
  br i1 %68, label %69, label %71

69:                                               ; preds = %51
  %70 = load %struct.HashEntry*, %struct.HashEntry** %10, align 8
  store %struct.HashEntry* %70, %struct.HashEntry** %4, align 8
  br label %93

71:                                               ; preds = %51
  %72 = load %struct.HashEntry*, %struct.HashEntry** %10, align 8
  %73 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %72, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = load i8*, i8** %6, align 8
  %78 = load %struct.HashEntry*, %struct.HashEntry** %10, align 8
  %79 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %78, i32 0, i32 0
  store i8* %77, i8** %79, align 8
  %80 = load i32, i32* %7, align 4
  %81 = load %struct.HashEntry*, %struct.HashEntry** %10, align 8
  %82 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %81, i32 0, i32 1
  store i32 %80, i32* %82, align 8
  %83 = load %struct.HashMap*, %struct.HashMap** %5, align 8
  %84 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %83, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %84, align 4
  %87 = load %struct.HashEntry*, %struct.HashEntry** %10, align 8
  store %struct.HashEntry* %87, %struct.HashEntry** %4, align 8
  br label %93

88:                                               ; preds = %71
  br label %89

89:                                               ; preds = %88
  %90 = load i32, i32* %9, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %9, align 4
  br label %45, !llvm.loop !46

92:                                               ; preds = %45
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.383, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 124) #11
  unreachable

93:                                               ; preds = %76, %69
  %94 = load %struct.HashEntry*, %struct.HashEntry** %4, align 8
  ret %struct.HashEntry* %94
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @rehash(%struct.HashMap* noundef %0) #0 {
  %2 = alloca %struct.HashMap*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.HashMap, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.HashEntry*, align 8
  store %struct.HashMap* %0, %struct.HashMap** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %9

9:                                                ; preds = %39, %1
  %10 = load i32, i32* %4, align 4
  %11 = load %struct.HashMap*, %struct.HashMap** %2, align 8
  %12 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %15, label %42

15:                                               ; preds = %9
  %16 = load %struct.HashMap*, %struct.HashMap** %2, align 8
  %17 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %16, i32 0, i32 0
  %18 = load %struct.HashEntry*, %struct.HashEntry** %17, align 8
  %19 = load i32, i32* %4, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %18, i64 %20
  %22 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %21, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp ne i8* %23, null
  br i1 %24, label %25, label %38

25:                                               ; preds = %15
  %26 = load %struct.HashMap*, %struct.HashMap** %2, align 8
  %27 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %26, i32 0, i32 0
  %28 = load %struct.HashEntry*, %struct.HashEntry** %27, align 8
  %29 = load i32, i32* %4, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %28, i64 %30
  %32 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %31, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp ne i8* %33, inttoptr (i64 -1 to i8*)
  br i1 %34, label %35, label %38

35:                                               ; preds = %25
  %36 = load i32, i32* %3, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %3, align 4
  br label %38

38:                                               ; preds = %35, %25, %15
  br label %39

39:                                               ; preds = %38
  %40 = load i32, i32* %4, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %4, align 4
  br label %9, !llvm.loop !47

42:                                               ; preds = %9
  %43 = load %struct.HashMap*, %struct.HashMap** %2, align 8
  %44 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %5, align 4
  br label %46

46:                                               ; preds = %52, %42
  %47 = load i32, i32* %3, align 4
  %48 = mul nsw i32 %47, 100
  %49 = load i32, i32* %5, align 4
  %50 = sdiv i32 %48, %49
  %51 = icmp sge i32 %50, 50
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = load i32, i32* %5, align 4
  %54 = mul nsw i32 %53, 2
  store i32 %54, i32* %5, align 4
  br label %46, !llvm.loop !48

55:                                               ; preds = %46
  %56 = load i32, i32* %5, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  br label %60

59:                                               ; preds = %55
  call void @__assert_fail(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.386, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 42, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.rehash, i64 0, i64 0)) #12
  unreachable

60:                                               ; preds = %58
  %61 = bitcast %struct.HashMap* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false)
  %62 = load i32, i32* %5, align 4
  %63 = sext i32 %62 to i64
  %64 = call noalias i8* @calloc(i64 noundef %63, i64 noundef 24) #14
  %65 = bitcast i8* %64 to %struct.HashEntry*
  %66 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %6, i32 0, i32 0
  store %struct.HashEntry* %65, %struct.HashEntry** %66, align 8
  %67 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %6, i32 0, i32 0
  %68 = load %struct.HashEntry*, %struct.HashEntry** %67, align 8
  %69 = icmp eq %struct.HashEntry* %68, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %60
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9.387, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0)) #11
  unreachable

71:                                               ; preds = %60
  %72 = load i32, i32* %5, align 4
  %73 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %6, i32 0, i32 1
  store i32 %72, i32* %73, align 8
  store i32 0, i32* %7, align 4
  br label %74

74:                                               ; preds = %107, %71
  %75 = load i32, i32* %7, align 4
  %76 = load %struct.HashMap*, %struct.HashMap** %2, align 8
  %77 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %76, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp slt i32 %75, %78
  br i1 %79, label %80, label %110

80:                                               ; preds = %74
  %81 = load %struct.HashMap*, %struct.HashMap** %2, align 8
  %82 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %81, i32 0, i32 0
  %83 = load %struct.HashEntry*, %struct.HashEntry** %82, align 8
  %84 = load i32, i32* %7, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %83, i64 %85
  store %struct.HashEntry* %86, %struct.HashEntry** %8, align 8
  %87 = load %struct.HashEntry*, %struct.HashEntry** %8, align 8
  %88 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = icmp ne i8* %89, null
  br i1 %90, label %91, label %106

91:                                               ; preds = %80
  %92 = load %struct.HashEntry*, %struct.HashEntry** %8, align 8
  %93 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %92, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = icmp ne i8* %94, inttoptr (i64 -1 to i8*)
  br i1 %95, label %96, label %106

96:                                               ; preds = %91
  %97 = load %struct.HashEntry*, %struct.HashEntry** %8, align 8
  %98 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %97, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = load %struct.HashEntry*, %struct.HashEntry** %8, align 8
  %101 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %100, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = load %struct.HashEntry*, %struct.HashEntry** %8, align 8
  %104 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %103, i32 0, i32 2
  %105 = load i8*, i8** %104, align 8
  call void @hashmap_put2(%struct.HashMap* noundef %6, i8* noundef %99, i32 noundef %102, i8* noundef %105)
  br label %106

106:                                              ; preds = %96, %91, %80
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %7, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %7, align 4
  br label %74, !llvm.loop !49

110:                                              ; preds = %74
  %111 = getelementptr inbounds %struct.HashMap, %struct.HashMap* %6, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = load i32, i32* %3, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %115, label %116

115:                                              ; preds = %110
  br label %117

116:                                              ; preds = %110
  call void @__assert_fail(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10.388, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 58, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.rehash, i64 0, i64 0)) #12
  unreachable

117:                                              ; preds = %115
  %118 = load %struct.HashMap*, %struct.HashMap** %2, align 8
  %119 = bitcast %struct.HashMap* %118 to i8*
  %120 = bitcast %struct.HashMap* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hashmap_delete(%struct.HashMap* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.HashMap*, align 8
  %4 = alloca i8*, align 8
  store %struct.HashMap* %0, %struct.HashMap** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.HashMap*, %struct.HashMap** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i64 @strlen(i8* noundef %7) #13
  %9 = trunc i64 %8 to i32
  call void @hashmap_delete2(%struct.HashMap* noundef %5, i8* noundef %6, i32 noundef %9)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hashmap_delete2(%struct.HashMap* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.HashMap*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.HashEntry*, align 8
  store %struct.HashMap* %0, %struct.HashMap** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = load %struct.HashMap*, %struct.HashMap** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call %struct.HashEntry* @get_entry(%struct.HashMap* noundef %8, i8* noundef %9, i32 noundef %10)
  store %struct.HashEntry* %11, %struct.HashEntry** %7, align 8
  %12 = load %struct.HashEntry*, %struct.HashEntry** %7, align 8
  %13 = icmp ne %struct.HashEntry* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = load %struct.HashEntry*, %struct.HashEntry** %7, align 8
  %16 = getelementptr inbounds %struct.HashEntry, %struct.HashEntry* %15, i32 0, i32 0
  store i8* inttoptr (i64 -1 to i8*), i8** %16, align 8
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hashmap_test() #0 {
  %1 = alloca %struct.HashMap*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 16) #14
  %14 = bitcast i8* %13 to %struct.HashMap*
  store %struct.HashMap* %14, %struct.HashMap** %1, align 8
  store i32 0, i32* %2, align 4
  br label %15

15:                                               ; preds = %25, %0
  %16 = load i32, i32* %2, align 4
  %17 = icmp slt i32 %16, 5000
  br i1 %17, label %18, label %28

18:                                               ; preds = %15
  %19 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %20 = load i32, i32* %2, align 4
  %21 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i64 0, i64 0), i32 noundef %20)
  %22 = load i32, i32* %2, align 4
  %23 = sext i32 %22 to i64
  %24 = inttoptr i64 %23 to i8*
  call void @hashmap_put(%struct.HashMap* noundef %19, i8* noundef %21, i8* noundef %24)
  br label %25

25:                                               ; preds = %18
  %26 = load i32, i32* %2, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %2, align 4
  br label %15, !llvm.loop !50

28:                                               ; preds = %15
  store i32 1000, i32* %3, align 4
  br label %29

29:                                               ; preds = %36, %28
  %30 = load i32, i32* %3, align 4
  %31 = icmp slt i32 %30, 2000
  br i1 %31, label %32, label %39

32:                                               ; preds = %29
  %33 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %34 = load i32, i32* %3, align 4
  %35 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i64 0, i64 0), i32 noundef %34)
  call void @hashmap_delete(%struct.HashMap* noundef %33, i8* noundef %35)
  br label %36

36:                                               ; preds = %32
  %37 = load i32, i32* %3, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %3, align 4
  br label %29, !llvm.loop !51

39:                                               ; preds = %29
  store i32 1500, i32* %4, align 4
  br label %40

40:                                               ; preds = %50, %39
  %41 = load i32, i32* %4, align 4
  %42 = icmp slt i32 %41, 1600
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %45 = load i32, i32* %4, align 4
  %46 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i64 0, i64 0), i32 noundef %45)
  %47 = load i32, i32* %4, align 4
  %48 = sext i32 %47 to i64
  %49 = inttoptr i64 %48 to i8*
  call void @hashmap_put(%struct.HashMap* noundef %44, i8* noundef %46, i8* noundef %49)
  br label %50

50:                                               ; preds = %43
  %51 = load i32, i32* %4, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %4, align 4
  br label %40, !llvm.loop !52

53:                                               ; preds = %40
  store i32 6000, i32* %5, align 4
  br label %54

54:                                               ; preds = %64, %53
  %55 = load i32, i32* %5, align 4
  %56 = icmp slt i32 %55, 7000
  br i1 %56, label %57, label %67

57:                                               ; preds = %54
  %58 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %59 = load i32, i32* %5, align 4
  %60 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i64 0, i64 0), i32 noundef %59)
  %61 = load i32, i32* %5, align 4
  %62 = sext i32 %61 to i64
  %63 = inttoptr i64 %62 to i8*
  call void @hashmap_put(%struct.HashMap* noundef %58, i8* noundef %60, i8* noundef %63)
  br label %64

64:                                               ; preds = %57
  %65 = load i32, i32* %5, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %5, align 4
  br label %54, !llvm.loop !53

67:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %68

68:                                               ; preds = %83, %67
  %69 = load i32, i32* %6, align 4
  %70 = icmp slt i32 %69, 1000
  br i1 %70, label %71, label %86

71:                                               ; preds = %68
  %72 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %73 = load i32, i32* %6, align 4
  %74 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i64 0, i64 0), i32 noundef %73)
  %75 = call i8* @hashmap_get(%struct.HashMap* noundef %72, i8* noundef %74)
  %76 = ptrtoint i8* %75 to i64
  %77 = load i32, i32* %6, align 4
  %78 = sext i32 %77 to i64
  %79 = icmp eq i64 %76, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %71
  br label %82

81:                                               ; preds = %71
  call void @__assert_fail(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.390, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 175, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.hashmap_test, i64 0, i64 0)) #12
  unreachable

82:                                               ; preds = %80
  br label %83

83:                                               ; preds = %82
  %84 = load i32, i32* %6, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %6, align 4
  br label %68, !llvm.loop !54

86:                                               ; preds = %68
  store i32 1000, i32* %7, align 4
  br label %87

87:                                               ; preds = %97, %86
  %88 = load i32, i32* %7, align 4
  %89 = icmp slt i32 %88, 1500
  br i1 %89, label %90, label %100

90:                                               ; preds = %87
  %91 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %92 = call i8* @hashmap_get(%struct.HashMap* noundef %91, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.391, i64 0, i64 0))
  %93 = icmp eq i8* %92, null
  br i1 %93, label %94, label %95

94:                                               ; preds = %90
  br label %96

95:                                               ; preds = %90
  call void @__assert_fail(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4.392, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 177, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.hashmap_test, i64 0, i64 0)) #12
  unreachable

96:                                               ; preds = %94
  br label %97

97:                                               ; preds = %96
  %98 = load i32, i32* %7, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %7, align 4
  br label %87, !llvm.loop !55

100:                                              ; preds = %87
  store i32 1500, i32* %8, align 4
  br label %101

101:                                              ; preds = %116, %100
  %102 = load i32, i32* %8, align 4
  %103 = icmp slt i32 %102, 1600
  br i1 %103, label %104, label %119

104:                                              ; preds = %101
  %105 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %106 = load i32, i32* %8, align 4
  %107 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i64 0, i64 0), i32 noundef %106)
  %108 = call i8* @hashmap_get(%struct.HashMap* noundef %105, i8* noundef %107)
  %109 = ptrtoint i8* %108 to i64
  %110 = load i32, i32* %8, align 4
  %111 = sext i32 %110 to i64
  %112 = icmp eq i64 %109, %111
  br i1 %112, label %113, label %114

113:                                              ; preds = %104
  br label %115

114:                                              ; preds = %104
  call void @__assert_fail(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.390, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 179, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.hashmap_test, i64 0, i64 0)) #12
  unreachable

115:                                              ; preds = %113
  br label %116

116:                                              ; preds = %115
  %117 = load i32, i32* %8, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %8, align 4
  br label %101, !llvm.loop !56

119:                                              ; preds = %101
  store i32 1600, i32* %9, align 4
  br label %120

120:                                              ; preds = %130, %119
  %121 = load i32, i32* %9, align 4
  %122 = icmp slt i32 %121, 2000
  br i1 %122, label %123, label %133

123:                                              ; preds = %120
  %124 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %125 = call i8* @hashmap_get(%struct.HashMap* noundef %124, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.391, i64 0, i64 0))
  %126 = icmp eq i8* %125, null
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  br label %129

128:                                              ; preds = %123
  call void @__assert_fail(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4.392, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 181, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.hashmap_test, i64 0, i64 0)) #12
  unreachable

129:                                              ; preds = %127
  br label %130

130:                                              ; preds = %129
  %131 = load i32, i32* %9, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %9, align 4
  br label %120, !llvm.loop !57

133:                                              ; preds = %120
  store i32 2000, i32* %10, align 4
  br label %134

134:                                              ; preds = %149, %133
  %135 = load i32, i32* %10, align 4
  %136 = icmp slt i32 %135, 5000
  br i1 %136, label %137, label %152

137:                                              ; preds = %134
  %138 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %139 = load i32, i32* %10, align 4
  %140 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i64 0, i64 0), i32 noundef %139)
  %141 = call i8* @hashmap_get(%struct.HashMap* noundef %138, i8* noundef %140)
  %142 = ptrtoint i8* %141 to i64
  %143 = load i32, i32* %10, align 4
  %144 = sext i32 %143 to i64
  %145 = icmp eq i64 %142, %144
  br i1 %145, label %146, label %147

146:                                              ; preds = %137
  br label %148

147:                                              ; preds = %137
  call void @__assert_fail(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.390, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 183, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.hashmap_test, i64 0, i64 0)) #12
  unreachable

148:                                              ; preds = %146
  br label %149

149:                                              ; preds = %148
  %150 = load i32, i32* %10, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %10, align 4
  br label %134, !llvm.loop !58

152:                                              ; preds = %134
  store i32 5000, i32* %11, align 4
  br label %153

153:                                              ; preds = %163, %152
  %154 = load i32, i32* %11, align 4
  %155 = icmp slt i32 %154, 6000
  br i1 %155, label %156, label %166

156:                                              ; preds = %153
  %157 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %158 = call i8* @hashmap_get(%struct.HashMap* noundef %157, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.391, i64 0, i64 0))
  %159 = icmp eq i8* %158, null
  br i1 %159, label %160, label %161

160:                                              ; preds = %156
  br label %162

161:                                              ; preds = %156
  call void @__assert_fail(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4.392, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 185, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.hashmap_test, i64 0, i64 0)) #12
  unreachable

162:                                              ; preds = %160
  br label %163

163:                                              ; preds = %162
  %164 = load i32, i32* %11, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %11, align 4
  br label %153, !llvm.loop !59

166:                                              ; preds = %153
  store i32 6000, i32* %12, align 4
  br label %167

167:                                              ; preds = %177, %166
  %168 = load i32, i32* %12, align 4
  %169 = icmp slt i32 %168, 7000
  br i1 %169, label %170, label %180

170:                                              ; preds = %167
  %171 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %172 = load i32, i32* %12, align 4
  %173 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i64 0, i64 0), i32 noundef %172)
  %174 = load i32, i32* %12, align 4
  %175 = sext i32 %174 to i64
  %176 = inttoptr i64 %175 to i8*
  call void @hashmap_put(%struct.HashMap* noundef %171, i8* noundef %173, i8* noundef %176)
  br label %177

177:                                              ; preds = %170
  %178 = load i32, i32* %12, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %12, align 4
  br label %167, !llvm.loop !60

180:                                              ; preds = %167
  %181 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %182 = call i8* @hashmap_get(%struct.HashMap* noundef %181, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.391, i64 0, i64 0))
  %183 = icmp eq i8* %182, null
  br i1 %183, label %184, label %185

184:                                              ; preds = %180
  br label %186

185:                                              ; preds = %180
  call void @__assert_fail(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4.392, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.384, i64 0, i64 0), i32 noundef 189, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.hashmap_test, i64 0, i64 0)) #12
  unreachable

186:                                              ; preds = %184
  %187 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.393, i64 0, i64 0))
  %188 = load %struct.HashMap*, %struct.HashMap** %1, align 8
  %189 = bitcast %struct.HashMap* %188 to i8*
  call void @free(i8* noundef %189) #14
  ret void
}

declare i32 @printf(i8* noundef, ...) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @extract_filename(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call noalias i8* @strdup(i8* noundef %4) #14
  %6 = call i8* @__xpg_basename(i8* noundef %5) #14
  store i8* %6, i8** %3, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.401, i64 0, i64 0), i8* noundef %7)
  ret i8* %8
}

; Function Attrs: nounwind
declare noalias i8* @strdup(i8* noundef) #6

; Function Attrs: nounwind
declare i8* @__xpg_basename(i8* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @extract_path(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = call i64 @strlen(i8* noundef %10) #13
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* %5, align 4
  %13 = load i8*, i8** %4, align 8
  %14 = call i64 @strlen(i8* noundef %13) #13
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 4
  %16 = load i32, i32* %5, align 4
  %17 = load i32, i32* %6, align 4
  %18 = sub nsw i32 %16, %17
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %7, align 4
  %20 = load i32, i32* %7, align 4
  %21 = zext i32 %20 to i64
  %22 = call i8* @llvm.stacksave()
  store i8* %22, i8** %8, align 8
  %23 = alloca i8, i64 %21, align 16
  store i64 %21, i64* %9, align 8
  call void @llvm.memset.p0i8.i64(i8* align 16 %23, i8 0, i64 %21, i1 false)
  %24 = load i8*, i8** %3, align 8
  %25 = sub i64 %21, 1
  %26 = call i8* @strncpy(i8* noundef %23, i8* noundef %24, i64 noundef %25) #14
  %27 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.401, i64 0, i64 0), i8* noundef %23)
  %28 = load i8*, i8** %8, align 8
  call void @llvm.stackrestore(i8* %28)
  ret i8* %27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @replace_extn(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = call i8* @extract_filename(i8* noundef %7)
  store i8* %8, i8** %5, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = call i8* @strrchr(i8* noundef %9, i32 noundef 46) #13
  store i8* %10, i8** %6, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i8*, i8** %6, align 8
  store i8 0, i8* %14, align 1
  br label %15

15:                                               ; preds = %13, %2
  %16 = load i8*, i8** %5, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.402, i64 0, i64 0), i8* noundef %16, i8* noundef %17)
  ret i8* %18
}

; Function Attrs: nounwind readonly willreturn
declare i8* @strrchr(i8* noundef, i32 noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dump_machine() #0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.403, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @file_exists(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i32 @stat(i8* noundef %4, %struct.stat* noundef %3) #14
  %6 = icmp ne i32 %5, 0
  %7 = xor i1 %6, true
  ret i1 %7
}

; Function Attrs: nounwind
declare i32 @stat(i8* noundef, %struct.stat* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 noundef %0, i8** noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.StringArray, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %16 = call i32 @atexit(void ()* noundef @cleanup) #14
  %17 = load i32, i32* %4, align 4
  %18 = load i8**, i8*** %5, align 8
  call void @parse_args(i32 noundef %17, i8** noundef %18)
  %19 = load i8, i8* @isDebug, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %21, label %30

21:                                               ; preds = %2
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %23 = icmp eq %struct._IO_FILE* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = call noalias %struct._IO_FILE* @fopen(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @logFile, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.404, i64 0, i64 0))
  store %struct._IO_FILE* %25, %struct._IO_FILE** @f, align 8
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %27 = icmp eq %struct._IO_FILE* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5.405, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable

29:                                               ; preds = %24
  br label %30

30:                                               ; preds = %29, %21, %2
  call void @init_macros()
  %31 = load i8, i8* @opt_cc1, align 1
  %32 = trunc i8 %31 to i1
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = load i8, i8* @isCc1input, align 1
  %35 = trunc i8 %34 to i1
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.7.407, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable

37:                                               ; preds = %33, %30
  %38 = load i8, i8* @opt_cc1, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = load i8**, i8*** %5, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 0
  %43 = load i8*, i8** %42, align 8
  call void @add_default_include_paths(i8* noundef %43)
  call void @cc1()
  store i32 0, i32* %3, align 4
  br label %193

44:                                               ; preds = %37
  %45 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @input_paths, i32 0, i32 2), align 4
  %46 = icmp sgt i32 %45, 1
  br i1 %46, label %47, label %60

47:                                               ; preds = %44
  %48 = load i8*, i8** @opt_o, align 8
  %49 = icmp ne i8* %48, null
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = load i8, i8* @opt_c, align 1
  %52 = trunc i8 %51 to i1
  br i1 %52, label %59, label %53

53:                                               ; preds = %50
  %54 = load i8, i8* @opt_S, align 1
  %55 = trunc i8 %54 to i1
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = load i8, i8* @opt_E, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %60

59:                                               ; preds = %56, %53, %50
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.8.408, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable

60:                                               ; preds = %56, %47, %44
  %61 = bitcast %struct.StringArray* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false)
  store i32 0, i32* %7, align 4
  br label %62

62:                                               ; preds = %176, %60
  %63 = load i32, i32* %7, align 4
  %64 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @input_paths, i32 0, i32 2), align 4
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %66, label %179

66:                                               ; preds = %62
  %67 = load i8**, i8*** getelementptr inbounds (%struct.StringArray, %struct.StringArray* @input_paths, i32 0, i32 0), align 8
  %68 = load i32, i32* %7, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8*, i8** %67, i64 %69
  %71 = load i8*, i8** %70, align 8
  store i8* %71, i8** %8, align 8
  %72 = load i8*, i8** %8, align 8
  %73 = call i32 @strncmp(i8* noundef %72, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.409, i64 0, i64 0), i64 noundef 2) #13
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %66
  %76 = load i8*, i8** %8, align 8
  call void @strarray_push(%struct.StringArray* noundef %6, i8* noundef %76)
  br label %176

77:                                               ; preds = %66
  %78 = load i8*, i8** %8, align 8
  %79 = call i32 @strncmp(i8* noundef %78, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.410, i64 0, i64 0), i64 noundef 4) #13
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %94, label %81

81:                                               ; preds = %77
  %82 = load i8*, i8** %8, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 4
  %84 = call noalias i8* @strdup(i8* noundef %83) #14
  store i8* %84, i8** %9, align 8
  %85 = load i8*, i8** %9, align 8
  %86 = call i8* @strtok(i8* noundef %85, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.411, i64 0, i64 0)) #14
  store i8* %86, i8** %10, align 8
  br label %87

87:                                               ; preds = %90, %81
  %88 = load i8*, i8** %10, align 8
  %89 = icmp ne i8* %88, null
  br i1 %89, label %90, label %93

90:                                               ; preds = %87
  %91 = load i8*, i8** %10, align 8
  call void @strarray_push(%struct.StringArray* noundef %6, i8* noundef %91)
  %92 = call i8* @strtok(i8* noundef null, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.411, i64 0, i64 0)) #14
  store i8* %92, i8** %10, align 8
  br label %87, !llvm.loop !61

93:                                               ; preds = %87
  br label %176

94:                                               ; preds = %77
  %95 = load i8*, i8** @opt_o, align 8
  %96 = icmp ne i8* %95, null
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  %98 = load i8*, i8** @opt_o, align 8
  store i8* %98, i8** %11, align 8
  br label %109

99:                                               ; preds = %94
  %100 = load i8, i8* @opt_S, align 1
  %101 = trunc i8 %100 to i1
  br i1 %101, label %102, label %105

102:                                              ; preds = %99
  %103 = load i8*, i8** %8, align 8
  %104 = call i8* @replace_extn(i8* noundef %103, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.412, i64 0, i64 0))
  store i8* %104, i8** %11, align 8
  br label %108

105:                                              ; preds = %99
  %106 = load i8*, i8** %8, align 8
  %107 = call i8* @replace_extn(i8* noundef %106, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.413, i64 0, i64 0))
  store i8* %107, i8** %11, align 8
  br label %108

108:                                              ; preds = %105, %102
  br label %109

109:                                              ; preds = %108, %97
  %110 = load i8*, i8** %8, align 8
  %111 = call i32 @get_file_type(i8* noundef %110)
  store i32 %111, i32* %12, align 4
  %112 = load i32, i32* %12, align 4
  %113 = icmp eq i32 %112, 3
  br i1 %113, label %120, label %114

114:                                              ; preds = %109
  %115 = load i32, i32* %12, align 4
  %116 = icmp eq i32 %115, 4
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = load i32, i32* %12, align 4
  %119 = icmp eq i32 %118, 5
  br i1 %119, label %120, label %122

120:                                              ; preds = %117, %114, %109
  %121 = load i8*, i8** %8, align 8
  call void @strarray_push(%struct.StringArray* noundef %6, i8* noundef %121)
  br label %176

122:                                              ; preds = %117
  %123 = load i32, i32* %12, align 4
  %124 = icmp eq i32 %123, 2
  br i1 %124, label %125, label %132

125:                                              ; preds = %122
  %126 = load i8, i8* @opt_S, align 1
  %127 = trunc i8 %126 to i1
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = load i8*, i8** %8, align 8
  %130 = load i8*, i8** %11, align 8
  call void @assemble(i8* noundef %129, i8* noundef %130)
  br label %131

131:                                              ; preds = %128, %125
  br label %176

132:                                              ; preds = %122
  %133 = load i32, i32* %12, align 4
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  br label %137

136:                                              ; preds = %132
  call void @__assert_fail(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14.414, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0), i32 noundef 1171, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #12
  unreachable

137:                                              ; preds = %135
  %138 = load i8, i8* @opt_E, align 1
  %139 = trunc i8 %138 to i1
  br i1 %139, label %143, label %140

140:                                              ; preds = %137
  %141 = load i8, i8* @opt_M, align 1
  %142 = trunc i8 %141 to i1
  br i1 %142, label %143, label %147

143:                                              ; preds = %140, %137
  %144 = load i32, i32* %4, align 4
  %145 = load i8**, i8*** %5, align 8
  %146 = load i8*, i8** %8, align 8
  call void @run_cc1(i32 noundef %144, i8** noundef %145, i8* noundef %146, i8* noundef null)
  br label %176

147:                                              ; preds = %140
  %148 = load i8, i8* @opt_S, align 1
  %149 = trunc i8 %148 to i1
  br i1 %149, label %150, label %155

150:                                              ; preds = %147
  %151 = load i32, i32* %4, align 4
  %152 = load i8**, i8*** %5, align 8
  %153 = load i8*, i8** %8, align 8
  %154 = load i8*, i8** %11, align 8
  call void @run_cc1(i32 noundef %151, i8** noundef %152, i8* noundef %153, i8* noundef %154)
  br label %176

155:                                              ; preds = %147
  %156 = load i8, i8* @opt_c, align 1
  %157 = trunc i8 %156 to i1
  br i1 %157, label %158, label %166

158:                                              ; preds = %155
  %159 = call i8* @create_tmpfile()
  store i8* %159, i8** %13, align 8
  %160 = load i32, i32* %4, align 4
  %161 = load i8**, i8*** %5, align 8
  %162 = load i8*, i8** %8, align 8
  %163 = load i8*, i8** %13, align 8
  call void @run_cc1(i32 noundef %160, i8** noundef %161, i8* noundef %162, i8* noundef %163)
  %164 = load i8*, i8** %13, align 8
  %165 = load i8*, i8** %11, align 8
  call void @assemble(i8* noundef %164, i8* noundef %165)
  br label %176

166:                                              ; preds = %155
  %167 = call i8* @create_tmpfile()
  store i8* %167, i8** %14, align 8
  %168 = call i8* @create_tmpfile()
  store i8* %168, i8** %15, align 8
  %169 = load i32, i32* %4, align 4
  %170 = load i8**, i8*** %5, align 8
  %171 = load i8*, i8** %8, align 8
  %172 = load i8*, i8** %14, align 8
  call void @run_cc1(i32 noundef %169, i8** noundef %170, i8* noundef %171, i8* noundef %172)
  %173 = load i8*, i8** %14, align 8
  %174 = load i8*, i8** %15, align 8
  call void @assemble(i8* noundef %173, i8* noundef %174)
  %175 = load i8*, i8** %15, align 8
  call void @strarray_push(%struct.StringArray* noundef %6, i8* noundef %175)
  br label %176

176:                                              ; preds = %166, %158, %150, %143, %131, %120, %93, %75
  %177 = load i32, i32* %7, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %7, align 4
  br label %62, !llvm.loop !62

179:                                              ; preds = %62
  %180 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %6, i32 0, i32 2
  %181 = load i32, i32* %180, align 4
  %182 = icmp sgt i32 %181, 0
  br i1 %182, label %183, label %191

183:                                              ; preds = %179
  %184 = load i8*, i8** @opt_o, align 8
  %185 = icmp ne i8* %184, null
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  %187 = load i8*, i8** @opt_o, align 8
  br label %189

188:                                              ; preds = %183
  br label %189

189:                                              ; preds = %188, %186
  %190 = phi i8* [ %187, %186 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.415, i64 0, i64 0), %188 ]
  call void @run_linker(%struct.StringArray* noundef %6, i8* noundef %190)
  br label %191

191:                                              ; preds = %189, %179
  %192 = load i8*, i8** @opt_MT, align 8
  call void @free(i8* noundef %192) #14
  store i32 0, i32* %3, align 4
  br label %193

193:                                              ; preds = %191, %40
  %194 = load i32, i32* %3, align 4
  ret i32 %194
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cleanup() #0 {
  %1 = alloca i32, align 4
  %2 = load i8, i8* @isDebug, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %20, label %4

4:                                                ; preds = %0
  store i32 0, i32* %1, align 4
  br label %5

5:                                                ; preds = %16, %4
  %6 = load i32, i32* %1, align 4
  %7 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @tmpfiles, i32 0, i32 2), align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = load i8**, i8*** getelementptr inbounds (%struct.StringArray, %struct.StringArray* @tmpfiles, i32 0, i32 0), align 8
  %11 = load i32, i32* %1, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8*, i8** %10, i64 %12
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 @unlink(i8* noundef %14) #14
  br label %16

16:                                               ; preds = %9
  %17 = load i32, i32* %1, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %1, align 4
  br label %5, !llvm.loop !63

19:                                               ; preds = %5
  br label %20

20:                                               ; preds = %19, %0
  %21 = load i8, i8* @isDebug, align 1
  %22 = trunc i8 %21 to i1
  br i1 %22, label %23, label %29

23:                                               ; preds = %20
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %25 = icmp ne %struct._IO_FILE* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %28 = call i32 @fclose(%struct._IO_FILE* noundef %27)
  br label %29

29:                                               ; preds = %26, %23, %20
  %30 = load i8, i8* @isDotfile, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %40

32:                                               ; preds = %29
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %34 = icmp ne %struct._IO_FILE* %33, null
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %36, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.573, i64 0, i64 0))
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %39 = call i32 @fclose(%struct._IO_FILE* noundef %38)
  br label %40

40:                                               ; preds = %35, %32, %29
  ret void
}

; Function Attrs: nounwind
declare i32 @atexit(void ()* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal void @parse_args(i32 noundef %0, i8** noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.StringArray, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  store i32 1, i32* %5, align 4
  br label %25

25:                                               ; preds = %49, %2
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %3, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %52

29:                                               ; preds = %25
  %30 = load i8**, i8*** %4, align 8
  %31 = load i32, i32* %5, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8*, i8** %30, i64 %32
  %34 = load i8*, i8** %33, align 8
  %35 = call zeroext i1 @take_arg(i8* noundef %34)
  br i1 %35, label %36, label %48

36:                                               ; preds = %29
  %37 = load i8**, i8*** %4, align 8
  %38 = load i32, i32* %5, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %5, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8*, i8** %37, i64 %40
  %42 = load i8*, i8** %41, align 8
  %43 = icmp ne i8* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([84 x i8], [84 x i8]* @.str.17.492, i64 0, i64 0))
  %46 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([130 x i8], [130 x i8]* @.str.18.493, i64 0, i64 0))
  call void @usage(i32 noundef 1)
  br label %47

47:                                               ; preds = %44, %36
  br label %48

48:                                               ; preds = %47, %29
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %5, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %5, align 4
  br label %25, !llvm.loop !64

52:                                               ; preds = %25
  %53 = bitcast %struct.StringArray* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false)
  store i32 1, i32* %7, align 4
  br label %54

54:                                               ; preds = %992, %52
  %55 = load i32, i32* %7, align 4
  %56 = load i32, i32* %3, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %995

58:                                               ; preds = %54
  %59 = load i8**, i8*** %4, align 8
  %60 = load i32, i32* %7, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8*, i8** %59, i64 %61
  %63 = load i8*, i8** %62, align 8
  %64 = call i32 @strcmp(i8* noundef %63, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.494, i64 0, i64 0)) #13
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %58
  store i8 1, i8* @opt_hash_hash_hash, align 1
  br label %992

67:                                               ; preds = %58
  %68 = load i8**, i8*** %4, align 8
  %69 = load i32, i32* %7, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8*, i8** %68, i64 %70
  %72 = load i8*, i8** %71, align 8
  %73 = call i32 @strcmp(i8* noundef %72, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20.463, i64 0, i64 0)) #13
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %67
  store i8 1, i8* @opt_cc1, align 1
  br label %992

76:                                               ; preds = %67
  %77 = load i8**, i8*** %4, align 8
  %78 = load i32, i32* %7, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8*, i8** %77, i64 %79
  %81 = load i8*, i8** %80, align 8
  %82 = call i32 @strcmp(i8* noundef %81, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21.495, i64 0, i64 0)) #13
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %92

84:                                               ; preds = %76
  %85 = load i8**, i8*** %4, align 8
  %86 = load i32, i32* %7, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8*, i8** %85, i64 %87
  %89 = load i8*, i8** %88, align 8
  %90 = call i32 @strcmp(i8* noundef %89, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.496, i64 0, i64 0)) #13
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %84, %76
  call void @usage(i32 noundef 0)
  br label %992

93:                                               ; preds = %84
  %94 = load i8**, i8*** %4, align 8
  %95 = load i32, i32* %7, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8*, i8** %94, i64 %96
  %98 = load i8*, i8** %97, align 8
  %99 = call i32 @strcmp(i8* noundef %98, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23.497, i64 0, i64 0)) #13
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %109

101:                                              ; preds = %93
  %102 = load i8**, i8*** %4, align 8
  %103 = load i32, i32* %7, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8*, i8** %102, i64 %104
  %106 = load i8*, i8** %105, align 8
  %107 = call i32 @strcmp(i8* noundef %106, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.498, i64 0, i64 0)) #13
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %101, %93
  call void @printVersion(i32 noundef 0)
  br label %992

110:                                              ; preds = %101
  %111 = load i8**, i8*** %4, align 8
  %112 = load i32, i32* %7, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8*, i8** %111, i64 %113
  %115 = load i8*, i8** %114, align 8
  %116 = call i32 @strcmp(i8* noundef %115, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25.499, i64 0, i64 0)) #13
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %110
  %119 = load i8**, i8*** %4, align 8
  %120 = load i32, i32* %7, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %7, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8*, i8** %119, i64 %122
  %124 = load i8*, i8** %123, align 8
  store i8* %124, i8** @opt_linker, align 8
  %125 = load i8*, i8** @opt_linker, align 8
  call void @check_parms_length(i8* noundef %125)
  br label %992

126:                                              ; preds = %110
  %127 = load i8**, i8*** %4, align 8
  %128 = load i32, i32* %7, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8*, i8** %127, i64 %129
  %131 = load i8*, i8** %130, align 8
  %132 = call i32 @strcmp(i8* noundef %131, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.417, i64 0, i64 0)) #13
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %126
  %135 = load i8**, i8*** %4, align 8
  %136 = load i32, i32* %7, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %7, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8*, i8** %135, i64 %138
  %140 = load i8*, i8** %139, align 8
  store i8* %140, i8** @opt_o, align 8
  %141 = load i8*, i8** @opt_o, align 8
  call void @check_parms_length(i8* noundef %141)
  br label %992

142:                                              ; preds = %126
  %143 = load i8**, i8*** %4, align 8
  %144 = load i32, i32* %7, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8*, i8** %143, i64 %145
  %147 = load i8*, i8** %146, align 8
  %148 = call i32 @strncmp(i8* noundef %147, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.417, i64 0, i64 0), i64 noundef 2) #13
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %157, label %150

150:                                              ; preds = %142
  %151 = load i8**, i8*** %4, align 8
  %152 = load i32, i32* %7, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8*, i8** %151, i64 %153
  %155 = load i8*, i8** %154, align 8
  %156 = getelementptr inbounds i8, i8* %155, i64 2
  store i8* %156, i8** @opt_o, align 8
  br label %992

157:                                              ; preds = %142
  %158 = load i8**, i8*** %4, align 8
  %159 = load i32, i32* %7, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8*, i8** %158, i64 %160
  %162 = load i8*, i8** %161, align 8
  %163 = call i32 @strcmp(i8* noundef %162, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.500, i64 0, i64 0)) #13
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %166, label %165

165:                                              ; preds = %157
  store i8 1, i8* @opt_S, align 1
  br label %992

166:                                              ; preds = %157
  %167 = load i8**, i8*** %4, align 8
  %168 = load i32, i32* %7, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i8*, i8** %167, i64 %169
  %171 = load i8*, i8** %170, align 8
  %172 = call i32 @strcmp(i8* noundef %171, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28.501, i64 0, i64 0)) #13
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %175, label %174

174:                                              ; preds = %166
  store i8 1, i8* @isDebug, align 1
  br label %992

175:                                              ; preds = %166
  %176 = load i8**, i8*** %4, align 8
  %177 = load i32, i32* %7, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i8*, i8** %176, i64 %178
  %180 = load i8*, i8** %179, align 8
  %181 = call i32 @strcmp(i8* noundef %180, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29.502, i64 0, i64 0)) #13
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %184, label %183

183:                                              ; preds = %175
  store i8 1, i8* @isDotfile, align 1
  br label %992

184:                                              ; preds = %175
  %185 = load i8**, i8*** %4, align 8
  %186 = load i32, i32* %7, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i8*, i8** %185, i64 %187
  %189 = load i8*, i8** %188, align 8
  %190 = call i32 @strcmp(i8* noundef %189, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.503, i64 0, i64 0)) #13
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %193, label %192

192:                                              ; preds = %184
  store i8 1, i8* @opt_fcommon, align 1
  br label %992

193:                                              ; preds = %184
  %194 = load i8**, i8*** %4, align 8
  %195 = load i32, i32* %7, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8*, i8** %194, i64 %196
  %198 = load i8*, i8** %197, align 8
  %199 = call i32 @strcmp(i8* noundef %198, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.504, i64 0, i64 0)) #13
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %193
  store i8 0, i8* @opt_fcommon, align 1
  br label %992

202:                                              ; preds = %193
  %203 = load i8**, i8*** %4, align 8
  %204 = load i32, i32* %7, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8*, i8** %203, i64 %205
  %207 = load i8*, i8** %206, align 8
  %208 = call i32 @strcmp(i8* noundef %207, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32.505, i64 0, i64 0)) #13
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %211, label %210

210:                                              ; preds = %202
  store i8 0, i8* @opt_fbuiltin, align 1
  br label %992

211:                                              ; preds = %202
  %212 = load i8**, i8*** %4, align 8
  %213 = load i32, i32* %7, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8*, i8** %212, i64 %214
  %216 = load i8*, i8** %215, align 8
  %217 = call i32 @strcmp(i8* noundef %216, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.467, i64 0, i64 0)) #13
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %220, label %219

219:                                              ; preds = %211
  store i8 1, i8* @opt_c, align 1
  br label %992

220:                                              ; preds = %211
  %221 = load i8**, i8*** %4, align 8
  %222 = load i32, i32* %7, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i8*, i8** %221, i64 %223
  %225 = load i8*, i8** %224, align 8
  %226 = call i32 @strcmp(i8* noundef %225, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34.506, i64 0, i64 0)) #13
  %227 = icmp ne i32 %226, 0
  br i1 %227, label %229, label %228

228:                                              ; preds = %220
  store i8 1, i8* @opt_E, align 1
  br label %992

229:                                              ; preds = %220
  %230 = load i8**, i8*** %4, align 8
  %231 = load i32, i32* %7, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i8*, i8** %230, i64 %232
  %234 = load i8*, i8** %233, align 8
  %235 = call i32 @strncmp(i8* noundef %234, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.507, i64 0, i64 0), i64 noundef 2) #13
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %260, label %237

237:                                              ; preds = %229
  %238 = load i8**, i8*** %4, align 8
  %239 = load i32, i32* %7, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8*, i8** %238, i64 %240
  %242 = load i8*, i8** %241, align 8
  %243 = call i64 @strlen(i8* noundef %242) #13
  %244 = icmp eq i64 %243, 2
  br i1 %244, label %245, label %252

245:                                              ; preds = %237
  %246 = load i8**, i8*** %4, align 8
  %247 = load i32, i32* %7, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %7, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8*, i8** %246, i64 %249
  %251 = load i8*, i8** %250, align 8
  call void @strarray_push(%struct.StringArray* noundef @include_paths, i8* noundef %251)
  br label %259

252:                                              ; preds = %237
  %253 = load i8**, i8*** %4, align 8
  %254 = load i32, i32* %7, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds i8*, i8** %253, i64 %255
  %257 = load i8*, i8** %256, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 2
  call void @strarray_push(%struct.StringArray* noundef @include_paths, i8* noundef %258)
  br label %259

259:                                              ; preds = %252, %245
  br label %992

260:                                              ; preds = %229
  %261 = load i8**, i8*** %4, align 8
  %262 = load i32, i32* %7, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i8*, i8** %261, i64 %263
  %265 = load i8*, i8** %264, align 8
  %266 = call i32 @strcmp(i8* noundef %265, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.508, i64 0, i64 0)) #13
  %267 = icmp ne i32 %266, 0
  br i1 %267, label %277, label %268

268:                                              ; preds = %260
  %269 = load i8**, i8*** %4, align 8
  %270 = load i32, i32* %7, align 4
  %271 = add nsw i32 %270, 1
  store i32 %271, i32* %7, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds i8*, i8** %269, i64 %272
  %274 = load i8*, i8** %273, align 8
  store i8* %274, i8** %8, align 8
  %275 = load i8*, i8** %8, align 8
  call void @check_parms_length(i8* noundef %275)
  %276 = load i8*, i8** %8, align 8
  call void @define(i8* noundef %276)
  br label %992

277:                                              ; preds = %260
  %278 = load i8**, i8*** %4, align 8
  %279 = load i32, i32* %7, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i8*, i8** %278, i64 %280
  %282 = load i8*, i8** %281, align 8
  %283 = call i32 @strncmp(i8* noundef %282, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.508, i64 0, i64 0), i64 noundef 2) #13
  %284 = icmp ne i32 %283, 0
  br i1 %284, label %294, label %285

285:                                              ; preds = %277
  %286 = load i8**, i8*** %4, align 8
  %287 = load i32, i32* %7, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds i8*, i8** %286, i64 %288
  %290 = load i8*, i8** %289, align 8
  %291 = getelementptr inbounds i8, i8* %290, i64 2
  store i8* %291, i8** %9, align 8
  %292 = load i8*, i8** %9, align 8
  call void @check_parms_length(i8* noundef %292)
  %293 = load i8*, i8** %9, align 8
  call void @define(i8* noundef %293)
  br label %992

294:                                              ; preds = %277
  %295 = load i8**, i8*** %4, align 8
  %296 = load i32, i32* %7, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i8*, i8** %295, i64 %297
  %299 = load i8*, i8** %298, align 8
  %300 = call i32 @strcmp(i8* noundef %299, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37.509, i64 0, i64 0)) #13
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %311, label %302

302:                                              ; preds = %294
  %303 = load i8**, i8*** %4, align 8
  %304 = load i32, i32* %7, align 4
  %305 = add nsw i32 %304, 1
  store i32 %305, i32* %7, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i8*, i8** %303, i64 %306
  %308 = load i8*, i8** %307, align 8
  store i8* %308, i8** %10, align 8
  %309 = load i8*, i8** %10, align 8
  call void @check_parms_length(i8* noundef %309)
  %310 = load i8*, i8** %10, align 8
  call void @undef_macro(i8* noundef %310)
  br label %992

311:                                              ; preds = %294
  %312 = load i8**, i8*** %4, align 8
  %313 = load i32, i32* %7, align 4
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds i8*, i8** %312, i64 %314
  %316 = load i8*, i8** %315, align 8
  %317 = call i32 @strncmp(i8* noundef %316, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37.509, i64 0, i64 0), i64 noundef 2) #13
  %318 = icmp ne i32 %317, 0
  br i1 %318, label %328, label %319

319:                                              ; preds = %311
  %320 = load i8**, i8*** %4, align 8
  %321 = load i32, i32* %7, align 4
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i8*, i8** %320, i64 %322
  %324 = load i8*, i8** %323, align 8
  %325 = getelementptr inbounds i8, i8* %324, i64 2
  store i8* %325, i8** %11, align 8
  %326 = load i8*, i8** %11, align 8
  call void @check_parms_length(i8* noundef %326)
  %327 = load i8*, i8** %11, align 8
  call void @undef_macro(i8* noundef %327)
  br label %992

328:                                              ; preds = %311
  %329 = load i8**, i8*** %4, align 8
  %330 = load i32, i32* %7, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds i8*, i8** %329, i64 %331
  %333 = load i8*, i8** %332, align 8
  %334 = call i32 @strcmp(i8* noundef %333, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38.510, i64 0, i64 0)) #13
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %328
  %337 = load i8**, i8*** %4, align 8
  %338 = load i32, i32* %7, align 4
  %339 = add nsw i32 %338, 1
  store i32 %339, i32* %7, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8*, i8** %337, i64 %340
  %342 = load i8*, i8** %341, align 8
  store i8* %342, i8** %12, align 8
  %343 = load i8*, i8** %12, align 8
  call void @check_parms_length(i8* noundef %343)
  %344 = load i8*, i8** %12, align 8
  call void @strarray_push(%struct.StringArray* noundef @opt_include, i8* noundef %344)
  br label %992

345:                                              ; preds = %328
  %346 = load i8**, i8*** %4, align 8
  %347 = load i32, i32* %7, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i8*, i8** %346, i64 %348
  %350 = load i8*, i8** %349, align 8
  %351 = call i32 @strcmp(i8* noundef %350, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39.511, i64 0, i64 0)) #13
  %352 = icmp ne i32 %351, 0
  br i1 %352, label %363, label %353

353:                                              ; preds = %345
  %354 = load i8**, i8*** %4, align 8
  %355 = load i32, i32* %7, align 4
  %356 = add nsw i32 %355, 1
  store i32 %356, i32* %7, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds i8*, i8** %354, i64 %357
  %359 = load i8*, i8** %358, align 8
  store i8* %359, i8** %13, align 8
  %360 = load i8*, i8** %13, align 8
  call void @check_parms_length(i8* noundef %360)
  %361 = load i8*, i8** %13, align 8
  %362 = call i32 @parse_opt_x(i8* noundef %361)
  store i32 %362, i32* @opt_x, align 4
  br label %992

363:                                              ; preds = %345
  %364 = load i8**, i8*** %4, align 8
  %365 = load i32, i32* %7, align 4
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds i8*, i8** %364, i64 %366
  %368 = load i8*, i8** %367, align 8
  %369 = call i32 @strncmp(i8* noundef %368, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39.511, i64 0, i64 0), i64 noundef 2) #13
  %370 = icmp ne i32 %369, 0
  br i1 %370, label %381, label %371

371:                                              ; preds = %363
  %372 = load i8**, i8*** %4, align 8
  %373 = load i32, i32* %7, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds i8*, i8** %372, i64 %374
  %376 = load i8*, i8** %375, align 8
  %377 = getelementptr inbounds i8, i8* %376, i64 2
  store i8* %377, i8** %14, align 8
  %378 = load i8*, i8** %14, align 8
  call void @check_parms_length(i8* noundef %378)
  %379 = load i8*, i8** %14, align 8
  %380 = call i32 @parse_opt_x(i8* noundef %379)
  store i32 %380, i32* @opt_x, align 4
  br label %992

381:                                              ; preds = %363
  %382 = load i8**, i8*** %4, align 8
  %383 = load i32, i32* %7, align 4
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds i8*, i8** %382, i64 %384
  %386 = load i8*, i8** %385, align 8
  %387 = call i32 @strncmp(i8* noundef %386, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.409, i64 0, i64 0), i64 noundef 2) #13
  %388 = icmp ne i32 %387, 0
  br i1 %388, label %389, label %397

389:                                              ; preds = %381
  %390 = load i8**, i8*** %4, align 8
  %391 = load i32, i32* %7, align 4
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8*, i8** %390, i64 %392
  %394 = load i8*, i8** %393, align 8
  %395 = call i32 @strncmp(i8* noundef %394, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.410, i64 0, i64 0), i64 noundef 4) #13
  %396 = icmp ne i32 %395, 0
  br i1 %396, label %414, label %397

397:                                              ; preds = %389, %381
  %398 = load i8**, i8*** %4, align 8
  %399 = load i32, i32* %7, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds i8*, i8** %398, i64 %400
  %402 = load i8*, i8** %401, align 8
  %403 = call i32 @strncmp(i8* noundef %402, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40.512, i64 0, i64 0), i64 noundef 6) #13
  %404 = icmp ne i32 %403, 0
  br i1 %404, label %406, label %405

405:                                              ; preds = %397
  br label %992

406:                                              ; preds = %397
  %407 = load i8**, i8*** %4, align 8
  %408 = load i32, i32* %7, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i8*, i8** %407, i64 %409
  %411 = load i8*, i8** %410, align 8
  store i8* %411, i8** %15, align 8
  %412 = load i8*, i8** %15, align 8
  call void @check_parms_length(i8* noundef %412)
  %413 = load i8*, i8** %15, align 8
  call void @strarray_push(%struct.StringArray* noundef @input_paths, i8* noundef %413)
  br label %992

414:                                              ; preds = %389
  %415 = load i8**, i8*** %4, align 8
  %416 = load i32, i32* %7, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds i8*, i8** %415, i64 %417
  %419 = load i8*, i8** %418, align 8
  %420 = call i32 @strcmp(i8* noundef %419, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41.513, i64 0, i64 0)) #13
  %421 = icmp ne i32 %420, 0
  br i1 %421, label %431, label %422

422:                                              ; preds = %414
  %423 = load i8**, i8*** %4, align 8
  %424 = load i32, i32* %7, align 4
  %425 = add nsw i32 %424, 1
  store i32 %425, i32* %7, align 4
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds i8*, i8** %423, i64 %426
  %428 = load i8*, i8** %427, align 8
  store i8* %428, i8** %16, align 8
  %429 = load i8*, i8** %16, align 8
  call void @check_parms_length(i8* noundef %429)
  %430 = load i8*, i8** %16, align 8
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef %430)
  br label %992

431:                                              ; preds = %414
  %432 = load i8**, i8*** %4, align 8
  %433 = load i32, i32* %7, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i8*, i8** %432, i64 %434
  %436 = load i8*, i8** %435, align 8
  %437 = call i32 @strcmp(i8* noundef %436, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42.514, i64 0, i64 0)) #13
  %438 = icmp ne i32 %437, 0
  br i1 %438, label %439, label %447

439:                                              ; preds = %431
  %440 = load i8**, i8*** %4, align 8
  %441 = load i32, i32* %7, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds i8*, i8** %440, i64 %442
  %444 = load i8*, i8** %443, align 8
  %445 = call i32 @strcmp(i8* noundef %444, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.515, i64 0, i64 0)) #13
  %446 = icmp ne i32 %445, 0
  br i1 %446, label %456, label %447

447:                                              ; preds = %439, %431
  %448 = load i8**, i8*** %4, align 8
  %449 = load i32, i32* %7, align 4
  %450 = add nsw i32 %449, 1
  store i32 %450, i32* %7, align 4
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds i8*, i8** %448, i64 %451
  %453 = load i8*, i8** %452, align 8
  store i8* %453, i8** %17, align 8
  %454 = load i8*, i8** %17, align 8
  call void @check_parms_length(i8* noundef %454)
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.515, i64 0, i64 0))
  %455 = load i8*, i8** %17, align 8
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef %455)
  br label %992

456:                                              ; preds = %439
  %457 = load i8**, i8*** %4, align 8
  %458 = load i32, i32* %7, align 4
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds i8*, i8** %457, i64 %459
  %461 = load i8*, i8** %460, align 8
  %462 = call i32 @strcmp(i8* noundef %461, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39.511, i64 0, i64 0)) #13
  %463 = icmp ne i32 %462, 0
  br i1 %463, label %473, label %464

464:                                              ; preds = %456
  %465 = load i8**, i8*** %4, align 8
  %466 = load i32, i32* %7, align 4
  %467 = add nsw i32 %466, 1
  store i32 %467, i32* %7, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i8*, i8** %465, i64 %468
  %470 = load i8*, i8** %469, align 8
  store i8* %470, i8** %18, align 8
  %471 = load i8*, i8** %18, align 8
  call void @check_parms_length(i8* noundef %471)
  %472 = load i8*, i8** %18, align 8
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef %472)
  br label %992

473:                                              ; preds = %456
  %474 = load i8**, i8*** %4, align 8
  %475 = load i32, i32* %7, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds i8*, i8** %474, i64 %476
  %478 = load i8*, i8** %477, align 8
  %479 = call i32 @strcmp(i8* noundef %478, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.516, i64 0, i64 0)) #13
  %480 = icmp ne i32 %479, 0
  br i1 %480, label %482, label %481

481:                                              ; preds = %473
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44.516, i64 0, i64 0))
  br label %992

482:                                              ; preds = %473
  %483 = load i8**, i8*** %4, align 8
  %484 = load i32, i32* %7, align 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds i8*, i8** %483, i64 %485
  %487 = load i8*, i8** %486, align 8
  %488 = call i32 @strcmp(i8* noundef %487, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45.517, i64 0, i64 0)) #13
  %489 = icmp ne i32 %488, 0
  br i1 %489, label %491, label %490

490:                                              ; preds = %482
  store i8 1, i8* @opt_M, align 1
  br label %992

491:                                              ; preds = %482
  %492 = load i8**, i8*** %4, align 8
  %493 = load i32, i32* %7, align 4
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i8*, i8** %492, i64 %494
  %496 = load i8*, i8** %495, align 8
  %497 = call i32 @strcmp(i8* noundef %496, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46.518, i64 0, i64 0)) #13
  %498 = icmp ne i32 %497, 0
  br i1 %498, label %507, label %499

499:                                              ; preds = %491
  %500 = load i8**, i8*** %4, align 8
  %501 = load i32, i32* %7, align 4
  %502 = add nsw i32 %501, 1
  store i32 %502, i32* %7, align 4
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds i8*, i8** %500, i64 %503
  %505 = load i8*, i8** %504, align 8
  store i8* %505, i8** @opt_MF, align 8
  %506 = load i8*, i8** @opt_MF, align 8
  call void @check_parms_length(i8* noundef %506)
  br label %992

507:                                              ; preds = %491
  %508 = load i8**, i8*** %4, align 8
  %509 = load i32, i32* %7, align 4
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds i8*, i8** %508, i64 %510
  %512 = load i8*, i8** %511, align 8
  %513 = call i32 @strcmp(i8* noundef %512, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47.519, i64 0, i64 0)) #13
  %514 = icmp ne i32 %513, 0
  br i1 %514, label %516, label %515

515:                                              ; preds = %507
  store i8 1, i8* @opt_MP, align 1
  br label %992

516:                                              ; preds = %507
  %517 = load i8**, i8*** %4, align 8
  %518 = load i32, i32* %7, align 4
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i8*, i8** %517, i64 %519
  %521 = load i8*, i8** %520, align 8
  %522 = call i32 @strcmp(i8* noundef %521, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48.520, i64 0, i64 0)) #13
  %523 = icmp ne i32 %522, 0
  br i1 %523, label %545, label %524

524:                                              ; preds = %516
  %525 = load i8*, i8** @opt_MT, align 8
  %526 = icmp eq i8* %525, null
  br i1 %526, label %527, label %534

527:                                              ; preds = %524
  %528 = load i8**, i8*** %4, align 8
  %529 = load i32, i32* %7, align 4
  %530 = add nsw i32 %529, 1
  store i32 %530, i32* %7, align 4
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds i8*, i8** %528, i64 %531
  %533 = load i8*, i8** %532, align 8
  store i8* %533, i8** @opt_MT, align 8
  br label %543

534:                                              ; preds = %524
  %535 = load i8*, i8** @opt_MT, align 8
  %536 = load i8**, i8*** %4, align 8
  %537 = load i32, i32* %7, align 4
  %538 = add nsw i32 %537, 1
  store i32 %538, i32* %7, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds i8*, i8** %536, i64 %539
  %541 = load i8*, i8** %540, align 8
  %542 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49.521, i64 0, i64 0), i8* noundef %535, i8* noundef %541)
  store i8* %542, i8** @opt_MT, align 8
  br label %543

543:                                              ; preds = %534, %527
  %544 = load i8*, i8** @opt_MT, align 8
  call void @check_parms_length(i8* noundef %544)
  br label %992

545:                                              ; preds = %516
  %546 = load i8**, i8*** %4, align 8
  %547 = load i32, i32* %7, align 4
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds i8*, i8** %546, i64 %548
  %550 = load i8*, i8** %549, align 8
  %551 = call i32 @strcmp(i8* noundef %550, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50.522, i64 0, i64 0)) #13
  %552 = icmp ne i32 %551, 0
  br i1 %552, label %554, label %553

553:                                              ; preds = %545
  store i8 1, i8* @opt_MD, align 1
  br label %992

554:                                              ; preds = %545
  %555 = load i8**, i8*** %4, align 8
  %556 = load i32, i32* %7, align 4
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds i8*, i8** %555, i64 %557
  %559 = load i8*, i8** %558, align 8
  %560 = call i32 @strcmp(i8* noundef %559, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51.523, i64 0, i64 0)) #13
  %561 = icmp ne i32 %560, 0
  br i1 %561, label %585, label %562

562:                                              ; preds = %554
  %563 = load i8*, i8** @opt_MT, align 8
  %564 = icmp eq i8* %563, null
  br i1 %564, label %565, label %573

565:                                              ; preds = %562
  %566 = load i8**, i8*** %4, align 8
  %567 = load i32, i32* %7, align 4
  %568 = add nsw i32 %567, 1
  store i32 %568, i32* %7, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds i8*, i8** %566, i64 %569
  %571 = load i8*, i8** %570, align 8
  %572 = call i8* @quote_makefile(i8* noundef %571)
  store i8* %572, i8** @opt_MT, align 8
  br label %583

573:                                              ; preds = %562
  %574 = load i8*, i8** @opt_MT, align 8
  %575 = load i8**, i8*** %4, align 8
  %576 = load i32, i32* %7, align 4
  %577 = add nsw i32 %576, 1
  store i32 %577, i32* %7, align 4
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds i8*, i8** %575, i64 %578
  %580 = load i8*, i8** %579, align 8
  %581 = call i8* @quote_makefile(i8* noundef %580)
  %582 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49.521, i64 0, i64 0), i8* noundef %574, i8* noundef %581)
  store i8* %582, i8** @opt_MT, align 8
  br label %583

583:                                              ; preds = %573, %565
  %584 = load i8*, i8** @opt_MT, align 8
  call void @check_parms_length(i8* noundef %584)
  br label %992

585:                                              ; preds = %554
  %586 = load i8**, i8*** %4, align 8
  %587 = load i32, i32* %7, align 4
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds i8*, i8** %586, i64 %588
  %590 = load i8*, i8** %589, align 8
  %591 = call i32 @strcmp(i8* noundef %590, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52.524, i64 0, i64 0)) #13
  %592 = icmp ne i32 %591, 0
  br i1 %592, label %594, label %593

593:                                              ; preds = %585
  store i8 1, i8* @opt_MMD, align 1
  store i8 1, i8* @opt_MD, align 1
  br label %992

594:                                              ; preds = %585
  %595 = load i8**, i8*** %4, align 8
  %596 = load i32, i32* %7, align 4
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds i8*, i8** %595, i64 %597
  %599 = load i8*, i8** %598, align 8
  %600 = call i32 @strcmp(i8* noundef %599, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53.525, i64 0, i64 0)) #13
  %601 = icmp ne i32 %600, 0
  br i1 %601, label %602, label %610

602:                                              ; preds = %594
  %603 = load i8**, i8*** %4, align 8
  %604 = load i32, i32* %7, align 4
  %605 = sext i32 %604 to i64
  %606 = getelementptr inbounds i8*, i8** %603, i64 %605
  %607 = load i8*, i8** %606, align 8
  %608 = call i32 @strcmp(i8* noundef %607, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54.526, i64 0, i64 0)) #13
  %609 = icmp ne i32 %608, 0
  br i1 %609, label %611, label %610

610:                                              ; preds = %602, %594
  store i8 1, i8* @opt_fpic, align 1
  br label %992

611:                                              ; preds = %602
  %612 = load i8**, i8*** %4, align 8
  %613 = load i32, i32* %7, align 4
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds i8*, i8** %612, i64 %614
  %616 = load i8*, i8** %615, align 8
  %617 = call i32 @strcmp(i8* noundef %616, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55.527, i64 0, i64 0)) #13
  %618 = icmp ne i32 %617, 0
  br i1 %618, label %620, label %619

619:                                              ; preds = %611
  store i8 0, i8* @opt_fpic, align 1
  br label %992

620:                                              ; preds = %611
  %621 = load i8**, i8*** %4, align 8
  %622 = load i32, i32* %7, align 4
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds i8*, i8** %621, i64 %623
  %625 = load i8*, i8** %624, align 8
  %626 = call i32 @strcmp(i8* noundef %625, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56.464, i64 0, i64 0)) #13
  %627 = icmp ne i32 %626, 0
  br i1 %627, label %636, label %628

628:                                              ; preds = %620
  %629 = load i8**, i8*** %4, align 8
  %630 = load i32, i32* %7, align 4
  %631 = add nsw i32 %630, 1
  store i32 %631, i32* %7, align 4
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds i8*, i8** %629, i64 %632
  %634 = load i8*, i8** %633, align 8
  store i8* %634, i8** @base_file, align 8
  %635 = load i8*, i8** @base_file, align 8
  call void @check_parms_length(i8* noundef %635)
  store i8 1, i8* @isCc1input, align 1
  br label %992

636:                                              ; preds = %620
  %637 = load i8**, i8*** %4, align 8
  %638 = load i32, i32* %7, align 4
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds i8*, i8** %637, i64 %639
  %641 = load i8*, i8** %640, align 8
  %642 = call i32 @strcmp(i8* noundef %641, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57.465, i64 0, i64 0)) #13
  %643 = icmp ne i32 %642, 0
  br i1 %643, label %652, label %644

644:                                              ; preds = %636
  store i8 1, i8* @isCc1output, align 1
  %645 = load i8**, i8*** %4, align 8
  %646 = load i32, i32* %7, align 4
  %647 = add nsw i32 %646, 1
  store i32 %647, i32* %7, align 4
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds i8*, i8** %645, i64 %648
  %650 = load i8*, i8** %649, align 8
  store i8* %650, i8** @output_file.476, align 8
  %651 = load i8*, i8** @output_file.476, align 8
  call void @check_parms_length(i8* noundef %651)
  br label %992

652:                                              ; preds = %636
  %653 = load i8**, i8*** %4, align 8
  %654 = load i32, i32* %7, align 4
  %655 = sext i32 %654 to i64
  %656 = getelementptr inbounds i8*, i8** %653, i64 %655
  %657 = load i8*, i8** %656, align 8
  %658 = call i32 @strcmp(i8* noundef %657, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58.528, i64 0, i64 0)) #13
  %659 = icmp ne i32 %658, 0
  br i1 %659, label %669, label %660

660:                                              ; preds = %652
  %661 = load i8**, i8*** %4, align 8
  %662 = load i32, i32* %7, align 4
  %663 = add nsw i32 %662, 1
  store i32 %663, i32* %7, align 4
  %664 = sext i32 %662 to i64
  %665 = getelementptr inbounds i8*, i8** %661, i64 %664
  %666 = load i8*, i8** %665, align 8
  store i8* %666, i8** %19, align 8
  %667 = load i8*, i8** %19, align 8
  call void @check_parms_length(i8* noundef %667)
  %668 = load i8*, i8** %19, align 8
  call void @strarray_push(%struct.StringArray* noundef %6, i8* noundef %668)
  br label %992

669:                                              ; preds = %652
  %670 = load i8**, i8*** %4, align 8
  %671 = load i32, i32* %7, align 4
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds i8*, i8** %670, i64 %672
  %674 = load i8*, i8** %673, align 8
  %675 = call i32 @strcmp(i8* noundef %674, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59.529, i64 0, i64 0)) #13
  %676 = icmp ne i32 %675, 0
  br i1 %676, label %678, label %677

677:                                              ; preds = %669
  store i8 1, i8* @opt_static, align 1
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59.529, i64 0, i64 0))
  br label %992

678:                                              ; preds = %669
  %679 = load i8**, i8*** %4, align 8
  %680 = load i32, i32* %7, align 4
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds i8*, i8** %679, i64 %681
  %683 = load i8*, i8** %682, align 8
  %684 = call i32 @strcmp(i8* noundef %683, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60.530, i64 0, i64 0)) #13
  %685 = icmp ne i32 %684, 0
  br i1 %685, label %687, label %686

686:                                              ; preds = %678
  store i8 1, i8* @opt_shared, align 1
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60.530, i64 0, i64 0))
  br label %992

687:                                              ; preds = %678
  %688 = load i8**, i8*** %4, align 8
  %689 = load i32, i32* %7, align 4
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds i8*, i8** %688, i64 %690
  %692 = load i8*, i8** %691, align 8
  %693 = call i32 @strcmp(i8* noundef %692, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61.531, i64 0, i64 0)) #13
  %694 = icmp ne i32 %693, 0
  br i1 %694, label %696, label %695

695:                                              ; preds = %687
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62.532, i64 0, i64 0))
  br label %992

696:                                              ; preds = %687
  %697 = load i8**, i8*** %4, align 8
  %698 = load i32, i32* %7, align 4
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds i8*, i8** %697, i64 %699
  %701 = load i8*, i8** %700, align 8
  %702 = call i32 @strcmp(i8* noundef %701, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63.533, i64 0, i64 0)) #13
  %703 = icmp ne i32 %702, 0
  br i1 %703, label %713, label %704

704:                                              ; preds = %696
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63.533, i64 0, i64 0))
  %705 = load i8**, i8*** %4, align 8
  %706 = load i32, i32* %7, align 4
  %707 = add nsw i32 %706, 1
  store i32 %707, i32* %7, align 4
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds i8*, i8** %705, i64 %708
  %710 = load i8*, i8** %709, align 8
  store i8* %710, i8** %20, align 8
  %711 = load i8*, i8** %20, align 8
  call void @check_parms_length(i8* noundef %711)
  %712 = load i8*, i8** %20, align 8
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef %712)
  br label %992

713:                                              ; preds = %696
  %714 = load i8**, i8*** %4, align 8
  %715 = load i32, i32* %7, align 4
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds i8*, i8** %714, i64 %716
  %718 = load i8*, i8** %717, align 8
  %719 = call i32 @strncmp(i8* noundef %718, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63.533, i64 0, i64 0), i64 noundef 2) #13
  %720 = icmp ne i32 %719, 0
  br i1 %720, label %730, label %721

721:                                              ; preds = %713
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63.533, i64 0, i64 0))
  %722 = load i8**, i8*** %4, align 8
  %723 = load i32, i32* %7, align 4
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds i8*, i8** %722, i64 %724
  %726 = load i8*, i8** %725, align 8
  %727 = getelementptr inbounds i8, i8* %726, i64 2
  store i8* %727, i8** %21, align 8
  %728 = load i8*, i8** %21, align 8
  call void @check_parms_length(i8* noundef %728)
  %729 = load i8*, i8** %21, align 8
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef %729)
  br label %992

730:                                              ; preds = %713
  %731 = load i8**, i8*** %4, align 8
  %732 = load i32, i32* %7, align 4
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds i8*, i8** %731, i64 %733
  %735 = load i8*, i8** %734, align 8
  %736 = call i32 @strcmp(i8* noundef %735, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64.534, i64 0, i64 0)) #13
  %737 = icmp ne i32 %736, 0
  br i1 %737, label %739, label %738

738:                                              ; preds = %730
  call void @hashmap_test()
  call void @exit(i32 noundef 0) #12
  unreachable

739:                                              ; preds = %730
  %740 = load i8**, i8*** %4, align 8
  %741 = load i32, i32* %7, align 4
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds i8*, i8** %740, i64 %742
  %744 = load i8*, i8** %743, align 8
  %745 = call i32 @strcmp(i8* noundef %744, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.535, i64 0, i64 0)) #13
  %746 = icmp ne i32 %745, 0
  br i1 %746, label %748, label %747

747:                                              ; preds = %739
  call void @dump_machine()
  call void @exit(i32 noundef 0) #12
  unreachable

748:                                              ; preds = %739
  %749 = load i8**, i8*** %4, align 8
  %750 = load i32, i32* %7, align 4
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds i8*, i8** %749, i64 %751
  %753 = load i8*, i8** %752, align 8
  %754 = call i32 @strcmp(i8* noundef %753, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66.536, i64 0, i64 0)) #13
  %755 = icmp ne i32 %754, 0
  br i1 %755, label %765, label %756

756:                                              ; preds = %748
  %757 = load i8**, i8*** %4, align 8
  %758 = load i32, i32* %7, align 4
  %759 = add nsw i32 %758, 1
  store i32 %759, i32* %7, align 4
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds i8*, i8** %757, i64 %760
  %762 = load i8*, i8** %761, align 8
  store i8* %762, i8** %22, align 8
  %763 = load i8*, i8** %22, align 8
  call void @check_parms_length(i8* noundef %763)
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66.536, i64 0, i64 0))
  %764 = load i8*, i8** %22, align 8
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef %764)
  br label %992

765:                                              ; preds = %748
  %766 = load i8**, i8*** %4, align 8
  %767 = load i32, i32* %7, align 4
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds i8*, i8** %766, i64 %768
  %770 = load i8*, i8** %769, align 8
  %771 = call i32 @strcmp(i8* noundef %770, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67.537, i64 0, i64 0)) #13
  %772 = icmp ne i32 %771, 0
  br i1 %772, label %783, label %773

773:                                              ; preds = %765
  %774 = load i8**, i8*** %4, align 8
  %775 = load i32, i32* %7, align 4
  %776 = add nsw i32 %775, 1
  store i32 %776, i32* %7, align 4
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds i8*, i8** %774, i64 %777
  %779 = load i8*, i8** %778, align 8
  store i8* %779, i8** %23, align 8
  %780 = load i8*, i8** %23, align 8
  call void @check_parms_length(i8* noundef %780)
  %781 = load i8*, i8** %23, align 8
  store i8* %781, i8** @r_path, align 8
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67.537, i64 0, i64 0))
  %782 = load i8*, i8** @r_path, align 8
  call void @strarray_push(%struct.StringArray* noundef @ld_extra_args, i8* noundef %782)
  br label %992

783:                                              ; preds = %765
  %784 = load i8**, i8*** %4, align 8
  %785 = load i32, i32* %7, align 4
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds i8*, i8** %784, i64 %786
  %788 = load i8*, i8** %787, align 8
  %789 = call i32 @strncmp(i8* noundef %788, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68.538, i64 0, i64 0), i64 noundef 2) #13
  %790 = icmp ne i32 %789, 0
  br i1 %790, label %791, label %959

791:                                              ; preds = %783
  %792 = load i8**, i8*** %4, align 8
  %793 = load i32, i32* %7, align 4
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds i8*, i8** %792, i64 %794
  %796 = load i8*, i8** %795, align 8
  %797 = call i32 @strncmp(i8* noundef %796, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69.539, i64 0, i64 0), i64 noundef 2) #13
  %798 = icmp ne i32 %797, 0
  br i1 %798, label %799, label %959

799:                                              ; preds = %791
  %800 = load i8**, i8*** %4, align 8
  %801 = load i32, i32* %7, align 4
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds i8*, i8** %800, i64 %802
  %804 = load i8*, i8** %803, align 8
  %805 = call i32 @strncmp(i8* noundef %804, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70.540, i64 0, i64 0), i64 noundef 2) #13
  %806 = icmp ne i32 %805, 0
  br i1 %806, label %807, label %959

807:                                              ; preds = %799
  %808 = load i8**, i8*** %4, align 8
  %809 = load i32, i32* %7, align 4
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds i8*, i8** %808, i64 %810
  %812 = load i8*, i8** %811, align 8
  %813 = call i32 @strncmp(i8* noundef %812, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71.541, i64 0, i64 0), i64 noundef 5) #13
  %814 = icmp ne i32 %813, 0
  br i1 %814, label %815, label %959

815:                                              ; preds = %807
  %816 = load i8**, i8*** %4, align 8
  %817 = load i32, i32* %7, align 4
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds i8*, i8** %816, i64 %818
  %820 = load i8*, i8** %819, align 8
  %821 = call i32 @strncmp(i8* noundef %820, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72.542, i64 0, i64 0), i64 noundef 4) #13
  %822 = icmp ne i32 %821, 0
  br i1 %822, label %823, label %959

823:                                              ; preds = %815
  %824 = load i8**, i8*** %4, align 8
  %825 = load i32, i32* %7, align 4
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds i8*, i8** %824, i64 %826
  %828 = load i8*, i8** %827, align 8
  %829 = call i32 @strcmp(i8* noundef %828, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.73.543, i64 0, i64 0)) #13
  %830 = icmp ne i32 %829, 0
  br i1 %830, label %831, label %959

831:                                              ; preds = %823
  %832 = load i8**, i8*** %4, align 8
  %833 = load i32, i32* %7, align 4
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds i8*, i8** %832, i64 %834
  %836 = load i8*, i8** %835, align 8
  %837 = call i32 @strcmp(i8* noundef %836, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.74.544, i64 0, i64 0)) #13
  %838 = icmp ne i32 %837, 0
  br i1 %838, label %839, label %959

839:                                              ; preds = %831
  %840 = load i8**, i8*** %4, align 8
  %841 = load i32, i32* %7, align 4
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds i8*, i8** %840, i64 %842
  %844 = load i8*, i8** %843, align 8
  %845 = call i32 @strcmp(i8* noundef %844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.75.545, i64 0, i64 0)) #13
  %846 = icmp ne i32 %845, 0
  br i1 %846, label %847, label %959

847:                                              ; preds = %839
  %848 = load i8**, i8*** %4, align 8
  %849 = load i32, i32* %7, align 4
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds i8*, i8** %848, i64 %850
  %852 = load i8*, i8** %851, align 8
  %853 = call i32 @strcmp(i8* noundef %852, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.76.546, i64 0, i64 0)) #13
  %854 = icmp ne i32 %853, 0
  br i1 %854, label %855, label %959

855:                                              ; preds = %847
  %856 = load i8**, i8*** %4, align 8
  %857 = load i32, i32* %7, align 4
  %858 = sext i32 %857 to i64
  %859 = getelementptr inbounds i8*, i8** %856, i64 %858
  %860 = load i8*, i8** %859, align 8
  %861 = call i32 @strcmp(i8* noundef %860, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77.547, i64 0, i64 0)) #13
  %862 = icmp ne i32 %861, 0
  br i1 %862, label %863, label %959

863:                                              ; preds = %855
  %864 = load i8**, i8*** %4, align 8
  %865 = load i32, i32* %7, align 4
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds i8*, i8** %864, i64 %866
  %868 = load i8*, i8** %867, align 8
  %869 = call i32 @strcmp(i8* noundef %868, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78.548, i64 0, i64 0)) #13
  %870 = icmp ne i32 %869, 0
  br i1 %870, label %871, label %959

871:                                              ; preds = %863
  %872 = load i8**, i8*** %4, align 8
  %873 = load i32, i32* %7, align 4
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds i8*, i8** %872, i64 %874
  %876 = load i8*, i8** %875, align 8
  %877 = call i32 @strcmp(i8* noundef %876, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79.549, i64 0, i64 0)) #13
  %878 = icmp ne i32 %877, 0
  br i1 %878, label %879, label %959

879:                                              ; preds = %871
  %880 = load i8**, i8*** %4, align 8
  %881 = load i32, i32* %7, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds i8*, i8** %880, i64 %882
  %884 = load i8*, i8** %883, align 8
  %885 = call i32 @strcmp(i8* noundef %884, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.80.550, i64 0, i64 0)) #13
  %886 = icmp ne i32 %885, 0
  br i1 %886, label %887, label %959

887:                                              ; preds = %879
  %888 = load i8**, i8*** %4, align 8
  %889 = load i32, i32* %7, align 4
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds i8*, i8** %888, i64 %890
  %892 = load i8*, i8** %891, align 8
  %893 = call i32 @strcmp(i8* noundef %892, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81.551, i64 0, i64 0)) #13
  %894 = icmp ne i32 %893, 0
  br i1 %894, label %895, label %959

895:                                              ; preds = %887
  %896 = load i8**, i8*** %4, align 8
  %897 = load i32, i32* %7, align 4
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds i8*, i8** %896, i64 %898
  %900 = load i8*, i8** %899, align 8
  %901 = call i32 @strcmp(i8* noundef %900, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82.552, i64 0, i64 0)) #13
  %902 = icmp ne i32 %901, 0
  br i1 %902, label %903, label %959

903:                                              ; preds = %895
  %904 = load i8**, i8*** %4, align 8
  %905 = load i32, i32* %7, align 4
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds i8*, i8** %904, i64 %906
  %908 = load i8*, i8** %907, align 8
  %909 = call i32 @strcmp(i8* noundef %908, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83.553, i64 0, i64 0)) #13
  %910 = icmp ne i32 %909, 0
  br i1 %910, label %911, label %959

911:                                              ; preds = %903
  %912 = load i8**, i8*** %4, align 8
  %913 = load i32, i32* %7, align 4
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds i8*, i8** %912, i64 %914
  %916 = load i8*, i8** %915, align 8
  %917 = call i32 @strcmp(i8* noundef %916, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84.554, i64 0, i64 0)) #13
  %918 = icmp ne i32 %917, 0
  br i1 %918, label %919, label %959

919:                                              ; preds = %911
  %920 = load i8**, i8*** %4, align 8
  %921 = load i32, i32* %7, align 4
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds i8*, i8** %920, i64 %922
  %924 = load i8*, i8** %923, align 8
  %925 = call i32 @strcmp(i8* noundef %924, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85.555, i64 0, i64 0)) #13
  %926 = icmp ne i32 %925, 0
  br i1 %926, label %927, label %959

927:                                              ; preds = %919
  %928 = load i8**, i8*** %4, align 8
  %929 = load i32, i32* %7, align 4
  %930 = sext i32 %929 to i64
  %931 = getelementptr inbounds i8*, i8** %928, i64 %930
  %932 = load i8*, i8** %931, align 8
  %933 = call i32 @strcmp(i8* noundef %932, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86.556, i64 0, i64 0)) #13
  %934 = icmp ne i32 %933, 0
  br i1 %934, label %935, label %959

935:                                              ; preds = %927
  %936 = load i8**, i8*** %4, align 8
  %937 = load i32, i32* %7, align 4
  %938 = sext i32 %937 to i64
  %939 = getelementptr inbounds i8*, i8** %936, i64 %938
  %940 = load i8*, i8** %939, align 8
  %941 = call i32 @strcmp(i8* noundef %940, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87.557, i64 0, i64 0)) #13
  %942 = icmp ne i32 %941, 0
  br i1 %942, label %943, label %959

943:                                              ; preds = %935
  %944 = load i8**, i8*** %4, align 8
  %945 = load i32, i32* %7, align 4
  %946 = sext i32 %945 to i64
  %947 = getelementptr inbounds i8*, i8** %944, i64 %946
  %948 = load i8*, i8** %947, align 8
  %949 = call i32 @strcmp(i8* noundef %948, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.88.558, i64 0, i64 0)) #13
  %950 = icmp ne i32 %949, 0
  br i1 %950, label %951, label %959

951:                                              ; preds = %943
  %952 = load i8**, i8*** %4, align 8
  %953 = load i32, i32* %7, align 4
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds i8*, i8** %952, i64 %954
  %956 = load i8*, i8** %955, align 8
  %957 = call i32 @strcmp(i8* noundef %956, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89.559, i64 0, i64 0)) #13
  %958 = icmp ne i32 %957, 0
  br i1 %958, label %960, label %959

959:                                              ; preds = %951, %943, %935, %927, %919, %911, %903, %895, %887, %879, %871, %863, %855, %847, %839, %831, %823, %815, %807, %799, %791, %783
  br label %992

960:                                              ; preds = %951
  %961 = load i8**, i8*** %4, align 8
  %962 = load i32, i32* %7, align 4
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds i8*, i8** %961, i64 %963
  %965 = load i8*, i8** %964, align 8
  %966 = getelementptr inbounds i8, i8* %965, i64 0
  %967 = load i8, i8* %966, align 1
  %968 = sext i8 %967 to i32
  %969 = icmp eq i32 %968, 45
  br i1 %969, label %970, label %986

970:                                              ; preds = %960
  %971 = load i8**, i8*** %4, align 8
  %972 = load i32, i32* %7, align 4
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds i8*, i8** %971, i64 %973
  %975 = load i8*, i8** %974, align 8
  %976 = getelementptr inbounds i8, i8* %975, i64 1
  %977 = load i8, i8* %976, align 1
  %978 = sext i8 %977 to i32
  %979 = icmp ne i32 %978, 0
  br i1 %979, label %980, label %986

980:                                              ; preds = %970
  %981 = load i8**, i8*** %4, align 8
  %982 = load i32, i32* %7, align 4
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds i8*, i8** %981, i64 %983
  %985 = load i8*, i8** %984, align 8
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.90.560, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0), i8* noundef %985) #11
  unreachable

986:                                              ; preds = %970, %960
  %987 = load i8**, i8*** %4, align 8
  %988 = load i32, i32* %7, align 4
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds i8*, i8** %987, i64 %989
  %991 = load i8*, i8** %990, align 8
  call void @strarray_push(%struct.StringArray* noundef @input_paths, i8* noundef %991)
  br label %992

992:                                              ; preds = %986, %959, %773, %756, %721, %704, %695, %686, %677, %660, %644, %628, %619, %610, %593, %583, %553, %543, %515, %499, %490, %481, %464, %447, %422, %406, %405, %371, %353, %336, %319, %302, %285, %268, %259, %228, %219, %210, %201, %192, %183, %174, %165, %150, %134, %118, %109, %92, %75, %66
  %993 = load i32, i32* %7, align 4
  %994 = add nsw i32 %993, 1
  store i32 %994, i32* %7, align 4
  br label %54, !llvm.loop !65

995:                                              ; preds = %54
  store i32 0, i32* %24, align 4
  br label %996

996:                                              ; preds = %1008, %995
  %997 = load i32, i32* %24, align 4
  %998 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %6, i32 0, i32 2
  %999 = load i32, i32* %998, align 4
  %1000 = icmp slt i32 %997, %999
  br i1 %1000, label %1001, label %1011

1001:                                             ; preds = %996
  %1002 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %6, i32 0, i32 0
  %1003 = load i8**, i8*** %1002, align 8
  %1004 = load i32, i32* %24, align 4
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds i8*, i8** %1003, i64 %1005
  %1007 = load i8*, i8** %1006, align 8
  call void @strarray_push(%struct.StringArray* noundef @include_paths, i8* noundef %1007)
  br label %1008

1008:                                             ; preds = %1001
  %1009 = load i32, i32* %24, align 4
  %1010 = add nsw i32 %1009, 1
  store i32 %1010, i32* %24, align 4
  br label %996, !llvm.loop !66

1011:                                             ; preds = %996
  %1012 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @input_paths, i32 0, i32 2), align 4
  %1013 = icmp eq i32 %1012, 0
  br i1 %1013, label %1014, label %1015

1014:                                             ; preds = %1011
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.91.561, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable

1015:                                             ; preds = %1011
  %1016 = load i8, i8* @opt_E, align 1
  %1017 = trunc i8 %1016 to i1
  br i1 %1017, label %1018, label %1019

1018:                                             ; preds = %1015
  store i32 1, i32* @opt_x, align 4
  br label %1019

1019:                                             ; preds = %1018, %1015
  ret void
}

declare noalias %struct._IO_FILE* @fopen(i8* noundef, i8* noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_default_include_paths(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call noalias i8* @strdup(i8* noundef %4) #14
  %6 = call i8* @dirname(i8* noundef %5) #14
  %7 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104.487, i64 0, i64 0), i8* noundef %6)
  call void @strarray_push(%struct.StringArray* noundef @include_paths, i8* noundef %7)
  call void @strarray_push(%struct.StringArray* noundef @include_paths, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.105.488, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef @include_paths, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.106.489, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef @include_paths, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.107.490, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef @include_paths, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.108.491, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %8

8:                                                ; preds = %18, %1
  %9 = load i32, i32* %3, align 4
  %10 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @include_paths, i32 0, i32 2), align 4
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %21

12:                                               ; preds = %8
  %13 = load i8**, i8*** getelementptr inbounds (%struct.StringArray, %struct.StringArray* @include_paths, i32 0, i32 0), align 8
  %14 = load i32, i32* %3, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8*, i8** %13, i64 %15
  %17 = load i8*, i8** %16, align 8
  call void @strarray_push(%struct.StringArray* noundef @std_include_paths, i8* noundef %17)
  br label %18

18:                                               ; preds = %12
  %19 = load i32, i32* %3, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %3, align 4
  br label %8, !llvm.loop !67

21:                                               ; preds = %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cc1() #0 {
  %1 = alloca %struct.Token*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.Obj*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca %struct._IO_FILE*, align 8
  store %struct.Token* null, %struct.Token** %1, align 8
  store i32 0, i32* %2, align 4
  br label %13

13:                                               ; preds = %44, %0
  %14 = load i32, i32* %2, align 4
  %15 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @opt_include, i32 0, i32 2), align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %47

17:                                               ; preds = %13
  %18 = load i8**, i8*** getelementptr inbounds (%struct.StringArray, %struct.StringArray* @opt_include, i32 0, i32 0), align 8
  %19 = load i32, i32* %2, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8*, i8** %18, i64 %20
  %22 = load i8*, i8** %21, align 8
  store i8* %22, i8** %3, align 8
  %23 = load i8*, i8** %3, align 8
  %24 = call zeroext i1 @file_exists(i8* noundef %23)
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = load i8*, i8** %3, align 8
  store i8* %26, i8** %4, align 8
  br label %38

27:                                               ; preds = %17
  %28 = load i8*, i8** %3, align 8
  %29 = call i8* @search_include_paths(i8* noundef %28)
  store i8* %29, i8** %4, align 8
  %30 = load i8*, i8** %4, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = load i8*, i8** %3, align 8
  %34 = call i32* @__errno_location() #15
  %35 = load i32, i32* %34, align 4
  %36 = call i8* @strerror(i32 noundef %35) #14
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109.475, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0), i8* noundef %33, i8* noundef %36) #11
  unreachable

37:                                               ; preds = %27
  br label %38

38:                                               ; preds = %37, %25
  %39 = load i8*, i8** %4, align 8
  %40 = call %struct.Token* @must_tokenize_file(i8* noundef %39)
  store %struct.Token* %40, %struct.Token** %5, align 8
  %41 = load %struct.Token*, %struct.Token** %1, align 8
  %42 = load %struct.Token*, %struct.Token** %5, align 8
  %43 = call %struct.Token* @append_tokens(%struct.Token* noundef %41, %struct.Token* noundef %42)
  store %struct.Token* %43, %struct.Token** %1, align 8
  br label %44

44:                                               ; preds = %38
  %45 = load i32, i32* %2, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %2, align 4
  br label %13, !llvm.loop !68

47:                                               ; preds = %13
  %48 = load i8*, i8** @base_file, align 8
  %49 = call %struct.Token* @must_tokenize_file(i8* noundef %48)
  store %struct.Token* %49, %struct.Token** %6, align 8
  store i8 0, i8* %7, align 1
  %50 = load %struct.Token*, %struct.Token** %1, align 8
  %51 = load %struct.Token*, %struct.Token** %6, align 8
  %52 = call %struct.Token* @append_tokens(%struct.Token* noundef %50, %struct.Token* noundef %51)
  store %struct.Token* %52, %struct.Token** %1, align 8
  %53 = load %struct.Token*, %struct.Token** %1, align 8
  %54 = load i8, i8* %7, align 1
  %55 = trunc i8 %54 to i1
  %56 = call %struct.Token* @preprocess(%struct.Token* noundef %53, i1 noundef zeroext %55)
  store %struct.Token* %56, %struct.Token** %1, align 8
  %57 = load i8, i8* @opt_M, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %62, label %59

59:                                               ; preds = %47
  %60 = load i8, i8* @opt_MD, align 1
  %61 = trunc i8 %60 to i1
  br i1 %61, label %62, label %67

62:                                               ; preds = %59, %47
  call void @print_dependencies()
  %63 = load i8, i8* @opt_M, align 1
  %64 = trunc i8 %63 to i1
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  br label %88

66:                                               ; preds = %62
  br label %67

67:                                               ; preds = %66, %59
  %68 = load i8, i8* @opt_E, align 1
  %69 = trunc i8 %68 to i1
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = load %struct.Token*, %struct.Token** %1, align 8
  call void @print_tokens(%struct.Token* noundef %71)
  br label %88

72:                                               ; preds = %67
  %73 = load %struct.Token*, %struct.Token** %1, align 8
  %74 = call %struct.Obj* @parse(%struct.Token* noundef %73)
  store %struct.Obj* %74, %struct.Obj** %8, align 8
  %75 = call noalias %struct._IO_FILE* @open_memstream(i8** noundef %9, i64* noundef %10) #14
  store %struct._IO_FILE* %75, %struct._IO_FILE** %11, align 8
  %76 = load %struct.Obj*, %struct.Obj** %8, align 8
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  call void @codegen(%struct.Obj* noundef %76, %struct._IO_FILE* noundef %77)
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %79 = call i32 @fclose(%struct._IO_FILE* noundef %78)
  %80 = load i8*, i8** @output_file.476, align 8
  %81 = call %struct._IO_FILE* @open_file(i8* noundef %80)
  store %struct._IO_FILE* %81, %struct._IO_FILE** %12, align 8
  %82 = load i8*, i8** %9, align 8
  %83 = load i64, i64* %10, align 8
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %85 = call i64 @fwrite(i8* noundef %82, i64 noundef %83, i64 noundef 1, %struct._IO_FILE* noundef %84)
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %87 = call i32 @fclose(%struct._IO_FILE* noundef %86)
  br label %88

88:                                               ; preds = %72, %70, %65
  ret void
}

; Function Attrs: nounwind
declare i8* @strtok(i8* noundef, i8* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @get_file_type(i8* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %4 = load i32, i32* @opt_x, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = load i32, i32* @opt_x, align 4
  store i32 %7, i32* %2, align 4
  br label %42

8:                                                ; preds = %1
  %9 = load i8*, i8** %3, align 8
  %10 = call zeroext i1 @endswith(i8* noundef %9, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.120.468, i64 0, i64 0))
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  store i32 4, i32* %2, align 4
  br label %42

12:                                               ; preds = %8
  %13 = load i8*, i8** %3, align 8
  %14 = call zeroext i1 @endswith(i8* noundef %13, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.121.469, i64 0, i64 0))
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = load i8*, i8** %3, align 8
  %17 = call i8* @strstr(i8* noundef %16, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122.470, i64 0, i64 0)) #13
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %12
  store i32 5, i32* %2, align 4
  br label %42

20:                                               ; preds = %15
  %21 = load i8*, i8** %3, align 8
  %22 = call zeroext i1 @endswith(i8* noundef %21, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123.471, i64 0, i64 0))
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  store i32 5, i32* %2, align 4
  br label %42

24:                                               ; preds = %20
  %25 = load i8*, i8** %3, align 8
  %26 = call zeroext i1 @endswith(i8* noundef %25, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.413, i64 0, i64 0))
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  store i32 3, i32* %2, align 4
  br label %42

28:                                               ; preds = %24
  %29 = load i8*, i8** %3, align 8
  %30 = call zeroext i1 @endswith(i8* noundef %29, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124.472, i64 0, i64 0))
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  store i32 1, i32* %2, align 4
  br label %42

32:                                               ; preds = %28
  %33 = load i8*, i8** %3, align 8
  %34 = call zeroext i1 @endswith(i8* noundef %33, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.412, i64 0, i64 0))
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  store i32 2, i32* %2, align 4
  br label %42

36:                                               ; preds = %32
  %37 = load i8*, i8** %3, align 8
  %38 = call zeroext i1 @endswith(i8* noundef %37, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125.473, i64 0, i64 0))
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  store i32 5, i32* %2, align 4
  br label %42

40:                                               ; preds = %36
  %41 = load i8*, i8** %3, align 8
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.126.474, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0), i8* noundef %41) #11
  unreachable

42:                                               ; preds = %39, %35, %31, %27, %23, %19, %11, %6
  %43 = load i32, i32* %2, align 4
  ret i32 %43
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @assemble(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [6 x i8*], align 16
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.127.466, i64 0, i64 0), i8** %6, align 8
  %7 = getelementptr inbounds i8*, i8** %6, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.467, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds i8*, i8** %7, i64 1
  %9 = load i8*, i8** %3, align 8
  store i8* %9, i8** %8, align 8
  %10 = getelementptr inbounds i8*, i8** %8, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.417, i64 0, i64 0), i8** %10, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 1
  %12 = load i8*, i8** %4, align 8
  store i8* %12, i8** %11, align 8
  %13 = getelementptr inbounds i8*, i8** %11, i64 1
  store i8* null, i8** %13, align 8
  %14 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 0
  call void @run_subprocess(i8** noundef %14)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @run_cc1(i32 noundef %0, i8** noundef %1, i8* noundef %2, i8* noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8**, align 8
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  %10 = load i32, i32* %5, align 4
  %11 = add nsw i32 %10, 10
  %12 = sext i32 %11 to i64
  %13 = call noalias i8* @calloc(i64 noundef %12, i64 noundef 8) #14
  %14 = bitcast i8* %13 to i8**
  store i8** %14, i8*** %9, align 8
  %15 = load i8**, i8*** %9, align 8
  %16 = icmp eq i8** %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130.462, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable

18:                                               ; preds = %4
  %19 = load i8**, i8*** %9, align 8
  %20 = bitcast i8** %19 to i8*
  %21 = load i8**, i8*** %6, align 8
  %22 = bitcast i8** %21 to i8*
  %23 = load i32, i32* %5, align 4
  %24 = sext i32 %23 to i64
  %25 = mul i64 %24, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %22, i64 %25, i1 false)
  %26 = load i8**, i8*** %9, align 8
  %27 = load i32, i32* %5, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %5, align 4
  %29 = sext i32 %27 to i64
  %30 = getelementptr inbounds i8*, i8** %26, i64 %29
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20.463, i64 0, i64 0), i8** %30, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %45

33:                                               ; preds = %18
  %34 = load i8**, i8*** %9, align 8
  %35 = load i32, i32* %5, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %5, align 4
  %37 = sext i32 %35 to i64
  %38 = getelementptr inbounds i8*, i8** %34, i64 %37
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56.464, i64 0, i64 0), i8** %38, align 8
  %39 = load i8*, i8** %7, align 8
  %40 = load i8**, i8*** %9, align 8
  %41 = load i32, i32* %5, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %5, align 4
  %43 = sext i32 %41 to i64
  %44 = getelementptr inbounds i8*, i8** %40, i64 %43
  store i8* %39, i8** %44, align 8
  br label %45

45:                                               ; preds = %33, %18
  %46 = load i8*, i8** %8, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %60

48:                                               ; preds = %45
  %49 = load i8**, i8*** %9, align 8
  %50 = load i32, i32* %5, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %5, align 4
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds i8*, i8** %49, i64 %52
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57.465, i64 0, i64 0), i8** %53, align 8
  %54 = load i8*, i8** %8, align 8
  %55 = load i8**, i8*** %9, align 8
  %56 = load i32, i32* %5, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %5, align 4
  %58 = sext i32 %56 to i64
  %59 = getelementptr inbounds i8*, i8** %55, i64 %58
  store i8* %54, i8** %59, align 8
  br label %60

60:                                               ; preds = %48, %45
  %61 = load i8**, i8*** %9, align 8
  call void @run_subprocess(i8** noundef %61)
  %62 = load i8**, i8*** %9, align 8
  %63 = bitcast i8** %62 to i8*
  call void @free(i8* noundef %63) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @create_tmpfile() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = call noalias i8* @strdup(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.131.459, i64 0, i64 0)) #14
  store i8* %3, i8** %1, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %0
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.132.460, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %0
  %8 = load i8*, i8** %1, align 8
  %9 = call i32 @mkstemp(i8* noundef %8)
  store i32 %9, i32* %2, align 4
  %10 = load i32, i32* %2, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = call i32* @__errno_location() #15
  %14 = load i32, i32* %13, align 4
  %15 = call i8* @strerror(i32 noundef %14) #14
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.133.461, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0), i8* noundef %15) #11
  unreachable

16:                                               ; preds = %7
  %17 = load i32, i32* %2, align 4
  %18 = call i32 @close(i32 noundef %17)
  %19 = load i8*, i8** %1, align 8
  call void @strarray_push(%struct.StringArray* noundef @tmpfiles, i8* noundef %19)
  %20 = load i8*, i8** %1, align 8
  ret i8* %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @run_linker(%struct.StringArray* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.StringArray*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.StringArray, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.StringArray* %0, %struct.StringArray** %3, align 8
  store i8* %1, i8** %4, align 8
  %10 = bitcast %struct.StringArray* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  %11 = load i8*, i8** @opt_linker, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i8*, i8** @opt_linker, align 8
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %14)
  br label %16

15:                                               ; preds = %2
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134.416, i64 0, i64 0))
  br label %16

16:                                               ; preds = %15, %13
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.417, i64 0, i64 0))
  %17 = load i8*, i8** %4, align 8
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %17)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135.418, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.136.419, i64 0, i64 0))
  %18 = call i8* @find_libpath()
  store i8* %18, i8** %6, align 8
  %19 = call i8* @find_gcc_libpath()
  store i8* %19, i8** %7, align 8
  %20 = load i8, i8* @opt_shared, align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = load i8*, i8** %6, align 8
  %24 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137.420, i64 0, i64 0), i8* noundef %23)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %24)
  %25 = load i8*, i8** %7, align 8
  %26 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.138.421, i64 0, i64 0), i8* noundef %25)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %26)
  br label %34

27:                                               ; preds = %16
  %28 = load i8*, i8** %6, align 8
  %29 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.139.422, i64 0, i64 0), i8* noundef %28)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %29)
  %30 = load i8*, i8** %6, align 8
  %31 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137.420, i64 0, i64 0), i8* noundef %30)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %31)
  %32 = load i8*, i8** %7, align 8
  %33 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140.423, i64 0, i64 0), i8* noundef %32)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %33)
  br label %34

34:                                               ; preds = %27, %22
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141.424, i64 0, i64 0))
  %35 = load i8*, i8** %7, align 8
  %36 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.142.425, i64 0, i64 0), i8* noundef %35)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %36)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.143.426, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.144.427, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.145.428, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.143.426, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.146.429, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.147.430, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.148.431, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149.432, i64 0, i64 0))
  %37 = load i8, i8* @opt_static, align 1
  %38 = trunc i8 %37 to i1
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.150.433, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.151.434, i64 0, i64 0))
  br label %40

40:                                               ; preds = %39, %34
  store i32 0, i32* %8, align 4
  br label %41

41:                                               ; preds = %51, %40
  %42 = load i32, i32* %8, align 4
  %43 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @ld_extra_args, i32 0, i32 2), align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %45, label %54

45:                                               ; preds = %41
  %46 = load i8**, i8*** getelementptr inbounds (%struct.StringArray, %struct.StringArray* @ld_extra_args, i32 0, i32 0), align 8
  %47 = load i32, i32* %8, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8*, i8** %46, i64 %48
  %50 = load i8*, i8** %49, align 8
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %50)
  br label %51

51:                                               ; preds = %45
  %52 = load i32, i32* %8, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %8, align 4
  br label %41, !llvm.loop !69

54:                                               ; preds = %41
  store i32 0, i32* %9, align 4
  br label %55

55:                                               ; preds = %69, %54
  %56 = load i32, i32* %9, align 4
  %57 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %58 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %57, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %56, %59
  br i1 %60, label %61, label %72

61:                                               ; preds = %55
  %62 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %63 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %62, i32 0, i32 0
  %64 = load i8**, i8*** %63, align 8
  %65 = load i32, i32* %9, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8*, i8** %64, i64 %66
  %68 = load i8*, i8** %67, align 8
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %68)
  br label %69

69:                                               ; preds = %61
  %70 = load i32, i32* %9, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %9, align 4
  br label %55, !llvm.loop !70

72:                                               ; preds = %55
  %73 = load i8, i8* @opt_static, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.152.435, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153.436, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154.437, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.155.438, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.156.439, i64 0, i64 0))
  br label %77

76:                                               ; preds = %72
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.155.438, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153.436, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.157.440, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.158.441, i64 0, i64 0))
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.159.442, i64 0, i64 0))
  br label %77

77:                                               ; preds = %76, %75
  %78 = load i8, i8* @opt_shared, align 1
  %79 = trunc i8 %78 to i1
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = load i8*, i8** %7, align 8
  %82 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.160.443, i64 0, i64 0), i8* noundef %81)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %82)
  br label %86

83:                                               ; preds = %77
  %84 = load i8*, i8** %7, align 8
  %85 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161.444, i64 0, i64 0), i8* noundef %84)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %85)
  br label %86

86:                                               ; preds = %83, %80
  %87 = load i8*, i8** %6, align 8
  %88 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.162.445, i64 0, i64 0), i8* noundef %87)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef %88)
  call void @strarray_push(%struct.StringArray* noundef %5, i8* noundef null)
  %89 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %5, i32 0, i32 0
  %90 = load i8**, i8*** %89, align 8
  call void @run_subprocess(i8** noundef %90)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @find_libpath() #0 {
  %1 = alloca i8*, align 8
  %2 = call zeroext i1 @file_exists(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.163.454, i64 0, i64 0))
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.164.455, i64 0, i64 0), i8** %1, align 8
  br label %8

4:                                                ; preds = %0
  %5 = call zeroext i1 @file_exists(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.165.456, i64 0, i64 0))
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.166.457, i64 0, i64 0), i8** %1, align 8
  br label %8

7:                                                ; preds = %4
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.167.458, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable

8:                                                ; preds = %6, %3
  %9 = load i8*, i8** %1, align 8
  ret i8* %9
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @find_gcc_libpath() #0 {
  %1 = alloca [4 x i8*], align 16
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = bitcast [4 x i8*]* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %4, i8* align 16 bitcast ([4 x i8*]* @__const.find_gcc_libpath.paths to i8*), i64 32, i1 false)
  store i32 0, i32* %2, align 4
  br label %5

5:                                                ; preds = %21, %0
  %6 = load i32, i32* %2, align 4
  %7 = sext i32 %6 to i64
  %8 = icmp ult i64 %7, 4
  br i1 %8, label %9, label %24

9:                                                ; preds = %5
  %10 = load i32, i32* %2, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i64 0, i64 %11
  %13 = load i8*, i8** %12, align 8
  %14 = call i8* @find_file(i8* noundef %13)
  store i8* %14, i8** %3, align 8
  %15 = load i8*, i8** %3, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %9
  %18 = load i8*, i8** %3, align 8
  %19 = call i8* @dirname(i8* noundef %18) #14
  ret i8* %19

20:                                               ; preds = %9
  br label %21

21:                                               ; preds = %20
  %22 = load i32, i32* %2, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %2, align 4
  br label %5, !llvm.loop !71

24:                                               ; preds = %5
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.172.449, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @run_subprocess(i8** noundef %0) #0 {
  %2 = alloca i8**, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8** %0, i8*** %2, align 8
  %6 = load i8, i8* @opt_hash_hash_hash, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %35

8:                                                ; preds = %1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %10 = load i8**, i8*** %2, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 0
  %12 = load i8*, i8** %11, align 8
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %9, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.401, i64 0, i64 0), i8* noundef %12)
  store i32 1, i32* %3, align 4
  br label %14

14:                                               ; preds = %29, %8
  %15 = load i8**, i8*** %2, align 8
  %16 = load i32, i32* %3, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8*, i8** %15, i64 %17
  %19 = load i8*, i8** %18, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %21, label %32

21:                                               ; preds = %14
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %23 = load i8**, i8*** %2, align 8
  %24 = load i32, i32* %3, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8*, i8** %23, i64 %25
  %27 = load i8*, i8** %26, align 8
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %22, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128.446, i64 0, i64 0), i8* noundef %27)
  br label %29

29:                                               ; preds = %21
  %30 = load i32, i32* %3, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %3, align 4
  br label %14, !llvm.loop !72

32:                                               ; preds = %14
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %33, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.117.447, i64 0, i64 0))
  br label %35

35:                                               ; preds = %32, %1
  %36 = load i8, i8* @isDebug, align 1
  %37 = trunc i8 %36 to i1
  br i1 %37, label %38, label %68

38:                                               ; preds = %35
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %40 = icmp ne %struct._IO_FILE* %39, null
  br i1 %40, label %41, label %68

41:                                               ; preds = %38
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %43 = load i8**, i8*** %2, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 0
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %42, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.401, i64 0, i64 0), i8* noundef %45)
  store i32 1, i32* %4, align 4
  br label %47

47:                                               ; preds = %62, %41
  %48 = load i8**, i8*** %2, align 8
  %49 = load i32, i32* %4, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8*, i8** %48, i64 %50
  %52 = load i8*, i8** %51, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %54, label %65

54:                                               ; preds = %47
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %56 = load i8**, i8*** %2, align 8
  %57 = load i32, i32* %4, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8*, i8** %56, i64 %58
  %60 = load i8*, i8** %59, align 8
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %55, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128.446, i64 0, i64 0), i8* noundef %60)
  br label %62

62:                                               ; preds = %54
  %63 = load i32, i32* %4, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %4, align 4
  br label %47, !llvm.loop !73

65:                                               ; preds = %47
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @f, align 8
  %67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %66, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.117.447, i64 0, i64 0))
  br label %68

68:                                               ; preds = %65, %38, %35
  %69 = call i32 @fork() #14
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %85

71:                                               ; preds = %68
  %72 = load i8**, i8*** %2, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i64 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i8**, i8*** %2, align 8
  %76 = call i32 @execvp(i8* noundef %74, i8** noundef %75) #14
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %78 = load i8**, i8*** %2, align 8
  %79 = getelementptr inbounds i8*, i8** %78, i64 0
  %80 = load i8*, i8** %79, align 8
  %81 = call i32* @__errno_location() #15
  %82 = load i32, i32* %81, align 4
  %83 = call i8* @strerror(i32 noundef %82) #14
  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %77, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.129.448, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0), i8* noundef %80, i8* noundef %83)
  call void @_exit(i32 noundef 99) #11
  unreachable

85:                                               ; preds = %68
  br label %86

86:                                               ; preds = %89, %85
  %87 = call i32 @wait(i32* noundef %5)
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  br label %86, !llvm.loop !74

90:                                               ; preds = %86
  %91 = load i32, i32* %5, align 4
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @exit(i32 noundef 1) #12
  unreachable

94:                                               ; preds = %90
  ret void
}

; Function Attrs: nounwind
declare i32 @fork() #6

; Function Attrs: nounwind
declare i32 @execvp(i8* noundef, i8** noundef) #6

; Function Attrs: nounwind readnone willreturn
declare i32* @__errno_location() #8

; Function Attrs: nounwind
declare i8* @strerror(i32 noundef) #6

; Function Attrs: noreturn
declare void @_exit(i32 noundef) #9

declare i32 @wait(i32* noundef) #5

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @find_file(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.glob_t, align 8
  store i8* %0, i8** %2, align 8
  store i8* null, i8** %3, align 8
  %5 = bitcast %struct.glob_t* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 72, i1 false)
  %6 = load i8*, i8** %2, align 8
  %7 = call i32 @glob(i8* noundef %6, i32 noundef 0, i32 (i8*, i32)* noundef null, %struct.glob_t* noundef %4) #14
  %8 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %4, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %4, i32 0, i32 1
  %13 = load i8**, i8*** %12, align 8
  %14 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %4, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, 1
  %17 = getelementptr inbounds i8*, i8** %13, i64 %16
  %18 = load i8*, i8** %17, align 8
  %19 = call noalias i8* @strdup(i8* noundef %18) #14
  store i8* %19, i8** %3, align 8
  br label %20

20:                                               ; preds = %11, %1
  call void @globfree(%struct.glob_t* noundef %4) #14
  %21 = load i8*, i8** %3, align 8
  ret i8* %21
}

; Function Attrs: nounwind
declare i8* @dirname(i8* noundef) #6

; Function Attrs: nounwind
declare i32 @glob(i8* noundef, i32 noundef, i32 (i8*, i32)* noundef, %struct.glob_t* noundef) #6

; Function Attrs: nounwind
declare void @globfree(%struct.glob_t* noundef) #6

declare i32 @mkstemp(i8* noundef) #5

declare i32 @close(i32 noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @endswith(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = call i64 @strlen(i8* noundef %7) #13
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* %5, align 4
  %10 = load i8*, i8** %4, align 8
  %11 = call i64 @strlen(i8* noundef %10) #13
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* %6, align 4
  %13 = load i32, i32* %5, align 4
  %14 = load i32, i32* %6, align 4
  %15 = icmp sge i32 %13, %14
  br i1 %15, label %16, label %29

16:                                               ; preds = %2
  %17 = load i8*, i8** %3, align 8
  %18 = load i32, i32* %5, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i32, i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = sub i64 0, %22
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = load i8*, i8** %4, align 8
  %26 = call i32 @strcmp(i8* noundef %24, i8* noundef %25) #13
  %27 = icmp ne i32 %26, 0
  %28 = xor i1 %27, true
  br label %29

29:                                               ; preds = %16, %2
  %30 = phi i1 [ false, %2 ], [ %28, %16 ]
  ret i1 %30
}

; Function Attrs: nounwind readonly willreturn
declare i8* @strstr(i8* noundef, i8* noundef) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @must_tokenize_file(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.Token*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call %struct.Token* @tokenize_file(i8* noundef %4)
  store %struct.Token* %5, %struct.Token** %3, align 8
  %6 = load %struct.Token*, %struct.Token** %3, align 8
  %7 = icmp ne %struct.Token* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = load i8*, i8** %2, align 8
  %10 = call i32* @__errno_location() #15
  %11 = load i32, i32* %10, align 4
  %12 = call i8* @strerror(i32 noundef %11) #14
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.110.486, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0), i8* noundef %9, i8* noundef %12) #11
  unreachable

13:                                               ; preds = %1
  %14 = load %struct.Token*, %struct.Token** %3, align 8
  ret %struct.Token* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @append_tokens(%struct.Token* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = icmp ne %struct.Token* %7, null
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 16
  %13 = icmp eq i32 %12, 6
  br i1 %13, label %14, label %16

14:                                               ; preds = %9, %2
  %15 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %15, %struct.Token** %3, align 8
  br label %34

16:                                               ; preds = %9
  %17 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %17, %struct.Token** %6, align 8
  br label %18

18:                                               ; preds = %25, %16
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 1
  %21 = load %struct.Token*, %struct.Token** %20, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 16
  %24 = icmp ne i32 %23, 6
  br i1 %24, label %25, label %29

25:                                               ; preds = %18
  %26 = load %struct.Token*, %struct.Token** %6, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  store %struct.Token* %28, %struct.Token** %6, align 8
  br label %18, !llvm.loop !75

29:                                               ; preds = %18
  %30 = load %struct.Token*, %struct.Token** %5, align 8
  %31 = load %struct.Token*, %struct.Token** %6, align 8
  %32 = getelementptr inbounds %struct.Token, %struct.Token* %31, i32 0, i32 1
  store %struct.Token* %30, %struct.Token** %32, align 8
  %33 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %33, %struct.Token** %3, align 8
  br label %34

34:                                               ; preds = %29, %14
  %35 = load %struct.Token*, %struct.Token** %3, align 8
  ret %struct.Token* %35
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_dependencies() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct.File**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = load i8*, i8** @opt_MF, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %0
  %11 = load i8*, i8** @opt_MF, align 8
  store i8* %11, i8** %1, align 8
  br label %48

12:                                               ; preds = %0
  %13 = load i8, i8* @opt_MD, align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %40

15:                                               ; preds = %12
  %16 = load i8*, i8** @opt_o, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = load i8*, i8** @opt_o, align 8
  br label %22

20:                                               ; preds = %15
  %21 = load i8*, i8** @base_file, align 8
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi i8* [ %19, %18 ], [ %21, %20 ]
  %24 = call i8* @replace_extn(i8* noundef %23, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111.480, i64 0, i64 0))
  store i8* %24, i8** %1, align 8
  %25 = load i8*, i8** @opt_o, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = load i8*, i8** @opt_o, align 8
  %29 = call i8* @extract_filename(i8* noundef %28)
  store i8* %29, i8** %3, align 8
  %30 = load i8*, i8** @opt_o, align 8
  %31 = load i8*, i8** %3, align 8
  %32 = call i8* @extract_path(i8* noundef %30, i8* noundef %31)
  store i8* %32, i8** %2, align 8
  %33 = load i8*, i8** %2, align 8
  %34 = load i8*, i8** %1, align 8
  %35 = load i8*, i8** %1, align 8
  %36 = call i64 @strlen(i8* noundef %35) #13
  %37 = call i8* @strncat(i8* noundef %33, i8* noundef %34, i64 noundef %36) #14
  %38 = load i8*, i8** %2, align 8
  store i8* %38, i8** %1, align 8
  br label %39

39:                                               ; preds = %27, %22
  br label %47

40:                                               ; preds = %12
  %41 = load i8*, i8** @opt_o, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load i8*, i8** @opt_o, align 8
  store i8* %44, i8** %1, align 8
  br label %46

45:                                               ; preds = %40
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112.477, i64 0, i64 0), i8** %1, align 8
  br label %46

46:                                               ; preds = %45, %43
  br label %47

47:                                               ; preds = %46, %39
  br label %48

48:                                               ; preds = %47, %10
  %49 = load i8*, i8** %1, align 8
  %50 = call %struct._IO_FILE* @open_file(i8* noundef %49)
  store %struct._IO_FILE* %50, %struct._IO_FILE** %4, align 8
  %51 = load i8*, i8** @opt_MT, align 8
  %52 = icmp ne i8* %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %55 = load i8*, i8** @opt_MT, align 8
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %54, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113.481, i64 0, i64 0), i8* noundef %55)
  br label %63

57:                                               ; preds = %48
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %59 = load i8*, i8** @base_file, align 8
  %60 = call i8* @replace_extn(i8* noundef %59, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.413, i64 0, i64 0))
  %61 = call i8* @quote_makefile(i8* noundef %60)
  %62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %58, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113.481, i64 0, i64 0), i8* noundef %61)
  br label %63

63:                                               ; preds = %57, %53
  %64 = call %struct.File** @get_input_files()
  store %struct.File** %64, %struct.File*** %5, align 8
  store i32 0, i32* %6, align 4
  br label %65

65:                                               ; preds = %95, %63
  %66 = load %struct.File**, %struct.File*** %5, align 8
  %67 = load i32, i32* %6, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.File*, %struct.File** %66, i64 %68
  %70 = load %struct.File*, %struct.File** %69, align 8
  %71 = icmp ne %struct.File* %70, null
  br i1 %71, label %72, label %98

72:                                               ; preds = %65
  %73 = load i8, i8* @opt_MMD, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %75, label %85

75:                                               ; preds = %72
  %76 = load %struct.File**, %struct.File*** %5, align 8
  %77 = load i32, i32* %6, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.File*, %struct.File** %76, i64 %78
  %80 = load %struct.File*, %struct.File** %79, align 8
  %81 = getelementptr inbounds %struct.File, %struct.File* %80, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = call zeroext i1 @in_std_include_path(i8* noundef %82)
  br i1 %83, label %84, label %85

84:                                               ; preds = %75
  br label %95

85:                                               ; preds = %75, %72
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %87 = load %struct.File**, %struct.File*** %5, align 8
  %88 = load i32, i32* %6, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %struct.File*, %struct.File** %87, i64 %89
  %91 = load %struct.File*, %struct.File** %90, align 8
  %92 = getelementptr inbounds %struct.File, %struct.File* %91, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %86, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.114.482, i64 0, i64 0), i8* noundef %93)
  br label %95

95:                                               ; preds = %85, %84
  %96 = load i32, i32* %6, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %6, align 4
  br label %65, !llvm.loop !76

98:                                               ; preds = %65
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %99, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.115.483, i64 0, i64 0))
  %101 = load i8, i8* @opt_MP, align 1
  %102 = trunc i8 %101 to i1
  br i1 %102, label %103, label %139

103:                                              ; preds = %98
  store i32 1, i32* %7, align 4
  br label %104

104:                                              ; preds = %135, %103
  %105 = load %struct.File**, %struct.File*** %5, align 8
  %106 = load i32, i32* %7, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %struct.File*, %struct.File** %105, i64 %107
  %109 = load %struct.File*, %struct.File** %108, align 8
  %110 = icmp ne %struct.File* %109, null
  br i1 %110, label %111, label %138

111:                                              ; preds = %104
  %112 = load i8, i8* @opt_MMD, align 1
  %113 = trunc i8 %112 to i1
  br i1 %113, label %114, label %124

114:                                              ; preds = %111
  %115 = load %struct.File**, %struct.File*** %5, align 8
  %116 = load i32, i32* %7, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %struct.File*, %struct.File** %115, i64 %117
  %119 = load %struct.File*, %struct.File** %118, align 8
  %120 = getelementptr inbounds %struct.File, %struct.File* %119, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = call zeroext i1 @in_std_include_path(i8* noundef %121)
  br i1 %122, label %123, label %124

123:                                              ; preds = %114
  br label %135

124:                                              ; preds = %114, %111
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %126 = load %struct.File**, %struct.File*** %5, align 8
  %127 = load i32, i32* %7, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %struct.File*, %struct.File** %126, i64 %128
  %130 = load %struct.File*, %struct.File** %129, align 8
  %131 = getelementptr inbounds %struct.File, %struct.File* %130, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = call i8* @quote_makefile(i8* noundef %132)
  %134 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %125, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116.484, i64 0, i64 0), i8* noundef %133)
  br label %135

135:                                              ; preds = %124, %123
  %136 = load i32, i32* %7, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %7, align 4
  br label %104, !llvm.loop !77

138:                                              ; preds = %104
  br label %139

139:                                              ; preds = %138, %98
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @print_tokens(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  store %struct.Token* %0, %struct.Token** %2, align 8
  %5 = load i8*, i8** @opt_o, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = load i8*, i8** @opt_o, align 8
  br label %10

9:                                                ; preds = %1
  br label %10

10:                                               ; preds = %9, %7
  %11 = phi i8* [ %8, %7 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112.477, i64 0, i64 0), %9 ]
  %12 = call %struct._IO_FILE* @open_file(i8* noundef %11)
  store %struct._IO_FILE* %12, %struct._IO_FILE** %3, align 8
  store i32 1, i32* %4, align 4
  br label %13

13:                                               ; preds = %53, %10
  %14 = load %struct.Token*, %struct.Token** %2, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 16
  %17 = icmp ne i32 %16, 6
  br i1 %17, label %18, label %57

18:                                               ; preds = %13
  %19 = load i32, i32* %4, align 4
  %20 = icmp sgt i32 %19, 1
  br i1 %20, label %21, label %29

21:                                               ; preds = %18
  %22 = load %struct.Token*, %struct.Token** %2, align 8
  %23 = getelementptr inbounds %struct.Token, %struct.Token* %22, i32 0, i32 12
  %24 = load i8, i8* %23, align 8
  %25 = trunc i8 %24 to i1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %27, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.117.447, i64 0, i64 0))
  br label %29

29:                                               ; preds = %26, %21, %18
  %30 = load %struct.Token*, %struct.Token** %2, align 8
  %31 = getelementptr inbounds %struct.Token, %struct.Token* %30, i32 0, i32 13
  %32 = load i8, i8* %31, align 1
  %33 = trunc i8 %32 to i1
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = load %struct.Token*, %struct.Token** %2, align 8
  %36 = getelementptr inbounds %struct.Token, %struct.Token* %35, i32 0, i32 12
  %37 = load i8, i8* %36, align 8
  %38 = trunc i8 %37 to i1
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %40, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.396, i64 0, i64 0))
  br label %42

42:                                               ; preds = %39, %34, %29
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %44 = load %struct.Token*, %struct.Token** %2, align 8
  %45 = getelementptr inbounds %struct.Token, %struct.Token* %44, i32 0, i32 5
  %46 = load i32, i32* %45, align 8
  %47 = load %struct.Token*, %struct.Token** %2, align 8
  %48 = getelementptr inbounds %struct.Token, %struct.Token* %47, i32 0, i32 4
  %49 = load i8*, i8** %48, align 16
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %43, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118.479, i64 0, i64 0), i32 noundef %46, i8* noundef %49)
  %51 = load i32, i32* %4, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %4, align 4
  br label %53

53:                                               ; preds = %42
  %54 = load %struct.Token*, %struct.Token** %2, align 8
  %55 = getelementptr inbounds %struct.Token, %struct.Token* %54, i32 0, i32 1
  %56 = load %struct.Token*, %struct.Token** %55, align 8
  store %struct.Token* %56, %struct.Token** %2, align 8
  br label %13, !llvm.loop !78

57:                                               ; preds = %13
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %58, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.117.447, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @open_memstream(i8** noundef, i64* noundef) #6

declare i32 @fclose(%struct._IO_FILE* noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._IO_FILE* @open_file(i8* noundef %0) #0 {
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  store i8* %0, i8** %3, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = load i8*, i8** %3, align 8
  %9 = call i32 @strcmp(i8* noundef %8, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112.477, i64 0, i64 0)) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7, %1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %12, %struct._IO_FILE** %2, align 8
  br label %25

13:                                               ; preds = %7
  %14 = load i8*, i8** %3, align 8
  %15 = call noalias %struct._IO_FILE* @fopen(i8* noundef %14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.404, i64 0, i64 0))
  store %struct._IO_FILE* %15, %struct._IO_FILE** %4, align 8
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %17 = icmp ne %struct._IO_FILE* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = load i8*, i8** %3, align 8
  %20 = call i32* @__errno_location() #15
  %21 = load i32, i32* %20, align 4
  %22 = call i8* @strerror(i32 noundef %21) #14
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.119.478, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0), i8* noundef %19, i8* noundef %22) #11
  unreachable

23:                                               ; preds = %13
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %24, %struct._IO_FILE** %2, align 8
  br label %25

25:                                               ; preds = %23, %11
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  ret %struct._IO_FILE* %26
}

declare i64 @fwrite(i8* noundef, i64 noundef, i64 noundef, %struct._IO_FILE* noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_makefile(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = call i64 @strlen(i8* noundef %7) #13
  %9 = mul i64 %8, 2
  %10 = add i64 %9, 1
  %11 = call noalias i8* @calloc(i64 noundef 1, i64 noundef %10) #14
  store i8* %11, i8** %3, align 8
  %12 = load i8*, i8** %3, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.103.485, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable

15:                                               ; preds = %1
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %105, %15
  %17 = load i8*, i8** %2, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = icmp ne i8 %21, 0
  br i1 %22, label %23, label %108

23:                                               ; preds = %16
  %24 = load i8*, i8** %2, align 8
  %25 = load i32, i32* %4, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  switch i32 %29, label %93 [
    i32 36, label %30
    i32 35, label %41
    i32 32, label %52
    i32 9, label %52
  ]

30:                                               ; preds = %23
  %31 = load i8*, i8** %3, align 8
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %5, align 4
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  store i8 36, i8* %35, align 1
  %36 = load i8*, i8** %3, align 8
  %37 = load i32, i32* %5, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %5, align 4
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  store i8 36, i8* %40, align 1
  br label %104

41:                                               ; preds = %23
  %42 = load i8*, i8** %3, align 8
  %43 = load i32, i32* %5, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %5, align 4
  %45 = sext i32 %43 to i64
  %46 = getelementptr inbounds i8, i8* %42, i64 %45
  store i8 92, i8* %46, align 1
  %47 = load i8*, i8** %3, align 8
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  %50 = sext i32 %48 to i64
  %51 = getelementptr inbounds i8, i8* %47, i64 %50
  store i8 35, i8* %51, align 1
  br label %104

52:                                               ; preds = %23, %23
  %53 = load i32, i32* %4, align 4
  %54 = sub nsw i32 %53, 1
  store i32 %54, i32* %6, align 4
  br label %55

55:                                               ; preds = %74, %52
  %56 = load i32, i32* %6, align 4
  %57 = icmp sge i32 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %55
  %59 = load i8*, i8** %2, align 8
  %60 = load i32, i32* %6, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %59, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %64, 92
  br label %66

66:                                               ; preds = %58, %55
  %67 = phi i1 [ false, %55 ], [ %65, %58 ]
  br i1 %67, label %68, label %77

68:                                               ; preds = %66
  %69 = load i8*, i8** %3, align 8
  %70 = load i32, i32* %5, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %5, align 4
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds i8, i8* %69, i64 %72
  store i8 92, i8* %73, align 1
  br label %74

74:                                               ; preds = %68
  %75 = load i32, i32* %6, align 4
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %6, align 4
  br label %55, !llvm.loop !79

77:                                               ; preds = %66
  %78 = load i8*, i8** %3, align 8
  %79 = load i32, i32* %5, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %5, align 4
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds i8, i8* %78, i64 %81
  store i8 92, i8* %82, align 1
  %83 = load i8*, i8** %2, align 8
  %84 = load i32, i32* %4, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = load i8*, i8** %3, align 8
  %89 = load i32, i32* %5, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %5, align 4
  %91 = sext i32 %89 to i64
  %92 = getelementptr inbounds i8, i8* %88, i64 %91
  store i8 %87, i8* %92, align 1
  br label %104

93:                                               ; preds = %23
  %94 = load i8*, i8** %2, align 8
  %95 = load i32, i32* %4, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = load i8*, i8** %3, align 8
  %100 = load i32, i32* %5, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %5, align 4
  %102 = sext i32 %100 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  store i8 %98, i8* %103, align 1
  br label %104

104:                                              ; preds = %93, %77, %41, %30
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %4, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %4, align 4
  br label %16, !llvm.loop !80

108:                                              ; preds = %16
  %109 = load i8*, i8** %3, align 8
  ret i8* %109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @in_std_include_path(i8* noundef %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 0, i32* %4, align 4
  br label %7

7:                                                ; preds = %36, %1
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @std_include_paths, i32 0, i32 2), align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %39

11:                                               ; preds = %7
  %12 = load i8**, i8*** getelementptr inbounds (%struct.StringArray, %struct.StringArray* @std_include_paths, i32 0, i32 0), align 8
  %13 = load i32, i32* %4, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8*, i8** %12, i64 %14
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %5, align 8
  %17 = load i8*, i8** %5, align 8
  %18 = call i64 @strlen(i8* noundef %17) #13
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %6, align 4
  %20 = load i8*, i8** %5, align 8
  %21 = load i8*, i8** %3, align 8
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = call i32 @strncmp(i8* noundef %20, i8* noundef %21, i64 noundef %23) #13
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %35

26:                                               ; preds = %11
  %27 = load i8*, i8** %3, align 8
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp eq i32 %32, 47
  br i1 %33, label %34, label %35

34:                                               ; preds = %26
  store i1 true, i1* %2, align 1
  br label %40

35:                                               ; preds = %26, %11
  br label %36

36:                                               ; preds = %35
  %37 = load i32, i32* %4, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %4, align 4
  br label %7, !llvm.loop !81

39:                                               ; preds = %7
  store i1 false, i1* %2, align 1
  br label %40

40:                                               ; preds = %39, %34
  %41 = load i1, i1* %2, align 1
  ret i1 %41
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @take_arg(i8* noundef %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca i8*, align 8
  %4 = alloca [15 x i8*], align 16
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %6 = bitcast [15 x i8*]* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 16 bitcast ([15 x i8*]* @__const.take_arg.x to i8*), i64 120, i1 false)
  store i32 0, i32* %5, align 4
  br label %7

7:                                                ; preds = %21, %1
  %8 = load i32, i32* %5, align 4
  %9 = sext i32 %8 to i64
  %10 = icmp ult i64 %9, 15
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = load i8*, i8** %3, align 8
  %13 = load i32, i32* %5, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [15 x i8*], [15 x i8*]* %4, i64 0, i64 %14
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @strcmp(i8* noundef %12, i8* noundef %16) #13
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %11
  store i1 true, i1* %2, align 1
  br label %25

20:                                               ; preds = %11
  br label %21

21:                                               ; preds = %20
  %22 = load i32, i32* %5, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %5, align 4
  br label %7, !llvm.loop !82

24:                                               ; preds = %7
  store i1 false, i1* %2, align 1
  br label %25

25:                                               ; preds = %24, %19
  %26 = load i1, i1* %2, align 1
  ret i1 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usage(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %3, i8* noundef getelementptr inbounds ([215 x i8], [215 x i8]* @.str.92.571, i64 0, i64 0))
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %5, i8* noundef getelementptr inbounds ([3029 x i8], [3029 x i8]* @.str.93.572, i64 0, i64 0))
  %7 = load i32, i32* %2, align 4
  call void @exit(i32 noundef %7) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @printVersion(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.94.568, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95.569, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96.570, i64 0, i64 0))
  %4 = load i32, i32* %2, align 4
  call void @exit(i32 noundef %4) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_parms_length(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i64 @strlen(i8* noundef %3) #13
  %5 = icmp ugt i64 %4, 101
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.97.567, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @define(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i8* @strchr(i8* noundef %4, i32 noundef 61) #13
  store i8* %5, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %18

8:                                                ; preds = %1
  %9 = load i8*, i8** %2, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = load i8*, i8** %2, align 8
  %12 = ptrtoint i8* %10 to i64
  %13 = ptrtoint i8* %11 to i64
  %14 = sub i64 %12, %13
  %15 = call noalias i8* @strndup(i8* noundef %9, i64 noundef %14) #14
  %16 = load i8*, i8** %3, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  call void @define_macro(i8* noundef %15, i8* noundef %17)
  br label %20

18:                                               ; preds = %1
  %19 = load i8*, i8** %2, align 8
  call void @define_macro(i8* noundef %19, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.98.566, i64 0, i64 0))
  br label %20

20:                                               ; preds = %18, %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @parse_opt_x(i8* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %4 = load i8*, i8** %3, align 8
  %5 = call i32 @strcmp(i8* noundef %4, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.99.562, i64 0, i64 0)) #13
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  store i32 1, i32* %2, align 4
  br label %20

8:                                                ; preds = %1
  %9 = load i8*, i8** %3, align 8
  %10 = call i32 @strcmp(i8* noundef %9, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.100.563, i64 0, i64 0)) #13
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  store i32 2, i32* %2, align 4
  br label %20

13:                                               ; preds = %8
  %14 = load i8*, i8** %3, align 8
  %15 = call i32 @strcmp(i8* noundef %14, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101.564, i64 0, i64 0)) #13
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  store i32 0, i32* %2, align 4
  br label %20

18:                                               ; preds = %13
  %19 = load i8*, i8** %3, align 8
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.102.565, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.406, i64 0, i64 0), i8* noundef %19) #11
  unreachable

20:                                               ; preds = %17, %12, %7
  %21 = load i32, i32* %2, align 4
  ret i32 %21
}

; Function Attrs: nounwind
declare noalias i8* @strndup(i8* noundef, i64 noundef) #6

; Function Attrs: nounwind
declare i32 @unlink(i8* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.VarScope* @find_var(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.VarScope*, align 8
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Scope*, align 8
  %5 = alloca %struct.VarScope*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %6 = load %struct.Scope*, %struct.Scope** @scope, align 8
  store %struct.Scope* %6, %struct.Scope** %4, align 8
  br label %7

7:                                                ; preds = %26, %1
  %8 = load %struct.Scope*, %struct.Scope** %4, align 8
  %9 = icmp ne %struct.Scope* %8, null
  br i1 %9, label %10, label %30

10:                                               ; preds = %7
  %11 = load %struct.Scope*, %struct.Scope** %4, align 8
  %12 = getelementptr inbounds %struct.Scope, %struct.Scope* %11, i32 0, i32 1
  %13 = load %struct.Token*, %struct.Token** %3, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 4
  %15 = load i8*, i8** %14, align 16
  %16 = load %struct.Token*, %struct.Token** %3, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = call i8* @hashmap_get2(%struct.HashMap* noundef %12, i8* noundef %15, i32 noundef %18)
  %20 = bitcast i8* %19 to %struct.VarScope*
  store %struct.VarScope* %20, %struct.VarScope** %5, align 8
  %21 = load %struct.VarScope*, %struct.VarScope** %5, align 8
  %22 = icmp ne %struct.VarScope* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %10
  %24 = load %struct.VarScope*, %struct.VarScope** %5, align 8
  store %struct.VarScope* %24, %struct.VarScope** %2, align 8
  br label %31

25:                                               ; preds = %10
  br label %26

26:                                               ; preds = %25
  %27 = load %struct.Scope*, %struct.Scope** %4, align 8
  %28 = getelementptr inbounds %struct.Scope, %struct.Scope* %27, i32 0, i32 0
  %29 = load %struct.Scope*, %struct.Scope** %28, align 8
  store %struct.Scope* %29, %struct.Scope** %4, align 8
  br label %7, !llvm.loop !83

30:                                               ; preds = %7
  store %struct.VarScope* null, %struct.VarScope** %2, align 8
  br label %31

31:                                               ; preds = %30, %23
  %32 = load %struct.VarScope*, %struct.VarScope** %2, align 8
  ret %struct.VarScope* %32
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Node* @new_cast(%struct.Node* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  %6 = load %struct.Node*, %struct.Node** %3, align 8
  call void @add_type(%struct.Node* noundef %6)
  %7 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 320) #14
  %8 = bitcast i8* %7 to %struct.Node*
  store %struct.Node* %8, %struct.Node** %5, align 8
  %9 = load %struct.Node*, %struct.Node** %5, align 8
  %10 = icmp eq %struct.Node* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.576, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

12:                                               ; preds = %2
  %13 = load %struct.Node*, %struct.Node** %5, align 8
  %14 = getelementptr inbounds %struct.Node, %struct.Node* %13, i32 0, i32 0
  store i32 43, i32* %14, align 16
  %15 = load %struct.Node*, %struct.Node** %3, align 8
  %16 = getelementptr inbounds %struct.Node, %struct.Node* %15, i32 0, i32 3
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = load %struct.Node*, %struct.Node** %5, align 8
  %19 = getelementptr inbounds %struct.Node, %struct.Node* %18, i32 0, i32 3
  store %struct.Token* %17, %struct.Token** %19, align 8
  %20 = load %struct.Node*, %struct.Node** %3, align 8
  %21 = load %struct.Node*, %struct.Node** %5, align 8
  %22 = getelementptr inbounds %struct.Node, %struct.Node* %21, i32 0, i32 4
  store %struct.Node* %20, %struct.Node** %22, align 16
  %23 = load %struct.Type*, %struct.Type** %4, align 8
  %24 = call %struct.Type* @copy_type(%struct.Type* noundef %23)
  %25 = load %struct.Node*, %struct.Node** %5, align 8
  %26 = getelementptr inbounds %struct.Node, %struct.Node* %25, i32 0, i32 2
  store %struct.Type* %24, %struct.Type** %26, align 16
  %27 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %27
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @const_expr(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load %struct.Token**, %struct.Token*** %3, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @conditional(%struct.Token** noundef %6, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  %9 = load %struct.Node*, %struct.Node** %5, align 8
  %10 = call i64 @eval(%struct.Node* noundef %9)
  ret i64 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @conditional(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Obj*, align 8
  %8 = alloca %struct.Node*, align 8
  %9 = alloca %struct.Node*, align 8
  %10 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %11 = load %struct.Token*, %struct.Token** %5, align 8
  %12 = call %struct.Node* @logor(%struct.Token** noundef %5, %struct.Token* noundef %11)
  store %struct.Node* %12, %struct.Node** %6, align 8
  %13 = load %struct.Token*, %struct.Token** %5, align 8
  %14 = call zeroext i1 @equal(%struct.Token* noundef %13, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64.586, i64 0, i64 0))
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = load %struct.Token*, %struct.Token** %5, align 8
  %17 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %16, %struct.Token** %17, align 8
  %18 = load %struct.Node*, %struct.Node** %6, align 8
  store %struct.Node* %18, %struct.Node** %3, align 8
  br label %81

19:                                               ; preds = %2
  %20 = load %struct.Token*, %struct.Token** %5, align 8
  %21 = getelementptr inbounds %struct.Token, %struct.Token* %20, i32 0, i32 1
  %22 = load %struct.Token*, %struct.Token** %21, align 8
  %23 = call zeroext i1 @equal(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  br i1 %23, label %24, label %61

24:                                               ; preds = %19
  %25 = load %struct.Node*, %struct.Node** %6, align 8
  call void @add_type(%struct.Node* noundef %25)
  %26 = load %struct.Node*, %struct.Node** %6, align 8
  %27 = getelementptr inbounds %struct.Node, %struct.Node* %26, i32 0, i32 2
  %28 = load %struct.Type*, %struct.Type** %27, align 16
  %29 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %28, i8* noundef null)
  store %struct.Obj* %29, %struct.Obj** %7, align 8
  %30 = load %struct.Obj*, %struct.Obj** %7, align 8
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = call %struct.Node* @new_var_node(%struct.Obj* noundef %30, %struct.Token* noundef %31)
  %33 = load %struct.Node*, %struct.Node** %6, align 8
  %34 = load %struct.Token*, %struct.Token** %5, align 8
  %35 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %32, %struct.Node* noundef %33, %struct.Token* noundef %34)
  store %struct.Node* %35, %struct.Node** %8, align 8
  %36 = load %struct.Token*, %struct.Token** %5, align 8
  %37 = call %struct.Node* @new_node(i32 noundef 17, %struct.Token* noundef %36)
  store %struct.Node* %37, %struct.Node** %9, align 8
  %38 = load %struct.Obj*, %struct.Obj** %7, align 8
  %39 = load %struct.Token*, %struct.Token** %5, align 8
  %40 = call %struct.Node* @new_var_node(%struct.Obj* noundef %38, %struct.Token* noundef %39)
  %41 = load %struct.Node*, %struct.Node** %9, align 8
  %42 = getelementptr inbounds %struct.Node, %struct.Node* %41, i32 0, i32 6
  store %struct.Node* %40, %struct.Node** %42, align 16
  %43 = load %struct.Obj*, %struct.Obj** %7, align 8
  %44 = load %struct.Token*, %struct.Token** %5, align 8
  %45 = call %struct.Node* @new_var_node(%struct.Obj* noundef %43, %struct.Token* noundef %44)
  %46 = load %struct.Node*, %struct.Node** %9, align 8
  %47 = getelementptr inbounds %struct.Node, %struct.Node* %46, i32 0, i32 7
  store %struct.Node* %45, %struct.Node** %47, align 8
  %48 = load %struct.Token**, %struct.Token*** %4, align 8
  %49 = load %struct.Token*, %struct.Token** %5, align 8
  %50 = getelementptr inbounds %struct.Token, %struct.Token* %49, i32 0, i32 1
  %51 = load %struct.Token*, %struct.Token** %50, align 8
  %52 = getelementptr inbounds %struct.Token, %struct.Token* %51, i32 0, i32 1
  %53 = load %struct.Token*, %struct.Token** %52, align 8
  %54 = call %struct.Node* @conditional(%struct.Token** noundef %48, %struct.Token* noundef %53)
  %55 = load %struct.Node*, %struct.Node** %9, align 8
  %56 = getelementptr inbounds %struct.Node, %struct.Node* %55, i32 0, i32 8
  store %struct.Node* %54, %struct.Node** %56, align 16
  %57 = load %struct.Node*, %struct.Node** %8, align 8
  %58 = load %struct.Node*, %struct.Node** %9, align 8
  %59 = load %struct.Token*, %struct.Token** %5, align 8
  %60 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %57, %struct.Node* noundef %58, %struct.Token* noundef %59)
  store %struct.Node* %60, %struct.Node** %3, align 8
  br label %81

61:                                               ; preds = %19
  %62 = load %struct.Token*, %struct.Token** %5, align 8
  %63 = call %struct.Node* @new_node(i32 noundef 17, %struct.Token* noundef %62)
  store %struct.Node* %63, %struct.Node** %10, align 8
  %64 = load %struct.Node*, %struct.Node** %6, align 8
  %65 = load %struct.Node*, %struct.Node** %10, align 8
  %66 = getelementptr inbounds %struct.Node, %struct.Node* %65, i32 0, i32 6
  store %struct.Node* %64, %struct.Node** %66, align 16
  %67 = load %struct.Token*, %struct.Token** %5, align 8
  %68 = getelementptr inbounds %struct.Token, %struct.Token* %67, i32 0, i32 1
  %69 = load %struct.Token*, %struct.Token** %68, align 8
  %70 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %69)
  %71 = load %struct.Node*, %struct.Node** %10, align 8
  %72 = getelementptr inbounds %struct.Node, %struct.Node* %71, i32 0, i32 7
  store %struct.Node* %70, %struct.Node** %72, align 8
  %73 = load %struct.Token*, %struct.Token** %5, align 8
  %74 = call %struct.Token* @skip(%struct.Token* noundef %73, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  store %struct.Token* %74, %struct.Token** %5, align 8
  %75 = load %struct.Token**, %struct.Token*** %4, align 8
  %76 = load %struct.Token*, %struct.Token** %5, align 8
  %77 = call %struct.Node* @conditional(%struct.Token** noundef %75, %struct.Token* noundef %76)
  %78 = load %struct.Node*, %struct.Node** %10, align 8
  %79 = getelementptr inbounds %struct.Node, %struct.Node* %78, i32 0, i32 8
  store %struct.Node* %77, %struct.Node** %79, align 16
  %80 = load %struct.Node*, %struct.Node** %10, align 8
  store %struct.Node* %80, %struct.Node** %3, align 8
  br label %81

81:                                               ; preds = %61, %24, %15
  %82 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %82
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @eval(%struct.Node* noundef %0) #0 {
  %2 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %2, align 8
  %3 = load %struct.Node*, %struct.Node** %2, align 8
  %4 = call i64 @eval2(%struct.Node* noundef %3, i8*** noundef null)
  ret i64 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @eval2(%struct.Node* noundef %0, i8*** noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.Node*, align 8
  %5 = alloca i8***, align 8
  %6 = alloca i64, align 8
  store %struct.Node* %0, %struct.Node** %4, align 8
  store i8*** %1, i8**** %5, align 8
  %7 = load %struct.Node*, %struct.Node** %4, align 8
  call void @add_type(%struct.Node* noundef %7)
  %8 = load %struct.Node*, %struct.Node** %4, align 8
  %9 = getelementptr inbounds %struct.Node, %struct.Node* %8, i32 0, i32 2
  %10 = load %struct.Type*, %struct.Type** %9, align 16
  %11 = call zeroext i1 @is_flonum(%struct.Type* noundef %10)
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = load %struct.Node*, %struct.Node** %4, align 8
  %14 = call double @eval_double(%struct.Node* noundef %13)
  %15 = fptosi double %14 to i64
  store i64 %15, i64* %3, align 8
  br label %510

16:                                               ; preds = %2
  %17 = load %struct.Node*, %struct.Node** %4, align 8
  %18 = getelementptr inbounds %struct.Node, %struct.Node* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 16
  switch i32 %19, label %506 [
    i32 1, label %20
    i32 2, label %31
    i32 3, label %42
    i32 4, label %52
    i32 5, label %79
    i32 6, label %85
    i32 7, label %112
    i32 8, label %122
    i32 9, label %132
    i32 10, label %142
    i32 11, label %152
    i32 12, label %186
    i32 13, label %198
    i32 14, label %210
    i32 15, label %243
    i32 17, label %276
    i32 18, label %296
    i32 22, label %302
    i32 23, label %311
    i32 24, label %317
    i32 25, label %333
    i32 43, label %349
    i32 20, label %420
    i32 36, label %426
    i32 19, label %430
    i32 40, label %461
    i32 42, label %496
    i32 21, label %500
  ]

20:                                               ; preds = %16
  %21 = load %struct.Node*, %struct.Node** %4, align 8
  %22 = getelementptr inbounds %struct.Node, %struct.Node* %21, i32 0, i32 4
  %23 = load %struct.Node*, %struct.Node** %22, align 16
  %24 = load i8***, i8**** %5, align 8
  %25 = call i64 @eval2(%struct.Node* noundef %23, i8*** noundef %24)
  %26 = load %struct.Node*, %struct.Node** %4, align 8
  %27 = getelementptr inbounds %struct.Node, %struct.Node* %26, i32 0, i32 5
  %28 = load %struct.Node*, %struct.Node** %27, align 8
  %29 = call i64 @eval(%struct.Node* noundef %28)
  %30 = add nsw i64 %25, %29
  store i64 %30, i64* %3, align 8
  br label %510

31:                                               ; preds = %16
  %32 = load %struct.Node*, %struct.Node** %4, align 8
  %33 = getelementptr inbounds %struct.Node, %struct.Node* %32, i32 0, i32 4
  %34 = load %struct.Node*, %struct.Node** %33, align 16
  %35 = load i8***, i8**** %5, align 8
  %36 = call i64 @eval2(%struct.Node* noundef %34, i8*** noundef %35)
  %37 = load %struct.Node*, %struct.Node** %4, align 8
  %38 = getelementptr inbounds %struct.Node, %struct.Node* %37, i32 0, i32 5
  %39 = load %struct.Node*, %struct.Node** %38, align 8
  %40 = call i64 @eval(%struct.Node* noundef %39)
  %41 = sub nsw i64 %36, %40
  store i64 %41, i64* %3, align 8
  br label %510

42:                                               ; preds = %16
  %43 = load %struct.Node*, %struct.Node** %4, align 8
  %44 = getelementptr inbounds %struct.Node, %struct.Node* %43, i32 0, i32 4
  %45 = load %struct.Node*, %struct.Node** %44, align 16
  %46 = call i64 @eval(%struct.Node* noundef %45)
  %47 = load %struct.Node*, %struct.Node** %4, align 8
  %48 = getelementptr inbounds %struct.Node, %struct.Node* %47, i32 0, i32 5
  %49 = load %struct.Node*, %struct.Node** %48, align 8
  %50 = call i64 @eval(%struct.Node* noundef %49)
  %51 = mul nsw i64 %46, %50
  store i64 %51, i64* %3, align 8
  br label %510

52:                                               ; preds = %16
  %53 = load %struct.Node*, %struct.Node** %4, align 8
  %54 = getelementptr inbounds %struct.Node, %struct.Node* %53, i32 0, i32 2
  %55 = load %struct.Type*, %struct.Type** %54, align 16
  %56 = getelementptr inbounds %struct.Type, %struct.Type* %55, i32 0, i32 3
  %57 = load i8, i8* %56, align 4
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %69

59:                                               ; preds = %52
  %60 = load %struct.Node*, %struct.Node** %4, align 8
  %61 = getelementptr inbounds %struct.Node, %struct.Node* %60, i32 0, i32 4
  %62 = load %struct.Node*, %struct.Node** %61, align 16
  %63 = call i64 @eval(%struct.Node* noundef %62)
  %64 = load %struct.Node*, %struct.Node** %4, align 8
  %65 = getelementptr inbounds %struct.Node, %struct.Node* %64, i32 0, i32 5
  %66 = load %struct.Node*, %struct.Node** %65, align 8
  %67 = call i64 @eval(%struct.Node* noundef %66)
  %68 = udiv i64 %63, %67
  store i64 %68, i64* %3, align 8
  br label %510

69:                                               ; preds = %52
  %70 = load %struct.Node*, %struct.Node** %4, align 8
  %71 = getelementptr inbounds %struct.Node, %struct.Node* %70, i32 0, i32 4
  %72 = load %struct.Node*, %struct.Node** %71, align 16
  %73 = call i64 @eval(%struct.Node* noundef %72)
  %74 = load %struct.Node*, %struct.Node** %4, align 8
  %75 = getelementptr inbounds %struct.Node, %struct.Node* %74, i32 0, i32 5
  %76 = load %struct.Node*, %struct.Node** %75, align 8
  %77 = call i64 @eval(%struct.Node* noundef %76)
  %78 = sdiv i64 %73, %77
  store i64 %78, i64* %3, align 8
  br label %510

79:                                               ; preds = %16
  %80 = load %struct.Node*, %struct.Node** %4, align 8
  %81 = getelementptr inbounds %struct.Node, %struct.Node* %80, i32 0, i32 4
  %82 = load %struct.Node*, %struct.Node** %81, align 16
  %83 = call i64 @eval(%struct.Node* noundef %82)
  %84 = sub nsw i64 0, %83
  store i64 %84, i64* %3, align 8
  br label %510

85:                                               ; preds = %16
  %86 = load %struct.Node*, %struct.Node** %4, align 8
  %87 = getelementptr inbounds %struct.Node, %struct.Node* %86, i32 0, i32 2
  %88 = load %struct.Type*, %struct.Type** %87, align 16
  %89 = getelementptr inbounds %struct.Type, %struct.Type* %88, i32 0, i32 3
  %90 = load i8, i8* %89, align 4
  %91 = trunc i8 %90 to i1
  br i1 %91, label %92, label %102

92:                                               ; preds = %85
  %93 = load %struct.Node*, %struct.Node** %4, align 8
  %94 = getelementptr inbounds %struct.Node, %struct.Node* %93, i32 0, i32 4
  %95 = load %struct.Node*, %struct.Node** %94, align 16
  %96 = call i64 @eval(%struct.Node* noundef %95)
  %97 = load %struct.Node*, %struct.Node** %4, align 8
  %98 = getelementptr inbounds %struct.Node, %struct.Node* %97, i32 0, i32 5
  %99 = load %struct.Node*, %struct.Node** %98, align 8
  %100 = call i64 @eval(%struct.Node* noundef %99)
  %101 = urem i64 %96, %100
  store i64 %101, i64* %3, align 8
  br label %510

102:                                              ; preds = %85
  %103 = load %struct.Node*, %struct.Node** %4, align 8
  %104 = getelementptr inbounds %struct.Node, %struct.Node* %103, i32 0, i32 4
  %105 = load %struct.Node*, %struct.Node** %104, align 16
  %106 = call i64 @eval(%struct.Node* noundef %105)
  %107 = load %struct.Node*, %struct.Node** %4, align 8
  %108 = getelementptr inbounds %struct.Node, %struct.Node* %107, i32 0, i32 5
  %109 = load %struct.Node*, %struct.Node** %108, align 8
  %110 = call i64 @eval(%struct.Node* noundef %109)
  %111 = srem i64 %106, %110
  store i64 %111, i64* %3, align 8
  br label %510

112:                                              ; preds = %16
  %113 = load %struct.Node*, %struct.Node** %4, align 8
  %114 = getelementptr inbounds %struct.Node, %struct.Node* %113, i32 0, i32 4
  %115 = load %struct.Node*, %struct.Node** %114, align 16
  %116 = call i64 @eval(%struct.Node* noundef %115)
  %117 = load %struct.Node*, %struct.Node** %4, align 8
  %118 = getelementptr inbounds %struct.Node, %struct.Node* %117, i32 0, i32 5
  %119 = load %struct.Node*, %struct.Node** %118, align 8
  %120 = call i64 @eval(%struct.Node* noundef %119)
  %121 = and i64 %116, %120
  store i64 %121, i64* %3, align 8
  br label %510

122:                                              ; preds = %16
  %123 = load %struct.Node*, %struct.Node** %4, align 8
  %124 = getelementptr inbounds %struct.Node, %struct.Node* %123, i32 0, i32 4
  %125 = load %struct.Node*, %struct.Node** %124, align 16
  %126 = call i64 @eval(%struct.Node* noundef %125)
  %127 = load %struct.Node*, %struct.Node** %4, align 8
  %128 = getelementptr inbounds %struct.Node, %struct.Node* %127, i32 0, i32 5
  %129 = load %struct.Node*, %struct.Node** %128, align 8
  %130 = call i64 @eval(%struct.Node* noundef %129)
  %131 = or i64 %126, %130
  store i64 %131, i64* %3, align 8
  br label %510

132:                                              ; preds = %16
  %133 = load %struct.Node*, %struct.Node** %4, align 8
  %134 = getelementptr inbounds %struct.Node, %struct.Node* %133, i32 0, i32 4
  %135 = load %struct.Node*, %struct.Node** %134, align 16
  %136 = call i64 @eval(%struct.Node* noundef %135)
  %137 = load %struct.Node*, %struct.Node** %4, align 8
  %138 = getelementptr inbounds %struct.Node, %struct.Node* %137, i32 0, i32 5
  %139 = load %struct.Node*, %struct.Node** %138, align 8
  %140 = call i64 @eval(%struct.Node* noundef %139)
  %141 = xor i64 %136, %140
  store i64 %141, i64* %3, align 8
  br label %510

142:                                              ; preds = %16
  %143 = load %struct.Node*, %struct.Node** %4, align 8
  %144 = getelementptr inbounds %struct.Node, %struct.Node* %143, i32 0, i32 4
  %145 = load %struct.Node*, %struct.Node** %144, align 16
  %146 = call i64 @eval(%struct.Node* noundef %145)
  %147 = load %struct.Node*, %struct.Node** %4, align 8
  %148 = getelementptr inbounds %struct.Node, %struct.Node* %147, i32 0, i32 5
  %149 = load %struct.Node*, %struct.Node** %148, align 8
  %150 = call i64 @eval(%struct.Node* noundef %149)
  %151 = shl i64 %146, %150
  store i64 %151, i64* %3, align 8
  br label %510

152:                                              ; preds = %16
  %153 = load %struct.Node*, %struct.Node** %4, align 8
  %154 = getelementptr inbounds %struct.Node, %struct.Node* %153, i32 0, i32 2
  %155 = load %struct.Type*, %struct.Type** %154, align 16
  %156 = getelementptr inbounds %struct.Type, %struct.Type* %155, i32 0, i32 3
  %157 = load i8, i8* %156, align 4
  %158 = trunc i8 %157 to i1
  br i1 %158, label %159, label %176

159:                                              ; preds = %152
  %160 = load %struct.Node*, %struct.Node** %4, align 8
  %161 = getelementptr inbounds %struct.Node, %struct.Node* %160, i32 0, i32 2
  %162 = load %struct.Type*, %struct.Type** %161, align 16
  %163 = getelementptr inbounds %struct.Type, %struct.Type* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 8
  br i1 %165, label %166, label %176

166:                                              ; preds = %159
  %167 = load %struct.Node*, %struct.Node** %4, align 8
  %168 = getelementptr inbounds %struct.Node, %struct.Node* %167, i32 0, i32 4
  %169 = load %struct.Node*, %struct.Node** %168, align 16
  %170 = call i64 @eval(%struct.Node* noundef %169)
  %171 = load %struct.Node*, %struct.Node** %4, align 8
  %172 = getelementptr inbounds %struct.Node, %struct.Node* %171, i32 0, i32 5
  %173 = load %struct.Node*, %struct.Node** %172, align 8
  %174 = call i64 @eval(%struct.Node* noundef %173)
  %175 = lshr i64 %170, %174
  store i64 %175, i64* %3, align 8
  br label %510

176:                                              ; preds = %159, %152
  %177 = load %struct.Node*, %struct.Node** %4, align 8
  %178 = getelementptr inbounds %struct.Node, %struct.Node* %177, i32 0, i32 4
  %179 = load %struct.Node*, %struct.Node** %178, align 16
  %180 = call i64 @eval(%struct.Node* noundef %179)
  %181 = load %struct.Node*, %struct.Node** %4, align 8
  %182 = getelementptr inbounds %struct.Node, %struct.Node* %181, i32 0, i32 5
  %183 = load %struct.Node*, %struct.Node** %182, align 8
  %184 = call i64 @eval(%struct.Node* noundef %183)
  %185 = ashr i64 %180, %184
  store i64 %185, i64* %3, align 8
  br label %510

186:                                              ; preds = %16
  %187 = load %struct.Node*, %struct.Node** %4, align 8
  %188 = getelementptr inbounds %struct.Node, %struct.Node* %187, i32 0, i32 4
  %189 = load %struct.Node*, %struct.Node** %188, align 16
  %190 = call i64 @eval(%struct.Node* noundef %189)
  %191 = load %struct.Node*, %struct.Node** %4, align 8
  %192 = getelementptr inbounds %struct.Node, %struct.Node* %191, i32 0, i32 5
  %193 = load %struct.Node*, %struct.Node** %192, align 8
  %194 = call i64 @eval(%struct.Node* noundef %193)
  %195 = icmp eq i64 %190, %194
  %196 = zext i1 %195 to i32
  %197 = sext i32 %196 to i64
  store i64 %197, i64* %3, align 8
  br label %510

198:                                              ; preds = %16
  %199 = load %struct.Node*, %struct.Node** %4, align 8
  %200 = getelementptr inbounds %struct.Node, %struct.Node* %199, i32 0, i32 4
  %201 = load %struct.Node*, %struct.Node** %200, align 16
  %202 = call i64 @eval(%struct.Node* noundef %201)
  %203 = load %struct.Node*, %struct.Node** %4, align 8
  %204 = getelementptr inbounds %struct.Node, %struct.Node* %203, i32 0, i32 5
  %205 = load %struct.Node*, %struct.Node** %204, align 8
  %206 = call i64 @eval(%struct.Node* noundef %205)
  %207 = icmp ne i64 %202, %206
  %208 = zext i1 %207 to i32
  %209 = sext i32 %208 to i64
  store i64 %209, i64* %3, align 8
  br label %510

210:                                              ; preds = %16
  %211 = load %struct.Node*, %struct.Node** %4, align 8
  %212 = getelementptr inbounds %struct.Node, %struct.Node* %211, i32 0, i32 4
  %213 = load %struct.Node*, %struct.Node** %212, align 16
  %214 = getelementptr inbounds %struct.Node, %struct.Node* %213, i32 0, i32 2
  %215 = load %struct.Type*, %struct.Type** %214, align 16
  %216 = getelementptr inbounds %struct.Type, %struct.Type* %215, i32 0, i32 3
  %217 = load i8, i8* %216, align 4
  %218 = trunc i8 %217 to i1
  br i1 %218, label %219, label %231

219:                                              ; preds = %210
  %220 = load %struct.Node*, %struct.Node** %4, align 8
  %221 = getelementptr inbounds %struct.Node, %struct.Node* %220, i32 0, i32 4
  %222 = load %struct.Node*, %struct.Node** %221, align 16
  %223 = call i64 @eval(%struct.Node* noundef %222)
  %224 = load %struct.Node*, %struct.Node** %4, align 8
  %225 = getelementptr inbounds %struct.Node, %struct.Node* %224, i32 0, i32 5
  %226 = load %struct.Node*, %struct.Node** %225, align 8
  %227 = call i64 @eval(%struct.Node* noundef %226)
  %228 = icmp ult i64 %223, %227
  %229 = zext i1 %228 to i32
  %230 = sext i32 %229 to i64
  store i64 %230, i64* %3, align 8
  br label %510

231:                                              ; preds = %210
  %232 = load %struct.Node*, %struct.Node** %4, align 8
  %233 = getelementptr inbounds %struct.Node, %struct.Node* %232, i32 0, i32 4
  %234 = load %struct.Node*, %struct.Node** %233, align 16
  %235 = call i64 @eval(%struct.Node* noundef %234)
  %236 = load %struct.Node*, %struct.Node** %4, align 8
  %237 = getelementptr inbounds %struct.Node, %struct.Node* %236, i32 0, i32 5
  %238 = load %struct.Node*, %struct.Node** %237, align 8
  %239 = call i64 @eval(%struct.Node* noundef %238)
  %240 = icmp slt i64 %235, %239
  %241 = zext i1 %240 to i32
  %242 = sext i32 %241 to i64
  store i64 %242, i64* %3, align 8
  br label %510

243:                                              ; preds = %16
  %244 = load %struct.Node*, %struct.Node** %4, align 8
  %245 = getelementptr inbounds %struct.Node, %struct.Node* %244, i32 0, i32 4
  %246 = load %struct.Node*, %struct.Node** %245, align 16
  %247 = getelementptr inbounds %struct.Node, %struct.Node* %246, i32 0, i32 2
  %248 = load %struct.Type*, %struct.Type** %247, align 16
  %249 = getelementptr inbounds %struct.Type, %struct.Type* %248, i32 0, i32 3
  %250 = load i8, i8* %249, align 4
  %251 = trunc i8 %250 to i1
  br i1 %251, label %252, label %264

252:                                              ; preds = %243
  %253 = load %struct.Node*, %struct.Node** %4, align 8
  %254 = getelementptr inbounds %struct.Node, %struct.Node* %253, i32 0, i32 4
  %255 = load %struct.Node*, %struct.Node** %254, align 16
  %256 = call i64 @eval(%struct.Node* noundef %255)
  %257 = load %struct.Node*, %struct.Node** %4, align 8
  %258 = getelementptr inbounds %struct.Node, %struct.Node* %257, i32 0, i32 5
  %259 = load %struct.Node*, %struct.Node** %258, align 8
  %260 = call i64 @eval(%struct.Node* noundef %259)
  %261 = icmp ule i64 %256, %260
  %262 = zext i1 %261 to i32
  %263 = sext i32 %262 to i64
  store i64 %263, i64* %3, align 8
  br label %510

264:                                              ; preds = %243
  %265 = load %struct.Node*, %struct.Node** %4, align 8
  %266 = getelementptr inbounds %struct.Node, %struct.Node* %265, i32 0, i32 4
  %267 = load %struct.Node*, %struct.Node** %266, align 16
  %268 = call i64 @eval(%struct.Node* noundef %267)
  %269 = load %struct.Node*, %struct.Node** %4, align 8
  %270 = getelementptr inbounds %struct.Node, %struct.Node* %269, i32 0, i32 5
  %271 = load %struct.Node*, %struct.Node** %270, align 8
  %272 = call i64 @eval(%struct.Node* noundef %271)
  %273 = icmp sle i64 %268, %272
  %274 = zext i1 %273 to i32
  %275 = sext i32 %274 to i64
  store i64 %275, i64* %3, align 8
  br label %510

276:                                              ; preds = %16
  %277 = load %struct.Node*, %struct.Node** %4, align 8
  %278 = getelementptr inbounds %struct.Node, %struct.Node* %277, i32 0, i32 6
  %279 = load %struct.Node*, %struct.Node** %278, align 16
  %280 = call i64 @eval(%struct.Node* noundef %279)
  %281 = icmp ne i64 %280, 0
  br i1 %281, label %282, label %288

282:                                              ; preds = %276
  %283 = load %struct.Node*, %struct.Node** %4, align 8
  %284 = getelementptr inbounds %struct.Node, %struct.Node* %283, i32 0, i32 7
  %285 = load %struct.Node*, %struct.Node** %284, align 8
  %286 = load i8***, i8**** %5, align 8
  %287 = call i64 @eval2(%struct.Node* noundef %285, i8*** noundef %286)
  br label %294

288:                                              ; preds = %276
  %289 = load %struct.Node*, %struct.Node** %4, align 8
  %290 = getelementptr inbounds %struct.Node, %struct.Node* %289, i32 0, i32 8
  %291 = load %struct.Node*, %struct.Node** %290, align 16
  %292 = load i8***, i8**** %5, align 8
  %293 = call i64 @eval2(%struct.Node* noundef %291, i8*** noundef %292)
  br label %294

294:                                              ; preds = %288, %282
  %295 = phi i64 [ %287, %282 ], [ %293, %288 ]
  store i64 %295, i64* %3, align 8
  br label %510

296:                                              ; preds = %16
  %297 = load %struct.Node*, %struct.Node** %4, align 8
  %298 = getelementptr inbounds %struct.Node, %struct.Node* %297, i32 0, i32 5
  %299 = load %struct.Node*, %struct.Node** %298, align 8
  %300 = load i8***, i8**** %5, align 8
  %301 = call i64 @eval2(%struct.Node* noundef %299, i8*** noundef %300)
  store i64 %301, i64* %3, align 8
  br label %510

302:                                              ; preds = %16
  %303 = load %struct.Node*, %struct.Node** %4, align 8
  %304 = getelementptr inbounds %struct.Node, %struct.Node* %303, i32 0, i32 4
  %305 = load %struct.Node*, %struct.Node** %304, align 16
  %306 = call i64 @eval(%struct.Node* noundef %305)
  %307 = icmp ne i64 %306, 0
  %308 = xor i1 %307, true
  %309 = zext i1 %308 to i32
  %310 = sext i32 %309 to i64
  store i64 %310, i64* %3, align 8
  br label %510

311:                                              ; preds = %16
  %312 = load %struct.Node*, %struct.Node** %4, align 8
  %313 = getelementptr inbounds %struct.Node, %struct.Node* %312, i32 0, i32 4
  %314 = load %struct.Node*, %struct.Node** %313, align 16
  %315 = call i64 @eval(%struct.Node* noundef %314)
  %316 = xor i64 %315, -1
  store i64 %316, i64* %3, align 8
  br label %510

317:                                              ; preds = %16
  %318 = load %struct.Node*, %struct.Node** %4, align 8
  %319 = getelementptr inbounds %struct.Node, %struct.Node* %318, i32 0, i32 4
  %320 = load %struct.Node*, %struct.Node** %319, align 16
  %321 = call i64 @eval(%struct.Node* noundef %320)
  %322 = icmp ne i64 %321, 0
  br i1 %322, label %323, label %329

323:                                              ; preds = %317
  %324 = load %struct.Node*, %struct.Node** %4, align 8
  %325 = getelementptr inbounds %struct.Node, %struct.Node* %324, i32 0, i32 5
  %326 = load %struct.Node*, %struct.Node** %325, align 8
  %327 = call i64 @eval(%struct.Node* noundef %326)
  %328 = icmp ne i64 %327, 0
  br label %329

329:                                              ; preds = %323, %317
  %330 = phi i1 [ false, %317 ], [ %328, %323 ]
  %331 = zext i1 %330 to i32
  %332 = sext i32 %331 to i64
  store i64 %332, i64* %3, align 8
  br label %510

333:                                              ; preds = %16
  %334 = load %struct.Node*, %struct.Node** %4, align 8
  %335 = getelementptr inbounds %struct.Node, %struct.Node* %334, i32 0, i32 4
  %336 = load %struct.Node*, %struct.Node** %335, align 16
  %337 = call i64 @eval(%struct.Node* noundef %336)
  %338 = icmp ne i64 %337, 0
  br i1 %338, label %345, label %339

339:                                              ; preds = %333
  %340 = load %struct.Node*, %struct.Node** %4, align 8
  %341 = getelementptr inbounds %struct.Node, %struct.Node* %340, i32 0, i32 5
  %342 = load %struct.Node*, %struct.Node** %341, align 8
  %343 = call i64 @eval(%struct.Node* noundef %342)
  %344 = icmp ne i64 %343, 0
  br label %345

345:                                              ; preds = %339, %333
  %346 = phi i1 [ true, %333 ], [ %344, %339 ]
  %347 = zext i1 %346 to i32
  %348 = sext i32 %347 to i64
  store i64 %348, i64* %3, align 8
  br label %510

349:                                              ; preds = %16
  %350 = load %struct.Node*, %struct.Node** %4, align 8
  %351 = getelementptr inbounds %struct.Node, %struct.Node* %350, i32 0, i32 4
  %352 = load %struct.Node*, %struct.Node** %351, align 16
  %353 = load i8***, i8**** %5, align 8
  %354 = call i64 @eval2(%struct.Node* noundef %352, i8*** noundef %353)
  store i64 %354, i64* %6, align 8
  %355 = load %struct.Node*, %struct.Node** %4, align 8
  %356 = getelementptr inbounds %struct.Node, %struct.Node* %355, i32 0, i32 2
  %357 = load %struct.Type*, %struct.Type** %356, align 16
  %358 = call zeroext i1 @is_integer(%struct.Type* noundef %357)
  br i1 %358, label %359, label %418

359:                                              ; preds = %349
  %360 = load %struct.Node*, %struct.Node** %4, align 8
  %361 = getelementptr inbounds %struct.Node, %struct.Node* %360, i32 0, i32 2
  %362 = load %struct.Type*, %struct.Type** %361, align 16
  %363 = getelementptr inbounds %struct.Type, %struct.Type* %362, i32 0, i32 1
  %364 = load i32, i32* %363, align 4
  switch i32 %364, label %417 [
    i32 1, label %365
    i32 2, label %383
    i32 4, label %401
  ]

365:                                              ; preds = %359
  %366 = load %struct.Node*, %struct.Node** %4, align 8
  %367 = getelementptr inbounds %struct.Node, %struct.Node* %366, i32 0, i32 2
  %368 = load %struct.Type*, %struct.Type** %367, align 16
  %369 = getelementptr inbounds %struct.Type, %struct.Type* %368, i32 0, i32 3
  %370 = load i8, i8* %369, align 4
  %371 = trunc i8 %370 to i1
  br i1 %371, label %372, label %376

372:                                              ; preds = %365
  %373 = load i64, i64* %6, align 8
  %374 = trunc i64 %373 to i8
  %375 = zext i8 %374 to i32
  br label %380

376:                                              ; preds = %365
  %377 = load i64, i64* %6, align 8
  %378 = trunc i64 %377 to i8
  %379 = sext i8 %378 to i32
  br label %380

380:                                              ; preds = %376, %372
  %381 = phi i32 [ %375, %372 ], [ %379, %376 ]
  %382 = sext i32 %381 to i64
  store i64 %382, i64* %3, align 8
  br label %510

383:                                              ; preds = %359
  %384 = load %struct.Node*, %struct.Node** %4, align 8
  %385 = getelementptr inbounds %struct.Node, %struct.Node* %384, i32 0, i32 2
  %386 = load %struct.Type*, %struct.Type** %385, align 16
  %387 = getelementptr inbounds %struct.Type, %struct.Type* %386, i32 0, i32 3
  %388 = load i8, i8* %387, align 4
  %389 = trunc i8 %388 to i1
  br i1 %389, label %390, label %394

390:                                              ; preds = %383
  %391 = load i64, i64* %6, align 8
  %392 = trunc i64 %391 to i16
  %393 = zext i16 %392 to i32
  br label %398

394:                                              ; preds = %383
  %395 = load i64, i64* %6, align 8
  %396 = trunc i64 %395 to i16
  %397 = sext i16 %396 to i32
  br label %398

398:                                              ; preds = %394, %390
  %399 = phi i32 [ %393, %390 ], [ %397, %394 ]
  %400 = sext i32 %399 to i64
  store i64 %400, i64* %3, align 8
  br label %510

401:                                              ; preds = %359
  %402 = load %struct.Node*, %struct.Node** %4, align 8
  %403 = getelementptr inbounds %struct.Node, %struct.Node* %402, i32 0, i32 2
  %404 = load %struct.Type*, %struct.Type** %403, align 16
  %405 = getelementptr inbounds %struct.Type, %struct.Type* %404, i32 0, i32 3
  %406 = load i8, i8* %405, align 4
  %407 = trunc i8 %406 to i1
  br i1 %407, label %408, label %411

408:                                              ; preds = %401
  %409 = load i64, i64* %6, align 8
  %410 = trunc i64 %409 to i32
  br label %414

411:                                              ; preds = %401
  %412 = load i64, i64* %6, align 8
  %413 = trunc i64 %412 to i32
  br label %414

414:                                              ; preds = %411, %408
  %415 = phi i32 [ %410, %408 ], [ %413, %411 ]
  %416 = zext i32 %415 to i64
  store i64 %416, i64* %3, align 8
  br label %510

417:                                              ; preds = %359
  br label %418

418:                                              ; preds = %417, %349
  %419 = load i64, i64* %6, align 8
  store i64 %419, i64* %3, align 8
  br label %510

420:                                              ; preds = %16
  %421 = load %struct.Node*, %struct.Node** %4, align 8
  %422 = getelementptr inbounds %struct.Node, %struct.Node* %421, i32 0, i32 4
  %423 = load %struct.Node*, %struct.Node** %422, align 16
  %424 = load i8***, i8**** %5, align 8
  %425 = call i64 @eval_rval(%struct.Node* noundef %423, i8*** noundef %424)
  store i64 %425, i64* %3, align 8
  br label %510

426:                                              ; preds = %16
  %427 = load %struct.Node*, %struct.Node** %4, align 8
  %428 = getelementptr inbounds %struct.Node, %struct.Node* %427, i32 0, i32 20
  %429 = load i8***, i8**** %5, align 8
  store i8** %428, i8*** %429, align 8
  store i64 0, i64* %3, align 8
  br label %510

430:                                              ; preds = %16
  %431 = load i8***, i8**** %5, align 8
  %432 = icmp ne i8*** %431, null
  br i1 %432, label %437, label %433

433:                                              ; preds = %430
  %434 = load %struct.Node*, %struct.Node** %4, align 8
  %435 = getelementptr inbounds %struct.Node, %struct.Node* %434, i32 0, i32 3
  %436 = load %struct.Token*, %struct.Token** %435, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %436, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.56.578, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

437:                                              ; preds = %430
  %438 = load %struct.Node*, %struct.Node** %4, align 8
  %439 = getelementptr inbounds %struct.Node, %struct.Node* %438, i32 0, i32 2
  %440 = load %struct.Type*, %struct.Type** %439, align 16
  %441 = getelementptr inbounds %struct.Type, %struct.Type* %440, i32 0, i32 0
  %442 = load i32, i32* %441, align 8
  %443 = icmp ne i32 %442, 12
  br i1 %443, label %444, label %448

444:                                              ; preds = %437
  %445 = load %struct.Node*, %struct.Node** %4, align 8
  %446 = getelementptr inbounds %struct.Node, %struct.Node* %445, i32 0, i32 3
  %447 = load %struct.Token*, %struct.Token** %446, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %447, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57.579, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

448:                                              ; preds = %437
  %449 = load %struct.Node*, %struct.Node** %4, align 8
  %450 = getelementptr inbounds %struct.Node, %struct.Node* %449, i32 0, i32 4
  %451 = load %struct.Node*, %struct.Node** %450, align 16
  %452 = load i8***, i8**** %5, align 8
  %453 = call i64 @eval_rval(%struct.Node* noundef %451, i8*** noundef %452)
  %454 = load %struct.Node*, %struct.Node** %4, align 8
  %455 = getelementptr inbounds %struct.Node, %struct.Node* %454, i32 0, i32 14
  %456 = load %struct.Member*, %struct.Member** %455, align 16
  %457 = getelementptr inbounds %struct.Member, %struct.Member* %456, i32 0, i32 6
  %458 = load i32, i32* %457, align 8
  %459 = sext i32 %458 to i64
  %460 = add nsw i64 %453, %459
  store i64 %460, i64* %3, align 8
  br label %510

461:                                              ; preds = %16
  %462 = load i8***, i8**** %5, align 8
  %463 = icmp ne i8*** %462, null
  br i1 %463, label %468, label %464

464:                                              ; preds = %461
  %465 = load %struct.Node*, %struct.Node** %4, align 8
  %466 = getelementptr inbounds %struct.Node, %struct.Node* %465, i32 0, i32 3
  %467 = load %struct.Token*, %struct.Token** %466, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %467, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58.580, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

468:                                              ; preds = %461
  %469 = load %struct.Node*, %struct.Node** %4, align 8
  %470 = getelementptr inbounds %struct.Node, %struct.Node* %469, i32 0, i32 33
  %471 = load %struct.Obj*, %struct.Obj** %470, align 8
  %472 = getelementptr inbounds %struct.Obj, %struct.Obj* %471, i32 0, i32 3
  %473 = load %struct.Type*, %struct.Type** %472, align 8
  %474 = getelementptr inbounds %struct.Type, %struct.Type* %473, i32 0, i32 0
  %475 = load i32, i32* %474, align 8
  %476 = icmp ne i32 %475, 12
  br i1 %476, label %477, label %490

477:                                              ; preds = %468
  %478 = load %struct.Node*, %struct.Node** %4, align 8
  %479 = getelementptr inbounds %struct.Node, %struct.Node* %478, i32 0, i32 33
  %480 = load %struct.Obj*, %struct.Obj** %479, align 8
  %481 = getelementptr inbounds %struct.Obj, %struct.Obj* %480, i32 0, i32 3
  %482 = load %struct.Type*, %struct.Type** %481, align 8
  %483 = getelementptr inbounds %struct.Type, %struct.Type* %482, i32 0, i32 0
  %484 = load i32, i32* %483, align 8
  %485 = icmp ne i32 %484, 11
  br i1 %485, label %486, label %490

486:                                              ; preds = %477
  %487 = load %struct.Node*, %struct.Node** %4, align 8
  %488 = getelementptr inbounds %struct.Node, %struct.Node* %487, i32 0, i32 3
  %489 = load %struct.Token*, %struct.Token** %488, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %489, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.59.581, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

490:                                              ; preds = %477, %468
  %491 = load %struct.Node*, %struct.Node** %4, align 8
  %492 = getelementptr inbounds %struct.Node, %struct.Node* %491, i32 0, i32 33
  %493 = load %struct.Obj*, %struct.Obj** %492, align 8
  %494 = getelementptr inbounds %struct.Obj, %struct.Obj* %493, i32 0, i32 1
  %495 = load i8***, i8**** %5, align 8
  store i8** %494, i8*** %495, align 8
  store i64 0, i64* %3, align 8
  br label %510

496:                                              ; preds = %16
  %497 = load %struct.Node*, %struct.Node** %4, align 8
  %498 = getelementptr inbounds %struct.Node, %struct.Node* %497, i32 0, i32 34
  %499 = load i64, i64* %498, align 16
  store i64 %499, i64* %3, align 8
  br label %510

500:                                              ; preds = %16
  %501 = load %struct.Node*, %struct.Node** %4, align 8
  %502 = getelementptr inbounds %struct.Node, %struct.Node* %501, i32 0, i32 4
  %503 = load %struct.Node*, %struct.Node** %502, align 16
  %504 = load i8***, i8**** %5, align 8
  %505 = call i64 @eval2(%struct.Node* noundef %503, i8*** noundef %504)
  store i64 %505, i64* %3, align 8
  br label %510

506:                                              ; preds = %16
  %507 = load %struct.Node*, %struct.Node** %4, align 8
  %508 = getelementptr inbounds %struct.Node, %struct.Node* %507, i32 0, i32 3
  %509 = load %struct.Token*, %struct.Token** %508, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %509, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.60.582, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

510:                                              ; preds = %500, %496, %490, %448, %426, %420, %418, %414, %398, %380, %345, %329, %311, %302, %296, %294, %264, %252, %231, %219, %198, %186, %176, %166, %142, %132, %122, %112, %102, %92, %79, %69, %59, %42, %31, %20, %12
  %511 = load i64, i64* %3, align 8
  ret i64 %511
}

; Function Attrs: noinline nounwind optnone uwtable
define internal double @eval_double(%struct.Node* noundef %0) #0 {
  %2 = alloca double, align 8
  %3 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %3, align 8
  %4 = load %struct.Node*, %struct.Node** %3, align 8
  call void @add_type(%struct.Node* noundef %4)
  %5 = load %struct.Node*, %struct.Node** %3, align 8
  %6 = getelementptr inbounds %struct.Node, %struct.Node* %5, i32 0, i32 2
  %7 = load %struct.Type*, %struct.Type** %6, align 16
  %8 = call zeroext i1 @is_integer(%struct.Type* noundef %7)
  br i1 %8, label %9, label %24

9:                                                ; preds = %1
  %10 = load %struct.Node*, %struct.Node** %3, align 8
  %11 = getelementptr inbounds %struct.Node, %struct.Node* %10, i32 0, i32 2
  %12 = load %struct.Type*, %struct.Type** %11, align 16
  %13 = getelementptr inbounds %struct.Type, %struct.Type* %12, i32 0, i32 3
  %14 = load i8, i8* %13, align 4
  %15 = trunc i8 %14 to i1
  br i1 %15, label %16, label %20

16:                                               ; preds = %9
  %17 = load %struct.Node*, %struct.Node** %3, align 8
  %18 = call i64 @eval(%struct.Node* noundef %17)
  %19 = uitofp i64 %18 to double
  store double %19, double* %2, align 8
  br label %124

20:                                               ; preds = %9
  %21 = load %struct.Node*, %struct.Node** %3, align 8
  %22 = call i64 @eval(%struct.Node* noundef %21)
  %23 = sitofp i64 %22 to double
  store double %23, double* %2, align 8
  br label %124

24:                                               ; preds = %1
  %25 = load %struct.Node*, %struct.Node** %3, align 8
  %26 = getelementptr inbounds %struct.Node, %struct.Node* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 16
  switch i32 %27, label %120 [
    i32 1, label %28
    i32 2, label %38
    i32 3, label %48
    i32 4, label %58
    i32 5, label %68
    i32 17, label %74
    i32 18, label %92
    i32 43, label %97
    i32 42, label %115
  ]

28:                                               ; preds = %24
  %29 = load %struct.Node*, %struct.Node** %3, align 8
  %30 = getelementptr inbounds %struct.Node, %struct.Node* %29, i32 0, i32 4
  %31 = load %struct.Node*, %struct.Node** %30, align 16
  %32 = call double @eval_double(%struct.Node* noundef %31)
  %33 = load %struct.Node*, %struct.Node** %3, align 8
  %34 = getelementptr inbounds %struct.Node, %struct.Node* %33, i32 0, i32 5
  %35 = load %struct.Node*, %struct.Node** %34, align 8
  %36 = call double @eval_double(%struct.Node* noundef %35)
  %37 = fadd double %32, %36
  store double %37, double* %2, align 8
  br label %124

38:                                               ; preds = %24
  %39 = load %struct.Node*, %struct.Node** %3, align 8
  %40 = getelementptr inbounds %struct.Node, %struct.Node* %39, i32 0, i32 4
  %41 = load %struct.Node*, %struct.Node** %40, align 16
  %42 = call double @eval_double(%struct.Node* noundef %41)
  %43 = load %struct.Node*, %struct.Node** %3, align 8
  %44 = getelementptr inbounds %struct.Node, %struct.Node* %43, i32 0, i32 5
  %45 = load %struct.Node*, %struct.Node** %44, align 8
  %46 = call double @eval_double(%struct.Node* noundef %45)
  %47 = fsub double %42, %46
  store double %47, double* %2, align 8
  br label %124

48:                                               ; preds = %24
  %49 = load %struct.Node*, %struct.Node** %3, align 8
  %50 = getelementptr inbounds %struct.Node, %struct.Node* %49, i32 0, i32 4
  %51 = load %struct.Node*, %struct.Node** %50, align 16
  %52 = call double @eval_double(%struct.Node* noundef %51)
  %53 = load %struct.Node*, %struct.Node** %3, align 8
  %54 = getelementptr inbounds %struct.Node, %struct.Node* %53, i32 0, i32 5
  %55 = load %struct.Node*, %struct.Node** %54, align 8
  %56 = call double @eval_double(%struct.Node* noundef %55)
  %57 = fmul double %52, %56
  store double %57, double* %2, align 8
  br label %124

58:                                               ; preds = %24
  %59 = load %struct.Node*, %struct.Node** %3, align 8
  %60 = getelementptr inbounds %struct.Node, %struct.Node* %59, i32 0, i32 4
  %61 = load %struct.Node*, %struct.Node** %60, align 16
  %62 = call double @eval_double(%struct.Node* noundef %61)
  %63 = load %struct.Node*, %struct.Node** %3, align 8
  %64 = getelementptr inbounds %struct.Node, %struct.Node* %63, i32 0, i32 5
  %65 = load %struct.Node*, %struct.Node** %64, align 8
  %66 = call double @eval_double(%struct.Node* noundef %65)
  %67 = fdiv double %62, %66
  store double %67, double* %2, align 8
  br label %124

68:                                               ; preds = %24
  %69 = load %struct.Node*, %struct.Node** %3, align 8
  %70 = getelementptr inbounds %struct.Node, %struct.Node* %69, i32 0, i32 4
  %71 = load %struct.Node*, %struct.Node** %70, align 16
  %72 = call double @eval_double(%struct.Node* noundef %71)
  %73 = fneg double %72
  store double %73, double* %2, align 8
  br label %124

74:                                               ; preds = %24
  %75 = load %struct.Node*, %struct.Node** %3, align 8
  %76 = getelementptr inbounds %struct.Node, %struct.Node* %75, i32 0, i32 6
  %77 = load %struct.Node*, %struct.Node** %76, align 16
  %78 = call double @eval_double(%struct.Node* noundef %77)
  %79 = fcmp une double %78, 0.000000e+00
  br i1 %79, label %80, label %85

80:                                               ; preds = %74
  %81 = load %struct.Node*, %struct.Node** %3, align 8
  %82 = getelementptr inbounds %struct.Node, %struct.Node* %81, i32 0, i32 7
  %83 = load %struct.Node*, %struct.Node** %82, align 8
  %84 = call double @eval_double(%struct.Node* noundef %83)
  br label %90

85:                                               ; preds = %74
  %86 = load %struct.Node*, %struct.Node** %3, align 8
  %87 = getelementptr inbounds %struct.Node, %struct.Node* %86, i32 0, i32 8
  %88 = load %struct.Node*, %struct.Node** %87, align 16
  %89 = call double @eval_double(%struct.Node* noundef %88)
  br label %90

90:                                               ; preds = %85, %80
  %91 = phi double [ %84, %80 ], [ %89, %85 ]
  store double %91, double* %2, align 8
  br label %124

92:                                               ; preds = %24
  %93 = load %struct.Node*, %struct.Node** %3, align 8
  %94 = getelementptr inbounds %struct.Node, %struct.Node* %93, i32 0, i32 5
  %95 = load %struct.Node*, %struct.Node** %94, align 8
  %96 = call double @eval_double(%struct.Node* noundef %95)
  store double %96, double* %2, align 8
  br label %124

97:                                               ; preds = %24
  %98 = load %struct.Node*, %struct.Node** %3, align 8
  %99 = getelementptr inbounds %struct.Node, %struct.Node* %98, i32 0, i32 4
  %100 = load %struct.Node*, %struct.Node** %99, align 16
  %101 = getelementptr inbounds %struct.Node, %struct.Node* %100, i32 0, i32 2
  %102 = load %struct.Type*, %struct.Type** %101, align 16
  %103 = call zeroext i1 @is_flonum(%struct.Type* noundef %102)
  br i1 %103, label %104, label %109

104:                                              ; preds = %97
  %105 = load %struct.Node*, %struct.Node** %3, align 8
  %106 = getelementptr inbounds %struct.Node, %struct.Node* %105, i32 0, i32 4
  %107 = load %struct.Node*, %struct.Node** %106, align 16
  %108 = call double @eval_double(%struct.Node* noundef %107)
  store double %108, double* %2, align 8
  br label %124

109:                                              ; preds = %97
  %110 = load %struct.Node*, %struct.Node** %3, align 8
  %111 = getelementptr inbounds %struct.Node, %struct.Node* %110, i32 0, i32 4
  %112 = load %struct.Node*, %struct.Node** %111, align 16
  %113 = call i64 @eval(%struct.Node* noundef %112)
  %114 = sitofp i64 %113 to double
  store double %114, double* %2, align 8
  br label %124

115:                                              ; preds = %24
  %116 = load %struct.Node*, %struct.Node** %3, align 8
  %117 = getelementptr inbounds %struct.Node, %struct.Node* %116, i32 0, i32 35
  %118 = load x86_fp80, x86_fp80* %117, align 16
  %119 = fptrunc x86_fp80 %118 to double
  store double %119, double* %2, align 8
  br label %124

120:                                              ; preds = %24
  %121 = load %struct.Node*, %struct.Node** %3, align 8
  %122 = getelementptr inbounds %struct.Node, %struct.Node* %121, i32 0, i32 3
  %123 = load %struct.Token*, %struct.Token** %122, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %123, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.61.585, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

124:                                              ; preds = %115, %109, %104, %92, %90, %68, %58, %48, %38, %28, %20, %16
  %125 = load double, double* %2, align 8
  ret double %125
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @eval_rval(%struct.Node* noundef %0, i8*** noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.Node*, align 8
  %5 = alloca i8***, align 8
  store %struct.Node* %0, %struct.Node** %4, align 8
  store i8*** %1, i8**** %5, align 8
  %6 = load %struct.Node*, %struct.Node** %4, align 8
  %7 = getelementptr inbounds %struct.Node, %struct.Node* %6, i32 0, i32 0
  %8 = load i32, i32* %7, align 16
  switch i32 %8, label %45 [
    i32 40, label %9
    i32 21, label %26
    i32 19, label %32
  ]

9:                                                ; preds = %2
  %10 = load %struct.Node*, %struct.Node** %4, align 8
  %11 = getelementptr inbounds %struct.Node, %struct.Node* %10, i32 0, i32 33
  %12 = load %struct.Obj*, %struct.Obj** %11, align 8
  %13 = getelementptr inbounds %struct.Obj, %struct.Obj* %12, i32 0, i32 5
  %14 = load i8, i8* %13, align 8
  %15 = trunc i8 %14 to i1
  br i1 %15, label %16, label %20

16:                                               ; preds = %9
  %17 = load %struct.Node*, %struct.Node** %4, align 8
  %18 = getelementptr inbounds %struct.Node, %struct.Node* %17, i32 0, i32 3
  %19 = load %struct.Token*, %struct.Token** %18, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %19, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.62.583, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

20:                                               ; preds = %9
  %21 = load %struct.Node*, %struct.Node** %4, align 8
  %22 = getelementptr inbounds %struct.Node, %struct.Node* %21, i32 0, i32 33
  %23 = load %struct.Obj*, %struct.Obj** %22, align 8
  %24 = getelementptr inbounds %struct.Obj, %struct.Obj* %23, i32 0, i32 1
  %25 = load i8***, i8**** %5, align 8
  store i8** %24, i8*** %25, align 8
  store i64 0, i64* %3, align 8
  br label %49

26:                                               ; preds = %2
  %27 = load %struct.Node*, %struct.Node** %4, align 8
  %28 = getelementptr inbounds %struct.Node, %struct.Node* %27, i32 0, i32 4
  %29 = load %struct.Node*, %struct.Node** %28, align 16
  %30 = load i8***, i8**** %5, align 8
  %31 = call i64 @eval2(%struct.Node* noundef %29, i8*** noundef %30)
  store i64 %31, i64* %3, align 8
  br label %49

32:                                               ; preds = %2
  %33 = load %struct.Node*, %struct.Node** %4, align 8
  %34 = getelementptr inbounds %struct.Node, %struct.Node* %33, i32 0, i32 4
  %35 = load %struct.Node*, %struct.Node** %34, align 16
  %36 = load i8***, i8**** %5, align 8
  %37 = call i64 @eval_rval(%struct.Node* noundef %35, i8*** noundef %36)
  %38 = load %struct.Node*, %struct.Node** %4, align 8
  %39 = getelementptr inbounds %struct.Node, %struct.Node* %38, i32 0, i32 14
  %40 = load %struct.Member*, %struct.Member** %39, align 16
  %41 = getelementptr inbounds %struct.Member, %struct.Member* %40, i32 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = add nsw i64 %37, %43
  store i64 %44, i64* %3, align 8
  br label %49

45:                                               ; preds = %2
  %46 = load %struct.Node*, %struct.Node** %4, align 8
  %47 = getelementptr inbounds %struct.Node, %struct.Node* %46, i32 0, i32 3
  %48 = load %struct.Token*, %struct.Token** %47, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %48, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.63.584, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

49:                                               ; preds = %32, %26, %20
  %50 = load i64, i64* %3, align 8
  ret i64 %50
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @logor(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @logand(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %12, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  %11 = call zeroext i1 @equal(%struct.Token* noundef %10, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67.658, i64 0, i64 0))
  br i1 %11, label %12, label %21

12:                                               ; preds = %9
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %13, %struct.Token** %6, align 8
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @logand(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_binary(i32 noundef 25, %struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9, !llvm.loop !84

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %22, %struct.Token** %23, align 8
  %24 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Obj* @new_lvar(i8* noundef %0, %struct.Type* noundef %1, i8* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Type*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.Obj*, align 8
  store i8* %0, i8** %4, align 8
  store %struct.Type* %1, %struct.Type** %5, align 8
  store i8* %2, i8** %6, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = load %struct.Type*, %struct.Type** %5, align 8
  %10 = call %struct.Obj* @new_var(i8* noundef %8, %struct.Type* noundef %9)
  store %struct.Obj* %10, %struct.Obj** %7, align 8
  %11 = load %struct.Obj*, %struct.Obj** %7, align 8
  %12 = getelementptr inbounds %struct.Obj, %struct.Obj* %11, i32 0, i32 5
  store i8 1, i8* %12, align 8
  %13 = load %struct.Obj*, %struct.Obj** @locals, align 8
  %14 = load %struct.Obj*, %struct.Obj** %7, align 8
  %15 = getelementptr inbounds %struct.Obj, %struct.Obj* %14, i32 0, i32 0
  store %struct.Obj* %13, %struct.Obj** %15, align 8
  %16 = load i32, i32* @order, align 4
  %17 = load %struct.Obj*, %struct.Obj** %7, align 8
  %18 = getelementptr inbounds %struct.Obj, %struct.Obj* %17, i32 0, i32 8
  store i32 %16, i32* %18, align 4
  %19 = load i8*, i8** %6, align 8
  %20 = load %struct.Obj*, %struct.Obj** %7, align 8
  %21 = getelementptr inbounds %struct.Obj, %struct.Obj* %20, i32 0, i32 2
  store i8* %19, i8** %21, align 8
  %22 = load %struct.Obj*, %struct.Obj** %7, align 8
  store %struct.Obj* %22, %struct.Obj** @locals, align 8
  %23 = load %struct.Obj*, %struct.Obj** %7, align 8
  ret %struct.Obj* %23
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_var_node(%struct.Obj* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Obj*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  store %struct.Obj* %0, %struct.Obj** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load %struct.Token*, %struct.Token** %4, align 8
  %7 = call %struct.Node* @new_node(i32 noundef 40, %struct.Token* noundef %6)
  store %struct.Node* %7, %struct.Node** %5, align 8
  %8 = load %struct.Obj*, %struct.Obj** %3, align 8
  %9 = load %struct.Node*, %struct.Node** %5, align 8
  %10 = getelementptr inbounds %struct.Node, %struct.Node* %9, i32 0, i32 33
  store %struct.Obj* %8, %struct.Obj** %10, align 8
  %11 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_binary(i32 noundef %0, %struct.Node* noundef %1, %struct.Node* noundef %2, %struct.Token* noundef %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Node*, align 8
  %8 = alloca %struct.Token*, align 8
  %9 = alloca %struct.Node*, align 8
  store i32 %0, i32* %5, align 4
  store %struct.Node* %1, %struct.Node** %6, align 8
  store %struct.Node* %2, %struct.Node** %7, align 8
  store %struct.Token* %3, %struct.Token** %8, align 8
  %10 = load i32, i32* %5, align 4
  %11 = load %struct.Token*, %struct.Token** %8, align 8
  %12 = call %struct.Node* @new_node(i32 noundef %10, %struct.Token* noundef %11)
  store %struct.Node* %12, %struct.Node** %9, align 8
  %13 = load i8, i8* @isDotfile, align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %51

15:                                               ; preds = %4
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %17 = icmp ne %struct._IO_FILE* %16, null
  br i1 %17, label %18, label %51

18:                                               ; preds = %15
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %20 = load %struct.Node*, %struct.Node** %9, align 8
  %21 = getelementptr inbounds %struct.Node, %struct.Node* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 16
  %23 = call i8* @nodekind2str(i32 noundef %22)
  %24 = load %struct.Node*, %struct.Node** %9, align 8
  %25 = getelementptr inbounds %struct.Node, %struct.Node* %24, i32 0, i32 36
  %26 = load i32, i32* %25, align 16
  %27 = load %struct.Node*, %struct.Node** %7, align 8
  %28 = getelementptr inbounds %struct.Node, %struct.Node* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 16
  %30 = call i8* @nodekind2str(i32 noundef %29)
  %31 = load %struct.Node*, %struct.Node** %7, align 8
  %32 = getelementptr inbounds %struct.Node, %struct.Node* %31, i32 0, i32 36
  %33 = load i32, i32* %32, align 16
  %34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %19, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %23, i32 noundef %26, i8* noundef %30, i32 noundef %33)
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %36 = load %struct.Node*, %struct.Node** %9, align 8
  %37 = getelementptr inbounds %struct.Node, %struct.Node* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 16
  %39 = call i8* @nodekind2str(i32 noundef %38)
  %40 = load %struct.Node*, %struct.Node** %9, align 8
  %41 = getelementptr inbounds %struct.Node, %struct.Node* %40, i32 0, i32 36
  %42 = load i32, i32* %41, align 16
  %43 = load %struct.Node*, %struct.Node** %6, align 8
  %44 = getelementptr inbounds %struct.Node, %struct.Node* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 16
  %46 = call i8* @nodekind2str(i32 noundef %45)
  %47 = load %struct.Node*, %struct.Node** %6, align 8
  %48 = getelementptr inbounds %struct.Node, %struct.Node* %47, i32 0, i32 36
  %49 = load i32, i32* %48, align 16
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %35, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %39, i32 noundef %42, i8* noundef %46, i32 noundef %49)
  br label %51

51:                                               ; preds = %18, %15, %4
  %52 = load %struct.Node*, %struct.Node** %6, align 8
  %53 = load %struct.Node*, %struct.Node** %9, align 8
  %54 = getelementptr inbounds %struct.Node, %struct.Node* %53, i32 0, i32 4
  store %struct.Node* %52, %struct.Node** %54, align 16
  %55 = load %struct.Node*, %struct.Node** %7, align 8
  %56 = load %struct.Node*, %struct.Node** %9, align 8
  %57 = getelementptr inbounds %struct.Node, %struct.Node* %56, i32 0, i32 5
  store %struct.Node* %55, %struct.Node** %57, align 8
  %58 = load %struct.Node*, %struct.Node** %9, align 8
  %59 = getelementptr inbounds %struct.Node, %struct.Node* %58, i32 0, i32 5
  %60 = load %struct.Node*, %struct.Node** %59, align 8
  call void @add_type(%struct.Node* noundef %60)
  %61 = load i32, i32* %5, align 4
  %62 = icmp eq i32 %61, 16
  br i1 %62, label %63, label %78

63:                                               ; preds = %51
  %64 = load %struct.Node*, %struct.Node** %9, align 8
  %65 = getelementptr inbounds %struct.Node, %struct.Node* %64, i32 0, i32 5
  %66 = load %struct.Node*, %struct.Node** %65, align 8
  %67 = getelementptr inbounds %struct.Node, %struct.Node* %66, i32 0, i32 2
  %68 = load %struct.Type*, %struct.Type** %67, align 16
  %69 = getelementptr inbounds %struct.Type, %struct.Type* %68, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %63
  %73 = load %struct.Node*, %struct.Node** %9, align 8
  %74 = getelementptr inbounds %struct.Node, %struct.Node* %73, i32 0, i32 5
  %75 = load %struct.Node*, %struct.Node** %74, align 8
  %76 = getelementptr inbounds %struct.Node, %struct.Node* %75, i32 0, i32 3
  %77 = load %struct.Token*, %struct.Token** %76, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %77, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.216.655, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

78:                                               ; preds = %63, %51
  %79 = load %struct.Node*, %struct.Node** %9, align 8
  ret %struct.Node* %79
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_node(i32 noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  store i32 %0, i32* %3, align 4
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 320) #14
  %7 = bitcast i8* %6 to %struct.Node*
  store %struct.Node* %7, %struct.Node** %5, align 8
  %8 = load %struct.Node*, %struct.Node** %5, align 8
  %9 = icmp eq %struct.Node* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.217.654, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

11:                                               ; preds = %2
  %12 = load i32, i32* %3, align 4
  %13 = load %struct.Node*, %struct.Node** %5, align 8
  %14 = getelementptr inbounds %struct.Node, %struct.Node* %13, i32 0, i32 0
  store i32 %12, i32* %14, align 16
  %15 = load i32, i32* @new_node.count, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* @new_node.count, align 4
  %17 = load %struct.Node*, %struct.Node** %5, align 8
  %18 = getelementptr inbounds %struct.Node, %struct.Node* %17, i32 0, i32 36
  store i32 %15, i32* %18, align 16
  %19 = load %struct.Token*, %struct.Token** %4, align 8
  %20 = load %struct.Node*, %struct.Node** %5, align 8
  %21 = getelementptr inbounds %struct.Node, %struct.Node* %20, i32 0, i32 3
  store %struct.Token* %19, %struct.Token** %21, align 8
  %22 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @expr(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %7 = load %struct.Token*, %struct.Token** %5, align 8
  %8 = call %struct.Node* @assign(%struct.Token** noundef %5, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %6, align 8
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = call zeroext i1 @equal(%struct.Token* noundef %9, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br i1 %10, label %11, label %20

11:                                               ; preds = %2
  %12 = load %struct.Node*, %struct.Node** %6, align 8
  %13 = load %struct.Token**, %struct.Token*** %4, align 8
  %14 = load %struct.Token*, %struct.Token** %5, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 1
  %16 = load %struct.Token*, %struct.Token** %15, align 8
  %17 = call %struct.Node* @expr(%struct.Token** noundef %13, %struct.Token* noundef %16)
  %18 = load %struct.Token*, %struct.Token** %5, align 8
  %19 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %12, %struct.Node* noundef %17, %struct.Token* noundef %18)
  store %struct.Node* %19, %struct.Node** %3, align 8
  br label %24

20:                                               ; preds = %2
  %21 = load %struct.Token*, %struct.Token** %5, align 8
  %22 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %21, %struct.Token** %22, align 8
  %23 = load %struct.Node*, %struct.Node** %6, align 8
  store %struct.Node* %23, %struct.Node** %3, align 8
  br label %24

24:                                               ; preds = %20, %11
  %25 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %25
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @assign(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %7 = load %struct.Token*, %struct.Token** %5, align 8
  %8 = call %struct.Node* @conditional(%struct.Token** noundef %5, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %6, align 8
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = call zeroext i1 @equal(%struct.Token* noundef %9, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150.590, i64 0, i64 0))
  br i1 %10, label %11, label %20

11:                                               ; preds = %2
  %12 = load %struct.Node*, %struct.Node** %6, align 8
  %13 = load %struct.Token**, %struct.Token*** %4, align 8
  %14 = load %struct.Token*, %struct.Token** %5, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 1
  %16 = load %struct.Token*, %struct.Token** %15, align 8
  %17 = call %struct.Node* @assign(%struct.Token** noundef %13, %struct.Token* noundef %16)
  %18 = load %struct.Token*, %struct.Token** %5, align 8
  %19 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %12, %struct.Node* noundef %17, %struct.Token* noundef %18)
  store %struct.Node* %19, %struct.Node** %3, align 8
  br label %154

20:                                               ; preds = %2
  %21 = load %struct.Token*, %struct.Token** %5, align 8
  %22 = call zeroext i1 @equal(%struct.Token* noundef %21, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.153.591, i64 0, i64 0))
  br i1 %22, label %23, label %33

23:                                               ; preds = %20
  %24 = load %struct.Node*, %struct.Node** %6, align 8
  %25 = load %struct.Token**, %struct.Token*** %4, align 8
  %26 = load %struct.Token*, %struct.Token** %5, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  %29 = call %struct.Node* @assign(%struct.Token** noundef %25, %struct.Token* noundef %28)
  %30 = load %struct.Token*, %struct.Token** %5, align 8
  %31 = call %struct.Node* @new_add(%struct.Node* noundef %24, %struct.Node* noundef %29, %struct.Token* noundef %30)
  %32 = call %struct.Node* @to_assign(%struct.Node* noundef %31)
  store %struct.Node* %32, %struct.Node** %3, align 8
  br label %154

33:                                               ; preds = %20
  %34 = load %struct.Token*, %struct.Token** %5, align 8
  %35 = call zeroext i1 @equal(%struct.Token* noundef %34, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.154.592, i64 0, i64 0))
  br i1 %35, label %36, label %46

36:                                               ; preds = %33
  %37 = load %struct.Node*, %struct.Node** %6, align 8
  %38 = load %struct.Token**, %struct.Token*** %4, align 8
  %39 = load %struct.Token*, %struct.Token** %5, align 8
  %40 = getelementptr inbounds %struct.Token, %struct.Token* %39, i32 0, i32 1
  %41 = load %struct.Token*, %struct.Token** %40, align 8
  %42 = call %struct.Node* @assign(%struct.Token** noundef %38, %struct.Token* noundef %41)
  %43 = load %struct.Token*, %struct.Token** %5, align 8
  %44 = call %struct.Node* @new_sub(%struct.Node* noundef %37, %struct.Node* noundef %42, %struct.Token* noundef %43)
  %45 = call %struct.Node* @to_assign(%struct.Node* noundef %44)
  store %struct.Node* %45, %struct.Node** %3, align 8
  br label %154

46:                                               ; preds = %33
  %47 = load %struct.Token*, %struct.Token** %5, align 8
  %48 = call zeroext i1 @equal(%struct.Token* noundef %47, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155.593, i64 0, i64 0))
  br i1 %48, label %49, label %59

49:                                               ; preds = %46
  %50 = load %struct.Node*, %struct.Node** %6, align 8
  %51 = load %struct.Token**, %struct.Token*** %4, align 8
  %52 = load %struct.Token*, %struct.Token** %5, align 8
  %53 = getelementptr inbounds %struct.Token, %struct.Token* %52, i32 0, i32 1
  %54 = load %struct.Token*, %struct.Token** %53, align 8
  %55 = call %struct.Node* @assign(%struct.Token** noundef %51, %struct.Token* noundef %54)
  %56 = load %struct.Token*, %struct.Token** %5, align 8
  %57 = call %struct.Node* @new_binary(i32 noundef 3, %struct.Node* noundef %50, %struct.Node* noundef %55, %struct.Token* noundef %56)
  %58 = call %struct.Node* @to_assign(%struct.Node* noundef %57)
  store %struct.Node* %58, %struct.Node** %3, align 8
  br label %154

59:                                               ; preds = %46
  %60 = load %struct.Token*, %struct.Token** %5, align 8
  %61 = call zeroext i1 @equal(%struct.Token* noundef %60, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.156.594, i64 0, i64 0))
  br i1 %61, label %62, label %72

62:                                               ; preds = %59
  %63 = load %struct.Node*, %struct.Node** %6, align 8
  %64 = load %struct.Token**, %struct.Token*** %4, align 8
  %65 = load %struct.Token*, %struct.Token** %5, align 8
  %66 = getelementptr inbounds %struct.Token, %struct.Token* %65, i32 0, i32 1
  %67 = load %struct.Token*, %struct.Token** %66, align 8
  %68 = call %struct.Node* @assign(%struct.Token** noundef %64, %struct.Token* noundef %67)
  %69 = load %struct.Token*, %struct.Token** %5, align 8
  %70 = call %struct.Node* @new_binary(i32 noundef 4, %struct.Node* noundef %63, %struct.Node* noundef %68, %struct.Token* noundef %69)
  %71 = call %struct.Node* @to_assign(%struct.Node* noundef %70)
  store %struct.Node* %71, %struct.Node** %3, align 8
  br label %154

72:                                               ; preds = %59
  %73 = load %struct.Token*, %struct.Token** %5, align 8
  %74 = call zeroext i1 @equal(%struct.Token* noundef %73, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.157.595, i64 0, i64 0))
  br i1 %74, label %75, label %85

75:                                               ; preds = %72
  %76 = load %struct.Node*, %struct.Node** %6, align 8
  %77 = load %struct.Token**, %struct.Token*** %4, align 8
  %78 = load %struct.Token*, %struct.Token** %5, align 8
  %79 = getelementptr inbounds %struct.Token, %struct.Token* %78, i32 0, i32 1
  %80 = load %struct.Token*, %struct.Token** %79, align 8
  %81 = call %struct.Node* @assign(%struct.Token** noundef %77, %struct.Token* noundef %80)
  %82 = load %struct.Token*, %struct.Token** %5, align 8
  %83 = call %struct.Node* @new_binary(i32 noundef 6, %struct.Node* noundef %76, %struct.Node* noundef %81, %struct.Token* noundef %82)
  %84 = call %struct.Node* @to_assign(%struct.Node* noundef %83)
  store %struct.Node* %84, %struct.Node** %3, align 8
  br label %154

85:                                               ; preds = %72
  %86 = load %struct.Token*, %struct.Token** %5, align 8
  %87 = call zeroext i1 @equal(%struct.Token* noundef %86, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.158.596, i64 0, i64 0))
  br i1 %87, label %88, label %98

88:                                               ; preds = %85
  %89 = load %struct.Node*, %struct.Node** %6, align 8
  %90 = load %struct.Token**, %struct.Token*** %4, align 8
  %91 = load %struct.Token*, %struct.Token** %5, align 8
  %92 = getelementptr inbounds %struct.Token, %struct.Token* %91, i32 0, i32 1
  %93 = load %struct.Token*, %struct.Token** %92, align 8
  %94 = call %struct.Node* @assign(%struct.Token** noundef %90, %struct.Token* noundef %93)
  %95 = load %struct.Token*, %struct.Token** %5, align 8
  %96 = call %struct.Node* @new_binary(i32 noundef 7, %struct.Node* noundef %89, %struct.Node* noundef %94, %struct.Token* noundef %95)
  %97 = call %struct.Node* @to_assign(%struct.Node* noundef %96)
  store %struct.Node* %97, %struct.Node** %3, align 8
  br label %154

98:                                               ; preds = %85
  %99 = load %struct.Token*, %struct.Token** %5, align 8
  %100 = call zeroext i1 @equal(%struct.Token* noundef %99, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.159.597, i64 0, i64 0))
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = load %struct.Node*, %struct.Node** %6, align 8
  %103 = load %struct.Token**, %struct.Token*** %4, align 8
  %104 = load %struct.Token*, %struct.Token** %5, align 8
  %105 = getelementptr inbounds %struct.Token, %struct.Token* %104, i32 0, i32 1
  %106 = load %struct.Token*, %struct.Token** %105, align 8
  %107 = call %struct.Node* @assign(%struct.Token** noundef %103, %struct.Token* noundef %106)
  %108 = load %struct.Token*, %struct.Token** %5, align 8
  %109 = call %struct.Node* @new_binary(i32 noundef 8, %struct.Node* noundef %102, %struct.Node* noundef %107, %struct.Token* noundef %108)
  %110 = call %struct.Node* @to_assign(%struct.Node* noundef %109)
  store %struct.Node* %110, %struct.Node** %3, align 8
  br label %154

111:                                              ; preds = %98
  %112 = load %struct.Token*, %struct.Token** %5, align 8
  %113 = call zeroext i1 @equal(%struct.Token* noundef %112, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.160.598, i64 0, i64 0))
  br i1 %113, label %114, label %124

114:                                              ; preds = %111
  %115 = load %struct.Node*, %struct.Node** %6, align 8
  %116 = load %struct.Token**, %struct.Token*** %4, align 8
  %117 = load %struct.Token*, %struct.Token** %5, align 8
  %118 = getelementptr inbounds %struct.Token, %struct.Token* %117, i32 0, i32 1
  %119 = load %struct.Token*, %struct.Token** %118, align 8
  %120 = call %struct.Node* @assign(%struct.Token** noundef %116, %struct.Token* noundef %119)
  %121 = load %struct.Token*, %struct.Token** %5, align 8
  %122 = call %struct.Node* @new_binary(i32 noundef 9, %struct.Node* noundef %115, %struct.Node* noundef %120, %struct.Token* noundef %121)
  %123 = call %struct.Node* @to_assign(%struct.Node* noundef %122)
  store %struct.Node* %123, %struct.Node** %3, align 8
  br label %154

124:                                              ; preds = %111
  %125 = load %struct.Token*, %struct.Token** %5, align 8
  %126 = call zeroext i1 @equal(%struct.Token* noundef %125, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.161.599, i64 0, i64 0))
  br i1 %126, label %127, label %137

127:                                              ; preds = %124
  %128 = load %struct.Node*, %struct.Node** %6, align 8
  %129 = load %struct.Token**, %struct.Token*** %4, align 8
  %130 = load %struct.Token*, %struct.Token** %5, align 8
  %131 = getelementptr inbounds %struct.Token, %struct.Token* %130, i32 0, i32 1
  %132 = load %struct.Token*, %struct.Token** %131, align 8
  %133 = call %struct.Node* @assign(%struct.Token** noundef %129, %struct.Token* noundef %132)
  %134 = load %struct.Token*, %struct.Token** %5, align 8
  %135 = call %struct.Node* @new_binary(i32 noundef 10, %struct.Node* noundef %128, %struct.Node* noundef %133, %struct.Token* noundef %134)
  %136 = call %struct.Node* @to_assign(%struct.Node* noundef %135)
  store %struct.Node* %136, %struct.Node** %3, align 8
  br label %154

137:                                              ; preds = %124
  %138 = load %struct.Token*, %struct.Token** %5, align 8
  %139 = call zeroext i1 @equal(%struct.Token* noundef %138, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.162.600, i64 0, i64 0))
  br i1 %139, label %140, label %150

140:                                              ; preds = %137
  %141 = load %struct.Node*, %struct.Node** %6, align 8
  %142 = load %struct.Token**, %struct.Token*** %4, align 8
  %143 = load %struct.Token*, %struct.Token** %5, align 8
  %144 = getelementptr inbounds %struct.Token, %struct.Token* %143, i32 0, i32 1
  %145 = load %struct.Token*, %struct.Token** %144, align 8
  %146 = call %struct.Node* @assign(%struct.Token** noundef %142, %struct.Token* noundef %145)
  %147 = load %struct.Token*, %struct.Token** %5, align 8
  %148 = call %struct.Node* @new_binary(i32 noundef 11, %struct.Node* noundef %141, %struct.Node* noundef %146, %struct.Token* noundef %147)
  %149 = call %struct.Node* @to_assign(%struct.Node* noundef %148)
  store %struct.Node* %149, %struct.Node** %3, align 8
  br label %154

150:                                              ; preds = %137
  %151 = load %struct.Token*, %struct.Token** %5, align 8
  %152 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %151, %struct.Token** %152, align 8
  %153 = load %struct.Node*, %struct.Node** %6, align 8
  store %struct.Node* %153, %struct.Node** %3, align 8
  br label %154

154:                                              ; preds = %150, %140, %127, %114, %101, %88, %75, %62, %49, %36, %23, %11
  %155 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %155
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_add(%struct.Node* noundef %0, %struct.Node* noundef %1, %struct.Token* noundef %2) #0 {
  %4 = alloca %struct.Node*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %5, align 8
  store %struct.Node* %1, %struct.Node** %6, align 8
  store %struct.Token* %2, %struct.Token** %7, align 8
  %9 = load %struct.Node*, %struct.Node** %5, align 8
  call void @add_type(%struct.Node* noundef %9)
  %10 = load %struct.Node*, %struct.Node** %6, align 8
  call void @add_type(%struct.Node* noundef %10)
  %11 = load %struct.Node*, %struct.Node** %5, align 8
  %12 = getelementptr inbounds %struct.Node, %struct.Node* %11, i32 0, i32 2
  %13 = load %struct.Type*, %struct.Type** %12, align 16
  %14 = call zeroext i1 @is_numeric(%struct.Type* noundef %13)
  br i1 %14, label %15, label %25

15:                                               ; preds = %3
  %16 = load %struct.Node*, %struct.Node** %6, align 8
  %17 = getelementptr inbounds %struct.Node, %struct.Node* %16, i32 0, i32 2
  %18 = load %struct.Type*, %struct.Type** %17, align 16
  %19 = call zeroext i1 @is_numeric(%struct.Type* noundef %18)
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = load %struct.Node*, %struct.Node** %5, align 8
  %22 = load %struct.Node*, %struct.Node** %6, align 8
  %23 = load %struct.Token*, %struct.Token** %7, align 8
  %24 = call %struct.Node* @new_binary(i32 noundef 1, %struct.Node* noundef %21, %struct.Node* noundef %22, %struct.Token* noundef %23)
  store %struct.Node* %24, %struct.Node** %4, align 8
  br label %117

25:                                               ; preds = %15, %3
  %26 = load %struct.Node*, %struct.Node** %5, align 8
  %27 = getelementptr inbounds %struct.Node, %struct.Node* %26, i32 0, i32 2
  %28 = load %struct.Type*, %struct.Type** %27, align 16
  %29 = getelementptr inbounds %struct.Type, %struct.Type* %28, i32 0, i32 8
  %30 = load %struct.Type*, %struct.Type** %29, align 8
  %31 = icmp eq %struct.Type* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %25
  %33 = load %struct.Node*, %struct.Node** %6, align 8
  %34 = getelementptr inbounds %struct.Node, %struct.Node* %33, i32 0, i32 2
  %35 = load %struct.Type*, %struct.Type** %34, align 16
  %36 = getelementptr inbounds %struct.Type, %struct.Type* %35, i32 0, i32 8
  %37 = load %struct.Type*, %struct.Type** %36, align 8
  %38 = icmp eq %struct.Type* %37, null
  br i1 %38, label %53, label %39

39:                                               ; preds = %32, %25
  %40 = load %struct.Node*, %struct.Node** %5, align 8
  %41 = getelementptr inbounds %struct.Node, %struct.Node* %40, i32 0, i32 2
  %42 = load %struct.Type*, %struct.Type** %41, align 16
  %43 = getelementptr inbounds %struct.Type, %struct.Type* %42, i32 0, i32 8
  %44 = load %struct.Type*, %struct.Type** %43, align 8
  %45 = icmp ne %struct.Type* %44, null
  br i1 %45, label %46, label %55

46:                                               ; preds = %39
  %47 = load %struct.Node*, %struct.Node** %6, align 8
  %48 = getelementptr inbounds %struct.Node, %struct.Node* %47, i32 0, i32 2
  %49 = load %struct.Type*, %struct.Type** %48, align 16
  %50 = getelementptr inbounds %struct.Type, %struct.Type* %49, i32 0, i32 8
  %51 = load %struct.Type*, %struct.Type** %50, align 8
  %52 = icmp ne %struct.Type* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %46, %32
  %54 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %54, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.214.653, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

55:                                               ; preds = %46, %39
  %56 = load %struct.Node*, %struct.Node** %5, align 8
  %57 = getelementptr inbounds %struct.Node, %struct.Node* %56, i32 0, i32 2
  %58 = load %struct.Type*, %struct.Type** %57, align 16
  %59 = getelementptr inbounds %struct.Type, %struct.Type* %58, i32 0, i32 8
  %60 = load %struct.Type*, %struct.Type** %59, align 8
  %61 = icmp ne %struct.Type* %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %55
  %63 = load %struct.Node*, %struct.Node** %6, align 8
  %64 = getelementptr inbounds %struct.Node, %struct.Node* %63, i32 0, i32 2
  %65 = load %struct.Type*, %struct.Type** %64, align 16
  %66 = getelementptr inbounds %struct.Type, %struct.Type* %65, i32 0, i32 8
  %67 = load %struct.Type*, %struct.Type** %66, align 8
  %68 = icmp ne %struct.Type* %67, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %62
  %70 = load %struct.Node*, %struct.Node** %5, align 8
  store %struct.Node* %70, %struct.Node** %8, align 8
  %71 = load %struct.Node*, %struct.Node** %6, align 8
  store %struct.Node* %71, %struct.Node** %5, align 8
  %72 = load %struct.Node*, %struct.Node** %8, align 8
  store %struct.Node* %72, %struct.Node** %6, align 8
  br label %73

73:                                               ; preds = %69, %62, %55
  %74 = load %struct.Node*, %struct.Node** %5, align 8
  %75 = getelementptr inbounds %struct.Node, %struct.Node* %74, i32 0, i32 2
  %76 = load %struct.Type*, %struct.Type** %75, align 16
  %77 = getelementptr inbounds %struct.Type, %struct.Type* %76, i32 0, i32 8
  %78 = load %struct.Type*, %struct.Type** %77, align 8
  %79 = getelementptr inbounds %struct.Type, %struct.Type* %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 13
  br i1 %81, label %82, label %99

82:                                               ; preds = %73
  %83 = load %struct.Node*, %struct.Node** %6, align 8
  %84 = load %struct.Node*, %struct.Node** %5, align 8
  %85 = getelementptr inbounds %struct.Node, %struct.Node* %84, i32 0, i32 2
  %86 = load %struct.Type*, %struct.Type** %85, align 16
  %87 = getelementptr inbounds %struct.Type, %struct.Type* %86, i32 0, i32 8
  %88 = load %struct.Type*, %struct.Type** %87, align 8
  %89 = getelementptr inbounds %struct.Type, %struct.Type* %88, i32 0, i32 13
  %90 = load %struct.Obj*, %struct.Obj** %89, align 8
  %91 = load %struct.Token*, %struct.Token** %7, align 8
  %92 = call %struct.Node* @new_var_node(%struct.Obj* noundef %90, %struct.Token* noundef %91)
  %93 = load %struct.Token*, %struct.Token** %7, align 8
  %94 = call %struct.Node* @new_binary(i32 noundef 3, %struct.Node* noundef %83, %struct.Node* noundef %92, %struct.Token* noundef %93)
  store %struct.Node* %94, %struct.Node** %6, align 8
  %95 = load %struct.Node*, %struct.Node** %5, align 8
  %96 = load %struct.Node*, %struct.Node** %6, align 8
  %97 = load %struct.Token*, %struct.Token** %7, align 8
  %98 = call %struct.Node* @new_binary(i32 noundef 1, %struct.Node* noundef %95, %struct.Node* noundef %96, %struct.Token* noundef %97)
  store %struct.Node* %98, %struct.Node** %4, align 8
  br label %117

99:                                               ; preds = %73
  %100 = load %struct.Node*, %struct.Node** %6, align 8
  %101 = load %struct.Node*, %struct.Node** %5, align 8
  %102 = getelementptr inbounds %struct.Node, %struct.Node* %101, i32 0, i32 2
  %103 = load %struct.Type*, %struct.Type** %102, align 16
  %104 = getelementptr inbounds %struct.Type, %struct.Type* %103, i32 0, i32 8
  %105 = load %struct.Type*, %struct.Type** %104, align 8
  %106 = getelementptr inbounds %struct.Type, %struct.Type* %105, i32 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = load %struct.Token*, %struct.Token** %7, align 8
  %110 = call %struct.Node* @new_long(i64 noundef %108, %struct.Token* noundef %109)
  %111 = load %struct.Token*, %struct.Token** %7, align 8
  %112 = call %struct.Node* @new_binary(i32 noundef 3, %struct.Node* noundef %100, %struct.Node* noundef %110, %struct.Token* noundef %111)
  store %struct.Node* %112, %struct.Node** %6, align 8
  %113 = load %struct.Node*, %struct.Node** %5, align 8
  %114 = load %struct.Node*, %struct.Node** %6, align 8
  %115 = load %struct.Token*, %struct.Token** %7, align 8
  %116 = call %struct.Node* @new_binary(i32 noundef 1, %struct.Node* noundef %113, %struct.Node* noundef %114, %struct.Token* noundef %115)
  store %struct.Node* %116, %struct.Node** %4, align 8
  br label %117

117:                                              ; preds = %99, %82, %20
  %118 = load %struct.Node*, %struct.Node** %4, align 8
  ret %struct.Node* %118
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @to_assign(%struct.Node* noundef %0) #0 {
  %2 = alloca %struct.Node*, align 8
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Obj*, align 8
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Node*, align 8
  %8 = alloca %struct.Node*, align 8
  %9 = alloca %struct.Node*, align 8
  %10 = alloca %struct.Node, align 16
  %11 = alloca %struct.Node*, align 8
  %12 = alloca %struct.Obj*, align 8
  %13 = alloca %struct.Obj*, align 8
  %14 = alloca %struct.Obj*, align 8
  %15 = alloca %struct.Obj*, align 8
  %16 = alloca %struct.Obj*, align 8
  %17 = alloca %struct.Node*, align 8
  %18 = alloca %struct.Node*, align 8
  %19 = alloca %struct.Node*, align 8
  %20 = alloca %struct.Node*, align 8
  %21 = alloca %struct.Obj*, align 8
  %22 = alloca %struct.Node*, align 8
  %23 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %3, align 8
  %24 = load %struct.Node*, %struct.Node** %3, align 8
  %25 = getelementptr inbounds %struct.Node, %struct.Node* %24, i32 0, i32 4
  %26 = load %struct.Node*, %struct.Node** %25, align 16
  call void @add_type(%struct.Node* noundef %26)
  %27 = load %struct.Node*, %struct.Node** %3, align 8
  %28 = getelementptr inbounds %struct.Node, %struct.Node* %27, i32 0, i32 5
  %29 = load %struct.Node*, %struct.Node** %28, align 8
  call void @add_type(%struct.Node* noundef %29)
  %30 = load %struct.Node*, %struct.Node** %3, align 8
  %31 = getelementptr inbounds %struct.Node, %struct.Node* %30, i32 0, i32 3
  %32 = load %struct.Token*, %struct.Token** %31, align 8
  store %struct.Token* %32, %struct.Token** %4, align 8
  %33 = load %struct.Node*, %struct.Node** %3, align 8
  %34 = getelementptr inbounds %struct.Node, %struct.Node* %33, i32 0, i32 4
  %35 = load %struct.Node*, %struct.Node** %34, align 16
  %36 = getelementptr inbounds %struct.Node, %struct.Node* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 16
  %38 = icmp eq i32 %37, 19
  br i1 %38, label %39, label %105

39:                                               ; preds = %1
  %40 = load %struct.Node*, %struct.Node** %3, align 8
  %41 = getelementptr inbounds %struct.Node, %struct.Node* %40, i32 0, i32 4
  %42 = load %struct.Node*, %struct.Node** %41, align 16
  %43 = getelementptr inbounds %struct.Node, %struct.Node* %42, i32 0, i32 4
  %44 = load %struct.Node*, %struct.Node** %43, align 16
  %45 = getelementptr inbounds %struct.Node, %struct.Node* %44, i32 0, i32 2
  %46 = load %struct.Type*, %struct.Type** %45, align 16
  %47 = call %struct.Type* @pointer_to(%struct.Type* noundef %46)
  %48 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %47, i8* noundef null)
  store %struct.Obj* %48, %struct.Obj** %5, align 8
  %49 = load %struct.Obj*, %struct.Obj** %5, align 8
  %50 = load %struct.Token*, %struct.Token** %4, align 8
  %51 = call %struct.Node* @new_var_node(%struct.Obj* noundef %49, %struct.Token* noundef %50)
  %52 = load %struct.Node*, %struct.Node** %3, align 8
  %53 = getelementptr inbounds %struct.Node, %struct.Node* %52, i32 0, i32 4
  %54 = load %struct.Node*, %struct.Node** %53, align 16
  %55 = getelementptr inbounds %struct.Node, %struct.Node* %54, i32 0, i32 4
  %56 = load %struct.Node*, %struct.Node** %55, align 16
  %57 = load %struct.Token*, %struct.Token** %4, align 8
  %58 = call %struct.Node* @new_unary(i32 noundef 20, %struct.Node* noundef %56, %struct.Token* noundef %57)
  %59 = load %struct.Token*, %struct.Token** %4, align 8
  %60 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %51, %struct.Node* noundef %58, %struct.Token* noundef %59)
  store %struct.Node* %60, %struct.Node** %6, align 8
  %61 = load %struct.Obj*, %struct.Obj** %5, align 8
  %62 = load %struct.Token*, %struct.Token** %4, align 8
  %63 = call %struct.Node* @new_var_node(%struct.Obj* noundef %61, %struct.Token* noundef %62)
  %64 = load %struct.Token*, %struct.Token** %4, align 8
  %65 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %63, %struct.Token* noundef %64)
  %66 = load %struct.Token*, %struct.Token** %4, align 8
  %67 = call %struct.Node* @new_unary(i32 noundef 19, %struct.Node* noundef %65, %struct.Token* noundef %66)
  store %struct.Node* %67, %struct.Node** %7, align 8
  %68 = load %struct.Node*, %struct.Node** %3, align 8
  %69 = getelementptr inbounds %struct.Node, %struct.Node* %68, i32 0, i32 4
  %70 = load %struct.Node*, %struct.Node** %69, align 16
  %71 = getelementptr inbounds %struct.Node, %struct.Node* %70, i32 0, i32 14
  %72 = load %struct.Member*, %struct.Member** %71, align 16
  %73 = load %struct.Node*, %struct.Node** %7, align 8
  %74 = getelementptr inbounds %struct.Node, %struct.Node* %73, i32 0, i32 14
  store %struct.Member* %72, %struct.Member** %74, align 16
  %75 = load %struct.Obj*, %struct.Obj** %5, align 8
  %76 = load %struct.Token*, %struct.Token** %4, align 8
  %77 = call %struct.Node* @new_var_node(%struct.Obj* noundef %75, %struct.Token* noundef %76)
  %78 = load %struct.Token*, %struct.Token** %4, align 8
  %79 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %77, %struct.Token* noundef %78)
  %80 = load %struct.Token*, %struct.Token** %4, align 8
  %81 = call %struct.Node* @new_unary(i32 noundef 19, %struct.Node* noundef %79, %struct.Token* noundef %80)
  store %struct.Node* %81, %struct.Node** %8, align 8
  %82 = load %struct.Node*, %struct.Node** %3, align 8
  %83 = getelementptr inbounds %struct.Node, %struct.Node* %82, i32 0, i32 4
  %84 = load %struct.Node*, %struct.Node** %83, align 16
  %85 = getelementptr inbounds %struct.Node, %struct.Node* %84, i32 0, i32 14
  %86 = load %struct.Member*, %struct.Member** %85, align 16
  %87 = load %struct.Node*, %struct.Node** %8, align 8
  %88 = getelementptr inbounds %struct.Node, %struct.Node* %87, i32 0, i32 14
  store %struct.Member* %86, %struct.Member** %88, align 16
  %89 = load %struct.Node*, %struct.Node** %7, align 8
  %90 = load %struct.Node*, %struct.Node** %3, align 8
  %91 = getelementptr inbounds %struct.Node, %struct.Node* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 16
  %93 = load %struct.Node*, %struct.Node** %8, align 8
  %94 = load %struct.Node*, %struct.Node** %3, align 8
  %95 = getelementptr inbounds %struct.Node, %struct.Node* %94, i32 0, i32 5
  %96 = load %struct.Node*, %struct.Node** %95, align 8
  %97 = load %struct.Token*, %struct.Token** %4, align 8
  %98 = call %struct.Node* @new_binary(i32 noundef %92, %struct.Node* noundef %93, %struct.Node* noundef %96, %struct.Token* noundef %97)
  %99 = load %struct.Token*, %struct.Token** %4, align 8
  %100 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %89, %struct.Node* noundef %98, %struct.Token* noundef %99)
  store %struct.Node* %100, %struct.Node** %9, align 8
  %101 = load %struct.Node*, %struct.Node** %6, align 8
  %102 = load %struct.Node*, %struct.Node** %9, align 8
  %103 = load %struct.Token*, %struct.Token** %4, align 8
  %104 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %101, %struct.Node* noundef %102, %struct.Token* noundef %103)
  store %struct.Node* %104, %struct.Node** %2, align 8
  br label %314

105:                                              ; preds = %1
  %106 = load %struct.Node*, %struct.Node** %3, align 8
  %107 = getelementptr inbounds %struct.Node, %struct.Node* %106, i32 0, i32 4
  %108 = load %struct.Node*, %struct.Node** %107, align 16
  %109 = getelementptr inbounds %struct.Node, %struct.Node* %108, i32 0, i32 2
  %110 = load %struct.Type*, %struct.Type** %109, align 16
  %111 = getelementptr inbounds %struct.Type, %struct.Type* %110, i32 0, i32 4
  %112 = load i8, i8* %111, align 1
  %113 = trunc i8 %112 to i1
  br i1 %113, label %119, label %114

114:                                              ; preds = %105
  %115 = load %struct.Node*, %struct.Node** %3, align 8
  %116 = getelementptr inbounds %struct.Node, %struct.Node* %115, i32 0, i32 32
  %117 = load i8, i8* %116, align 16
  %118 = trunc i8 %117 to i1
  br i1 %118, label %119, label %272

119:                                              ; preds = %114, %105
  %120 = bitcast %struct.Node* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %120, i8 0, i64 320, i1 false)
  store %struct.Node* %10, %struct.Node** %11, align 8
  %121 = load %struct.Node*, %struct.Node** %3, align 8
  %122 = getelementptr inbounds %struct.Node, %struct.Node* %121, i32 0, i32 4
  %123 = load %struct.Node*, %struct.Node** %122, align 16
  %124 = getelementptr inbounds %struct.Node, %struct.Node* %123, i32 0, i32 2
  %125 = load %struct.Type*, %struct.Type** %124, align 16
  %126 = call %struct.Type* @pointer_to(%struct.Type* noundef %125)
  %127 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %126, i8* noundef null)
  store %struct.Obj* %127, %struct.Obj** %12, align 8
  %128 = load %struct.Node*, %struct.Node** %3, align 8
  %129 = getelementptr inbounds %struct.Node, %struct.Node* %128, i32 0, i32 5
  %130 = load %struct.Node*, %struct.Node** %129, align 8
  %131 = getelementptr inbounds %struct.Node, %struct.Node* %130, i32 0, i32 2
  %132 = load %struct.Type*, %struct.Type** %131, align 16
  %133 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %132, i8* noundef null)
  store %struct.Obj* %133, %struct.Obj** %13, align 8
  %134 = load %struct.Node*, %struct.Node** %3, align 8
  %135 = getelementptr inbounds %struct.Node, %struct.Node* %134, i32 0, i32 4
  %136 = load %struct.Node*, %struct.Node** %135, align 16
  %137 = getelementptr inbounds %struct.Node, %struct.Node* %136, i32 0, i32 2
  %138 = load %struct.Type*, %struct.Type** %137, align 16
  %139 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %138, i8* noundef null)
  store %struct.Obj* %139, %struct.Obj** %14, align 8
  %140 = load %struct.Node*, %struct.Node** %3, align 8
  %141 = getelementptr inbounds %struct.Node, %struct.Node* %140, i32 0, i32 4
  %142 = load %struct.Node*, %struct.Node** %141, align 16
  %143 = getelementptr inbounds %struct.Node, %struct.Node* %142, i32 0, i32 2
  %144 = load %struct.Type*, %struct.Type** %143, align 16
  %145 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %144, i8* noundef null)
  store %struct.Obj* %145, %struct.Obj** %15, align 8
  %146 = load %struct.Node*, %struct.Node** %3, align 8
  %147 = getelementptr inbounds %struct.Node, %struct.Node* %146, i32 0, i32 32
  %148 = load i8, i8* %147, align 16
  %149 = trunc i8 %148 to i1
  br i1 %149, label %150, label %152

150:                                              ; preds = %119
  %151 = load %struct.Obj*, %struct.Obj** %14, align 8
  br label %154

152:                                              ; preds = %119
  %153 = load %struct.Obj*, %struct.Obj** %15, align 8
  br label %154

154:                                              ; preds = %152, %150
  %155 = phi %struct.Obj* [ %151, %150 ], [ %153, %152 ]
  store %struct.Obj* %155, %struct.Obj** %16, align 8
  %156 = load %struct.Obj*, %struct.Obj** %12, align 8
  %157 = load %struct.Token*, %struct.Token** %4, align 8
  %158 = call %struct.Node* @new_var_node(%struct.Obj* noundef %156, %struct.Token* noundef %157)
  %159 = load %struct.Node*, %struct.Node** %3, align 8
  %160 = getelementptr inbounds %struct.Node, %struct.Node* %159, i32 0, i32 4
  %161 = load %struct.Node*, %struct.Node** %160, align 16
  %162 = load %struct.Token*, %struct.Token** %4, align 8
  %163 = call %struct.Node* @new_unary(i32 noundef 20, %struct.Node* noundef %161, %struct.Token* noundef %162)
  %164 = load %struct.Token*, %struct.Token** %4, align 8
  %165 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %158, %struct.Node* noundef %163, %struct.Token* noundef %164)
  %166 = load %struct.Token*, %struct.Token** %4, align 8
  %167 = call %struct.Node* @new_unary(i32 noundef 38, %struct.Node* noundef %165, %struct.Token* noundef %166)
  %168 = load %struct.Node*, %struct.Node** %11, align 8
  %169 = getelementptr inbounds %struct.Node, %struct.Node* %168, i32 0, i32 1
  store %struct.Node* %167, %struct.Node** %169, align 8
  store %struct.Node* %167, %struct.Node** %11, align 8
  %170 = load %struct.Obj*, %struct.Obj** %13, align 8
  %171 = load %struct.Token*, %struct.Token** %4, align 8
  %172 = call %struct.Node* @new_var_node(%struct.Obj* noundef %170, %struct.Token* noundef %171)
  %173 = load %struct.Node*, %struct.Node** %3, align 8
  %174 = getelementptr inbounds %struct.Node, %struct.Node* %173, i32 0, i32 5
  %175 = load %struct.Node*, %struct.Node** %174, align 8
  %176 = load %struct.Token*, %struct.Token** %4, align 8
  %177 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %172, %struct.Node* noundef %175, %struct.Token* noundef %176)
  %178 = load %struct.Token*, %struct.Token** %4, align 8
  %179 = call %struct.Node* @new_unary(i32 noundef 38, %struct.Node* noundef %177, %struct.Token* noundef %178)
  %180 = load %struct.Node*, %struct.Node** %11, align 8
  %181 = getelementptr inbounds %struct.Node, %struct.Node* %180, i32 0, i32 1
  store %struct.Node* %179, %struct.Node** %181, align 8
  store %struct.Node* %179, %struct.Node** %11, align 8
  %182 = load %struct.Obj*, %struct.Obj** %14, align 8
  %183 = load %struct.Token*, %struct.Token** %4, align 8
  %184 = call %struct.Node* @new_var_node(%struct.Obj* noundef %182, %struct.Token* noundef %183)
  %185 = load %struct.Obj*, %struct.Obj** %12, align 8
  %186 = load %struct.Token*, %struct.Token** %4, align 8
  %187 = call %struct.Node* @new_var_node(%struct.Obj* noundef %185, %struct.Token* noundef %186)
  %188 = load %struct.Token*, %struct.Token** %4, align 8
  %189 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %187, %struct.Token* noundef %188)
  %190 = load %struct.Token*, %struct.Token** %4, align 8
  %191 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %184, %struct.Node* noundef %189, %struct.Token* noundef %190)
  %192 = load %struct.Token*, %struct.Token** %4, align 8
  %193 = call %struct.Node* @new_unary(i32 noundef 38, %struct.Node* noundef %191, %struct.Token* noundef %192)
  %194 = load %struct.Node*, %struct.Node** %11, align 8
  %195 = getelementptr inbounds %struct.Node, %struct.Node* %194, i32 0, i32 1
  store %struct.Node* %193, %struct.Node** %195, align 8
  store %struct.Node* %193, %struct.Node** %11, align 8
  %196 = load %struct.Token*, %struct.Token** %4, align 8
  %197 = call %struct.Node* @new_node(i32 noundef 29, %struct.Token* noundef %196)
  store %struct.Node* %197, %struct.Node** %17, align 8
  %198 = call i8* @new_unique_name()
  %199 = load %struct.Node*, %struct.Node** %17, align 8
  %200 = getelementptr inbounds %struct.Node, %struct.Node* %199, i32 0, i32 11
  store i8* %198, i8** %200, align 8
  %201 = call i8* @new_unique_name()
  %202 = load %struct.Node*, %struct.Node** %17, align 8
  %203 = getelementptr inbounds %struct.Node, %struct.Node* %202, i32 0, i32 12
  store i8* %201, i8** %203, align 16
  %204 = load %struct.Obj*, %struct.Obj** %15, align 8
  %205 = load %struct.Token*, %struct.Token** %4, align 8
  %206 = call %struct.Node* @new_var_node(%struct.Obj* noundef %204, %struct.Token* noundef %205)
  %207 = load %struct.Node*, %struct.Node** %3, align 8
  %208 = getelementptr inbounds %struct.Node, %struct.Node* %207, i32 0, i32 0
  %209 = load i32, i32* %208, align 16
  %210 = load %struct.Obj*, %struct.Obj** %14, align 8
  %211 = load %struct.Token*, %struct.Token** %4, align 8
  %212 = call %struct.Node* @new_var_node(%struct.Obj* noundef %210, %struct.Token* noundef %211)
  %213 = load %struct.Obj*, %struct.Obj** %13, align 8
  %214 = load %struct.Token*, %struct.Token** %4, align 8
  %215 = call %struct.Node* @new_var_node(%struct.Obj* noundef %213, %struct.Token* noundef %214)
  %216 = load %struct.Token*, %struct.Token** %4, align 8
  %217 = call %struct.Node* @new_binary(i32 noundef %209, %struct.Node* noundef %212, %struct.Node* noundef %215, %struct.Token* noundef %216)
  %218 = load %struct.Token*, %struct.Token** %4, align 8
  %219 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %206, %struct.Node* noundef %217, %struct.Token* noundef %218)
  store %struct.Node* %219, %struct.Node** %18, align 8
  %220 = load %struct.Token*, %struct.Token** %4, align 8
  %221 = call %struct.Node* @new_node(i32 noundef 32, %struct.Token* noundef %220)
  %222 = load %struct.Node*, %struct.Node** %17, align 8
  %223 = getelementptr inbounds %struct.Node, %struct.Node* %222, i32 0, i32 7
  store %struct.Node* %221, %struct.Node** %223, align 8
  %224 = load %struct.Node*, %struct.Node** %18, align 8
  %225 = load %struct.Token*, %struct.Token** %4, align 8
  %226 = call %struct.Node* @new_unary(i32 noundef 38, %struct.Node* noundef %224, %struct.Token* noundef %225)
  %227 = load %struct.Node*, %struct.Node** %17, align 8
  %228 = getelementptr inbounds %struct.Node, %struct.Node* %227, i32 0, i32 7
  %229 = load %struct.Node*, %struct.Node** %228, align 8
  %230 = getelementptr inbounds %struct.Node, %struct.Node* %229, i32 0, i32 13
  store %struct.Node* %226, %struct.Node** %230, align 8
  %231 = load %struct.Token*, %struct.Token** %4, align 8
  %232 = call %struct.Node* @new_node(i32 noundef 46, %struct.Token* noundef %231)
  store %struct.Node* %232, %struct.Node** %19, align 8
  %233 = load %struct.Obj*, %struct.Obj** %12, align 8
  %234 = load %struct.Token*, %struct.Token** %4, align 8
  %235 = call %struct.Node* @new_var_node(%struct.Obj* noundef %233, %struct.Token* noundef %234)
  %236 = load %struct.Node*, %struct.Node** %19, align 8
  %237 = getelementptr inbounds %struct.Node, %struct.Node* %236, i32 0, i32 27
  store %struct.Node* %235, %struct.Node** %237, align 8
  %238 = load %struct.Obj*, %struct.Obj** %14, align 8
  %239 = load %struct.Token*, %struct.Token** %4, align 8
  %240 = call %struct.Node* @new_var_node(%struct.Obj* noundef %238, %struct.Token* noundef %239)
  %241 = load %struct.Token*, %struct.Token** %4, align 8
  %242 = call %struct.Node* @new_unary(i32 noundef 20, %struct.Node* noundef %240, %struct.Token* noundef %241)
  %243 = load %struct.Node*, %struct.Node** %19, align 8
  %244 = getelementptr inbounds %struct.Node, %struct.Node* %243, i32 0, i32 28
  store %struct.Node* %242, %struct.Node** %244, align 16
  %245 = load %struct.Obj*, %struct.Obj** %15, align 8
  %246 = load %struct.Token*, %struct.Token** %4, align 8
  %247 = call %struct.Node* @new_var_node(%struct.Obj* noundef %245, %struct.Token* noundef %246)
  %248 = load %struct.Node*, %struct.Node** %19, align 8
  %249 = getelementptr inbounds %struct.Node, %struct.Node* %248, i32 0, i32 29
  store %struct.Node* %247, %struct.Node** %249, align 8
  %250 = load %struct.Node*, %struct.Node** %19, align 8
  %251 = load %struct.Token*, %struct.Token** %4, align 8
  %252 = call %struct.Node* @new_unary(i32 noundef 22, %struct.Node* noundef %250, %struct.Token* noundef %251)
  %253 = load %struct.Node*, %struct.Node** %17, align 8
  %254 = getelementptr inbounds %struct.Node, %struct.Node* %253, i32 0, i32 6
  store %struct.Node* %252, %struct.Node** %254, align 16
  %255 = load %struct.Node*, %struct.Node** %17, align 8
  %256 = load %struct.Node*, %struct.Node** %11, align 8
  %257 = getelementptr inbounds %struct.Node, %struct.Node* %256, i32 0, i32 1
  store %struct.Node* %255, %struct.Node** %257, align 8
  store %struct.Node* %255, %struct.Node** %11, align 8
  %258 = load %struct.Obj*, %struct.Obj** %16, align 8
  %259 = load %struct.Token*, %struct.Token** %4, align 8
  %260 = call %struct.Node* @new_var_node(%struct.Obj* noundef %258, %struct.Token* noundef %259)
  %261 = load %struct.Token*, %struct.Token** %4, align 8
  %262 = call %struct.Node* @new_unary(i32 noundef 38, %struct.Node* noundef %260, %struct.Token* noundef %261)
  %263 = load %struct.Node*, %struct.Node** %11, align 8
  %264 = getelementptr inbounds %struct.Node, %struct.Node* %263, i32 0, i32 1
  store %struct.Node* %262, %struct.Node** %264, align 8
  store %struct.Node* %262, %struct.Node** %11, align 8
  %265 = load %struct.Token*, %struct.Token** %4, align 8
  %266 = call %struct.Node* @new_node(i32 noundef 39, %struct.Token* noundef %265)
  store %struct.Node* %266, %struct.Node** %20, align 8
  %267 = getelementptr inbounds %struct.Node, %struct.Node* %10, i32 0, i32 1
  %268 = load %struct.Node*, %struct.Node** %267, align 8
  %269 = load %struct.Node*, %struct.Node** %20, align 8
  %270 = getelementptr inbounds %struct.Node, %struct.Node* %269, i32 0, i32 13
  store %struct.Node* %268, %struct.Node** %270, align 8
  %271 = load %struct.Node*, %struct.Node** %20, align 8
  store %struct.Node* %271, %struct.Node** %2, align 8
  br label %314

272:                                              ; preds = %114
  %273 = load %struct.Node*, %struct.Node** %3, align 8
  %274 = getelementptr inbounds %struct.Node, %struct.Node* %273, i32 0, i32 4
  %275 = load %struct.Node*, %struct.Node** %274, align 16
  %276 = getelementptr inbounds %struct.Node, %struct.Node* %275, i32 0, i32 2
  %277 = load %struct.Type*, %struct.Type** %276, align 16
  %278 = call %struct.Type* @pointer_to(%struct.Type* noundef %277)
  %279 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %278, i8* noundef null)
  store %struct.Obj* %279, %struct.Obj** %21, align 8
  %280 = load %struct.Obj*, %struct.Obj** %21, align 8
  %281 = load %struct.Token*, %struct.Token** %4, align 8
  %282 = call %struct.Node* @new_var_node(%struct.Obj* noundef %280, %struct.Token* noundef %281)
  %283 = load %struct.Node*, %struct.Node** %3, align 8
  %284 = getelementptr inbounds %struct.Node, %struct.Node* %283, i32 0, i32 4
  %285 = load %struct.Node*, %struct.Node** %284, align 16
  %286 = load %struct.Token*, %struct.Token** %4, align 8
  %287 = call %struct.Node* @new_unary(i32 noundef 20, %struct.Node* noundef %285, %struct.Token* noundef %286)
  %288 = load %struct.Token*, %struct.Token** %4, align 8
  %289 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %282, %struct.Node* noundef %287, %struct.Token* noundef %288)
  store %struct.Node* %289, %struct.Node** %22, align 8
  %290 = load %struct.Obj*, %struct.Obj** %21, align 8
  %291 = load %struct.Token*, %struct.Token** %4, align 8
  %292 = call %struct.Node* @new_var_node(%struct.Obj* noundef %290, %struct.Token* noundef %291)
  %293 = load %struct.Token*, %struct.Token** %4, align 8
  %294 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %292, %struct.Token* noundef %293)
  %295 = load %struct.Node*, %struct.Node** %3, align 8
  %296 = getelementptr inbounds %struct.Node, %struct.Node* %295, i32 0, i32 0
  %297 = load i32, i32* %296, align 16
  %298 = load %struct.Obj*, %struct.Obj** %21, align 8
  %299 = load %struct.Token*, %struct.Token** %4, align 8
  %300 = call %struct.Node* @new_var_node(%struct.Obj* noundef %298, %struct.Token* noundef %299)
  %301 = load %struct.Token*, %struct.Token** %4, align 8
  %302 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %300, %struct.Token* noundef %301)
  %303 = load %struct.Node*, %struct.Node** %3, align 8
  %304 = getelementptr inbounds %struct.Node, %struct.Node* %303, i32 0, i32 5
  %305 = load %struct.Node*, %struct.Node** %304, align 8
  %306 = load %struct.Token*, %struct.Token** %4, align 8
  %307 = call %struct.Node* @new_binary(i32 noundef %297, %struct.Node* noundef %302, %struct.Node* noundef %305, %struct.Token* noundef %306)
  %308 = load %struct.Token*, %struct.Token** %4, align 8
  %309 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %294, %struct.Node* noundef %307, %struct.Token* noundef %308)
  store %struct.Node* %309, %struct.Node** %23, align 8
  %310 = load %struct.Node*, %struct.Node** %22, align 8
  %311 = load %struct.Node*, %struct.Node** %23, align 8
  %312 = load %struct.Token*, %struct.Token** %4, align 8
  %313 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %310, %struct.Node* noundef %311, %struct.Token* noundef %312)
  store %struct.Node* %313, %struct.Node** %2, align 8
  br label %314

314:                                              ; preds = %272, %154, %39
  %315 = load %struct.Node*, %struct.Node** %2, align 8
  ret %struct.Node* %315
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_sub(%struct.Node* noundef %0, %struct.Node* noundef %1, %struct.Token* noundef %2) #0 {
  %4 = alloca %struct.Node*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca %struct.Node*, align 8
  %9 = alloca %struct.Node*, align 8
  %10 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %5, align 8
  store %struct.Node* %1, %struct.Node** %6, align 8
  store %struct.Token* %2, %struct.Token** %7, align 8
  %11 = load %struct.Node*, %struct.Node** %5, align 8
  call void @add_type(%struct.Node* noundef %11)
  %12 = load %struct.Node*, %struct.Node** %6, align 8
  call void @add_type(%struct.Node* noundef %12)
  %13 = load %struct.Node*, %struct.Node** %5, align 8
  %14 = getelementptr inbounds %struct.Node, %struct.Node* %13, i32 0, i32 2
  %15 = load %struct.Type*, %struct.Type** %14, align 16
  %16 = call zeroext i1 @is_numeric(%struct.Type* noundef %15)
  br i1 %16, label %17, label %27

17:                                               ; preds = %3
  %18 = load %struct.Node*, %struct.Node** %6, align 8
  %19 = getelementptr inbounds %struct.Node, %struct.Node* %18, i32 0, i32 2
  %20 = load %struct.Type*, %struct.Type** %19, align 16
  %21 = call zeroext i1 @is_numeric(%struct.Type* noundef %20)
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = load %struct.Node*, %struct.Node** %5, align 8
  %24 = load %struct.Node*, %struct.Node** %6, align 8
  %25 = load %struct.Token*, %struct.Token** %7, align 8
  %26 = call %struct.Node* @new_binary(i32 noundef 2, %struct.Node* noundef %23, %struct.Node* noundef %24, %struct.Token* noundef %25)
  store %struct.Node* %26, %struct.Node** %4, align 8
  br label %134

27:                                               ; preds = %17, %3
  %28 = load %struct.Node*, %struct.Node** %5, align 8
  %29 = getelementptr inbounds %struct.Node, %struct.Node* %28, i32 0, i32 2
  %30 = load %struct.Type*, %struct.Type** %29, align 16
  %31 = getelementptr inbounds %struct.Type, %struct.Type* %30, i32 0, i32 8
  %32 = load %struct.Type*, %struct.Type** %31, align 8
  %33 = getelementptr inbounds %struct.Type, %struct.Type* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 13
  br i1 %35, label %36, label %60

36:                                               ; preds = %27
  %37 = load %struct.Node*, %struct.Node** %6, align 8
  %38 = load %struct.Node*, %struct.Node** %5, align 8
  %39 = getelementptr inbounds %struct.Node, %struct.Node* %38, i32 0, i32 2
  %40 = load %struct.Type*, %struct.Type** %39, align 16
  %41 = getelementptr inbounds %struct.Type, %struct.Type* %40, i32 0, i32 8
  %42 = load %struct.Type*, %struct.Type** %41, align 8
  %43 = getelementptr inbounds %struct.Type, %struct.Type* %42, i32 0, i32 13
  %44 = load %struct.Obj*, %struct.Obj** %43, align 8
  %45 = load %struct.Token*, %struct.Token** %7, align 8
  %46 = call %struct.Node* @new_var_node(%struct.Obj* noundef %44, %struct.Token* noundef %45)
  %47 = load %struct.Token*, %struct.Token** %7, align 8
  %48 = call %struct.Node* @new_binary(i32 noundef 3, %struct.Node* noundef %37, %struct.Node* noundef %46, %struct.Token* noundef %47)
  store %struct.Node* %48, %struct.Node** %6, align 8
  %49 = load %struct.Node*, %struct.Node** %6, align 8
  call void @add_type(%struct.Node* noundef %49)
  %50 = load %struct.Node*, %struct.Node** %5, align 8
  %51 = load %struct.Node*, %struct.Node** %6, align 8
  %52 = load %struct.Token*, %struct.Token** %7, align 8
  %53 = call %struct.Node* @new_binary(i32 noundef 2, %struct.Node* noundef %50, %struct.Node* noundef %51, %struct.Token* noundef %52)
  store %struct.Node* %53, %struct.Node** %8, align 8
  %54 = load %struct.Node*, %struct.Node** %5, align 8
  %55 = getelementptr inbounds %struct.Node, %struct.Node* %54, i32 0, i32 2
  %56 = load %struct.Type*, %struct.Type** %55, align 16
  %57 = load %struct.Node*, %struct.Node** %8, align 8
  %58 = getelementptr inbounds %struct.Node, %struct.Node* %57, i32 0, i32 2
  store %struct.Type* %56, %struct.Type** %58, align 16
  %59 = load %struct.Node*, %struct.Node** %8, align 8
  store %struct.Node* %59, %struct.Node** %4, align 8
  br label %134

60:                                               ; preds = %27
  %61 = load %struct.Node*, %struct.Node** %5, align 8
  %62 = getelementptr inbounds %struct.Node, %struct.Node* %61, i32 0, i32 2
  %63 = load %struct.Type*, %struct.Type** %62, align 16
  %64 = getelementptr inbounds %struct.Type, %struct.Type* %63, i32 0, i32 8
  %65 = load %struct.Type*, %struct.Type** %64, align 8
  %66 = icmp ne %struct.Type* %65, null
  br i1 %66, label %67, label %97

67:                                               ; preds = %60
  %68 = load %struct.Node*, %struct.Node** %6, align 8
  %69 = getelementptr inbounds %struct.Node, %struct.Node* %68, i32 0, i32 2
  %70 = load %struct.Type*, %struct.Type** %69, align 16
  %71 = call zeroext i1 @is_integer(%struct.Type* noundef %70)
  br i1 %71, label %72, label %97

72:                                               ; preds = %67
  %73 = load %struct.Node*, %struct.Node** %6, align 8
  %74 = load %struct.Node*, %struct.Node** %5, align 8
  %75 = getelementptr inbounds %struct.Node, %struct.Node* %74, i32 0, i32 2
  %76 = load %struct.Type*, %struct.Type** %75, align 16
  %77 = getelementptr inbounds %struct.Type, %struct.Type* %76, i32 0, i32 8
  %78 = load %struct.Type*, %struct.Type** %77, align 8
  %79 = getelementptr inbounds %struct.Type, %struct.Type* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = load %struct.Token*, %struct.Token** %7, align 8
  %83 = call %struct.Node* @new_long(i64 noundef %81, %struct.Token* noundef %82)
  %84 = load %struct.Token*, %struct.Token** %7, align 8
  %85 = call %struct.Node* @new_binary(i32 noundef 3, %struct.Node* noundef %73, %struct.Node* noundef %83, %struct.Token* noundef %84)
  store %struct.Node* %85, %struct.Node** %6, align 8
  %86 = load %struct.Node*, %struct.Node** %6, align 8
  call void @add_type(%struct.Node* noundef %86)
  %87 = load %struct.Node*, %struct.Node** %5, align 8
  %88 = load %struct.Node*, %struct.Node** %6, align 8
  %89 = load %struct.Token*, %struct.Token** %7, align 8
  %90 = call %struct.Node* @new_binary(i32 noundef 2, %struct.Node* noundef %87, %struct.Node* noundef %88, %struct.Token* noundef %89)
  store %struct.Node* %90, %struct.Node** %9, align 8
  %91 = load %struct.Node*, %struct.Node** %5, align 8
  %92 = getelementptr inbounds %struct.Node, %struct.Node* %91, i32 0, i32 2
  %93 = load %struct.Type*, %struct.Type** %92, align 16
  %94 = load %struct.Node*, %struct.Node** %9, align 8
  %95 = getelementptr inbounds %struct.Node, %struct.Node* %94, i32 0, i32 2
  store %struct.Type* %93, %struct.Type** %95, align 16
  %96 = load %struct.Node*, %struct.Node** %9, align 8
  store %struct.Node* %96, %struct.Node** %4, align 8
  br label %134

97:                                               ; preds = %67, %60
  %98 = load %struct.Node*, %struct.Node** %5, align 8
  %99 = getelementptr inbounds %struct.Node, %struct.Node* %98, i32 0, i32 2
  %100 = load %struct.Type*, %struct.Type** %99, align 16
  %101 = getelementptr inbounds %struct.Type, %struct.Type* %100, i32 0, i32 8
  %102 = load %struct.Type*, %struct.Type** %101, align 8
  %103 = icmp ne %struct.Type* %102, null
  br i1 %103, label %104, label %132

104:                                              ; preds = %97
  %105 = load %struct.Node*, %struct.Node** %6, align 8
  %106 = getelementptr inbounds %struct.Node, %struct.Node* %105, i32 0, i32 2
  %107 = load %struct.Type*, %struct.Type** %106, align 16
  %108 = getelementptr inbounds %struct.Type, %struct.Type* %107, i32 0, i32 8
  %109 = load %struct.Type*, %struct.Type** %108, align 8
  %110 = icmp ne %struct.Type* %109, null
  br i1 %110, label %111, label %132

111:                                              ; preds = %104
  %112 = load %struct.Node*, %struct.Node** %5, align 8
  %113 = load %struct.Node*, %struct.Node** %6, align 8
  %114 = load %struct.Token*, %struct.Token** %7, align 8
  %115 = call %struct.Node* @new_binary(i32 noundef 2, %struct.Node* noundef %112, %struct.Node* noundef %113, %struct.Token* noundef %114)
  store %struct.Node* %115, %struct.Node** %10, align 8
  %116 = load %struct.Type*, %struct.Type** @ty_long, align 8
  %117 = load %struct.Node*, %struct.Node** %10, align 8
  %118 = getelementptr inbounds %struct.Node, %struct.Node* %117, i32 0, i32 2
  store %struct.Type* %116, %struct.Type** %118, align 16
  %119 = load %struct.Node*, %struct.Node** %10, align 8
  %120 = load %struct.Node*, %struct.Node** %5, align 8
  %121 = getelementptr inbounds %struct.Node, %struct.Node* %120, i32 0, i32 2
  %122 = load %struct.Type*, %struct.Type** %121, align 16
  %123 = getelementptr inbounds %struct.Type, %struct.Type* %122, i32 0, i32 8
  %124 = load %struct.Type*, %struct.Type** %123, align 8
  %125 = getelementptr inbounds %struct.Type, %struct.Type* %124, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = load %struct.Token*, %struct.Token** %7, align 8
  %129 = call %struct.Node* @new_num(i64 noundef %127, %struct.Token* noundef %128)
  %130 = load %struct.Token*, %struct.Token** %7, align 8
  %131 = call %struct.Node* @new_binary(i32 noundef 4, %struct.Node* noundef %119, %struct.Node* noundef %129, %struct.Token* noundef %130)
  store %struct.Node* %131, %struct.Node** %4, align 8
  br label %134

132:                                              ; preds = %104, %97
  %133 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %133, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.215.601, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

134:                                              ; preds = %111, %72, %36, %22
  %135 = load %struct.Node*, %struct.Node** %4, align 8
  ret %struct.Node* %135
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_long(i64 noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  store i64 %0, i64* %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load %struct.Token*, %struct.Token** %4, align 8
  %7 = call %struct.Node* @new_node(i32 noundef 42, %struct.Token* noundef %6)
  store %struct.Node* %7, %struct.Node** %5, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %struct.Node*, %struct.Node** %5, align 8
  %10 = getelementptr inbounds %struct.Node, %struct.Node* %9, i32 0, i32 34
  store i64 %8, i64* %10, align 16
  %11 = load %struct.Type*, %struct.Type** @ty_long, align 8
  %12 = load %struct.Node*, %struct.Node** %5, align 8
  %13 = getelementptr inbounds %struct.Node, %struct.Node* %12, i32 0, i32 2
  store %struct.Type* %11, %struct.Type** %13, align 16
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_num(i64 noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  store i64 %0, i64* %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load %struct.Token*, %struct.Token** %4, align 8
  %7 = call %struct.Node* @new_node(i32 noundef 42, %struct.Token* noundef %6)
  store %struct.Node* %7, %struct.Node** %5, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %struct.Node*, %struct.Node** %5, align 8
  %10 = getelementptr inbounds %struct.Node, %struct.Node* %9, i32 0, i32 34
  store i64 %8, i64* %10, align 16
  %11 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_unary(i32 noundef %0, %struct.Node* noundef %1, %struct.Token* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Node*, align 8
  store i32 %0, i32* %4, align 4
  store %struct.Node* %1, %struct.Node** %5, align 8
  store %struct.Token* %2, %struct.Token** %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = load %struct.Token*, %struct.Token** %6, align 8
  %10 = call %struct.Node* @new_node(i32 noundef %8, %struct.Token* noundef %9)
  store %struct.Node* %10, %struct.Node** %7, align 8
  %11 = load i8, i8* @isDotfile, align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %13, label %33

13:                                               ; preds = %3
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %15 = icmp ne %struct._IO_FILE* %14, null
  br i1 %15, label %16, label %33

16:                                               ; preds = %13
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %18 = load %struct.Node*, %struct.Node** %7, align 8
  %19 = getelementptr inbounds %struct.Node, %struct.Node* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 16
  %21 = call i8* @nodekind2str(i32 noundef %20)
  %22 = load %struct.Node*, %struct.Node** %7, align 8
  %23 = getelementptr inbounds %struct.Node, %struct.Node* %22, i32 0, i32 36
  %24 = load i32, i32* %23, align 16
  %25 = load %struct.Node*, %struct.Node** %5, align 8
  %26 = getelementptr inbounds %struct.Node, %struct.Node* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 16
  %28 = call i8* @nodekind2str(i32 noundef %27)
  %29 = load %struct.Node*, %struct.Node** %5, align 8
  %30 = getelementptr inbounds %struct.Node, %struct.Node* %29, i32 0, i32 36
  %31 = load i32, i32* %30, align 16
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %17, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %21, i32 noundef %24, i8* noundef %28, i32 noundef %31)
  br label %33

33:                                               ; preds = %16, %13, %3
  %34 = load %struct.Node*, %struct.Node** %5, align 8
  %35 = load %struct.Node*, %struct.Node** %7, align 8
  %36 = getelementptr inbounds %struct.Node, %struct.Node* %35, i32 0, i32 4
  store %struct.Node* %34, %struct.Node** %36, align 16
  %37 = load %struct.Node*, %struct.Node** %7, align 8
  ret %struct.Node* %37
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @new_unique_name() #0 {
  %1 = load i32, i32* @new_unique_name.id, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @new_unique_name.id, align 4
  %3 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132.602, i64 0, i64 0), i32 noundef %1)
  ret i8* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @nodekind2str(i32 noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %53 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
    i32 6, label %11
    i32 7, label %12
    i32 8, label %13
    i32 9, label %14
    i32 10, label %15
    i32 11, label %16
    i32 12, label %17
    i32 13, label %18
    i32 14, label %19
    i32 15, label %20
    i32 16, label %21
    i32 17, label %22
    i32 18, label %23
    i32 19, label %24
    i32 20, label %25
    i32 21, label %26
    i32 22, label %27
    i32 23, label %28
    i32 24, label %29
    i32 25, label %30
    i32 26, label %31
    i32 27, label %32
    i32 28, label %33
    i32 29, label %34
    i32 30, label %35
    i32 31, label %36
    i32 32, label %37
    i32 33, label %38
    i32 34, label %39
    i32 35, label %40
    i32 36, label %41
    i32 37, label %42
    i32 38, label %43
    i32 39, label %44
    i32 40, label %45
    i32 41, label %46
    i32 42, label %47
    i32 43, label %48
    i32 44, label %49
    i32 45, label %50
    i32 46, label %51
    i32 47, label %52
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.604, i64 0, i64 0), i8** %2, align 8
  br label %54

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.605, i64 0, i64 0), i8** %2, align 8
  br label %54

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.606, i64 0, i64 0), i8** %2, align 8
  br label %54

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.607, i64 0, i64 0), i8** %2, align 8
  br label %54

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.608, i64 0, i64 0), i8** %2, align 8
  br label %54

10:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.609, i64 0, i64 0), i8** %2, align 8
  br label %54

11:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.610, i64 0, i64 0), i8** %2, align 8
  br label %54

12:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.611, i64 0, i64 0), i8** %2, align 8
  br label %54

13:                                               ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.612, i64 0, i64 0), i8** %2, align 8
  br label %54

14:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.613, i64 0, i64 0), i8** %2, align 8
  br label %54

15:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.614, i64 0, i64 0), i8** %2, align 8
  br label %54

16:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.615, i64 0, i64 0), i8** %2, align 8
  br label %54

17:                                               ; preds = %1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.616, i64 0, i64 0), i8** %2, align 8
  br label %54

18:                                               ; preds = %1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.617, i64 0, i64 0), i8** %2, align 8
  br label %54

19:                                               ; preds = %1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.618, i64 0, i64 0), i8** %2, align 8
  br label %54

20:                                               ; preds = %1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.619, i64 0, i64 0), i8** %2, align 8
  br label %54

21:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23.620, i64 0, i64 0), i8** %2, align 8
  br label %54

22:                                               ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.621, i64 0, i64 0), i8** %2, align 8
  br label %54

23:                                               ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25.622, i64 0, i64 0), i8** %2, align 8
  br label %54

24:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.623, i64 0, i64 0), i8** %2, align 8
  br label %54

25:                                               ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27.624, i64 0, i64 0), i8** %2, align 8
  br label %54

26:                                               ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28.625, i64 0, i64 0), i8** %2, align 8
  br label %54

27:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29.626, i64 0, i64 0), i8** %2, align 8
  br label %54

28:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30.627, i64 0, i64 0), i8** %2, align 8
  br label %54

29:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31.628, i64 0, i64 0), i8** %2, align 8
  br label %54

30:                                               ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32.629, i64 0, i64 0), i8** %2, align 8
  br label %54

31:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33.630, i64 0, i64 0), i8** %2, align 8
  br label %54

32:                                               ; preds = %1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34.631, i64 0, i64 0), i8** %2, align 8
  br label %54

33:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35.632, i64 0, i64 0), i8** %2, align 8
  br label %54

34:                                               ; preds = %1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.633, i64 0, i64 0), i8** %2, align 8
  br label %54

35:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37.634, i64 0, i64 0), i8** %2, align 8
  br label %54

36:                                               ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38.635, i64 0, i64 0), i8** %2, align 8
  br label %54

37:                                               ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39.636, i64 0, i64 0), i8** %2, align 8
  br label %54

38:                                               ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40.637, i64 0, i64 0), i8** %2, align 8
  br label %54

39:                                               ; preds = %1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41.638, i64 0, i64 0), i8** %2, align 8
  br label %54

40:                                               ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42.639, i64 0, i64 0), i8** %2, align 8
  br label %54

41:                                               ; preds = %1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43.640, i64 0, i64 0), i8** %2, align 8
  br label %54

42:                                               ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44.641, i64 0, i64 0), i8** %2, align 8
  br label %54

43:                                               ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45.642, i64 0, i64 0), i8** %2, align 8
  br label %54

44:                                               ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46.643, i64 0, i64 0), i8** %2, align 8
  br label %54

45:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47.644, i64 0, i64 0), i8** %2, align 8
  br label %54

46:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48.645, i64 0, i64 0), i8** %2, align 8
  br label %54

47:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49.646, i64 0, i64 0), i8** %2, align 8
  br label %54

48:                                               ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50.647, i64 0, i64 0), i8** %2, align 8
  br label %54

49:                                               ; preds = %1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51.648, i64 0, i64 0), i8** %2, align 8
  br label %54

50:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52.649, i64 0, i64 0), i8** %2, align 8
  br label %54

51:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53.650, i64 0, i64 0), i8** %2, align 8
  br label %54

52:                                               ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54.651, i64 0, i64 0), i8** %2, align 8
  br label %54

53:                                               ; preds = %1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55.652, i64 0, i64 0), i8** %2, align 8
  br label %54

54:                                               ; preds = %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %55 = load i8*, i8** %2, align 8
  ret i8* %55
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Obj* @new_var(i8* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Obj*, align 8
  store i8* %0, i8** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  %6 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 160) #14
  %7 = bitcast i8* %6 to %struct.Obj*
  store %struct.Obj* %7, %struct.Obj** %5, align 8
  %8 = load %struct.Obj*, %struct.Obj** %5, align 8
  %9 = icmp eq %struct.Obj* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136.656, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

11:                                               ; preds = %2
  %12 = load i8*, i8** %3, align 8
  %13 = load %struct.Obj*, %struct.Obj** %5, align 8
  %14 = getelementptr inbounds %struct.Obj, %struct.Obj* %13, i32 0, i32 1
  store i8* %12, i8** %14, align 8
  %15 = load %struct.Type*, %struct.Type** %4, align 8
  %16 = load %struct.Obj*, %struct.Obj** %5, align 8
  %17 = getelementptr inbounds %struct.Obj, %struct.Obj* %16, i32 0, i32 3
  store %struct.Type* %15, %struct.Type** %17, align 8
  %18 = load %struct.Type*, %struct.Type** %4, align 8
  %19 = getelementptr inbounds %struct.Type, %struct.Type* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = load %struct.Obj*, %struct.Obj** %5, align 8
  %22 = getelementptr inbounds %struct.Obj, %struct.Obj* %21, i32 0, i32 6
  store i32 %20, i32* %22, align 4
  %23 = load %struct.Obj*, %struct.Obj** %5, align 8
  %24 = load i8*, i8** %3, align 8
  %25 = call %struct.VarScope* @push_scope(i8* noundef %24)
  %26 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %25, i32 0, i32 0
  store %struct.Obj* %23, %struct.Obj** %26, align 8
  %27 = load %struct.Obj*, %struct.Obj** %5, align 8
  ret %struct.Obj* %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.VarScope* @push_scope(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.VarScope*, align 8
  store i8* %0, i8** %2, align 8
  %4 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 32) #14
  %5 = bitcast i8* %4 to %struct.VarScope*
  store %struct.VarScope* %5, %struct.VarScope** %3, align 8
  %6 = load %struct.VarScope*, %struct.VarScope** %3, align 8
  %7 = icmp eq %struct.VarScope* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.137.657, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %1
  %10 = load %struct.Scope*, %struct.Scope** @scope, align 8
  %11 = getelementptr inbounds %struct.Scope, %struct.Scope* %10, i32 0, i32 1
  %12 = load i8*, i8** %2, align 8
  %13 = load %struct.VarScope*, %struct.VarScope** %3, align 8
  %14 = bitcast %struct.VarScope* %13 to i8*
  call void @hashmap_put(%struct.HashMap* noundef %11, i8* noundef %12, i8* noundef %14)
  %15 = load %struct.VarScope*, %struct.VarScope** %3, align 8
  ret %struct.VarScope* %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @logand(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @bitor(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %12, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  %11 = call zeroext i1 @equal(%struct.Token* noundef %10, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68.659, i64 0, i64 0))
  br i1 %11, label %12, label %21

12:                                               ; preds = %9
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %13, %struct.Token** %6, align 8
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @bitor(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_binary(i32 noundef 24, %struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9, !llvm.loop !85

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %22, %struct.Token** %23, align 8
  %24 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @bitor(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @bitxor(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %12, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  %11 = call zeroext i1 @equal(%struct.Token* noundef %10, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69.660, i64 0, i64 0))
  br i1 %11, label %12, label %21

12:                                               ; preds = %9
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %13, %struct.Token** %6, align 8
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @bitxor(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_binary(i32 noundef 8, %struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9, !llvm.loop !86

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %22, %struct.Token** %23, align 8
  %24 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @bitxor(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @bitand(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %12, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  %11 = call zeroext i1 @equal(%struct.Token* noundef %10, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.70.661, i64 0, i64 0))
  br i1 %11, label %12, label %21

12:                                               ; preds = %9
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %13, %struct.Token** %6, align 8
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @bitand(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_binary(i32 noundef 9, %struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9, !llvm.loop !87

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %22, %struct.Token** %23, align 8
  %24 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @bitand(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @equality(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %12, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  %11 = call zeroext i1 @equal(%struct.Token* noundef %10, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71.662, i64 0, i64 0))
  br i1 %11, label %12, label %21

12:                                               ; preds = %9
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %13, %struct.Token** %6, align 8
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @equality(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_binary(i32 noundef 7, %struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9, !llvm.loop !88

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %22, %struct.Token** %23, align 8
  %24 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %24
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @equality(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @relational(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %24, %13, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %10, %struct.Token** %6, align 8
  %11 = load %struct.Token*, %struct.Token** %4, align 8
  %12 = call zeroext i1 @equal(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72.663, i64 0, i64 0))
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @relational(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_binary(i32 noundef 12, %struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = call zeroext i1 @equal(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73.664, i64 0, i64 0))
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = load %struct.Node*, %struct.Node** %5, align 8
  %26 = load %struct.Token*, %struct.Token** %4, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  %29 = call %struct.Node* @relational(%struct.Token** noundef %4, %struct.Token* noundef %28)
  %30 = load %struct.Token*, %struct.Token** %6, align 8
  %31 = call %struct.Node* @new_binary(i32 noundef 13, %struct.Node* noundef %25, %struct.Node* noundef %29, %struct.Token* noundef %30)
  store %struct.Node* %31, %struct.Node** %5, align 8
  br label %9

32:                                               ; preds = %21
  %33 = load %struct.Token*, %struct.Token** %4, align 8
  %34 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %33, %struct.Token** %34, align 8
  %35 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %35
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @relational(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @shift(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %46, %35, %24, %13, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %10, %struct.Token** %6, align 8
  %11 = load %struct.Token*, %struct.Token** %4, align 8
  %12 = call zeroext i1 @equal(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74.665, i64 0, i64 0))
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @shift(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_binary(i32 noundef 14, %struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = call zeroext i1 @equal(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75.666, i64 0, i64 0))
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = load %struct.Node*, %struct.Node** %5, align 8
  %26 = load %struct.Token*, %struct.Token** %4, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  %29 = call %struct.Node* @shift(%struct.Token** noundef %4, %struct.Token* noundef %28)
  %30 = load %struct.Token*, %struct.Token** %6, align 8
  %31 = call %struct.Node* @new_binary(i32 noundef 15, %struct.Node* noundef %25, %struct.Node* noundef %29, %struct.Token* noundef %30)
  store %struct.Node* %31, %struct.Node** %5, align 8
  br label %9

32:                                               ; preds = %21
  %33 = load %struct.Token*, %struct.Token** %4, align 8
  %34 = call zeroext i1 @equal(%struct.Token* noundef %33, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76.667, i64 0, i64 0))
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = load %struct.Token*, %struct.Token** %4, align 8
  %37 = getelementptr inbounds %struct.Token, %struct.Token* %36, i32 0, i32 1
  %38 = load %struct.Token*, %struct.Token** %37, align 8
  %39 = call %struct.Node* @shift(%struct.Token** noundef %4, %struct.Token* noundef %38)
  %40 = load %struct.Node*, %struct.Node** %5, align 8
  %41 = load %struct.Token*, %struct.Token** %6, align 8
  %42 = call %struct.Node* @new_binary(i32 noundef 14, %struct.Node* noundef %39, %struct.Node* noundef %40, %struct.Token* noundef %41)
  store %struct.Node* %42, %struct.Node** %5, align 8
  br label %9

43:                                               ; preds = %32
  %44 = load %struct.Token*, %struct.Token** %4, align 8
  %45 = call zeroext i1 @equal(%struct.Token* noundef %44, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77.668, i64 0, i64 0))
  br i1 %45, label %46, label %54

46:                                               ; preds = %43
  %47 = load %struct.Token*, %struct.Token** %4, align 8
  %48 = getelementptr inbounds %struct.Token, %struct.Token* %47, i32 0, i32 1
  %49 = load %struct.Token*, %struct.Token** %48, align 8
  %50 = call %struct.Node* @shift(%struct.Token** noundef %4, %struct.Token* noundef %49)
  %51 = load %struct.Node*, %struct.Node** %5, align 8
  %52 = load %struct.Token*, %struct.Token** %6, align 8
  %53 = call %struct.Node* @new_binary(i32 noundef 15, %struct.Node* noundef %50, %struct.Node* noundef %51, %struct.Token* noundef %52)
  store %struct.Node* %53, %struct.Node** %5, align 8
  br label %9

54:                                               ; preds = %43
  %55 = load %struct.Token*, %struct.Token** %4, align 8
  %56 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %55, %struct.Token** %56, align 8
  %57 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %57
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @shift(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @add(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %24, %13, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %10, %struct.Token** %6, align 8
  %11 = load %struct.Token*, %struct.Token** %4, align 8
  %12 = call zeroext i1 @equal(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78.669, i64 0, i64 0))
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @add(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_binary(i32 noundef 10, %struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = call zeroext i1 @equal(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79.670, i64 0, i64 0))
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = load %struct.Node*, %struct.Node** %5, align 8
  %26 = load %struct.Token*, %struct.Token** %4, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  %29 = call %struct.Node* @add(%struct.Token** noundef %4, %struct.Token* noundef %28)
  %30 = load %struct.Token*, %struct.Token** %6, align 8
  %31 = call %struct.Node* @new_binary(i32 noundef 11, %struct.Node* noundef %25, %struct.Node* noundef %29, %struct.Token* noundef %30)
  store %struct.Node* %31, %struct.Node** %5, align 8
  br label %9

32:                                               ; preds = %21
  %33 = load %struct.Token*, %struct.Token** %4, align 8
  %34 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %33, %struct.Token** %34, align 8
  %35 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %35
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @add(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @mul(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %24, %13, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %10, %struct.Token** %6, align 8
  %11 = load %struct.Token*, %struct.Token** %4, align 8
  %12 = call zeroext i1 @equal(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80.671, i64 0, i64 0))
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @mul(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_add(%struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = call zeroext i1 @equal(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.81.672, i64 0, i64 0))
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = load %struct.Node*, %struct.Node** %5, align 8
  %26 = load %struct.Token*, %struct.Token** %4, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  %29 = call %struct.Node* @mul(%struct.Token** noundef %4, %struct.Token* noundef %28)
  %30 = load %struct.Token*, %struct.Token** %6, align 8
  %31 = call %struct.Node* @new_sub(%struct.Node* noundef %25, %struct.Node* noundef %29, %struct.Token* noundef %30)
  store %struct.Node* %31, %struct.Node** %5, align 8
  br label %9

32:                                               ; preds = %21
  %33 = load %struct.Token*, %struct.Token** %4, align 8
  %34 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %33, %struct.Token** %34, align 8
  %35 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %35
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @mul(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Node* @cast.673(%struct.Token** noundef %4, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %5, align 8
  br label %9

9:                                                ; preds = %35, %24, %13, %2
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %10, %struct.Token** %6, align 8
  %11 = load %struct.Token*, %struct.Token** %4, align 8
  %12 = call zeroext i1 @equal(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82.674, i64 0, i64 0))
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = call %struct.Node* @cast.673(%struct.Token** noundef %4, %struct.Token* noundef %17)
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call %struct.Node* @new_binary(i32 noundef 3, %struct.Node* noundef %14, %struct.Node* noundef %18, %struct.Token* noundef %19)
  store %struct.Node* %20, %struct.Node** %5, align 8
  br label %9

21:                                               ; preds = %9
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = call zeroext i1 @equal(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83.675, i64 0, i64 0))
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = load %struct.Node*, %struct.Node** %5, align 8
  %26 = load %struct.Token*, %struct.Token** %4, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  %29 = call %struct.Node* @cast.673(%struct.Token** noundef %4, %struct.Token* noundef %28)
  %30 = load %struct.Token*, %struct.Token** %6, align 8
  %31 = call %struct.Node* @new_binary(i32 noundef 4, %struct.Node* noundef %25, %struct.Node* noundef %29, %struct.Token* noundef %30)
  store %struct.Node* %31, %struct.Node** %5, align 8
  br label %9

32:                                               ; preds = %21
  %33 = load %struct.Token*, %struct.Token** %4, align 8
  %34 = call zeroext i1 @equal(%struct.Token* noundef %33, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.84.676, i64 0, i64 0))
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = load %struct.Node*, %struct.Node** %5, align 8
  %37 = load %struct.Token*, %struct.Token** %4, align 8
  %38 = getelementptr inbounds %struct.Token, %struct.Token* %37, i32 0, i32 1
  %39 = load %struct.Token*, %struct.Token** %38, align 8
  %40 = call %struct.Node* @cast.673(%struct.Token** noundef %4, %struct.Token* noundef %39)
  %41 = load %struct.Token*, %struct.Token** %6, align 8
  %42 = call %struct.Node* @new_binary(i32 noundef 6, %struct.Node* noundef %36, %struct.Node* noundef %40, %struct.Token* noundef %41)
  store %struct.Node* %42, %struct.Node** %5, align 8
  br label %9

43:                                               ; preds = %32
  %44 = load %struct.Token*, %struct.Token** %4, align 8
  %45 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %44, %struct.Token** %45, align 8
  %46 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %46
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @cast.673(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = call zeroext i1 @equal(%struct.Token* noundef %9, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %10, label %11, label %40

11:                                               ; preds = %2
  %12 = load %struct.Token*, %struct.Token** %5, align 8
  %13 = getelementptr inbounds %struct.Token, %struct.Token* %12, i32 0, i32 1
  %14 = load %struct.Token*, %struct.Token** %13, align 8
  %15 = call zeroext i1 @is_typename(%struct.Token* noundef %14)
  br i1 %15, label %16, label %40

16:                                               ; preds = %11
  %17 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %17, %struct.Token** %6, align 8
  %18 = load %struct.Token*, %struct.Token** %5, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 1
  %20 = load %struct.Token*, %struct.Token** %19, align 8
  %21 = call %struct.Type* @typename(%struct.Token** noundef %5, %struct.Token* noundef %20)
  store %struct.Type* %21, %struct.Type** %7, align 8
  %22 = load %struct.Token*, %struct.Token** %5, align 8
  %23 = call %struct.Token* @skip(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %23, %struct.Token** %5, align 8
  %24 = load %struct.Token*, %struct.Token** %5, align 8
  %25 = call zeroext i1 @equal(%struct.Token* noundef %24, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %25, label %26, label %30

26:                                               ; preds = %16
  %27 = load %struct.Token**, %struct.Token*** %4, align 8
  %28 = load %struct.Token*, %struct.Token** %6, align 8
  %29 = call %struct.Node* @unary(%struct.Token** noundef %27, %struct.Token* noundef %28)
  store %struct.Node* %29, %struct.Node** %3, align 8
  br label %44

30:                                               ; preds = %16
  %31 = load %struct.Token**, %struct.Token*** %4, align 8
  %32 = load %struct.Token*, %struct.Token** %5, align 8
  %33 = call %struct.Node* @cast.673(%struct.Token** noundef %31, %struct.Token* noundef %32)
  %34 = load %struct.Type*, %struct.Type** %7, align 8
  %35 = call %struct.Node* @new_cast(%struct.Node* noundef %33, %struct.Type* noundef %34)
  store %struct.Node* %35, %struct.Node** %8, align 8
  %36 = load %struct.Token*, %struct.Token** %6, align 8
  %37 = load %struct.Node*, %struct.Node** %8, align 8
  %38 = getelementptr inbounds %struct.Node, %struct.Node* %37, i32 0, i32 3
  store %struct.Token* %36, %struct.Token** %38, align 8
  %39 = load %struct.Node*, %struct.Node** %8, align 8
  store %struct.Node* %39, %struct.Node** %3, align 8
  br label %44

40:                                               ; preds = %11, %2
  %41 = load %struct.Token**, %struct.Token*** %4, align 8
  %42 = load %struct.Token*, %struct.Token** %5, align 8
  %43 = call %struct.Node* @unary(%struct.Token** noundef %41, %struct.Token* noundef %42)
  store %struct.Node* %43, %struct.Node** %3, align 8
  br label %44

44:                                               ; preds = %40, %30, %26
  %45 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %45
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_typename(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca i32, align 4
  store %struct.Token* %0, %struct.Token** %2, align 8
  %4 = load i32, i32* getelementptr inbounds (%struct.HashMap, %struct.HashMap* @is_typename.map, i32 0, i32 1), align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %16, %6
  %8 = load i32, i32* %3, align 4
  %9 = sext i32 %8 to i64
  %10 = icmp ult i64 %9, 31
  br i1 %10, label %11, label %19

11:                                               ; preds = %7
  %12 = load i32, i32* %3, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [31 x i8*], [31 x i8*]* @is_typename.kw, i64 0, i64 %13
  %15 = load i8*, i8** %14, align 8
  call void @hashmap_put(%struct.HashMap* noundef @is_typename.map, i8* noundef %15, i8* noundef inttoptr (i64 1 to i8*))
  br label %16

16:                                               ; preds = %11
  %17 = load i32, i32* %3, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %3, align 4
  br label %7, !llvm.loop !89

19:                                               ; preds = %7
  br label %20

20:                                               ; preds = %19, %1
  %21 = load %struct.Token*, %struct.Token** %2, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 4
  %23 = load i8*, i8** %22, align 16
  %24 = load %struct.Token*, %struct.Token** %2, align 8
  %25 = getelementptr inbounds %struct.Token, %struct.Token* %24, i32 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = call i8* @hashmap_get2(%struct.HashMap* noundef @is_typename.map, i8* noundef %23, i32 noundef %26)
  %28 = icmp ne i8* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %20
  %30 = load %struct.Token*, %struct.Token** %2, align 8
  %31 = call %struct.Type* @find_typedef(%struct.Token* noundef %30)
  %32 = icmp ne %struct.Type* %31, null
  br label %33

33:                                               ; preds = %29, %20
  %34 = phi i1 [ true, %20 ], [ %32, %29 ]
  ret i1 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @typename(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Type*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load %struct.Token*, %struct.Token** %4, align 8
  %7 = call %struct.Type* @declspec(%struct.Token** noundef %4, %struct.Token* noundef %6, %struct.VarAttr* noundef null)
  store %struct.Type* %7, %struct.Type** %5, align 8
  %8 = load %struct.Token**, %struct.Token*** %3, align 8
  %9 = load %struct.Token*, %struct.Token** %4, align 8
  %10 = load %struct.Type*, %struct.Type** %5, align 8
  %11 = call %struct.Type* @abstract_declarator(%struct.Token** noundef %8, %struct.Token* noundef %9, %struct.Type* noundef %10)
  ret %struct.Type* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @unary(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Node*, align 8
  %8 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = call zeroext i1 @equal(%struct.Token* noundef %9, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80.671, i64 0, i64 0))
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = load %struct.Token**, %struct.Token*** %4, align 8
  %13 = load %struct.Token*, %struct.Token** %5, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 1
  %15 = load %struct.Token*, %struct.Token** %14, align 8
  %16 = call %struct.Node* @cast.673(%struct.Token** noundef %12, %struct.Token* noundef %15)
  store %struct.Node* %16, %struct.Node** %3, align 8
  br label %154

17:                                               ; preds = %2
  %18 = load %struct.Token*, %struct.Token** %5, align 8
  %19 = call zeroext i1 @equal(%struct.Token* noundef %18, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.81.672, i64 0, i64 0))
  br i1 %19, label %20, label %28

20:                                               ; preds = %17
  %21 = load %struct.Token**, %struct.Token*** %4, align 8
  %22 = load %struct.Token*, %struct.Token** %5, align 8
  %23 = getelementptr inbounds %struct.Token, %struct.Token* %22, i32 0, i32 1
  %24 = load %struct.Token*, %struct.Token** %23, align 8
  %25 = call %struct.Node* @cast.673(%struct.Token** noundef %21, %struct.Token* noundef %24)
  %26 = load %struct.Token*, %struct.Token** %5, align 8
  %27 = call %struct.Node* @new_unary(i32 noundef 5, %struct.Node* noundef %25, %struct.Token* noundef %26)
  store %struct.Node* %27, %struct.Node** %3, align 8
  br label %154

28:                                               ; preds = %17
  %29 = load %struct.Token*, %struct.Token** %5, align 8
  %30 = call zeroext i1 @equal(%struct.Token* noundef %29, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71.662, i64 0, i64 0))
  br i1 %30, label %31, label %55

31:                                               ; preds = %28
  %32 = load %struct.Token**, %struct.Token*** %4, align 8
  %33 = load %struct.Token*, %struct.Token** %5, align 8
  %34 = getelementptr inbounds %struct.Token, %struct.Token* %33, i32 0, i32 1
  %35 = load %struct.Token*, %struct.Token** %34, align 8
  %36 = call %struct.Node* @cast.673(%struct.Token** noundef %32, %struct.Token* noundef %35)
  store %struct.Node* %36, %struct.Node** %6, align 8
  %37 = load %struct.Node*, %struct.Node** %6, align 8
  call void @add_type(%struct.Node* noundef %37)
  %38 = load %struct.Node*, %struct.Node** %6, align 8
  %39 = getelementptr inbounds %struct.Node, %struct.Node* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 16
  %41 = icmp eq i32 %40, 19
  br i1 %41, label %42, label %51

42:                                               ; preds = %31
  %43 = load %struct.Node*, %struct.Node** %6, align 8
  %44 = getelementptr inbounds %struct.Node, %struct.Node* %43, i32 0, i32 14
  %45 = load %struct.Member*, %struct.Member** %44, align 16
  %46 = getelementptr inbounds %struct.Member, %struct.Member* %45, i32 0, i32 7
  %47 = load i8, i8* %46, align 4
  %48 = trunc i8 %47 to i1
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %50, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.126.680, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

51:                                               ; preds = %42, %31
  %52 = load %struct.Node*, %struct.Node** %6, align 8
  %53 = load %struct.Token*, %struct.Token** %5, align 8
  %54 = call %struct.Node* @new_unary(i32 noundef 20, %struct.Node* noundef %52, %struct.Token* noundef %53)
  store %struct.Node* %54, %struct.Node** %3, align 8
  br label %154

55:                                               ; preds = %28
  %56 = load %struct.Token*, %struct.Token** %5, align 8
  %57 = call zeroext i1 @equal(%struct.Token* noundef %56, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82.674, i64 0, i64 0))
  br i1 %57, label %58, label %77

58:                                               ; preds = %55
  %59 = load %struct.Token**, %struct.Token*** %4, align 8
  %60 = load %struct.Token*, %struct.Token** %5, align 8
  %61 = getelementptr inbounds %struct.Token, %struct.Token* %60, i32 0, i32 1
  %62 = load %struct.Token*, %struct.Token** %61, align 8
  %63 = call %struct.Node* @cast.673(%struct.Token** noundef %59, %struct.Token* noundef %62)
  store %struct.Node* %63, %struct.Node** %7, align 8
  %64 = load %struct.Node*, %struct.Node** %7, align 8
  call void @add_type(%struct.Node* noundef %64)
  %65 = load %struct.Node*, %struct.Node** %7, align 8
  %66 = getelementptr inbounds %struct.Node, %struct.Node* %65, i32 0, i32 2
  %67 = load %struct.Type*, %struct.Type** %66, align 16
  %68 = getelementptr inbounds %struct.Type, %struct.Type* %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 11
  br i1 %70, label %71, label %73

71:                                               ; preds = %58
  %72 = load %struct.Node*, %struct.Node** %7, align 8
  store %struct.Node* %72, %struct.Node** %3, align 8
  br label %154

73:                                               ; preds = %58
  %74 = load %struct.Node*, %struct.Node** %7, align 8
  %75 = load %struct.Token*, %struct.Token** %5, align 8
  %76 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %74, %struct.Token* noundef %75)
  store %struct.Node* %76, %struct.Node** %3, align 8
  br label %154

77:                                               ; preds = %55
  %78 = load %struct.Token*, %struct.Token** %5, align 8
  %79 = call zeroext i1 @equal(%struct.Token* noundef %78, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.127.681, i64 0, i64 0))
  br i1 %79, label %80, label %88

80:                                               ; preds = %77
  %81 = load %struct.Token**, %struct.Token*** %4, align 8
  %82 = load %struct.Token*, %struct.Token** %5, align 8
  %83 = getelementptr inbounds %struct.Token, %struct.Token* %82, i32 0, i32 1
  %84 = load %struct.Token*, %struct.Token** %83, align 8
  %85 = call %struct.Node* @cast.673(%struct.Token** noundef %81, %struct.Token* noundef %84)
  %86 = load %struct.Token*, %struct.Token** %5, align 8
  %87 = call %struct.Node* @new_unary(i32 noundef 22, %struct.Node* noundef %85, %struct.Token* noundef %86)
  store %struct.Node* %87, %struct.Node** %3, align 8
  br label %154

88:                                               ; preds = %77
  %89 = load %struct.Token*, %struct.Token** %5, align 8
  %90 = call zeroext i1 @equal(%struct.Token* noundef %89, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.128.682, i64 0, i64 0))
  br i1 %90, label %91, label %99

91:                                               ; preds = %88
  %92 = load %struct.Token**, %struct.Token*** %4, align 8
  %93 = load %struct.Token*, %struct.Token** %5, align 8
  %94 = getelementptr inbounds %struct.Token, %struct.Token* %93, i32 0, i32 1
  %95 = load %struct.Token*, %struct.Token** %94, align 8
  %96 = call %struct.Node* @cast.673(%struct.Token** noundef %92, %struct.Token* noundef %95)
  %97 = load %struct.Token*, %struct.Token** %5, align 8
  %98 = call %struct.Node* @new_unary(i32 noundef 23, %struct.Node* noundef %96, %struct.Token* noundef %97)
  store %struct.Node* %98, %struct.Node** %3, align 8
  br label %154

99:                                               ; preds = %88
  %100 = load %struct.Token*, %struct.Token** %5, align 8
  %101 = call zeroext i1 @equal(%struct.Token* noundef %100, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.129.683, i64 0, i64 0))
  br i1 %101, label %102, label %113

102:                                              ; preds = %99
  %103 = load %struct.Token**, %struct.Token*** %4, align 8
  %104 = load %struct.Token*, %struct.Token** %5, align 8
  %105 = getelementptr inbounds %struct.Token, %struct.Token* %104, i32 0, i32 1
  %106 = load %struct.Token*, %struct.Token** %105, align 8
  %107 = call %struct.Node* @unary(%struct.Token** noundef %103, %struct.Token* noundef %106)
  %108 = load %struct.Token*, %struct.Token** %5, align 8
  %109 = call %struct.Node* @new_num(i64 noundef 1, %struct.Token* noundef %108)
  %110 = load %struct.Token*, %struct.Token** %5, align 8
  %111 = call %struct.Node* @new_add(%struct.Node* noundef %107, %struct.Node* noundef %109, %struct.Token* noundef %110)
  %112 = call %struct.Node* @to_assign(%struct.Node* noundef %111)
  store %struct.Node* %112, %struct.Node** %3, align 8
  br label %154

113:                                              ; preds = %99
  %114 = load %struct.Token*, %struct.Token** %5, align 8
  %115 = call zeroext i1 @equal(%struct.Token* noundef %114, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.130.684, i64 0, i64 0))
  br i1 %115, label %116, label %127

116:                                              ; preds = %113
  %117 = load %struct.Token**, %struct.Token*** %4, align 8
  %118 = load %struct.Token*, %struct.Token** %5, align 8
  %119 = getelementptr inbounds %struct.Token, %struct.Token* %118, i32 0, i32 1
  %120 = load %struct.Token*, %struct.Token** %119, align 8
  %121 = call %struct.Node* @unary(%struct.Token** noundef %117, %struct.Token* noundef %120)
  %122 = load %struct.Token*, %struct.Token** %5, align 8
  %123 = call %struct.Node* @new_num(i64 noundef 1, %struct.Token* noundef %122)
  %124 = load %struct.Token*, %struct.Token** %5, align 8
  %125 = call %struct.Node* @new_sub(%struct.Node* noundef %121, %struct.Node* noundef %123, %struct.Token* noundef %124)
  %126 = call %struct.Node* @to_assign(%struct.Node* noundef %125)
  store %struct.Node* %126, %struct.Node** %3, align 8
  br label %154

127:                                              ; preds = %113
  %128 = load %struct.Token*, %struct.Token** %5, align 8
  %129 = call zeroext i1 @equal(%struct.Token* noundef %128, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68.659, i64 0, i64 0))
  br i1 %129, label %130, label %150

130:                                              ; preds = %127
  %131 = load %struct.Token*, %struct.Token** %5, align 8
  %132 = call %struct.Node* @new_node(i32 noundef 36, %struct.Token* noundef %131)
  store %struct.Node* %132, %struct.Node** %8, align 8
  %133 = load %struct.Token*, %struct.Token** %5, align 8
  %134 = getelementptr inbounds %struct.Token, %struct.Token* %133, i32 0, i32 1
  %135 = load %struct.Token*, %struct.Token** %134, align 8
  %136 = call i8* @get_ident(%struct.Token* noundef %135)
  %137 = load %struct.Node*, %struct.Node** %8, align 8
  %138 = getelementptr inbounds %struct.Node, %struct.Node* %137, i32 0, i32 19
  store i8* %136, i8** %138, align 8
  %139 = load %struct.Node*, %struct.Node** @gotos, align 8
  %140 = load %struct.Node*, %struct.Node** %8, align 8
  %141 = getelementptr inbounds %struct.Node, %struct.Node* %140, i32 0, i32 21
  store %struct.Node* %139, %struct.Node** %141, align 8
  %142 = load %struct.Node*, %struct.Node** %8, align 8
  store %struct.Node* %142, %struct.Node** @gotos, align 8
  %143 = load %struct.Token*, %struct.Token** %5, align 8
  %144 = getelementptr inbounds %struct.Token, %struct.Token* %143, i32 0, i32 1
  %145 = load %struct.Token*, %struct.Token** %144, align 8
  %146 = getelementptr inbounds %struct.Token, %struct.Token* %145, i32 0, i32 1
  %147 = load %struct.Token*, %struct.Token** %146, align 8
  %148 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %147, %struct.Token** %148, align 8
  %149 = load %struct.Node*, %struct.Node** %8, align 8
  store %struct.Node* %149, %struct.Node** %3, align 8
  br label %154

150:                                              ; preds = %127
  %151 = load %struct.Token**, %struct.Token*** %4, align 8
  %152 = load %struct.Token*, %struct.Token** %5, align 8
  %153 = call %struct.Node* @postfix(%struct.Token** noundef %151, %struct.Token* noundef %152)
  store %struct.Node* %153, %struct.Node** %3, align 8
  br label %154

154:                                              ; preds = %150, %130, %116, %102, %91, %80, %73, %71, %51, %20, %11
  %155 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %155
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @get_ident(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %3 = load %struct.Token*, %struct.Token** %2, align 8
  %4 = getelementptr inbounds %struct.Token, %struct.Token* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 16
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = load %struct.Token*, %struct.Token** %2, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %8, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.133.817, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %1
  %10 = load %struct.Token*, %struct.Token** %2, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 4
  %12 = load i8*, i8** %11, align 16
  %13 = load %struct.Token*, %struct.Token** %2, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = call noalias i8* @strndup(i8* noundef %12, i64 noundef %16) #14
  ret i8* %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @postfix(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.Obj*, align 8
  %9 = alloca %struct.Obj*, align 8
  %10 = alloca %struct.Node*, align 8
  %11 = alloca %struct.Node*, align 8
  %12 = alloca %struct.Token*, align 8
  %13 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %14 = load %struct.Token*, %struct.Token** %4, align 8
  %15 = call zeroext i1 @equal(%struct.Token* noundef %14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %15, label %16, label %55

16:                                               ; preds = %2
  %17 = load %struct.Token*, %struct.Token** %4, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 1
  %19 = load %struct.Token*, %struct.Token** %18, align 8
  %20 = call zeroext i1 @is_typename(%struct.Token* noundef %19)
  br i1 %20, label %21, label %55

21:                                               ; preds = %16
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %22, %struct.Token** %6, align 8
  %23 = load %struct.Token*, %struct.Token** %4, align 8
  %24 = getelementptr inbounds %struct.Token, %struct.Token* %23, i32 0, i32 1
  %25 = load %struct.Token*, %struct.Token** %24, align 8
  %26 = call %struct.Type* @typename(%struct.Token** noundef %4, %struct.Token* noundef %25)
  store %struct.Type* %26, %struct.Type** %7, align 8
  %27 = load %struct.Token*, %struct.Token** %4, align 8
  %28 = call %struct.Token* @skip(%struct.Token* noundef %27, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %28, %struct.Token** %4, align 8
  %29 = load %struct.Scope*, %struct.Scope** @scope, align 8
  %30 = getelementptr inbounds %struct.Scope, %struct.Scope* %29, i32 0, i32 0
  %31 = load %struct.Scope*, %struct.Scope** %30, align 8
  %32 = icmp eq %struct.Scope* %31, null
  br i1 %32, label %33, label %41

33:                                               ; preds = %21
  %34 = load %struct.Type*, %struct.Type** %7, align 8
  %35 = call %struct.Obj* @new_anon_gvar(%struct.Type* noundef %34)
  store %struct.Obj* %35, %struct.Obj** %8, align 8
  %36 = load %struct.Token*, %struct.Token** %4, align 8
  %37 = load %struct.Obj*, %struct.Obj** %8, align 8
  call void @gvar_initializer(%struct.Token** noundef %4, %struct.Token* noundef %36, %struct.Obj* noundef %37)
  %38 = load %struct.Obj*, %struct.Obj** %8, align 8
  %39 = load %struct.Token*, %struct.Token** %6, align 8
  %40 = call %struct.Node* @new_var_node(%struct.Obj* noundef %38, %struct.Token* noundef %39)
  store %struct.Node* %40, %struct.Node** %5, align 8
  br label %54

41:                                               ; preds = %21
  %42 = load %struct.Type*, %struct.Type** %7, align 8
  %43 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %42, i8* noundef null)
  store %struct.Obj* %43, %struct.Obj** %9, align 8
  %44 = load %struct.Token*, %struct.Token** %4, align 8
  %45 = load %struct.Obj*, %struct.Obj** %9, align 8
  %46 = call %struct.Node* @lvar_initializer(%struct.Token** noundef %4, %struct.Token* noundef %44, %struct.Obj* noundef %45)
  store %struct.Node* %46, %struct.Node** %10, align 8
  %47 = load %struct.Obj*, %struct.Obj** %9, align 8
  %48 = load %struct.Token*, %struct.Token** %4, align 8
  %49 = call %struct.Node* @new_var_node(%struct.Obj* noundef %47, %struct.Token* noundef %48)
  store %struct.Node* %49, %struct.Node** %11, align 8
  %50 = load %struct.Node*, %struct.Node** %10, align 8
  %51 = load %struct.Node*, %struct.Node** %11, align 8
  %52 = load %struct.Token*, %struct.Token** %6, align 8
  %53 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %50, %struct.Node* noundef %51, %struct.Token* noundef %52)
  store %struct.Node* %53, %struct.Node** %5, align 8
  br label %54

54:                                               ; preds = %41, %33
  br label %58

55:                                               ; preds = %16, %2
  %56 = load %struct.Token*, %struct.Token** %4, align 8
  %57 = call %struct.Node* @primary(%struct.Token** noundef %4, %struct.Token* noundef %56)
  store %struct.Node* %57, %struct.Node** %5, align 8
  br label %58

58:                                               ; preds = %55, %54
  br label %59

59:                                               ; preds = %129, %119, %102, %88, %71, %62, %58
  %60 = load %struct.Token*, %struct.Token** %4, align 8
  %61 = call zeroext i1 @equal(%struct.Token* noundef %60, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %61, label %62, label %68

62:                                               ; preds = %59
  %63 = load %struct.Token*, %struct.Token** %4, align 8
  %64 = getelementptr inbounds %struct.Token, %struct.Token* %63, i32 0, i32 1
  %65 = load %struct.Token*, %struct.Token** %64, align 8
  %66 = load %struct.Node*, %struct.Node** %5, align 8
  %67 = call %struct.Node* @funcall(%struct.Token** noundef %4, %struct.Token* noundef %65, %struct.Node* noundef %66)
  store %struct.Node* %67, %struct.Node** %5, align 8
  br label %59

68:                                               ; preds = %59
  %69 = load %struct.Token*, %struct.Token** %4, align 8
  %70 = call zeroext i1 @equal(%struct.Token* noundef %69, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119.685, i64 0, i64 0))
  br i1 %70, label %71, label %85

71:                                               ; preds = %68
  %72 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %72, %struct.Token** %12, align 8
  %73 = load %struct.Token*, %struct.Token** %4, align 8
  %74 = getelementptr inbounds %struct.Token, %struct.Token* %73, i32 0, i32 1
  %75 = load %struct.Token*, %struct.Token** %74, align 8
  %76 = call %struct.Node* @expr(%struct.Token** noundef %4, %struct.Token* noundef %75)
  store %struct.Node* %76, %struct.Node** %13, align 8
  %77 = load %struct.Token*, %struct.Token** %4, align 8
  %78 = call %struct.Token* @skip(%struct.Token* noundef %77, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125.686, i64 0, i64 0))
  store %struct.Token* %78, %struct.Token** %4, align 8
  %79 = load %struct.Node*, %struct.Node** %5, align 8
  %80 = load %struct.Node*, %struct.Node** %13, align 8
  %81 = load %struct.Token*, %struct.Token** %12, align 8
  %82 = call %struct.Node* @new_add(%struct.Node* noundef %79, %struct.Node* noundef %80, %struct.Token* noundef %81)
  %83 = load %struct.Token*, %struct.Token** %12, align 8
  %84 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %82, %struct.Token* noundef %83)
  store %struct.Node* %84, %struct.Node** %5, align 8
  br label %59

85:                                               ; preds = %68
  %86 = load %struct.Token*, %struct.Token** %4, align 8
  %87 = call zeroext i1 @equal(%struct.Token* noundef %86, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134.687, i64 0, i64 0))
  br i1 %87, label %88, label %99

88:                                               ; preds = %85
  %89 = load %struct.Node*, %struct.Node** %5, align 8
  %90 = load %struct.Token*, %struct.Token** %4, align 8
  %91 = getelementptr inbounds %struct.Token, %struct.Token* %90, i32 0, i32 1
  %92 = load %struct.Token*, %struct.Token** %91, align 8
  %93 = call %struct.Node* @struct_ref(%struct.Node* noundef %89, %struct.Token* noundef %92)
  store %struct.Node* %93, %struct.Node** %5, align 8
  %94 = load %struct.Token*, %struct.Token** %4, align 8
  %95 = getelementptr inbounds %struct.Token, %struct.Token* %94, i32 0, i32 1
  %96 = load %struct.Token*, %struct.Token** %95, align 8
  %97 = getelementptr inbounds %struct.Token, %struct.Token* %96, i32 0, i32 1
  %98 = load %struct.Token*, %struct.Token** %97, align 8
  store %struct.Token* %98, %struct.Token** %4, align 8
  br label %59

99:                                               ; preds = %85
  %100 = load %struct.Token*, %struct.Token** %4, align 8
  %101 = call zeroext i1 @equal(%struct.Token* noundef %100, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135.688, i64 0, i64 0))
  br i1 %101, label %102, label %116

102:                                              ; preds = %99
  %103 = load %struct.Node*, %struct.Node** %5, align 8
  %104 = load %struct.Token*, %struct.Token** %4, align 8
  %105 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %103, %struct.Token* noundef %104)
  store %struct.Node* %105, %struct.Node** %5, align 8
  %106 = load %struct.Node*, %struct.Node** %5, align 8
  %107 = load %struct.Token*, %struct.Token** %4, align 8
  %108 = getelementptr inbounds %struct.Token, %struct.Token* %107, i32 0, i32 1
  %109 = load %struct.Token*, %struct.Token** %108, align 8
  %110 = call %struct.Node* @struct_ref(%struct.Node* noundef %106, %struct.Token* noundef %109)
  store %struct.Node* %110, %struct.Node** %5, align 8
  %111 = load %struct.Token*, %struct.Token** %4, align 8
  %112 = getelementptr inbounds %struct.Token, %struct.Token* %111, i32 0, i32 1
  %113 = load %struct.Token*, %struct.Token** %112, align 8
  %114 = getelementptr inbounds %struct.Token, %struct.Token* %113, i32 0, i32 1
  %115 = load %struct.Token*, %struct.Token** %114, align 8
  store %struct.Token* %115, %struct.Token** %4, align 8
  br label %59

116:                                              ; preds = %99
  %117 = load %struct.Token*, %struct.Token** %4, align 8
  %118 = call zeroext i1 @equal(%struct.Token* noundef %117, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.129.683, i64 0, i64 0))
  br i1 %118, label %119, label %126

119:                                              ; preds = %116
  %120 = load %struct.Node*, %struct.Node** %5, align 8
  %121 = load %struct.Token*, %struct.Token** %4, align 8
  %122 = call %struct.Node* @new_inc_dec(%struct.Node* noundef %120, %struct.Token* noundef %121, i32 noundef 1)
  store %struct.Node* %122, %struct.Node** %5, align 8
  %123 = load %struct.Token*, %struct.Token** %4, align 8
  %124 = getelementptr inbounds %struct.Token, %struct.Token* %123, i32 0, i32 1
  %125 = load %struct.Token*, %struct.Token** %124, align 8
  store %struct.Token* %125, %struct.Token** %4, align 8
  br label %59

126:                                              ; preds = %116
  %127 = load %struct.Token*, %struct.Token** %4, align 8
  %128 = call zeroext i1 @equal(%struct.Token* noundef %127, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.130.684, i64 0, i64 0))
  br i1 %128, label %129, label %136

129:                                              ; preds = %126
  %130 = load %struct.Node*, %struct.Node** %5, align 8
  %131 = load %struct.Token*, %struct.Token** %4, align 8
  %132 = call %struct.Node* @new_inc_dec(%struct.Node* noundef %130, %struct.Token* noundef %131, i32 noundef -1)
  store %struct.Node* %132, %struct.Node** %5, align 8
  %133 = load %struct.Token*, %struct.Token** %4, align 8
  %134 = getelementptr inbounds %struct.Token, %struct.Token* %133, i32 0, i32 1
  %135 = load %struct.Token*, %struct.Token** %134, align 8
  store %struct.Token* %135, %struct.Token** %4, align 8
  br label %59

136:                                              ; preds = %126
  %137 = load %struct.Token*, %struct.Token** %4, align 8
  %138 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %137, %struct.Token** %138, align 8
  %139 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %139
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Obj* @new_anon_gvar(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %3 = call i8* @new_unique_name()
  %4 = load %struct.Type*, %struct.Type** %2, align 8
  %5 = call %struct.Obj* @new_gvar(i8* noundef %3, %struct.Type* noundef %4)
  ret %struct.Obj* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @gvar_initializer(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Obj* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Obj*, align 8
  %7 = alloca %struct.Initializer*, align 8
  %8 = alloca %struct.Relocation, align 8
  %9 = alloca i8*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Obj* %2, %struct.Obj** %6, align 8
  %10 = load %struct.Token**, %struct.Token*** %4, align 8
  %11 = load %struct.Token*, %struct.Token** %5, align 8
  %12 = load %struct.Obj*, %struct.Obj** %6, align 8
  %13 = getelementptr inbounds %struct.Obj, %struct.Obj* %12, i32 0, i32 3
  %14 = load %struct.Type*, %struct.Type** %13, align 8
  %15 = load %struct.Obj*, %struct.Obj** %6, align 8
  %16 = getelementptr inbounds %struct.Obj, %struct.Obj* %15, i32 0, i32 3
  %17 = call %struct.Initializer* @initializer(%struct.Token** noundef %10, %struct.Token* noundef %11, %struct.Type* noundef %14, %struct.Type** noundef %16)
  store %struct.Initializer* %17, %struct.Initializer** %7, align 8
  %18 = bitcast %struct.Relocation* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false)
  %19 = load %struct.Obj*, %struct.Obj** %6, align 8
  %20 = getelementptr inbounds %struct.Obj, %struct.Obj* %19, i32 0, i32 3
  %21 = load %struct.Type*, %struct.Type** %20, align 8
  %22 = getelementptr inbounds %struct.Type, %struct.Type* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = call noalias i8* @calloc(i64 noundef 1, i64 noundef %24) #14
  store i8* %25, i8** %9, align 8
  %26 = load i8*, i8** %9, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %3
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.138.815, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

29:                                               ; preds = %3
  %30 = load %struct.Initializer*, %struct.Initializer** %7, align 8
  %31 = load %struct.Obj*, %struct.Obj** %6, align 8
  %32 = getelementptr inbounds %struct.Obj, %struct.Obj* %31, i32 0, i32 3
  %33 = load %struct.Type*, %struct.Type** %32, align 8
  %34 = load i8*, i8** %9, align 8
  %35 = call %struct.Relocation* @write_gvar_data(%struct.Relocation* noundef %8, %struct.Initializer* noundef %30, %struct.Type* noundef %33, i8* noundef %34, i32 noundef 0)
  %36 = load i8*, i8** %9, align 8
  %37 = load %struct.Obj*, %struct.Obj** %6, align 8
  %38 = getelementptr inbounds %struct.Obj, %struct.Obj* %37, i32 0, i32 15
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %8, i32 0, i32 0
  %40 = load %struct.Relocation*, %struct.Relocation** %39, align 8
  %41 = load %struct.Obj*, %struct.Obj** %6, align 8
  %42 = getelementptr inbounds %struct.Obj, %struct.Obj* %41, i32 0, i32 16
  store %struct.Relocation* %40, %struct.Relocation** %42, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @lvar_initializer(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Obj* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Obj*, align 8
  %7 = alloca %struct.Initializer*, align 8
  %8 = alloca %struct.InitDesg, align 8
  %9 = alloca %struct.Node*, align 8
  %10 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Obj* %2, %struct.Obj** %6, align 8
  %11 = load %struct.Token**, %struct.Token*** %4, align 8
  %12 = load %struct.Token*, %struct.Token** %5, align 8
  %13 = load %struct.Obj*, %struct.Obj** %6, align 8
  %14 = getelementptr inbounds %struct.Obj, %struct.Obj* %13, i32 0, i32 3
  %15 = load %struct.Type*, %struct.Type** %14, align 8
  %16 = load %struct.Obj*, %struct.Obj** %6, align 8
  %17 = getelementptr inbounds %struct.Obj, %struct.Obj* %16, i32 0, i32 3
  %18 = call %struct.Initializer* @initializer(%struct.Token** noundef %11, %struct.Token* noundef %12, %struct.Type* noundef %15, %struct.Type** noundef %17)
  store %struct.Initializer* %18, %struct.Initializer** %7, align 8
  %19 = bitcast %struct.InitDesg* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false)
  %20 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %8, i32 0, i32 3
  %21 = load %struct.Obj*, %struct.Obj** %6, align 8
  store %struct.Obj* %21, %struct.Obj** %20, align 8
  %22 = load %struct.Token*, %struct.Token** %5, align 8
  %23 = call %struct.Node* @new_node(i32 noundef 44, %struct.Token* noundef %22)
  store %struct.Node* %23, %struct.Node** %9, align 8
  %24 = load %struct.Obj*, %struct.Obj** %6, align 8
  %25 = load %struct.Node*, %struct.Node** %9, align 8
  %26 = getelementptr inbounds %struct.Node, %struct.Node* %25, i32 0, i32 33
  store %struct.Obj* %24, %struct.Obj** %26, align 8
  %27 = load %struct.Initializer*, %struct.Initializer** %7, align 8
  %28 = load %struct.Obj*, %struct.Obj** %6, align 8
  %29 = getelementptr inbounds %struct.Obj, %struct.Obj* %28, i32 0, i32 3
  %30 = load %struct.Type*, %struct.Type** %29, align 8
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = call %struct.Node* @create_lvar_init(%struct.Initializer* noundef %27, %struct.Type* noundef %30, %struct.InitDesg* noundef %8, %struct.Token* noundef %31)
  store %struct.Node* %32, %struct.Node** %10, align 8
  %33 = load %struct.Node*, %struct.Node** %9, align 8
  %34 = load %struct.Node*, %struct.Node** %10, align 8
  %35 = load %struct.Token*, %struct.Token** %5, align 8
  %36 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %33, %struct.Node* noundef %34, %struct.Token* noundef %35)
  ret %struct.Node* %36
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @primary(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Node*, align 8
  %8 = alloca %struct.Node*, align 8
  %9 = alloca %struct.Type*, align 8
  %10 = alloca %struct.Node*, align 8
  %11 = alloca %struct.Node*, align 8
  %12 = alloca %struct.Node*, align 8
  %13 = alloca %struct.Type*, align 8
  %14 = alloca %struct.Node*, align 8
  %15 = alloca %struct.Type*, align 8
  %16 = alloca %struct.Type*, align 8
  %17 = alloca %struct.Type*, align 8
  %18 = alloca %struct.Node*, align 8
  %19 = alloca %struct.Node*, align 8
  %20 = alloca %struct.Node*, align 8
  %21 = alloca %struct.Node*, align 8
  %22 = alloca %struct.Node*, align 8
  %23 = alloca %struct.VarScope*, align 8
  %24 = alloca %struct.Node*, align 8
  %25 = alloca %struct.Obj*, align 8
  %26 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %27 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %27, %struct.Token** %6, align 8
  %28 = load %struct.Token*, %struct.Token** %5, align 8
  %29 = call zeroext i1 @equal(%struct.Token* noundef %28, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %29, label %30, label %52

30:                                               ; preds = %2
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = getelementptr inbounds %struct.Token, %struct.Token* %31, i32 0, i32 1
  %33 = load %struct.Token*, %struct.Token** %32, align 8
  %34 = call zeroext i1 @equal(%struct.Token* noundef %33, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %34, label %35, label %52

35:                                               ; preds = %30
  %36 = load %struct.Token*, %struct.Token** %5, align 8
  %37 = call %struct.Node* @new_node(i32 noundef 39, %struct.Token* noundef %36)
  store %struct.Node* %37, %struct.Node** %7, align 8
  %38 = load %struct.Token*, %struct.Token** %5, align 8
  %39 = getelementptr inbounds %struct.Token, %struct.Token* %38, i32 0, i32 1
  %40 = load %struct.Token*, %struct.Token** %39, align 8
  %41 = getelementptr inbounds %struct.Token, %struct.Token* %40, i32 0, i32 1
  %42 = load %struct.Token*, %struct.Token** %41, align 8
  %43 = call %struct.Node* @compound_stmt(%struct.Token** noundef %5, %struct.Token* noundef %42)
  %44 = getelementptr inbounds %struct.Node, %struct.Node* %43, i32 0, i32 13
  %45 = load %struct.Node*, %struct.Node** %44, align 8
  %46 = load %struct.Node*, %struct.Node** %7, align 8
  %47 = getelementptr inbounds %struct.Node, %struct.Node* %46, i32 0, i32 13
  store %struct.Node* %45, %struct.Node** %47, align 8
  %48 = load %struct.Token*, %struct.Token** %5, align 8
  %49 = call %struct.Token* @skip(%struct.Token* noundef %48, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %50 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %49, %struct.Token** %50, align 8
  %51 = load %struct.Node*, %struct.Node** %7, align 8
  store %struct.Node* %51, %struct.Node** %3, align 8
  br label %542

52:                                               ; preds = %30, %2
  %53 = load %struct.Token*, %struct.Token** %5, align 8
  %54 = call zeroext i1 @equal(%struct.Token* noundef %53, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %54, label %55, label %64

55:                                               ; preds = %52
  %56 = load %struct.Token*, %struct.Token** %5, align 8
  %57 = getelementptr inbounds %struct.Token, %struct.Token* %56, i32 0, i32 1
  %58 = load %struct.Token*, %struct.Token** %57, align 8
  %59 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %58)
  store %struct.Node* %59, %struct.Node** %8, align 8
  %60 = load %struct.Token*, %struct.Token** %5, align 8
  %61 = call %struct.Token* @skip(%struct.Token* noundef %60, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %62 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %61, %struct.Token** %62, align 8
  %63 = load %struct.Node*, %struct.Node** %8, align 8
  store %struct.Node* %63, %struct.Node** %3, align 8
  br label %542

64:                                               ; preds = %52
  %65 = load %struct.Token*, %struct.Token** %5, align 8
  %66 = call zeroext i1 @equal(%struct.Token* noundef %65, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123.694, i64 0, i64 0))
  br i1 %66, label %67, label %124

67:                                               ; preds = %64
  %68 = load %struct.Token*, %struct.Token** %5, align 8
  %69 = getelementptr inbounds %struct.Token, %struct.Token* %68, i32 0, i32 1
  %70 = load %struct.Token*, %struct.Token** %69, align 8
  %71 = call zeroext i1 @equal(%struct.Token* noundef %70, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %71, label %72, label %124

72:                                               ; preds = %67
  %73 = load %struct.Token*, %struct.Token** %5, align 8
  %74 = getelementptr inbounds %struct.Token, %struct.Token* %73, i32 0, i32 1
  %75 = load %struct.Token*, %struct.Token** %74, align 8
  %76 = getelementptr inbounds %struct.Token, %struct.Token* %75, i32 0, i32 1
  %77 = load %struct.Token*, %struct.Token** %76, align 8
  %78 = call zeroext i1 @is_typename(%struct.Token* noundef %77)
  br i1 %78, label %79, label %124

79:                                               ; preds = %72
  %80 = load %struct.Token*, %struct.Token** %5, align 8
  %81 = getelementptr inbounds %struct.Token, %struct.Token* %80, i32 0, i32 1
  %82 = load %struct.Token*, %struct.Token** %81, align 8
  %83 = getelementptr inbounds %struct.Token, %struct.Token* %82, i32 0, i32 1
  %84 = load %struct.Token*, %struct.Token** %83, align 8
  %85 = call %struct.Type* @typename(%struct.Token** noundef %5, %struct.Token* noundef %84)
  store %struct.Type* %85, %struct.Type** %9, align 8
  %86 = load %struct.Token*, %struct.Token** %5, align 8
  %87 = call %struct.Token* @skip(%struct.Token* noundef %86, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %88 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %87, %struct.Token** %88, align 8
  %89 = load %struct.Type*, %struct.Type** %9, align 8
  %90 = getelementptr inbounds %struct.Type, %struct.Type* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 13
  br i1 %92, label %93, label %117

93:                                               ; preds = %79
  %94 = load %struct.Type*, %struct.Type** %9, align 8
  %95 = getelementptr inbounds %struct.Type, %struct.Type* %94, i32 0, i32 13
  %96 = load %struct.Obj*, %struct.Obj** %95, align 8
  %97 = icmp ne %struct.Obj* %96, null
  br i1 %97, label %98, label %104

98:                                               ; preds = %93
  %99 = load %struct.Type*, %struct.Type** %9, align 8
  %100 = getelementptr inbounds %struct.Type, %struct.Type* %99, i32 0, i32 13
  %101 = load %struct.Obj*, %struct.Obj** %100, align 8
  %102 = load %struct.Token*, %struct.Token** %5, align 8
  %103 = call %struct.Node* @new_var_node(%struct.Obj* noundef %101, %struct.Token* noundef %102)
  store %struct.Node* %103, %struct.Node** %3, align 8
  br label %542

104:                                              ; preds = %93
  %105 = load %struct.Type*, %struct.Type** %9, align 8
  %106 = load %struct.Token*, %struct.Token** %5, align 8
  %107 = call %struct.Node* @compute_vla_size(%struct.Type* noundef %105, %struct.Token* noundef %106)
  store %struct.Node* %107, %struct.Node** %10, align 8
  %108 = load %struct.Type*, %struct.Type** %9, align 8
  %109 = getelementptr inbounds %struct.Type, %struct.Type* %108, i32 0, i32 13
  %110 = load %struct.Obj*, %struct.Obj** %109, align 8
  %111 = load %struct.Token*, %struct.Token** %5, align 8
  %112 = call %struct.Node* @new_var_node(%struct.Obj* noundef %110, %struct.Token* noundef %111)
  store %struct.Node* %112, %struct.Node** %11, align 8
  %113 = load %struct.Node*, %struct.Node** %10, align 8
  %114 = load %struct.Node*, %struct.Node** %11, align 8
  %115 = load %struct.Token*, %struct.Token** %5, align 8
  %116 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %113, %struct.Node* noundef %114, %struct.Token* noundef %115)
  store %struct.Node* %116, %struct.Node** %3, align 8
  br label %542

117:                                              ; preds = %79
  %118 = load %struct.Type*, %struct.Type** %9, align 8
  %119 = getelementptr inbounds %struct.Type, %struct.Type* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  %122 = load %struct.Token*, %struct.Token** %6, align 8
  %123 = call %struct.Node* @new_ulong(i64 noundef %121, %struct.Token* noundef %122)
  store %struct.Node* %123, %struct.Node** %3, align 8
  br label %542

124:                                              ; preds = %72, %67, %64
  %125 = load %struct.Token*, %struct.Token** %5, align 8
  %126 = call zeroext i1 @equal(%struct.Token* noundef %125, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123.694, i64 0, i64 0))
  br i1 %126, label %127, label %157

127:                                              ; preds = %124
  %128 = load %struct.Token**, %struct.Token*** %4, align 8
  %129 = load %struct.Token*, %struct.Token** %5, align 8
  %130 = getelementptr inbounds %struct.Token, %struct.Token* %129, i32 0, i32 1
  %131 = load %struct.Token*, %struct.Token** %130, align 8
  %132 = call %struct.Node* @unary(%struct.Token** noundef %128, %struct.Token* noundef %131)
  store %struct.Node* %132, %struct.Node** %12, align 8
  %133 = load %struct.Node*, %struct.Node** %12, align 8
  call void @add_type(%struct.Node* noundef %133)
  %134 = load %struct.Node*, %struct.Node** %12, align 8
  %135 = getelementptr inbounds %struct.Node, %struct.Node* %134, i32 0, i32 2
  %136 = load %struct.Type*, %struct.Type** %135, align 16
  %137 = getelementptr inbounds %struct.Type, %struct.Type* %136, i32 0, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 13
  br i1 %139, label %140, label %148

140:                                              ; preds = %127
  %141 = load %struct.Node*, %struct.Node** %12, align 8
  %142 = getelementptr inbounds %struct.Node, %struct.Node* %141, i32 0, i32 2
  %143 = load %struct.Type*, %struct.Type** %142, align 16
  %144 = getelementptr inbounds %struct.Type, %struct.Type* %143, i32 0, i32 13
  %145 = load %struct.Obj*, %struct.Obj** %144, align 8
  %146 = load %struct.Token*, %struct.Token** %5, align 8
  %147 = call %struct.Node* @new_var_node(%struct.Obj* noundef %145, %struct.Token* noundef %146)
  store %struct.Node* %147, %struct.Node** %3, align 8
  br label %542

148:                                              ; preds = %127
  %149 = load %struct.Node*, %struct.Node** %12, align 8
  %150 = getelementptr inbounds %struct.Node, %struct.Node* %149, i32 0, i32 2
  %151 = load %struct.Type*, %struct.Type** %150, align 16
  %152 = getelementptr inbounds %struct.Type, %struct.Type* %151, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = load %struct.Token*, %struct.Token** %5, align 8
  %156 = call %struct.Node* @new_ulong(i64 noundef %154, %struct.Token* noundef %155)
  store %struct.Node* %156, %struct.Node** %3, align 8
  br label %542

157:                                              ; preds = %124
  %158 = load %struct.Token*, %struct.Token** %5, align 8
  %159 = call zeroext i1 @equal(%struct.Token* noundef %158, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124.695, i64 0, i64 0))
  br i1 %159, label %160, label %188

160:                                              ; preds = %157
  %161 = load %struct.Token*, %struct.Token** %5, align 8
  %162 = getelementptr inbounds %struct.Token, %struct.Token* %161, i32 0, i32 1
  %163 = load %struct.Token*, %struct.Token** %162, align 8
  %164 = call zeroext i1 @equal(%struct.Token* noundef %163, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %164, label %165, label %188

165:                                              ; preds = %160
  %166 = load %struct.Token*, %struct.Token** %5, align 8
  %167 = getelementptr inbounds %struct.Token, %struct.Token* %166, i32 0, i32 1
  %168 = load %struct.Token*, %struct.Token** %167, align 8
  %169 = getelementptr inbounds %struct.Token, %struct.Token* %168, i32 0, i32 1
  %170 = load %struct.Token*, %struct.Token** %169, align 8
  %171 = call zeroext i1 @is_typename(%struct.Token* noundef %170)
  br i1 %171, label %172, label %188

172:                                              ; preds = %165
  %173 = load %struct.Token*, %struct.Token** %5, align 8
  %174 = getelementptr inbounds %struct.Token, %struct.Token* %173, i32 0, i32 1
  %175 = load %struct.Token*, %struct.Token** %174, align 8
  %176 = getelementptr inbounds %struct.Token, %struct.Token* %175, i32 0, i32 1
  %177 = load %struct.Token*, %struct.Token** %176, align 8
  %178 = call %struct.Type* @typename(%struct.Token** noundef %5, %struct.Token* noundef %177)
  store %struct.Type* %178, %struct.Type** %13, align 8
  %179 = load %struct.Token*, %struct.Token** %5, align 8
  %180 = call %struct.Token* @skip(%struct.Token* noundef %179, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %181 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %180, %struct.Token** %181, align 8
  %182 = load %struct.Type*, %struct.Type** %13, align 8
  %183 = getelementptr inbounds %struct.Type, %struct.Type* %182, i32 0, i32 2
  %184 = load i32, i32* %183, align 8
  %185 = sext i32 %184 to i64
  %186 = load %struct.Token*, %struct.Token** %5, align 8
  %187 = call %struct.Node* @new_ulong(i64 noundef %185, %struct.Token* noundef %186)
  store %struct.Node* %187, %struct.Node** %3, align 8
  br label %542

188:                                              ; preds = %165, %160, %157
  %189 = load %struct.Token*, %struct.Token** %5, align 8
  %190 = call zeroext i1 @equal(%struct.Token* noundef %189, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124.695, i64 0, i64 0))
  br i1 %190, label %191, label %206

191:                                              ; preds = %188
  %192 = load %struct.Token**, %struct.Token*** %4, align 8
  %193 = load %struct.Token*, %struct.Token** %5, align 8
  %194 = getelementptr inbounds %struct.Token, %struct.Token* %193, i32 0, i32 1
  %195 = load %struct.Token*, %struct.Token** %194, align 8
  %196 = call %struct.Node* @unary(%struct.Token** noundef %192, %struct.Token* noundef %195)
  store %struct.Node* %196, %struct.Node** %14, align 8
  %197 = load %struct.Node*, %struct.Node** %14, align 8
  call void @add_type(%struct.Node* noundef %197)
  %198 = load %struct.Node*, %struct.Node** %14, align 8
  %199 = getelementptr inbounds %struct.Node, %struct.Node* %198, i32 0, i32 2
  %200 = load %struct.Type*, %struct.Type** %199, align 16
  %201 = getelementptr inbounds %struct.Type, %struct.Type* %200, i32 0, i32 2
  %202 = load i32, i32* %201, align 8
  %203 = sext i32 %202 to i64
  %204 = load %struct.Token*, %struct.Token** %5, align 8
  %205 = call %struct.Node* @new_ulong(i64 noundef %203, %struct.Token* noundef %204)
  store %struct.Node* %205, %struct.Node** %3, align 8
  br label %542

206:                                              ; preds = %188
  %207 = load %struct.Token*, %struct.Token** %5, align 8
  %208 = call zeroext i1 @equal(%struct.Token* noundef %207, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.166.696, i64 0, i64 0))
  br i1 %208, label %209, label %215

209:                                              ; preds = %206
  %210 = load %struct.Token**, %struct.Token*** %4, align 8
  %211 = load %struct.Token*, %struct.Token** %5, align 8
  %212 = getelementptr inbounds %struct.Token, %struct.Token* %211, i32 0, i32 1
  %213 = load %struct.Token*, %struct.Token** %212, align 8
  %214 = call %struct.Node* @generic_selection(%struct.Token** noundef %210, %struct.Token* noundef %213)
  store %struct.Node* %214, %struct.Node** %3, align 8
  br label %542

215:                                              ; preds = %206
  %216 = load %struct.Token*, %struct.Token** %5, align 8
  %217 = call zeroext i1 @equal(%struct.Token* noundef %216, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167.697, i64 0, i64 0))
  br i1 %217, label %218, label %242

218:                                              ; preds = %215
  %219 = load %struct.Token*, %struct.Token** %5, align 8
  %220 = getelementptr inbounds %struct.Token, %struct.Token* %219, i32 0, i32 1
  %221 = load %struct.Token*, %struct.Token** %220, align 8
  %222 = call %struct.Token* @skip(%struct.Token* noundef %221, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %222, %struct.Token** %5, align 8
  %223 = load %struct.Token*, %struct.Token** %5, align 8
  %224 = call %struct.Type* @typename(%struct.Token** noundef %5, %struct.Token* noundef %223)
  store %struct.Type* %224, %struct.Type** %15, align 8
  %225 = load %struct.Token*, %struct.Token** %5, align 8
  %226 = call zeroext i1 @equal(%struct.Token* noundef %225, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br i1 %226, label %227, label %230

227:                                              ; preds = %218
  %228 = load %struct.Token*, %struct.Token** %5, align 8
  %229 = call %struct.Token* @skip(%struct.Token* noundef %228, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %229, %struct.Token** %5, align 8
  br label %230

230:                                              ; preds = %227, %218
  %231 = load %struct.Token*, %struct.Token** %5, align 8
  %232 = call %struct.Type* @typename(%struct.Token** noundef %5, %struct.Token* noundef %231)
  store %struct.Type* %232, %struct.Type** %16, align 8
  %233 = load %struct.Token*, %struct.Token** %5, align 8
  %234 = call %struct.Token* @skip(%struct.Token* noundef %233, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %235 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %234, %struct.Token** %235, align 8
  %236 = load %struct.Type*, %struct.Type** %15, align 8
  %237 = load %struct.Type*, %struct.Type** %16, align 8
  %238 = call zeroext i1 @is_compatible(%struct.Type* noundef %236, %struct.Type* noundef %237)
  %239 = zext i1 %238 to i64
  %240 = load %struct.Token*, %struct.Token** %6, align 8
  %241 = call %struct.Node* @new_num(i64 noundef %239, %struct.Token* noundef %240)
  store %struct.Node* %241, %struct.Node** %3, align 8
  br label %542

242:                                              ; preds = %215
  %243 = load %struct.Token*, %struct.Token** %5, align 8
  %244 = call zeroext i1 @equal(%struct.Token* noundef %243, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.168.698, i64 0, i64 0))
  br i1 %244, label %245, label %274

245:                                              ; preds = %242
  %246 = load %struct.Token*, %struct.Token** %5, align 8
  %247 = getelementptr inbounds %struct.Token, %struct.Token* %246, i32 0, i32 1
  %248 = load %struct.Token*, %struct.Token** %247, align 8
  %249 = call %struct.Token* @skip(%struct.Token* noundef %248, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %249, %struct.Token** %5, align 8
  %250 = load %struct.Token*, %struct.Token** %5, align 8
  %251 = call %struct.Type* @typename(%struct.Token** noundef %5, %struct.Token* noundef %250)
  store %struct.Type* %251, %struct.Type** %17, align 8
  %252 = load %struct.Token*, %struct.Token** %5, align 8
  %253 = call %struct.Token* @skip(%struct.Token* noundef %252, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %254 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %253, %struct.Token** %254, align 8
  %255 = load %struct.Type*, %struct.Type** %17, align 8
  %256 = call zeroext i1 @is_integer(%struct.Type* noundef %255)
  br i1 %256, label %262, label %257

257:                                              ; preds = %245
  %258 = load %struct.Type*, %struct.Type** %17, align 8
  %259 = getelementptr inbounds %struct.Type, %struct.Type* %258, i32 0, i32 0
  %260 = load i32, i32* %259, align 8
  %261 = icmp eq i32 %260, 10
  br i1 %261, label %262, label %265

262:                                              ; preds = %257, %245
  %263 = load %struct.Token*, %struct.Token** %6, align 8
  %264 = call %struct.Node* @new_num(i64 noundef 0, %struct.Token* noundef %263)
  store %struct.Node* %264, %struct.Node** %3, align 8
  br label %542

265:                                              ; preds = %257
  %266 = load %struct.Type*, %struct.Type** %17, align 8
  %267 = call zeroext i1 @is_flonum(%struct.Type* noundef %266)
  br i1 %267, label %268, label %271

268:                                              ; preds = %265
  %269 = load %struct.Token*, %struct.Token** %6, align 8
  %270 = call %struct.Node* @new_num(i64 noundef 1, %struct.Token* noundef %269)
  store %struct.Node* %270, %struct.Node** %3, align 8
  br label %542

271:                                              ; preds = %265
  %272 = load %struct.Token*, %struct.Token** %6, align 8
  %273 = call %struct.Node* @new_num(i64 noundef 2, %struct.Token* noundef %272)
  store %struct.Node* %273, %struct.Node** %3, align 8
  br label %542

274:                                              ; preds = %242
  %275 = load %struct.Token*, %struct.Token** %5, align 8
  %276 = call zeroext i1 @equal(%struct.Token* noundef %275, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169.699, i64 0, i64 0))
  br i1 %276, label %277, label %304

277:                                              ; preds = %274
  %278 = load %struct.Token*, %struct.Token** %5, align 8
  %279 = call %struct.Node* @new_node(i32 noundef 46, %struct.Token* noundef %278)
  store %struct.Node* %279, %struct.Node** %18, align 8
  %280 = load %struct.Token*, %struct.Token** %5, align 8
  %281 = getelementptr inbounds %struct.Token, %struct.Token* %280, i32 0, i32 1
  %282 = load %struct.Token*, %struct.Token** %281, align 8
  %283 = call %struct.Token* @skip(%struct.Token* noundef %282, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %283, %struct.Token** %5, align 8
  %284 = load %struct.Token*, %struct.Token** %5, align 8
  %285 = call %struct.Node* @assign(%struct.Token** noundef %5, %struct.Token* noundef %284)
  %286 = load %struct.Node*, %struct.Node** %18, align 8
  %287 = getelementptr inbounds %struct.Node, %struct.Node* %286, i32 0, i32 27
  store %struct.Node* %285, %struct.Node** %287, align 8
  %288 = load %struct.Token*, %struct.Token** %5, align 8
  %289 = call %struct.Token* @skip(%struct.Token* noundef %288, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %289, %struct.Token** %5, align 8
  %290 = load %struct.Token*, %struct.Token** %5, align 8
  %291 = call %struct.Node* @assign(%struct.Token** noundef %5, %struct.Token* noundef %290)
  %292 = load %struct.Node*, %struct.Node** %18, align 8
  %293 = getelementptr inbounds %struct.Node, %struct.Node* %292, i32 0, i32 28
  store %struct.Node* %291, %struct.Node** %293, align 16
  %294 = load %struct.Token*, %struct.Token** %5, align 8
  %295 = call %struct.Token* @skip(%struct.Token* noundef %294, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %295, %struct.Token** %5, align 8
  %296 = load %struct.Token*, %struct.Token** %5, align 8
  %297 = call %struct.Node* @assign(%struct.Token** noundef %5, %struct.Token* noundef %296)
  %298 = load %struct.Node*, %struct.Node** %18, align 8
  %299 = getelementptr inbounds %struct.Node, %struct.Node* %298, i32 0, i32 29
  store %struct.Node* %297, %struct.Node** %299, align 8
  %300 = load %struct.Token*, %struct.Token** %5, align 8
  %301 = call %struct.Token* @skip(%struct.Token* noundef %300, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %302 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %301, %struct.Token** %302, align 8
  %303 = load %struct.Node*, %struct.Node** %18, align 8
  store %struct.Node* %303, %struct.Node** %3, align 8
  br label %542

304:                                              ; preds = %274
  %305 = load %struct.Token*, %struct.Token** %5, align 8
  %306 = call zeroext i1 @equal(%struct.Token* noundef %305, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.170.700, i64 0, i64 0))
  br i1 %306, label %307, label %328

307:                                              ; preds = %304
  %308 = load %struct.Token*, %struct.Token** %5, align 8
  %309 = call %struct.Node* @new_node(i32 noundef 47, %struct.Token* noundef %308)
  store %struct.Node* %309, %struct.Node** %19, align 8
  %310 = load %struct.Token*, %struct.Token** %5, align 8
  %311 = getelementptr inbounds %struct.Token, %struct.Token* %310, i32 0, i32 1
  %312 = load %struct.Token*, %struct.Token** %311, align 8
  %313 = call %struct.Token* @skip(%struct.Token* noundef %312, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %313, %struct.Token** %5, align 8
  %314 = load %struct.Token*, %struct.Token** %5, align 8
  %315 = call %struct.Node* @assign(%struct.Token** noundef %5, %struct.Token* noundef %314)
  %316 = load %struct.Node*, %struct.Node** %19, align 8
  %317 = getelementptr inbounds %struct.Node, %struct.Node* %316, i32 0, i32 4
  store %struct.Node* %315, %struct.Node** %317, align 16
  %318 = load %struct.Token*, %struct.Token** %5, align 8
  %319 = call %struct.Token* @skip(%struct.Token* noundef %318, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %319, %struct.Token** %5, align 8
  %320 = load %struct.Token*, %struct.Token** %5, align 8
  %321 = call %struct.Node* @assign(%struct.Token** noundef %5, %struct.Token* noundef %320)
  %322 = load %struct.Node*, %struct.Node** %19, align 8
  %323 = getelementptr inbounds %struct.Node, %struct.Node* %322, i32 0, i32 5
  store %struct.Node* %321, %struct.Node** %323, align 8
  %324 = load %struct.Token*, %struct.Token** %5, align 8
  %325 = call %struct.Token* @skip(%struct.Token* noundef %324, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %326 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %325, %struct.Token** %326, align 8
  %327 = load %struct.Node*, %struct.Node** %19, align 8
  store %struct.Node* %327, %struct.Node** %3, align 8
  br label %542

328:                                              ; preds = %304
  %329 = load %struct.Token*, %struct.Token** %5, align 8
  %330 = call zeroext i1 @equal(%struct.Token* noundef %329, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.171.701, i64 0, i64 0))
  br i1 %330, label %331, label %401

331:                                              ; preds = %328
  %332 = load %struct.Token*, %struct.Token** %5, align 8
  %333 = getelementptr inbounds %struct.Token, %struct.Token* %332, i32 0, i32 1
  %334 = load %struct.Token*, %struct.Token** %333, align 8
  %335 = call %struct.Token* @skip(%struct.Token* noundef %334, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %335, %struct.Token** %5, align 8
  %336 = load %struct.Token*, %struct.Token** %5, align 8
  %337 = call %struct.Node* @assign(%struct.Token** noundef %5, %struct.Token* noundef %336)
  %338 = load %struct.Token*, %struct.Token** %5, align 8
  %339 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %337, %struct.Token* noundef %338)
  store %struct.Node* %339, %struct.Node** %20, align 8
  %340 = load %struct.Token*, %struct.Token** %5, align 8
  %341 = call %struct.Token* @skip(%struct.Token* noundef %340, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %341, %struct.Token** %5, align 8
  %342 = load %struct.Token*, %struct.Token** %5, align 8
  %343 = call %struct.Node* @assign(%struct.Token** noundef %5, %struct.Token* noundef %342)
  store %struct.Node* %343, %struct.Node** %21, align 8
  %344 = load %struct.Token*, %struct.Token** %5, align 8
  %345 = call %struct.Token* @skip(%struct.Token* noundef %344, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %345, %struct.Token** %5, align 8
  %346 = load %struct.Token*, %struct.Token** %5, align 8
  %347 = call zeroext i1 @equal(%struct.Token* noundef %346, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.172.702, i64 0, i64 0))
  br i1 %347, label %348, label %353

348:                                              ; preds = %331
  %349 = load %struct.Node*, %struct.Node** %20, align 8
  %350 = load %struct.Node*, %struct.Node** %21, align 8
  %351 = load %struct.Token*, %struct.Token** %5, align 8
  %352 = call %struct.Node* @new_add(%struct.Node* noundef %349, %struct.Node* noundef %350, %struct.Token* noundef %351)
  store %struct.Node* %352, %struct.Node** %22, align 8
  br label %391

353:                                              ; preds = %331
  %354 = load %struct.Token*, %struct.Token** %5, align 8
  %355 = call zeroext i1 @equal(%struct.Token* noundef %354, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.173.703, i64 0, i64 0))
  br i1 %355, label %356, label %361

356:                                              ; preds = %353
  %357 = load %struct.Node*, %struct.Node** %20, align 8
  %358 = load %struct.Node*, %struct.Node** %21, align 8
  %359 = load %struct.Token*, %struct.Token** %5, align 8
  %360 = call %struct.Node* @new_sub(%struct.Node* noundef %357, %struct.Node* noundef %358, %struct.Token* noundef %359)
  store %struct.Node* %360, %struct.Node** %22, align 8
  br label %390

361:                                              ; preds = %353
  %362 = load %struct.Token*, %struct.Token** %5, align 8
  %363 = call zeroext i1 @equal(%struct.Token* noundef %362, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.174.704, i64 0, i64 0))
  br i1 %363, label %364, label %369

364:                                              ; preds = %361
  %365 = load %struct.Node*, %struct.Node** %20, align 8
  %366 = load %struct.Node*, %struct.Node** %21, align 8
  %367 = load %struct.Token*, %struct.Token** %5, align 8
  %368 = call %struct.Node* @new_binary(i32 noundef 8, %struct.Node* noundef %365, %struct.Node* noundef %366, %struct.Token* noundef %367)
  store %struct.Node* %368, %struct.Node** %22, align 8
  br label %389

369:                                              ; preds = %361
  %370 = load %struct.Token*, %struct.Token** %5, align 8
  %371 = call zeroext i1 @equal(%struct.Token* noundef %370, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.175.705, i64 0, i64 0))
  br i1 %371, label %372, label %377

372:                                              ; preds = %369
  %373 = load %struct.Node*, %struct.Node** %20, align 8
  %374 = load %struct.Node*, %struct.Node** %21, align 8
  %375 = load %struct.Token*, %struct.Token** %5, align 8
  %376 = call %struct.Node* @new_binary(i32 noundef 9, %struct.Node* noundef %373, %struct.Node* noundef %374, %struct.Token* noundef %375)
  store %struct.Node* %376, %struct.Node** %22, align 8
  br label %388

377:                                              ; preds = %369
  %378 = load %struct.Token*, %struct.Token** %5, align 8
  %379 = call zeroext i1 @equal(%struct.Token* noundef %378, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.176.706, i64 0, i64 0))
  br i1 %379, label %380, label %385

380:                                              ; preds = %377
  %381 = load %struct.Node*, %struct.Node** %20, align 8
  %382 = load %struct.Node*, %struct.Node** %21, align 8
  %383 = load %struct.Token*, %struct.Token** %5, align 8
  %384 = call %struct.Node* @new_binary(i32 noundef 7, %struct.Node* noundef %381, %struct.Node* noundef %382, %struct.Token* noundef %383)
  store %struct.Node* %384, %struct.Node** %22, align 8
  br label %387

385:                                              ; preds = %377
  %386 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %386, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.177.707, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

387:                                              ; preds = %380
  br label %388

388:                                              ; preds = %387, %372
  br label %389

389:                                              ; preds = %388, %364
  br label %390

390:                                              ; preds = %389, %356
  br label %391

391:                                              ; preds = %390, %348
  %392 = load %struct.Node*, %struct.Node** %22, align 8
  %393 = getelementptr inbounds %struct.Node, %struct.Node* %392, i32 0, i32 32
  store i8 1, i8* %393, align 16
  %394 = load %struct.Token*, %struct.Token** %5, align 8
  %395 = getelementptr inbounds %struct.Token, %struct.Token* %394, i32 0, i32 1
  %396 = load %struct.Token*, %struct.Token** %395, align 8
  %397 = call %struct.Token* @skip(%struct.Token* noundef %396, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %398 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %397, %struct.Token** %398, align 8
  %399 = load %struct.Node*, %struct.Node** %22, align 8
  %400 = call %struct.Node* @to_assign(%struct.Node* noundef %399)
  store %struct.Node* %400, %struct.Node** %3, align 8
  br label %542

401:                                              ; preds = %328
  %402 = load %struct.Token*, %struct.Token** %5, align 8
  %403 = getelementptr inbounds %struct.Token, %struct.Token* %402, i32 0, i32 0
  %404 = load i32, i32* %403, align 16
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %485

406:                                              ; preds = %401
  %407 = load %struct.Token*, %struct.Token** %5, align 8
  %408 = call %struct.VarScope* @find_var(%struct.Token* noundef %407)
  store %struct.VarScope* %408, %struct.VarScope** %23, align 8
  %409 = load %struct.Token*, %struct.Token** %5, align 8
  %410 = getelementptr inbounds %struct.Token, %struct.Token* %409, i32 0, i32 1
  %411 = load %struct.Token*, %struct.Token** %410, align 8
  %412 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %411, %struct.Token** %412, align 8
  %413 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %414 = icmp ne %struct.VarScope* %413, null
  br i1 %414, label %415, label %444

415:                                              ; preds = %406
  %416 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %417 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %416, i32 0, i32 0
  %418 = load %struct.Obj*, %struct.Obj** %417, align 8
  %419 = icmp ne %struct.Obj* %418, null
  br i1 %419, label %420, label %444

420:                                              ; preds = %415
  %421 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %422 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %421, i32 0, i32 0
  %423 = load %struct.Obj*, %struct.Obj** %422, align 8
  %424 = getelementptr inbounds %struct.Obj, %struct.Obj* %423, i32 0, i32 10
  %425 = load i8, i8* %424, align 4
  %426 = trunc i8 %425 to i1
  br i1 %426, label %427, label %444

427:                                              ; preds = %420
  %428 = load %struct.Obj*, %struct.Obj** @current_fn.708, align 8
  %429 = icmp ne %struct.Obj* %428, null
  br i1 %429, label %430, label %438

430:                                              ; preds = %427
  %431 = load %struct.Obj*, %struct.Obj** @current_fn.708, align 8
  %432 = getelementptr inbounds %struct.Obj, %struct.Obj* %431, i32 0, i32 26
  %433 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %434 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %433, i32 0, i32 0
  %435 = load %struct.Obj*, %struct.Obj** %434, align 8
  %436 = getelementptr inbounds %struct.Obj, %struct.Obj* %435, i32 0, i32 1
  %437 = load i8*, i8** %436, align 8
  call void @strarray_push(%struct.StringArray* noundef %432, i8* noundef %437)
  br label %443

438:                                              ; preds = %427
  %439 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %440 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %439, i32 0, i32 0
  %441 = load %struct.Obj*, %struct.Obj** %440, align 8
  %442 = getelementptr inbounds %struct.Obj, %struct.Obj* %441, i32 0, i32 25
  store i8 1, i8* %442, align 1
  br label %443

443:                                              ; preds = %438, %430
  br label %444

444:                                              ; preds = %443, %420, %415, %406
  %445 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %446 = icmp ne %struct.VarScope* %445, null
  br i1 %446, label %447, label %471

447:                                              ; preds = %444
  %448 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %449 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %448, i32 0, i32 0
  %450 = load %struct.Obj*, %struct.Obj** %449, align 8
  %451 = icmp ne %struct.Obj* %450, null
  br i1 %451, label %452, label %458

452:                                              ; preds = %447
  %453 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %454 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %453, i32 0, i32 0
  %455 = load %struct.Obj*, %struct.Obj** %454, align 8
  %456 = load %struct.Token*, %struct.Token** %5, align 8
  %457 = call %struct.Node* @new_var_node(%struct.Obj* noundef %455, %struct.Token* noundef %456)
  store %struct.Node* %457, %struct.Node** %3, align 8
  br label %542

458:                                              ; preds = %447
  %459 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %460 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %459, i32 0, i32 2
  %461 = load %struct.Type*, %struct.Type** %460, align 8
  %462 = icmp ne %struct.Type* %461, null
  br i1 %462, label %463, label %470

463:                                              ; preds = %458
  %464 = load %struct.VarScope*, %struct.VarScope** %23, align 8
  %465 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %464, i32 0, i32 3
  %466 = load i32, i32* %465, align 8
  %467 = sext i32 %466 to i64
  %468 = load %struct.Token*, %struct.Token** %5, align 8
  %469 = call %struct.Node* @new_num(i64 noundef %467, %struct.Token* noundef %468)
  store %struct.Node* %469, %struct.Node** %3, align 8
  br label %542

470:                                              ; preds = %458
  br label %471

471:                                              ; preds = %470, %444
  %472 = load %struct.Token*, %struct.Token** %5, align 8
  %473 = getelementptr inbounds %struct.Token, %struct.Token* %472, i32 0, i32 1
  %474 = load %struct.Token*, %struct.Token** %473, align 8
  %475 = call zeroext i1 @equal(%struct.Token* noundef %474, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %475, label %476, label %483

476:                                              ; preds = %471
  %477 = load %struct.Token**, %struct.Token*** %4, align 8
  %478 = load %struct.Token*, %struct.Token** %5, align 8
  %479 = getelementptr inbounds %struct.Token, %struct.Token* %478, i32 0, i32 1
  %480 = load %struct.Token*, %struct.Token** %479, align 8
  %481 = call %struct.Node* @unary(%struct.Token** noundef %477, %struct.Token* noundef %480)
  store %struct.Node* %481, %struct.Node** %24, align 8
  %482 = load %struct.Node*, %struct.Node** %24, align 8
  store %struct.Node* %482, %struct.Node** %3, align 8
  br label %542

483:                                              ; preds = %471
  %484 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %484, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.178.709, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

485:                                              ; preds = %401
  %486 = load %struct.Token*, %struct.Token** %5, align 8
  %487 = getelementptr inbounds %struct.Token, %struct.Token* %486, i32 0, i32 0
  %488 = load i32, i32* %487, align 16
  %489 = icmp eq i32 %488, 3
  br i1 %489, label %490, label %505

490:                                              ; preds = %485
  %491 = load %struct.Token*, %struct.Token** %5, align 8
  %492 = getelementptr inbounds %struct.Token, %struct.Token* %491, i32 0, i32 7
  %493 = load i8*, i8** %492, align 8
  %494 = load %struct.Token*, %struct.Token** %5, align 8
  %495 = getelementptr inbounds %struct.Token, %struct.Token* %494, i32 0, i32 6
  %496 = load %struct.Type*, %struct.Type** %495, align 16
  %497 = call %struct.Obj* @new_string_literal(i8* noundef %493, %struct.Type* noundef %496)
  store %struct.Obj* %497, %struct.Obj** %25, align 8
  %498 = load %struct.Token*, %struct.Token** %5, align 8
  %499 = getelementptr inbounds %struct.Token, %struct.Token* %498, i32 0, i32 1
  %500 = load %struct.Token*, %struct.Token** %499, align 8
  %501 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %500, %struct.Token** %501, align 8
  %502 = load %struct.Obj*, %struct.Obj** %25, align 8
  %503 = load %struct.Token*, %struct.Token** %5, align 8
  %504 = call %struct.Node* @new_var_node(%struct.Obj* noundef %502, %struct.Token* noundef %503)
  store %struct.Node* %504, %struct.Node** %3, align 8
  br label %542

505:                                              ; preds = %485
  %506 = load %struct.Token*, %struct.Token** %5, align 8
  %507 = getelementptr inbounds %struct.Token, %struct.Token* %506, i32 0, i32 0
  %508 = load i32, i32* %507, align 16
  %509 = icmp eq i32 %508, 4
  br i1 %509, label %510, label %540

510:                                              ; preds = %505
  %511 = load %struct.Token*, %struct.Token** %5, align 8
  %512 = getelementptr inbounds %struct.Token, %struct.Token* %511, i32 0, i32 6
  %513 = load %struct.Type*, %struct.Type** %512, align 16
  %514 = call zeroext i1 @is_flonum(%struct.Type* noundef %513)
  br i1 %514, label %515, label %523

515:                                              ; preds = %510
  %516 = load %struct.Token*, %struct.Token** %5, align 8
  %517 = call %struct.Node* @new_node(i32 noundef 42, %struct.Token* noundef %516)
  store %struct.Node* %517, %struct.Node** %26, align 8
  %518 = load %struct.Token*, %struct.Token** %5, align 8
  %519 = getelementptr inbounds %struct.Token, %struct.Token* %518, i32 0, i32 3
  %520 = load x86_fp80, x86_fp80* %519, align 16
  %521 = load %struct.Node*, %struct.Node** %26, align 8
  %522 = getelementptr inbounds %struct.Node, %struct.Node* %521, i32 0, i32 35
  store x86_fp80 %520, x86_fp80* %522, align 16
  br label %529

523:                                              ; preds = %510
  %524 = load %struct.Token*, %struct.Token** %5, align 8
  %525 = getelementptr inbounds %struct.Token, %struct.Token* %524, i32 0, i32 2
  %526 = load i64, i64* %525, align 16
  %527 = load %struct.Token*, %struct.Token** %5, align 8
  %528 = call %struct.Node* @new_num(i64 noundef %526, %struct.Token* noundef %527)
  store %struct.Node* %528, %struct.Node** %26, align 8
  br label %529

529:                                              ; preds = %523, %515
  %530 = load %struct.Token*, %struct.Token** %5, align 8
  %531 = getelementptr inbounds %struct.Token, %struct.Token* %530, i32 0, i32 6
  %532 = load %struct.Type*, %struct.Type** %531, align 16
  %533 = load %struct.Node*, %struct.Node** %26, align 8
  %534 = getelementptr inbounds %struct.Node, %struct.Node* %533, i32 0, i32 2
  store %struct.Type* %532, %struct.Type** %534, align 16
  %535 = load %struct.Token*, %struct.Token** %5, align 8
  %536 = getelementptr inbounds %struct.Token, %struct.Token* %535, i32 0, i32 1
  %537 = load %struct.Token*, %struct.Token** %536, align 8
  %538 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %537, %struct.Token** %538, align 8
  %539 = load %struct.Node*, %struct.Node** %26, align 8
  store %struct.Node* %539, %struct.Node** %3, align 8
  br label %542

540:                                              ; preds = %505
  %541 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %541, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.179.710, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

542:                                              ; preds = %529, %490, %476, %463, %452, %391, %307, %277, %271, %268, %262, %230, %209, %191, %172, %148, %140, %117, %104, %98, %55, %35
  %543 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %543
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @funcall(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Node* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.Type*, align 8
  %9 = alloca %struct.Node, align 16
  %10 = alloca %struct.Node*, align 8
  %11 = alloca %struct.Node*, align 8
  %12 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Node* %2, %struct.Node** %6, align 8
  %13 = load %struct.Node*, %struct.Node** %6, align 8
  call void @add_type(%struct.Node* noundef %13)
  %14 = load %struct.Node*, %struct.Node** %6, align 8
  %15 = getelementptr inbounds %struct.Node, %struct.Node* %14, i32 0, i32 2
  %16 = load %struct.Type*, %struct.Type** %15, align 16
  %17 = getelementptr inbounds %struct.Type, %struct.Type* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 11
  br i1 %19, label %20, label %40

20:                                               ; preds = %3
  %21 = load %struct.Node*, %struct.Node** %6, align 8
  %22 = getelementptr inbounds %struct.Node, %struct.Node* %21, i32 0, i32 2
  %23 = load %struct.Type*, %struct.Type** %22, align 16
  %24 = getelementptr inbounds %struct.Type, %struct.Type* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %25, 10
  br i1 %26, label %36, label %27

27:                                               ; preds = %20
  %28 = load %struct.Node*, %struct.Node** %6, align 8
  %29 = getelementptr inbounds %struct.Node, %struct.Node* %28, i32 0, i32 2
  %30 = load %struct.Type*, %struct.Type** %29, align 16
  %31 = getelementptr inbounds %struct.Type, %struct.Type* %30, i32 0, i32 8
  %32 = load %struct.Type*, %struct.Type** %31, align 8
  %33 = getelementptr inbounds %struct.Type, %struct.Type* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp ne i32 %34, 11
  br i1 %35, label %36, label %40

36:                                               ; preds = %27, %20
  %37 = load %struct.Node*, %struct.Node** %6, align 8
  %38 = getelementptr inbounds %struct.Node, %struct.Node* %37, i32 0, i32 3
  %39 = load %struct.Token*, %struct.Token** %38, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %39, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.209.691, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

40:                                               ; preds = %27, %3
  %41 = load %struct.Node*, %struct.Node** %6, align 8
  %42 = getelementptr inbounds %struct.Node, %struct.Node* %41, i32 0, i32 2
  %43 = load %struct.Type*, %struct.Type** %42, align 16
  %44 = getelementptr inbounds %struct.Type, %struct.Type* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 11
  br i1 %46, label %47, label %51

47:                                               ; preds = %40
  %48 = load %struct.Node*, %struct.Node** %6, align 8
  %49 = getelementptr inbounds %struct.Node, %struct.Node* %48, i32 0, i32 2
  %50 = load %struct.Type*, %struct.Type** %49, align 16
  br label %57

51:                                               ; preds = %40
  %52 = load %struct.Node*, %struct.Node** %6, align 8
  %53 = getelementptr inbounds %struct.Node, %struct.Node* %52, i32 0, i32 2
  %54 = load %struct.Type*, %struct.Type** %53, align 16
  %55 = getelementptr inbounds %struct.Type, %struct.Type* %54, i32 0, i32 8
  %56 = load %struct.Type*, %struct.Type** %55, align 8
  br label %57

57:                                               ; preds = %51, %47
  %58 = phi %struct.Type* [ %50, %47 ], [ %56, %51 ]
  store %struct.Type* %58, %struct.Type** %7, align 8
  %59 = load %struct.Type*, %struct.Type** %7, align 8
  %60 = getelementptr inbounds %struct.Type, %struct.Type* %59, i32 0, i32 18
  %61 = load %struct.Type*, %struct.Type** %60, align 8
  store %struct.Type* %61, %struct.Type** %8, align 8
  %62 = bitcast %struct.Node* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %62, i8 0, i64 320, i1 false)
  store %struct.Node* %9, %struct.Node** %10, align 8
  br label %63

63:                                               ; preds = %119, %57
  %64 = load %struct.Token*, %struct.Token** %5, align 8
  %65 = call zeroext i1 @equal(%struct.Token* noundef %64, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %66 = xor i1 %65, true
  br i1 %66, label %67, label %123

67:                                               ; preds = %63
  %68 = load %struct.Node*, %struct.Node** %10, align 8
  %69 = icmp ne %struct.Node* %68, %9
  br i1 %69, label %70, label %73

70:                                               ; preds = %67
  %71 = load %struct.Token*, %struct.Token** %5, align 8
  %72 = call %struct.Token* @skip(%struct.Token* noundef %71, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %72, %struct.Token** %5, align 8
  br label %73

73:                                               ; preds = %70, %67
  %74 = load %struct.Token*, %struct.Token** %5, align 8
  %75 = call %struct.Node* @assign(%struct.Token** noundef %5, %struct.Token* noundef %74)
  store %struct.Node* %75, %struct.Node** %11, align 8
  %76 = load %struct.Node*, %struct.Node** %11, align 8
  call void @add_type(%struct.Node* noundef %76)
  %77 = load %struct.Type*, %struct.Type** %8, align 8
  %78 = icmp ne %struct.Type* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %73
  %80 = load %struct.Type*, %struct.Type** %7, align 8
  %81 = getelementptr inbounds %struct.Type, %struct.Type* %80, i32 0, i32 19
  %82 = load i8, i8* %81, align 8
  %83 = trunc i8 %82 to i1
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  %85 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %85, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.210.692, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

86:                                               ; preds = %79, %73
  %87 = load %struct.Type*, %struct.Type** %8, align 8
  %88 = icmp ne %struct.Type* %87, null
  br i1 %88, label %89, label %107

89:                                               ; preds = %86
  %90 = load %struct.Type*, %struct.Type** %8, align 8
  %91 = getelementptr inbounds %struct.Type, %struct.Type* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp ne i32 %92, 14
  br i1 %93, label %94, label %103

94:                                               ; preds = %89
  %95 = load %struct.Type*, %struct.Type** %8, align 8
  %96 = getelementptr inbounds %struct.Type, %struct.Type* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp ne i32 %97, 15
  br i1 %98, label %99, label %103

99:                                               ; preds = %94
  %100 = load %struct.Node*, %struct.Node** %11, align 8
  %101 = load %struct.Type*, %struct.Type** %8, align 8
  %102 = call %struct.Node* @new_cast(%struct.Node* noundef %100, %struct.Type* noundef %101)
  store %struct.Node* %102, %struct.Node** %11, align 8
  br label %103

103:                                              ; preds = %99, %94, %89
  %104 = load %struct.Type*, %struct.Type** %8, align 8
  %105 = getelementptr inbounds %struct.Type, %struct.Type* %104, i32 0, i32 20
  %106 = load %struct.Type*, %struct.Type** %105, align 8
  store %struct.Type* %106, %struct.Type** %8, align 8
  br label %119

107:                                              ; preds = %86
  %108 = load %struct.Node*, %struct.Node** %11, align 8
  %109 = getelementptr inbounds %struct.Node, %struct.Node* %108, i32 0, i32 2
  %110 = load %struct.Type*, %struct.Type** %109, align 16
  %111 = getelementptr inbounds %struct.Type, %struct.Type* %110, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 6
  br i1 %113, label %114, label %118

114:                                              ; preds = %107
  %115 = load %struct.Node*, %struct.Node** %11, align 8
  %116 = load %struct.Type*, %struct.Type** @ty_double, align 8
  %117 = call %struct.Node* @new_cast(%struct.Node* noundef %115, %struct.Type* noundef %116)
  store %struct.Node* %117, %struct.Node** %11, align 8
  br label %118

118:                                              ; preds = %114, %107
  br label %119

119:                                              ; preds = %118, %103
  %120 = load %struct.Node*, %struct.Node** %11, align 8
  %121 = load %struct.Node*, %struct.Node** %10, align 8
  %122 = getelementptr inbounds %struct.Node, %struct.Node* %121, i32 0, i32 1
  store %struct.Node* %120, %struct.Node** %122, align 8
  store %struct.Node* %120, %struct.Node** %10, align 8
  br label %63, !llvm.loop !90

123:                                              ; preds = %63
  %124 = load %struct.Type*, %struct.Type** %8, align 8
  %125 = icmp ne %struct.Type* %124, null
  br i1 %125, label %126, label %128

126:                                              ; preds = %123
  %127 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %127, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.211.693, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

128:                                              ; preds = %123
  %129 = load %struct.Token*, %struct.Token** %5, align 8
  %130 = call %struct.Token* @skip(%struct.Token* noundef %129, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %131 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %130, %struct.Token** %131, align 8
  %132 = load %struct.Node*, %struct.Node** %6, align 8
  %133 = load %struct.Token*, %struct.Token** %5, align 8
  %134 = call %struct.Node* @new_unary(i32 noundef 37, %struct.Node* noundef %132, %struct.Token* noundef %133)
  store %struct.Node* %134, %struct.Node** %12, align 8
  %135 = load %struct.Type*, %struct.Type** %7, align 8
  %136 = load %struct.Node*, %struct.Node** %12, align 8
  %137 = getelementptr inbounds %struct.Node, %struct.Node* %136, i32 0, i32 15
  store %struct.Type* %135, %struct.Type** %137, align 8
  %138 = load %struct.Type*, %struct.Type** %7, align 8
  %139 = getelementptr inbounds %struct.Type, %struct.Type* %138, i32 0, i32 17
  %140 = load %struct.Type*, %struct.Type** %139, align 8
  %141 = load %struct.Node*, %struct.Node** %12, align 8
  %142 = getelementptr inbounds %struct.Node, %struct.Node* %141, i32 0, i32 2
  store %struct.Type* %140, %struct.Type** %142, align 16
  %143 = getelementptr inbounds %struct.Node, %struct.Node* %9, i32 0, i32 1
  %144 = load %struct.Node*, %struct.Node** %143, align 8
  %145 = load %struct.Node*, %struct.Node** %12, align 8
  %146 = getelementptr inbounds %struct.Node, %struct.Node* %145, i32 0, i32 16
  store %struct.Node* %144, %struct.Node** %146, align 16
  %147 = load %struct.Node*, %struct.Node** %12, align 8
  %148 = getelementptr inbounds %struct.Node, %struct.Node* %147, i32 0, i32 2
  %149 = load %struct.Type*, %struct.Type** %148, align 16
  %150 = getelementptr inbounds %struct.Type, %struct.Type* %149, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 14
  br i1 %152, label %160, label %153

153:                                              ; preds = %128
  %154 = load %struct.Node*, %struct.Node** %12, align 8
  %155 = getelementptr inbounds %struct.Node, %struct.Node* %154, i32 0, i32 2
  %156 = load %struct.Type*, %struct.Type** %155, align 16
  %157 = getelementptr inbounds %struct.Type, %struct.Type* %156, i32 0, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = icmp eq i32 %158, 15
  br i1 %159, label %160, label %167

160:                                              ; preds = %153, %128
  %161 = load %struct.Node*, %struct.Node** %12, align 8
  %162 = getelementptr inbounds %struct.Node, %struct.Node* %161, i32 0, i32 2
  %163 = load %struct.Type*, %struct.Type** %162, align 16
  %164 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %163, i8* noundef null)
  %165 = load %struct.Node*, %struct.Node** %12, align 8
  %166 = getelementptr inbounds %struct.Node, %struct.Node* %165, i32 0, i32 18
  store %struct.Obj* %164, %struct.Obj** %166, align 16
  br label %167

167:                                              ; preds = %160, %153
  %168 = load %struct.Node*, %struct.Node** %12, align 8
  ret %struct.Node* %168
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @struct_ref(%struct.Node* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Type*, align 8
  %6 = alloca %struct.Member*, align 8
  store %struct.Node* %0, %struct.Node** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Node*, %struct.Node** %3, align 8
  call void @add_type(%struct.Node* noundef %7)
  %8 = load %struct.Node*, %struct.Node** %3, align 8
  %9 = getelementptr inbounds %struct.Node, %struct.Node* %8, i32 0, i32 2
  %10 = load %struct.Type*, %struct.Type** %9, align 16
  %11 = getelementptr inbounds %struct.Type, %struct.Type* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %12, 14
  br i1 %13, label %14, label %25

14:                                               ; preds = %2
  %15 = load %struct.Node*, %struct.Node** %3, align 8
  %16 = getelementptr inbounds %struct.Node, %struct.Node* %15, i32 0, i32 2
  %17 = load %struct.Type*, %struct.Type** %16, align 16
  %18 = getelementptr inbounds %struct.Type, %struct.Type* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %19, 15
  br i1 %20, label %21, label %25

21:                                               ; preds = %14
  %22 = load %struct.Node*, %struct.Node** %3, align 8
  %23 = getelementptr inbounds %struct.Node, %struct.Node* %22, i32 0, i32 3
  %24 = load %struct.Token*, %struct.Token** %23, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %24, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.212.689, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

25:                                               ; preds = %14, %2
  %26 = load %struct.Node*, %struct.Node** %3, align 8
  %27 = getelementptr inbounds %struct.Node, %struct.Node* %26, i32 0, i32 2
  %28 = load %struct.Type*, %struct.Type** %27, align 16
  store %struct.Type* %28, %struct.Type** %5, align 8
  br label %29

29:                                               ; preds = %49, %25
  %30 = load %struct.Type*, %struct.Type** %5, align 8
  %31 = load %struct.Token*, %struct.Token** %4, align 8
  %32 = call %struct.Member* @get_struct_member(%struct.Type* noundef %30, %struct.Token* noundef %31)
  store %struct.Member* %32, %struct.Member** %6, align 8
  %33 = load %struct.Member*, %struct.Member** %6, align 8
  %34 = icmp ne %struct.Member* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = load %struct.Token*, %struct.Token** %4, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %36, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.213.690, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

37:                                               ; preds = %29
  %38 = load %struct.Node*, %struct.Node** %3, align 8
  %39 = load %struct.Token*, %struct.Token** %4, align 8
  %40 = call %struct.Node* @new_unary(i32 noundef 19, %struct.Node* noundef %38, %struct.Token* noundef %39)
  store %struct.Node* %40, %struct.Node** %3, align 8
  %41 = load %struct.Member*, %struct.Member** %6, align 8
  %42 = load %struct.Node*, %struct.Node** %3, align 8
  %43 = getelementptr inbounds %struct.Node, %struct.Node* %42, i32 0, i32 14
  store %struct.Member* %41, %struct.Member** %43, align 16
  %44 = load %struct.Member*, %struct.Member** %6, align 8
  %45 = getelementptr inbounds %struct.Member, %struct.Member* %44, i32 0, i32 3
  %46 = load %struct.Token*, %struct.Token** %45, align 8
  %47 = icmp ne %struct.Token* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %37
  br label %53

49:                                               ; preds = %37
  %50 = load %struct.Member*, %struct.Member** %6, align 8
  %51 = getelementptr inbounds %struct.Member, %struct.Member* %50, i32 0, i32 1
  %52 = load %struct.Type*, %struct.Type** %51, align 8
  store %struct.Type* %52, %struct.Type** %5, align 8
  br label %29

53:                                               ; preds = %48
  %54 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %54
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_inc_dec(%struct.Node* noundef %0, %struct.Token* noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.Node*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca i32, align 4
  store %struct.Node* %0, %struct.Node** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.Node*, %struct.Node** %4, align 8
  call void @add_type(%struct.Node* noundef %7)
  %8 = load %struct.Node*, %struct.Node** %4, align 8
  %9 = load i32, i32* %6, align 4
  %10 = sext i32 %9 to i64
  %11 = load %struct.Token*, %struct.Token** %5, align 8
  %12 = call %struct.Node* @new_num(i64 noundef %10, %struct.Token* noundef %11)
  %13 = load %struct.Token*, %struct.Token** %5, align 8
  %14 = call %struct.Node* @new_add(%struct.Node* noundef %8, %struct.Node* noundef %12, %struct.Token* noundef %13)
  %15 = call %struct.Node* @to_assign(%struct.Node* noundef %14)
  %16 = load i32, i32* %6, align 4
  %17 = sub nsw i32 0, %16
  %18 = sext i32 %17 to i64
  %19 = load %struct.Token*, %struct.Token** %5, align 8
  %20 = call %struct.Node* @new_num(i64 noundef %18, %struct.Token* noundef %19)
  %21 = load %struct.Token*, %struct.Token** %5, align 8
  %22 = call %struct.Node* @new_add(%struct.Node* noundef %15, %struct.Node* noundef %20, %struct.Token* noundef %21)
  %23 = load %struct.Node*, %struct.Node** %4, align 8
  %24 = getelementptr inbounds %struct.Node, %struct.Node* %23, i32 0, i32 2
  %25 = load %struct.Type*, %struct.Type** %24, align 16
  %26 = call %struct.Node* @new_cast(%struct.Node* noundef %22, %struct.Type* noundef %25)
  ret %struct.Node* %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Member* @get_struct_member(%struct.Type* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Member*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Member*, align 8
  store %struct.Type* %0, %struct.Type** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %7 = load %struct.Type*, %struct.Type** %4, align 8
  %8 = getelementptr inbounds %struct.Type, %struct.Type* %7, i32 0, i32 14
  %9 = load %struct.Member*, %struct.Member** %8, align 8
  store %struct.Member* %9, %struct.Member** %6, align 8
  br label %10

10:                                               ; preds = %71, %2
  %11 = load %struct.Member*, %struct.Member** %6, align 8
  %12 = icmp ne %struct.Member* %11, null
  br i1 %12, label %13, label %75

13:                                               ; preds = %10
  %14 = load %struct.Member*, %struct.Member** %6, align 8
  %15 = getelementptr inbounds %struct.Member, %struct.Member* %14, i32 0, i32 3
  %16 = load %struct.Token*, %struct.Token** %15, align 8
  %17 = icmp ne %struct.Token* %16, null
  br i1 %17, label %43, label %18

18:                                               ; preds = %13
  %19 = load %struct.Member*, %struct.Member** %6, align 8
  %20 = getelementptr inbounds %struct.Member, %struct.Member* %19, i32 0, i32 1
  %21 = load %struct.Type*, %struct.Type** %20, align 8
  %22 = getelementptr inbounds %struct.Type, %struct.Type* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 14
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = load %struct.Member*, %struct.Member** %6, align 8
  %27 = getelementptr inbounds %struct.Member, %struct.Member* %26, i32 0, i32 1
  %28 = load %struct.Type*, %struct.Type** %27, align 8
  %29 = getelementptr inbounds %struct.Type, %struct.Type* %28, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 15
  br i1 %31, label %32, label %42

32:                                               ; preds = %25, %18
  %33 = load %struct.Member*, %struct.Member** %6, align 8
  %34 = getelementptr inbounds %struct.Member, %struct.Member* %33, i32 0, i32 1
  %35 = load %struct.Type*, %struct.Type** %34, align 8
  %36 = load %struct.Token*, %struct.Token** %5, align 8
  %37 = call %struct.Member* @get_struct_member(%struct.Type* noundef %35, %struct.Token* noundef %36)
  %38 = icmp ne %struct.Member* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = load %struct.Member*, %struct.Member** %6, align 8
  store %struct.Member* %40, %struct.Member** %3, align 8
  br label %76

41:                                               ; preds = %32
  br label %42

42:                                               ; preds = %41, %25
  br label %71

43:                                               ; preds = %13
  %44 = load %struct.Member*, %struct.Member** %6, align 8
  %45 = getelementptr inbounds %struct.Member, %struct.Member* %44, i32 0, i32 3
  %46 = load %struct.Token*, %struct.Token** %45, align 8
  %47 = getelementptr inbounds %struct.Token, %struct.Token* %46, i32 0, i32 5
  %48 = load i32, i32* %47, align 8
  %49 = load %struct.Token*, %struct.Token** %5, align 8
  %50 = getelementptr inbounds %struct.Token, %struct.Token* %49, i32 0, i32 5
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %48, %51
  br i1 %52, label %53, label %70

53:                                               ; preds = %43
  %54 = load %struct.Member*, %struct.Member** %6, align 8
  %55 = getelementptr inbounds %struct.Member, %struct.Member* %54, i32 0, i32 3
  %56 = load %struct.Token*, %struct.Token** %55, align 8
  %57 = getelementptr inbounds %struct.Token, %struct.Token* %56, i32 0, i32 4
  %58 = load i8*, i8** %57, align 16
  %59 = load %struct.Token*, %struct.Token** %5, align 8
  %60 = getelementptr inbounds %struct.Token, %struct.Token* %59, i32 0, i32 4
  %61 = load i8*, i8** %60, align 16
  %62 = load %struct.Token*, %struct.Token** %5, align 8
  %63 = getelementptr inbounds %struct.Token, %struct.Token* %62, i32 0, i32 5
  %64 = load i32, i32* %63, align 8
  %65 = sext i32 %64 to i64
  %66 = call i32 @strncmp(i8* noundef %58, i8* noundef %61, i64 noundef %65) #13
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %53
  %69 = load %struct.Member*, %struct.Member** %6, align 8
  store %struct.Member* %69, %struct.Member** %3, align 8
  br label %76

70:                                               ; preds = %53, %43
  br label %71

71:                                               ; preds = %70, %42
  %72 = load %struct.Member*, %struct.Member** %6, align 8
  %73 = getelementptr inbounds %struct.Member, %struct.Member* %72, i32 0, i32 0
  %74 = load %struct.Member*, %struct.Member** %73, align 8
  store %struct.Member* %74, %struct.Member** %6, align 8
  br label %10, !llvm.loop !91

75:                                               ; preds = %10
  store %struct.Member* null, %struct.Member** %3, align 8
  br label %76

76:                                               ; preds = %75, %68, %39
  %77 = load %struct.Member*, %struct.Member** %3, align 8
  ret %struct.Member* %77
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @compound_stmt(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Node, align 16
  %7 = alloca %struct.Node*, align 8
  %8 = alloca %struct.VarAttr, align 4
  %9 = alloca %struct.Type*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %10 = load %struct.Token*, %struct.Token** %4, align 8
  %11 = call %struct.Node* @new_node(i32 noundef 32, %struct.Token* noundef %10)
  store %struct.Node* %11, %struct.Node** %5, align 8
  %12 = bitcast %struct.Node* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %12, i8 0, i64 320, i1 false)
  store %struct.Node* %6, %struct.Node** %7, align 8
  call void @enter_scope()
  br label %13

13:                                               ; preds = %62, %47, %39, %32, %2
  %14 = load %struct.Token*, %struct.Token** %4, align 8
  %15 = call zeroext i1 @equal(%struct.Token* noundef %14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  %16 = xor i1 %15, true
  br i1 %16, label %17, label %64

17:                                               ; preds = %13
  %18 = load %struct.Token*, %struct.Token** %4, align 8
  %19 = call zeroext i1 @is_typename(%struct.Token* noundef %18)
  br i1 %19, label %20, label %57

20:                                               ; preds = %17
  %21 = load %struct.Token*, %struct.Token** %4, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 1
  %23 = load %struct.Token*, %struct.Token** %22, align 8
  %24 = call zeroext i1 @equal(%struct.Token* noundef %23, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  br i1 %24, label %57, label %25

25:                                               ; preds = %20
  %26 = bitcast %struct.VarAttr* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 12, i1 false)
  %27 = load %struct.Token*, %struct.Token** %4, align 8
  %28 = call %struct.Type* @declspec(%struct.Token** noundef %4, %struct.Token* noundef %27, %struct.VarAttr* noundef %8)
  store %struct.Type* %28, %struct.Type** %9, align 8
  %29 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %8, i32 0, i32 0
  %30 = load i8, i8* %29, align 4
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %36

32:                                               ; preds = %25
  %33 = load %struct.Token*, %struct.Token** %4, align 8
  %34 = load %struct.Type*, %struct.Type** %9, align 8
  %35 = call %struct.Token* @parse_typedef(%struct.Token* noundef %33, %struct.Type* noundef %34)
  store %struct.Token* %35, %struct.Token** %4, align 8
  br label %13, !llvm.loop !92

36:                                               ; preds = %25
  %37 = load %struct.Token*, %struct.Token** %4, align 8
  %38 = call zeroext i1 @is_function(%struct.Token* noundef %37)
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = load %struct.Token*, %struct.Token** %4, align 8
  %41 = load %struct.Type*, %struct.Type** %9, align 8
  %42 = call %struct.Token* @function(%struct.Token* noundef %40, %struct.Type* noundef %41, %struct.VarAttr* noundef %8)
  store %struct.Token* %42, %struct.Token** %4, align 8
  br label %13, !llvm.loop !92

43:                                               ; preds = %36
  %44 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %8, i32 0, i32 2
  %45 = load i8, i8* %44, align 2
  %46 = trunc i8 %45 to i1
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = load %struct.Token*, %struct.Token** %4, align 8
  %49 = load %struct.Type*, %struct.Type** %9, align 8
  %50 = call %struct.Token* @global_variable(%struct.Token* noundef %48, %struct.Type* noundef %49, %struct.VarAttr* noundef %8)
  store %struct.Token* %50, %struct.Token** %4, align 8
  br label %13, !llvm.loop !92

51:                                               ; preds = %43
  %52 = load %struct.Token*, %struct.Token** %4, align 8
  %53 = load %struct.Type*, %struct.Type** %9, align 8
  %54 = call %struct.Node* @declaration(%struct.Token** noundef %4, %struct.Token* noundef %52, %struct.Type* noundef %53, %struct.VarAttr* noundef %8)
  %55 = load %struct.Node*, %struct.Node** %7, align 8
  %56 = getelementptr inbounds %struct.Node, %struct.Node* %55, i32 0, i32 1
  store %struct.Node* %54, %struct.Node** %56, align 8
  store %struct.Node* %54, %struct.Node** %7, align 8
  br label %62

57:                                               ; preds = %20, %17
  %58 = load %struct.Token*, %struct.Token** %4, align 8
  %59 = call %struct.Node* @stmt(%struct.Token** noundef %4, %struct.Token* noundef %58)
  %60 = load %struct.Node*, %struct.Node** %7, align 8
  %61 = getelementptr inbounds %struct.Node, %struct.Node* %60, i32 0, i32 1
  store %struct.Node* %59, %struct.Node** %61, align 8
  store %struct.Node* %59, %struct.Node** %7, align 8
  br label %62

62:                                               ; preds = %57, %51
  %63 = load %struct.Node*, %struct.Node** %7, align 8
  call void @add_type(%struct.Node* noundef %63)
  br label %13, !llvm.loop !92

64:                                               ; preds = %13
  call void @leave_scope()
  %65 = getelementptr inbounds %struct.Node, %struct.Node* %6, i32 0, i32 1
  %66 = load %struct.Node*, %struct.Node** %65, align 8
  %67 = load %struct.Node*, %struct.Node** %5, align 8
  %68 = getelementptr inbounds %struct.Node, %struct.Node* %67, i32 0, i32 13
  store %struct.Node* %66, %struct.Node** %68, align 8
  %69 = load i8, i8* @isDotfile, align 1
  %70 = trunc i8 %69 to i1
  br i1 %70, label %71, label %101

71:                                               ; preds = %64
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %73 = icmp ne %struct._IO_FILE* %72, null
  br i1 %73, label %74, label %101

74:                                               ; preds = %71
  %75 = load %struct.Node*, %struct.Node** %5, align 8
  %76 = getelementptr inbounds %struct.Node, %struct.Node* %75, i32 0, i32 13
  %77 = load %struct.Node*, %struct.Node** %76, align 8
  %78 = icmp ne %struct.Node* %77, null
  br i1 %78, label %79, label %100

79:                                               ; preds = %74
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %81 = load %struct.Node*, %struct.Node** %5, align 8
  %82 = getelementptr inbounds %struct.Node, %struct.Node* %81, i32 0, i32 0
  %83 = load i32, i32* %82, align 16
  %84 = call i8* @nodekind2str(i32 noundef %83)
  %85 = load %struct.Node*, %struct.Node** %5, align 8
  %86 = getelementptr inbounds %struct.Node, %struct.Node* %85, i32 0, i32 36
  %87 = load i32, i32* %86, align 16
  %88 = load %struct.Node*, %struct.Node** %5, align 8
  %89 = getelementptr inbounds %struct.Node, %struct.Node* %88, i32 0, i32 13
  %90 = load %struct.Node*, %struct.Node** %89, align 8
  %91 = getelementptr inbounds %struct.Node, %struct.Node* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 16
  %93 = call i8* @nodekind2str(i32 noundef %92)
  %94 = load %struct.Node*, %struct.Node** %5, align 8
  %95 = getelementptr inbounds %struct.Node, %struct.Node* %94, i32 0, i32 13
  %96 = load %struct.Node*, %struct.Node** %95, align 8
  %97 = getelementptr inbounds %struct.Node, %struct.Node* %96, i32 0, i32 36
  %98 = load i32, i32* %97, align 16
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %80, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %84, i32 noundef %87, i8* noundef %93, i32 noundef %98)
  br label %100

100:                                              ; preds = %79, %74
  br label %101

101:                                              ; preds = %100, %71, %64
  %102 = load %struct.Token*, %struct.Token** %4, align 8
  %103 = getelementptr inbounds %struct.Token, %struct.Token* %102, i32 0, i32 1
  %104 = load %struct.Token*, %struct.Token** %103, align 8
  %105 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %104, %struct.Token** %105, align 8
  %106 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %106
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @compute_vla_size(%struct.Type* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Node*, align 8
  %8 = alloca %struct.Node*, align 8
  store %struct.Type* %0, %struct.Type** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = call %struct.Node* @new_node(i32 noundef 0, %struct.Token* noundef %9)
  store %struct.Node* %10, %struct.Node** %6, align 8
  %11 = load %struct.Type*, %struct.Type** %4, align 8
  %12 = getelementptr inbounds %struct.Type, %struct.Type* %11, i32 0, i32 8
  %13 = load %struct.Type*, %struct.Type** %12, align 8
  %14 = icmp ne %struct.Type* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %2
  %16 = load %struct.Node*, %struct.Node** %6, align 8
  %17 = load %struct.Type*, %struct.Type** %4, align 8
  %18 = getelementptr inbounds %struct.Type, %struct.Type* %17, i32 0, i32 8
  %19 = load %struct.Type*, %struct.Type** %18, align 8
  %20 = load %struct.Token*, %struct.Token** %5, align 8
  %21 = call %struct.Node* @compute_vla_size(%struct.Type* noundef %19, %struct.Token* noundef %20)
  %22 = load %struct.Token*, %struct.Token** %5, align 8
  %23 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %16, %struct.Node* noundef %21, %struct.Token* noundef %22)
  store %struct.Node* %23, %struct.Node** %6, align 8
  br label %24

24:                                               ; preds = %15, %2
  %25 = load %struct.Type*, %struct.Type** %4, align 8
  %26 = getelementptr inbounds %struct.Type, %struct.Type* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, 13
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = load %struct.Node*, %struct.Node** %6, align 8
  store %struct.Node* %30, %struct.Node** %3, align 8
  br label %77

31:                                               ; preds = %24
  %32 = load %struct.Type*, %struct.Type** %4, align 8
  %33 = getelementptr inbounds %struct.Type, %struct.Type* %32, i32 0, i32 8
  %34 = load %struct.Type*, %struct.Type** %33, align 8
  %35 = getelementptr inbounds %struct.Type, %struct.Type* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 13
  br i1 %37, label %38, label %46

38:                                               ; preds = %31
  %39 = load %struct.Type*, %struct.Type** %4, align 8
  %40 = getelementptr inbounds %struct.Type, %struct.Type* %39, i32 0, i32 8
  %41 = load %struct.Type*, %struct.Type** %40, align 8
  %42 = getelementptr inbounds %struct.Type, %struct.Type* %41, i32 0, i32 13
  %43 = load %struct.Obj*, %struct.Obj** %42, align 8
  %44 = load %struct.Token*, %struct.Token** %5, align 8
  %45 = call %struct.Node* @new_var_node(%struct.Obj* noundef %43, %struct.Token* noundef %44)
  store %struct.Node* %45, %struct.Node** %7, align 8
  br label %55

46:                                               ; preds = %31
  %47 = load %struct.Type*, %struct.Type** %4, align 8
  %48 = getelementptr inbounds %struct.Type, %struct.Type* %47, i32 0, i32 8
  %49 = load %struct.Type*, %struct.Type** %48, align 8
  %50 = getelementptr inbounds %struct.Type, %struct.Type* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = load %struct.Token*, %struct.Token** %5, align 8
  %54 = call %struct.Node* @new_num(i64 noundef %52, %struct.Token* noundef %53)
  store %struct.Node* %54, %struct.Node** %7, align 8
  br label %55

55:                                               ; preds = %46, %38
  %56 = load %struct.Type*, %struct.Type** @ty_ulong, align 8
  %57 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %56, i8* noundef null)
  %58 = load %struct.Type*, %struct.Type** %4, align 8
  %59 = getelementptr inbounds %struct.Type, %struct.Type* %58, i32 0, i32 13
  store %struct.Obj* %57, %struct.Obj** %59, align 8
  %60 = load %struct.Type*, %struct.Type** %4, align 8
  %61 = getelementptr inbounds %struct.Type, %struct.Type* %60, i32 0, i32 13
  %62 = load %struct.Obj*, %struct.Obj** %61, align 8
  %63 = load %struct.Token*, %struct.Token** %5, align 8
  %64 = call %struct.Node* @new_var_node(%struct.Obj* noundef %62, %struct.Token* noundef %63)
  %65 = load %struct.Type*, %struct.Type** %4, align 8
  %66 = getelementptr inbounds %struct.Type, %struct.Type* %65, i32 0, i32 12
  %67 = load %struct.Node*, %struct.Node** %66, align 8
  %68 = load %struct.Node*, %struct.Node** %7, align 8
  %69 = load %struct.Token*, %struct.Token** %5, align 8
  %70 = call %struct.Node* @new_binary(i32 noundef 3, %struct.Node* noundef %67, %struct.Node* noundef %68, %struct.Token* noundef %69)
  %71 = load %struct.Token*, %struct.Token** %5, align 8
  %72 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %64, %struct.Node* noundef %70, %struct.Token* noundef %71)
  store %struct.Node* %72, %struct.Node** %8, align 8
  %73 = load %struct.Node*, %struct.Node** %6, align 8
  %74 = load %struct.Node*, %struct.Node** %8, align 8
  %75 = load %struct.Token*, %struct.Token** %5, align 8
  %76 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %73, %struct.Node* noundef %74, %struct.Token* noundef %75)
  store %struct.Node* %76, %struct.Node** %3, align 8
  br label %77

77:                                               ; preds = %55, %29
  %78 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %78
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_ulong(i64 noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  store i64 %0, i64* %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load %struct.Token*, %struct.Token** %4, align 8
  %7 = call %struct.Node* @new_node(i32 noundef 42, %struct.Token* noundef %6)
  store %struct.Node* %7, %struct.Node** %5, align 8
  %8 = load i64, i64* %3, align 8
  %9 = load %struct.Node*, %struct.Node** %5, align 8
  %10 = getelementptr inbounds %struct.Node, %struct.Node* %9, i32 0, i32 34
  store i64 %8, i64* %10, align 16
  %11 = load %struct.Type*, %struct.Type** @ty_ulong, align 8
  %12 = load %struct.Node*, %struct.Node** %5, align 8
  %13 = getelementptr inbounds %struct.Node, %struct.Node* %12, i32 0, i32 2
  store %struct.Type* %11, %struct.Type** %13, align 16
  %14 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @generic_selection(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.Node*, align 8
  %8 = alloca %struct.Node*, align 8
  %9 = alloca %struct.Type*, align 8
  %10 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %11 = load %struct.Token*, %struct.Token** %4, align 8
  %12 = call %struct.Token* @skip(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %12, %struct.Token** %4, align 8
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  %14 = call %struct.Node* @assign(%struct.Token** noundef %4, %struct.Token* noundef %13)
  store %struct.Node* %14, %struct.Node** %5, align 8
  %15 = load %struct.Node*, %struct.Node** %5, align 8
  call void @add_type(%struct.Node* noundef %15)
  %16 = load %struct.Node*, %struct.Node** %5, align 8
  %17 = getelementptr inbounds %struct.Node, %struct.Node* %16, i32 0, i32 2
  %18 = load %struct.Type*, %struct.Type** %17, align 16
  store %struct.Type* %18, %struct.Type** %6, align 8
  %19 = load %struct.Type*, %struct.Type** %6, align 8
  %20 = getelementptr inbounds %struct.Type, %struct.Type* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 11
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = load %struct.Type*, %struct.Type** %6, align 8
  %25 = call %struct.Type* @pointer_to(%struct.Type* noundef %24)
  store %struct.Type* %25, %struct.Type** %6, align 8
  br label %37

26:                                               ; preds = %2
  %27 = load %struct.Type*, %struct.Type** %6, align 8
  %28 = getelementptr inbounds %struct.Type, %struct.Type* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 12
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  %32 = load %struct.Type*, %struct.Type** %6, align 8
  %33 = getelementptr inbounds %struct.Type, %struct.Type* %32, i32 0, i32 8
  %34 = load %struct.Type*, %struct.Type** %33, align 8
  %35 = call %struct.Type* @pointer_to(%struct.Type* noundef %34)
  store %struct.Type* %35, %struct.Type** %6, align 8
  br label %36

36:                                               ; preds = %31, %26
  br label %37

37:                                               ; preds = %36, %23
  store %struct.Node* null, %struct.Node** %7, align 8
  br label %38

38:                                               ; preds = %72, %59, %37
  %39 = load %struct.Token**, %struct.Token*** %3, align 8
  %40 = load %struct.Token*, %struct.Token** %4, align 8
  %41 = call zeroext i1 @consume(%struct.Token** noundef %39, %struct.Token* noundef %40, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %42 = xor i1 %41, true
  br i1 %42, label %43, label %73

43:                                               ; preds = %38
  %44 = load %struct.Token*, %struct.Token** %4, align 8
  %45 = call %struct.Token* @skip(%struct.Token* noundef %44, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %45, %struct.Token** %4, align 8
  %46 = load %struct.Token*, %struct.Token** %4, align 8
  %47 = call zeroext i1 @equal(%struct.Token* noundef %46, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195.711, i64 0, i64 0))
  br i1 %47, label %48, label %60

48:                                               ; preds = %43
  %49 = load %struct.Token*, %struct.Token** %4, align 8
  %50 = getelementptr inbounds %struct.Token, %struct.Token* %49, i32 0, i32 1
  %51 = load %struct.Token*, %struct.Token** %50, align 8
  %52 = call %struct.Token* @skip(%struct.Token* noundef %51, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  store %struct.Token* %52, %struct.Token** %4, align 8
  %53 = load %struct.Token*, %struct.Token** %4, align 8
  %54 = call %struct.Node* @assign(%struct.Token** noundef %4, %struct.Token* noundef %53)
  store %struct.Node* %54, %struct.Node** %8, align 8
  %55 = load %struct.Node*, %struct.Node** %7, align 8
  %56 = icmp ne %struct.Node* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %48
  %58 = load %struct.Node*, %struct.Node** %8, align 8
  store %struct.Node* %58, %struct.Node** %7, align 8
  br label %59

59:                                               ; preds = %57, %48
  br label %38, !llvm.loop !93

60:                                               ; preds = %43
  %61 = load %struct.Token*, %struct.Token** %4, align 8
  %62 = call %struct.Type* @typename(%struct.Token** noundef %4, %struct.Token* noundef %61)
  store %struct.Type* %62, %struct.Type** %9, align 8
  %63 = load %struct.Token*, %struct.Token** %4, align 8
  %64 = call %struct.Token* @skip(%struct.Token* noundef %63, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  store %struct.Token* %64, %struct.Token** %4, align 8
  %65 = load %struct.Token*, %struct.Token** %4, align 8
  %66 = call %struct.Node* @assign(%struct.Token** noundef %4, %struct.Token* noundef %65)
  store %struct.Node* %66, %struct.Node** %10, align 8
  %67 = load %struct.Type*, %struct.Type** %6, align 8
  %68 = load %struct.Type*, %struct.Type** %9, align 8
  %69 = call zeroext i1 @is_compatible(%struct.Type* noundef %67, %struct.Type* noundef %68)
  br i1 %69, label %70, label %72

70:                                               ; preds = %60
  %71 = load %struct.Node*, %struct.Node** %10, align 8
  store %struct.Node* %71, %struct.Node** %7, align 8
  br label %72

72:                                               ; preds = %70, %60
  br label %38, !llvm.loop !93

73:                                               ; preds = %38
  %74 = load %struct.Node*, %struct.Node** %7, align 8
  %75 = icmp ne %struct.Node* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = load %struct.Node*, %struct.Node** %5, align 8
  store %struct.Node* %77, %struct.Node** %7, align 8
  br label %78

78:                                               ; preds = %76, %73
  %79 = load %struct.Node*, %struct.Node** %7, align 8
  ret %struct.Node* %79
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Obj* @new_string_literal(i8* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Obj*, align 8
  store i8* %0, i8** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  %6 = load %struct.Type*, %struct.Type** %4, align 8
  %7 = call %struct.Obj* @new_anon_gvar(%struct.Type* noundef %6)
  store %struct.Obj* %7, %struct.Obj** %5, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load %struct.Obj*, %struct.Obj** %5, align 8
  %10 = getelementptr inbounds %struct.Obj, %struct.Obj* %9, i32 0, i32 15
  store i8* %8, i8** %10, align 8
  %11 = load %struct.Obj*, %struct.Obj** %5, align 8
  ret %struct.Obj* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @enter_scope() #0 {
  %1 = alloca %struct.Scope*, align 8
  %2 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 40) #14
  %3 = bitcast i8* %2 to %struct.Scope*
  store %struct.Scope* %3, %struct.Scope** %1, align 8
  %4 = load %struct.Scope*, %struct.Scope** %1, align 8
  %5 = icmp eq %struct.Scope* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %0
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.180.801, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %0
  %8 = load %struct.Scope*, %struct.Scope** @scope, align 8
  %9 = load %struct.Scope*, %struct.Scope** %1, align 8
  %10 = getelementptr inbounds %struct.Scope, %struct.Scope* %9, i32 0, i32 0
  store %struct.Scope* %8, %struct.Scope** %10, align 8
  %11 = load %struct.Scope*, %struct.Scope** %1, align 8
  store %struct.Scope* %11, %struct.Scope** @scope, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @declspec(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.VarAttr* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.VarAttr*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca %struct.Type*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.VarAttr* %2, %struct.VarAttr** %6, align 8
  %11 = load %struct.Type*, %struct.Type** @ty_int, align 8
  store %struct.Type* %11, %struct.Type** %7, align 8
  store i32 0, i32* %8, align 4
  store i8 0, i8* %9, align 1
  br label %12

12:                                               ; preds = %344, %241, %177, %148, %131, %100, %3
  %13 = load %struct.Token*, %struct.Token** %5, align 8
  %14 = call zeroext i1 @is_typename(%struct.Token* noundef %13)
  br i1 %14, label %15, label %348

15:                                               ; preds = %12
  %16 = load %struct.Token*, %struct.Token** %5, align 8
  %17 = call zeroext i1 @equal(%struct.Token* noundef %16, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96.766, i64 0, i64 0))
  br i1 %17, label %33, label %18

18:                                               ; preds = %15
  %19 = load %struct.Token*, %struct.Token** %5, align 8
  %20 = call zeroext i1 @equal(%struct.Token* noundef %19, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98.745, i64 0, i64 0))
  br i1 %20, label %33, label %21

21:                                               ; preds = %18
  %22 = load %struct.Token*, %struct.Token** %5, align 8
  %23 = call zeroext i1 @equal(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99.767, i64 0, i64 0))
  br i1 %23, label %33, label %24

24:                                               ; preds = %21
  %25 = load %struct.Token*, %struct.Token** %5, align 8
  %26 = call zeroext i1 @equal(%struct.Token* noundef %25, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114.737, i64 0, i64 0))
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = load %struct.Token*, %struct.Token** %5, align 8
  %29 = call zeroext i1 @equal(%struct.Token* noundef %28, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115.768, i64 0, i64 0))
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = call zeroext i1 @equal(%struct.Token* noundef %31, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116.769, i64 0, i64 0))
  br i1 %32, label %33, label %104

33:                                               ; preds = %30, %27, %24, %21, %18, %15
  %34 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %35 = icmp ne %struct.VarAttr* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %37, i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.219.770, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

38:                                               ; preds = %33
  %39 = load %struct.Token*, %struct.Token** %5, align 8
  %40 = call zeroext i1 @equal(%struct.Token* noundef %39, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96.766, i64 0, i64 0))
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %43 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %42, i32 0, i32 0
  store i8 1, i8* %43, align 4
  br label %68

44:                                               ; preds = %38
  %45 = load %struct.Token*, %struct.Token** %5, align 8
  %46 = call zeroext i1 @equal(%struct.Token* noundef %45, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98.745, i64 0, i64 0))
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  %48 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %49 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %48, i32 0, i32 1
  store i8 1, i8* %49, align 1
  br label %67

50:                                               ; preds = %44
  %51 = load %struct.Token*, %struct.Token** %5, align 8
  %52 = call zeroext i1 @equal(%struct.Token* noundef %51, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99.767, i64 0, i64 0))
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %55 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %54, i32 0, i32 2
  store i8 1, i8* %55, align 2
  br label %66

56:                                               ; preds = %50
  %57 = load %struct.Token*, %struct.Token** %5, align 8
  %58 = call zeroext i1 @equal(%struct.Token* noundef %57, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114.737, i64 0, i64 0))
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %61 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %60, i32 0, i32 3
  store i8 1, i8* %61, align 1
  br label %65

62:                                               ; preds = %56
  %63 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %64 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %63, i32 0, i32 4
  store i8 1, i8* %64, align 4
  br label %65

65:                                               ; preds = %62, %59
  br label %66

66:                                               ; preds = %65, %53
  br label %67

67:                                               ; preds = %66, %47
  br label %68

68:                                               ; preds = %67, %41
  %69 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %70 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %69, i32 0, i32 0
  %71 = load i8, i8* %70, align 4
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %100

73:                                               ; preds = %68
  %74 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %75 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %74, i32 0, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = trunc i8 %76 to i1
  %78 = zext i1 %77 to i32
  %79 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %80 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %79, i32 0, i32 2
  %81 = load i8, i8* %80, align 2
  %82 = trunc i8 %81 to i1
  %83 = zext i1 %82 to i32
  %84 = add nsw i32 %78, %83
  %85 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %86 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %85, i32 0, i32 3
  %87 = load i8, i8* %86, align 1
  %88 = trunc i8 %87 to i1
  %89 = zext i1 %88 to i32
  %90 = add nsw i32 %84, %89
  %91 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %92 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %91, i32 0, i32 4
  %93 = load i8, i8* %92, align 4
  %94 = trunc i8 %93 to i1
  %95 = zext i1 %94 to i32
  %96 = add nsw i32 %90, %95
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %98, label %100

98:                                               ; preds = %73
  %99 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %99, i8* noundef getelementptr inbounds ([106 x i8], [106 x i8]* @.str.220.771, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

100:                                              ; preds = %73, %68
  %101 = load %struct.Token*, %struct.Token** %5, align 8
  %102 = getelementptr inbounds %struct.Token, %struct.Token* %101, i32 0, i32 1
  %103 = load %struct.Token*, %struct.Token** %102, align 8
  store %struct.Token* %103, %struct.Token** %5, align 8
  br label %12, !llvm.loop !94

104:                                              ; preds = %30
  %105 = load %struct.Token*, %struct.Token** %5, align 8
  %106 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %105, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103.748, i64 0, i64 0))
  br i1 %106, label %131, label %107

107:                                              ; preds = %104
  %108 = load %struct.Token*, %struct.Token** %5, align 8
  %109 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %108, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104.736, i64 0, i64 0))
  br i1 %109, label %131, label %110

110:                                              ; preds = %107
  %111 = load %struct.Token*, %struct.Token** %5, align 8
  %112 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %111, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105.772, i64 0, i64 0))
  br i1 %112, label %131, label %113

113:                                              ; preds = %110
  %114 = load %struct.Token*, %struct.Token** %5, align 8
  %115 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %114, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106.773, i64 0, i64 0))
  br i1 %115, label %131, label %116

116:                                              ; preds = %113
  %117 = load %struct.Token*, %struct.Token** %5, align 8
  %118 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %117, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118.752, i64 0, i64 0))
  br i1 %118, label %131, label %119

119:                                              ; preds = %116
  %120 = load %struct.Token*, %struct.Token** %5, align 8
  %121 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %120, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107.746, i64 0, i64 0))
  br i1 %121, label %131, label %122

122:                                              ; preds = %119
  %123 = load %struct.Token*, %struct.Token** %5, align 8
  %124 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %123, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.108.749, i64 0, i64 0))
  br i1 %124, label %131, label %125

125:                                              ; preds = %122
  %126 = load %struct.Token*, %struct.Token** %5, align 8
  %127 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %126, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109.750, i64 0, i64 0))
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = load %struct.Token*, %struct.Token** %5, align 8
  %130 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %129, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.110.774, i64 0, i64 0))
  br i1 %130, label %131, label %132

131:                                              ; preds = %128, %125, %122, %119, %116, %113, %110, %107, %104
  br label %12, !llvm.loop !94

132:                                              ; preds = %128
  %133 = load %struct.Token*, %struct.Token** %5, align 8
  %134 = call zeroext i1 @equal(%struct.Token* noundef %133, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117.751, i64 0, i64 0))
  br i1 %134, label %135, label %149

135:                                              ; preds = %132
  %136 = load %struct.Token*, %struct.Token** %5, align 8
  %137 = getelementptr inbounds %struct.Token, %struct.Token* %136, i32 0, i32 1
  %138 = load %struct.Token*, %struct.Token** %137, align 8
  store %struct.Token* %138, %struct.Token** %5, align 8
  %139 = load %struct.Token*, %struct.Token** %5, align 8
  %140 = call zeroext i1 @equal(%struct.Token* noundef %139, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %140, label %141, label %148

141:                                              ; preds = %135
  %142 = load %struct.Token*, %struct.Token** %5, align 8
  %143 = getelementptr inbounds %struct.Token, %struct.Token* %142, i32 0, i32 1
  %144 = load %struct.Token*, %struct.Token** %143, align 8
  %145 = call %struct.Type* @typename(%struct.Token** noundef %5, %struct.Token* noundef %144)
  store %struct.Type* %145, %struct.Type** %7, align 8
  %146 = load %struct.Token*, %struct.Token** %5, align 8
  %147 = call %struct.Token* @skip(%struct.Token* noundef %146, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %147, %struct.Token** %5, align 8
  br label %148

148:                                              ; preds = %141, %135
  store i8 1, i8* %9, align 1
  br label %12, !llvm.loop !94

149:                                              ; preds = %132
  %150 = load %struct.Token*, %struct.Token** %5, align 8
  %151 = call zeroext i1 @equal(%struct.Token* noundef %150, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.100.775, i64 0, i64 0))
  br i1 %151, label %152, label %180

152:                                              ; preds = %149
  %153 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %154 = icmp ne %struct.VarAttr* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %152
  %156 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %156, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.221.776, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

157:                                              ; preds = %152
  %158 = load %struct.Token*, %struct.Token** %5, align 8
  %159 = getelementptr inbounds %struct.Token, %struct.Token* %158, i32 0, i32 1
  %160 = load %struct.Token*, %struct.Token** %159, align 8
  %161 = call %struct.Token* @skip(%struct.Token* noundef %160, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %161, %struct.Token** %5, align 8
  %162 = load %struct.Token*, %struct.Token** %5, align 8
  %163 = call zeroext i1 @is_typename(%struct.Token* noundef %162)
  br i1 %163, label %164, label %171

164:                                              ; preds = %157
  %165 = load %struct.Token*, %struct.Token** %5, align 8
  %166 = call %struct.Type* @typename(%struct.Token** noundef %5, %struct.Token* noundef %165)
  %167 = getelementptr inbounds %struct.Type, %struct.Type* %166, i32 0, i32 2
  %168 = load i32, i32* %167, align 8
  %169 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %170 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %169, i32 0, i32 5
  store i32 %168, i32* %170, align 4
  br label %177

171:                                              ; preds = %157
  %172 = load %struct.Token*, %struct.Token** %5, align 8
  %173 = call i64 @const_expr(%struct.Token** noundef %5, %struct.Token* noundef %172)
  %174 = trunc i64 %173 to i32
  %175 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %176 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %175, i32 0, i32 5
  store i32 %174, i32* %176, align 4
  br label %177

177:                                              ; preds = %171, %164
  %178 = load %struct.Token*, %struct.Token** %5, align 8
  %179 = call %struct.Token* @skip(%struct.Token* noundef %178, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %179, %struct.Token** %5, align 8
  br label %12, !llvm.loop !94

180:                                              ; preds = %149
  %181 = load %struct.Token*, %struct.Token** %5, align 8
  %182 = call %struct.Type* @find_typedef(%struct.Token* noundef %181)
  store %struct.Type* %182, %struct.Type** %10, align 8
  %183 = load %struct.Token*, %struct.Token** %5, align 8
  %184 = call zeroext i1 @equal(%struct.Token* noundef %183, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.94.777, i64 0, i64 0))
  br i1 %184, label %197, label %185

185:                                              ; preds = %180
  %186 = load %struct.Token*, %struct.Token** %5, align 8
  %187 = call zeroext i1 @equal(%struct.Token* noundef %186, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95.778, i64 0, i64 0))
  br i1 %187, label %197, label %188

188:                                              ; preds = %185
  %189 = load %struct.Token*, %struct.Token** %5, align 8
  %190 = call zeroext i1 @equal(%struct.Token* noundef %189, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97.779, i64 0, i64 0))
  br i1 %190, label %197, label %191

191:                                              ; preds = %188
  %192 = load %struct.Token*, %struct.Token** %5, align 8
  %193 = call zeroext i1 @equal(%struct.Token* noundef %192, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113.780, i64 0, i64 0))
  br i1 %193, label %197, label %194

194:                                              ; preds = %191
  %195 = load %struct.Type*, %struct.Type** %10, align 8
  %196 = icmp ne %struct.Type* %195, null
  br i1 %196, label %197, label %244

197:                                              ; preds = %194, %191, %188, %185, %180
  %198 = load i32, i32* %8, align 4
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  br label %348

201:                                              ; preds = %197
  %202 = load %struct.Token*, %struct.Token** %5, align 8
  %203 = call zeroext i1 @equal(%struct.Token* noundef %202, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.94.777, i64 0, i64 0))
  br i1 %203, label %204, label %209

204:                                              ; preds = %201
  %205 = load %struct.Token*, %struct.Token** %5, align 8
  %206 = getelementptr inbounds %struct.Token, %struct.Token* %205, i32 0, i32 1
  %207 = load %struct.Token*, %struct.Token** %206, align 8
  %208 = call %struct.Type* @struct_decl(%struct.Token** noundef %5, %struct.Token* noundef %207)
  store %struct.Type* %208, %struct.Type** %7, align 8
  br label %241

209:                                              ; preds = %201
  %210 = load %struct.Token*, %struct.Token** %5, align 8
  %211 = call zeroext i1 @equal(%struct.Token* noundef %210, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95.778, i64 0, i64 0))
  br i1 %211, label %212, label %217

212:                                              ; preds = %209
  %213 = load %struct.Token*, %struct.Token** %5, align 8
  %214 = getelementptr inbounds %struct.Token, %struct.Token* %213, i32 0, i32 1
  %215 = load %struct.Token*, %struct.Token** %214, align 8
  %216 = call %struct.Type* @union_decl(%struct.Token** noundef %5, %struct.Token* noundef %215)
  store %struct.Type* %216, %struct.Type** %7, align 8
  br label %240

217:                                              ; preds = %209
  %218 = load %struct.Token*, %struct.Token** %5, align 8
  %219 = call zeroext i1 @equal(%struct.Token* noundef %218, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97.779, i64 0, i64 0))
  br i1 %219, label %220, label %225

220:                                              ; preds = %217
  %221 = load %struct.Token*, %struct.Token** %5, align 8
  %222 = getelementptr inbounds %struct.Token, %struct.Token* %221, i32 0, i32 1
  %223 = load %struct.Token*, %struct.Token** %222, align 8
  %224 = call %struct.Type* @enum_specifier(%struct.Token** noundef %5, %struct.Token* noundef %223)
  store %struct.Type* %224, %struct.Type** %7, align 8
  br label %239

225:                                              ; preds = %217
  %226 = load %struct.Token*, %struct.Token** %5, align 8
  %227 = call zeroext i1 @equal(%struct.Token* noundef %226, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113.780, i64 0, i64 0))
  br i1 %227, label %228, label %233

228:                                              ; preds = %225
  %229 = load %struct.Token*, %struct.Token** %5, align 8
  %230 = getelementptr inbounds %struct.Token, %struct.Token* %229, i32 0, i32 1
  %231 = load %struct.Token*, %struct.Token** %230, align 8
  %232 = call %struct.Type* @typeof_specifier(%struct.Token** noundef %5, %struct.Token* noundef %231)
  store %struct.Type* %232, %struct.Type** %7, align 8
  br label %238

233:                                              ; preds = %225
  %234 = load %struct.Type*, %struct.Type** %10, align 8
  store %struct.Type* %234, %struct.Type** %7, align 8
  %235 = load %struct.Token*, %struct.Token** %5, align 8
  %236 = getelementptr inbounds %struct.Token, %struct.Token* %235, i32 0, i32 1
  %237 = load %struct.Token*, %struct.Token** %236, align 8
  store %struct.Token* %237, %struct.Token** %5, align 8
  br label %238

238:                                              ; preds = %233, %228
  br label %239

239:                                              ; preds = %238, %220
  br label %240

240:                                              ; preds = %239, %212
  br label %241

241:                                              ; preds = %240, %204
  %242 = load i32, i32* %8, align 4
  %243 = add nsw i32 %242, 65536
  store i32 %243, i32* %8, align 4
  br label %12, !llvm.loop !94

244:                                              ; preds = %194
  %245 = load %struct.Token*, %struct.Token** %5, align 8
  %246 = call zeroext i1 @equal(%struct.Token* noundef %245, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88.747, i64 0, i64 0))
  br i1 %246, label %247, label %250

247:                                              ; preds = %244
  %248 = load i32, i32* %8, align 4
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %8, align 4
  br label %314

250:                                              ; preds = %244
  %251 = load %struct.Token*, %struct.Token** %5, align 8
  %252 = call zeroext i1 @equal(%struct.Token* noundef %251, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89.781, i64 0, i64 0))
  br i1 %252, label %253, label %256

253:                                              ; preds = %250
  %254 = load i32, i32* %8, align 4
  %255 = add nsw i32 %254, 4
  store i32 %255, i32* %8, align 4
  br label %313

256:                                              ; preds = %250
  %257 = load %struct.Token*, %struct.Token** %5, align 8
  %258 = call zeroext i1 @equal(%struct.Token* noundef %257, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90.782, i64 0, i64 0))
  br i1 %258, label %259, label %262

259:                                              ; preds = %256
  %260 = load i32, i32* %8, align 4
  %261 = add nsw i32 %260, 16
  store i32 %261, i32* %8, align 4
  br label %312

262:                                              ; preds = %256
  %263 = load %struct.Token*, %struct.Token** %5, align 8
  %264 = call zeroext i1 @equal(%struct.Token* noundef %263, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91.783, i64 0, i64 0))
  br i1 %264, label %265, label %268

265:                                              ; preds = %262
  %266 = load i32, i32* %8, align 4
  %267 = add nsw i32 %266, 64
  store i32 %267, i32* %8, align 4
  br label %311

268:                                              ; preds = %262
  %269 = load %struct.Token*, %struct.Token** %5, align 8
  %270 = call zeroext i1 @equal(%struct.Token* noundef %269, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92.784, i64 0, i64 0))
  br i1 %270, label %271, label %274

271:                                              ; preds = %268
  %272 = load i32, i32* %8, align 4
  %273 = add nsw i32 %272, 256
  store i32 %273, i32* %8, align 4
  br label %310

274:                                              ; preds = %268
  %275 = load %struct.Token*, %struct.Token** %5, align 8
  %276 = call zeroext i1 @equal(%struct.Token* noundef %275, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93.785, i64 0, i64 0))
  br i1 %276, label %277, label %280

277:                                              ; preds = %274
  %278 = load i32, i32* %8, align 4
  %279 = add nsw i32 %278, 1024
  store i32 %279, i32* %8, align 4
  br label %309

280:                                              ; preds = %274
  %281 = load %struct.Token*, %struct.Token** %5, align 8
  %282 = call zeroext i1 @equal(%struct.Token* noundef %281, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111.786, i64 0, i64 0))
  br i1 %282, label %283, label %286

283:                                              ; preds = %280
  %284 = load i32, i32* %8, align 4
  %285 = add nsw i32 %284, 4096
  store i32 %285, i32* %8, align 4
  br label %308

286:                                              ; preds = %280
  %287 = load %struct.Token*, %struct.Token** %5, align 8
  %288 = call zeroext i1 @equal(%struct.Token* noundef %287, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112.787, i64 0, i64 0))
  br i1 %288, label %289, label %292

289:                                              ; preds = %286
  %290 = load i32, i32* %8, align 4
  %291 = add nsw i32 %290, 16384
  store i32 %291, i32* %8, align 4
  br label %307

292:                                              ; preds = %286
  %293 = load %struct.Token*, %struct.Token** %5, align 8
  %294 = call zeroext i1 @equal(%struct.Token* noundef %293, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101.788, i64 0, i64 0))
  br i1 %294, label %295, label %298

295:                                              ; preds = %292
  %296 = load i32, i32* %8, align 4
  %297 = or i32 %296, 131072
  store i32 %297, i32* %8, align 4
  br label %306

298:                                              ; preds = %292
  %299 = load %struct.Token*, %struct.Token** %5, align 8
  %300 = call zeroext i1 @equal(%struct.Token* noundef %299, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102.789, i64 0, i64 0))
  br i1 %300, label %301, label %304

301:                                              ; preds = %298
  %302 = load i32, i32* %8, align 4
  %303 = or i32 %302, 262144
  store i32 %303, i32* %8, align 4
  br label %305

304:                                              ; preds = %298
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.165.790, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0), i32 noundef 598) #11
  unreachable

305:                                              ; preds = %301
  br label %306

306:                                              ; preds = %305, %295
  br label %307

307:                                              ; preds = %306, %289
  br label %308

308:                                              ; preds = %307, %283
  br label %309

309:                                              ; preds = %308, %277
  br label %310

310:                                              ; preds = %309, %271
  br label %311

311:                                              ; preds = %310, %265
  br label %312

312:                                              ; preds = %311, %259
  br label %313

313:                                              ; preds = %312, %253
  br label %314

314:                                              ; preds = %313, %247
  %315 = load i32, i32* %8, align 4
  switch i32 %315, label %342 [
    i32 1, label %316
    i32 4, label %318
    i32 16, label %320
    i32 131088, label %320
    i32 262160, label %322
    i32 64, label %324
    i32 320, label %324
    i32 131136, label %324
    i32 131392, label %324
    i32 262208, label %326
    i32 262464, label %326
    i32 256, label %328
    i32 131072, label %328
    i32 131328, label %328
    i32 262144, label %330
    i32 262400, label %330
    i32 1024, label %332
    i32 1280, label %332
    i32 2048, label %332
    i32 2304, label %332
    i32 132096, label %332
    i32 132352, label %332
    i32 133120, label %332
    i32 133376, label %332
    i32 263168, label %334
    i32 263424, label %334
    i32 264192, label %334
    i32 264448, label %334
    i32 4096, label %336
    i32 16384, label %338
    i32 17408, label %340
  ]

316:                                              ; preds = %314
  %317 = load %struct.Type*, %struct.Type** @ty_void, align 8
  store %struct.Type* %317, %struct.Type** %7, align 8
  br label %344

318:                                              ; preds = %314
  %319 = load %struct.Type*, %struct.Type** @ty_bool, align 8
  store %struct.Type* %319, %struct.Type** %7, align 8
  br label %344

320:                                              ; preds = %314, %314
  %321 = load %struct.Type*, %struct.Type** @ty_char, align 8
  store %struct.Type* %321, %struct.Type** %7, align 8
  br label %344

322:                                              ; preds = %314
  %323 = load %struct.Type*, %struct.Type** @ty_uchar, align 8
  store %struct.Type* %323, %struct.Type** %7, align 8
  br label %344

324:                                              ; preds = %314, %314, %314, %314
  %325 = load %struct.Type*, %struct.Type** @ty_short, align 8
  store %struct.Type* %325, %struct.Type** %7, align 8
  br label %344

326:                                              ; preds = %314, %314
  %327 = load %struct.Type*, %struct.Type** @ty_ushort, align 8
  store %struct.Type* %327, %struct.Type** %7, align 8
  br label %344

328:                                              ; preds = %314, %314, %314
  %329 = load %struct.Type*, %struct.Type** @ty_int, align 8
  store %struct.Type* %329, %struct.Type** %7, align 8
  br label %344

330:                                              ; preds = %314, %314
  %331 = load %struct.Type*, %struct.Type** @ty_uint, align 8
  store %struct.Type* %331, %struct.Type** %7, align 8
  br label %344

332:                                              ; preds = %314, %314, %314, %314, %314, %314, %314, %314
  %333 = load %struct.Type*, %struct.Type** @ty_long, align 8
  store %struct.Type* %333, %struct.Type** %7, align 8
  br label %344

334:                                              ; preds = %314, %314, %314, %314
  %335 = load %struct.Type*, %struct.Type** @ty_ulong, align 8
  store %struct.Type* %335, %struct.Type** %7, align 8
  br label %344

336:                                              ; preds = %314
  %337 = load %struct.Type*, %struct.Type** @ty_float, align 8
  store %struct.Type* %337, %struct.Type** %7, align 8
  br label %344

338:                                              ; preds = %314
  %339 = load %struct.Type*, %struct.Type** @ty_double, align 8
  store %struct.Type* %339, %struct.Type** %7, align 8
  br label %344

340:                                              ; preds = %314
  %341 = load %struct.Type*, %struct.Type** @ty_ldouble, align 8
  store %struct.Type* %341, %struct.Type** %7, align 8
  br label %344

342:                                              ; preds = %314
  %343 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %343, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.222.791, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

344:                                              ; preds = %340, %338, %336, %334, %332, %330, %328, %326, %324, %322, %320, %318, %316
  %345 = load %struct.Token*, %struct.Token** %5, align 8
  %346 = getelementptr inbounds %struct.Token, %struct.Token* %345, i32 0, i32 1
  %347 = load %struct.Token*, %struct.Token** %346, align 8
  store %struct.Token* %347, %struct.Token** %5, align 8
  br label %12, !llvm.loop !94

348:                                              ; preds = %200, %12
  %349 = load i8, i8* %9, align 1
  %350 = trunc i8 %349 to i1
  br i1 %350, label %351, label %356

351:                                              ; preds = %348
  %352 = load %struct.Type*, %struct.Type** %7, align 8
  %353 = call %struct.Type* @copy_type(%struct.Type* noundef %352)
  store %struct.Type* %353, %struct.Type** %7, align 8
  %354 = load %struct.Type*, %struct.Type** %7, align 8
  %355 = getelementptr inbounds %struct.Type, %struct.Type* %354, i32 0, i32 4
  store i8 1, i8* %355, align 1
  br label %356

356:                                              ; preds = %351, %348
  %357 = load %struct.Token*, %struct.Token** %5, align 8
  %358 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %357, %struct.Token** %358, align 8
  %359 = load %struct.Type*, %struct.Type** %7, align 8
  ret %struct.Type* %359
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @parse_typedef(%struct.Token* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.Type*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  store i8 1, i8* %5, align 1
  br label %7

7:                                                ; preds = %29, %2
  %8 = load %struct.Token*, %struct.Token** %3, align 8
  %9 = call zeroext i1 @consume(%struct.Token** noundef %3, %struct.Token* noundef %8, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %10 = xor i1 %9, true
  br i1 %10, label %11, label %37

11:                                               ; preds = %7
  %12 = load i8, i8* %5, align 1
  %13 = trunc i8 %12 to i1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = load %struct.Token*, %struct.Token** %3, align 8
  %16 = call %struct.Token* @skip(%struct.Token* noundef %15, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %16, %struct.Token** %3, align 8
  br label %17

17:                                               ; preds = %14, %11
  store i8 0, i8* %5, align 1
  %18 = load %struct.Token*, %struct.Token** %3, align 8
  %19 = load %struct.Type*, %struct.Type** %4, align 8
  %20 = call %struct.Type* @declarator(%struct.Token** noundef %3, %struct.Token* noundef %18, %struct.Type* noundef %19)
  store %struct.Type* %20, %struct.Type** %6, align 8
  %21 = load %struct.Type*, %struct.Type** %6, align 8
  %22 = getelementptr inbounds %struct.Type, %struct.Type* %21, i32 0, i32 9
  %23 = load %struct.Token*, %struct.Token** %22, align 8
  %24 = icmp ne %struct.Token* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %17
  %26 = load %struct.Type*, %struct.Type** %6, align 8
  %27 = getelementptr inbounds %struct.Type, %struct.Type* %26, i32 0, i32 10
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %28, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.232.765, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

29:                                               ; preds = %17
  %30 = load %struct.Type*, %struct.Type** %6, align 8
  %31 = load %struct.Type*, %struct.Type** %6, align 8
  %32 = getelementptr inbounds %struct.Type, %struct.Type* %31, i32 0, i32 9
  %33 = load %struct.Token*, %struct.Token** %32, align 8
  %34 = call i8* @get_ident(%struct.Token* noundef %33)
  %35 = call %struct.VarScope* @push_scope(i8* noundef %34)
  %36 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %35, i32 0, i32 1
  store %struct.Type* %30, %struct.Type** %36, align 8
  br label %7, !llvm.loop !95

37:                                               ; preds = %7
  %38 = load %struct.Token*, %struct.Token** %3, align 8
  ret %struct.Token* %38
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_function(%struct.Token* noundef %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Type, align 8
  %5 = alloca %struct.Type*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %6 = load %struct.Token*, %struct.Token** %3, align 8
  %7 = call zeroext i1 @equal(%struct.Token* noundef %6, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i1 false, i1* %2, align 1
  br label %17

9:                                                ; preds = %1
  %10 = bitcast %struct.Type* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 128, i1 false)
  %11 = load %struct.Token*, %struct.Token** %3, align 8
  %12 = call %struct.Type* @declarator(%struct.Token** noundef %3, %struct.Token* noundef %11, %struct.Type* noundef %4)
  store %struct.Type* %12, %struct.Type** %5, align 8
  %13 = load %struct.Type*, %struct.Type** %5, align 8
  %14 = getelementptr inbounds %struct.Type, %struct.Type* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 11
  store i1 %16, i1* %2, align 1
  br label %17

17:                                               ; preds = %9, %8
  %18 = load i1, i1* %2, align 1
  ret i1 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @function(%struct.Token* noundef %0, %struct.Type* noundef %1, %struct.VarAttr* noundef %2) #0 {
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.VarAttr*, align 8
  %8 = alloca %struct.Type*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.Obj*, align 8
  %11 = alloca %struct.Type*, align 8
  store %struct.Token* %0, %struct.Token** %5, align 8
  store %struct.Type* %1, %struct.Type** %6, align 8
  store %struct.VarAttr* %2, %struct.VarAttr** %7, align 8
  %12 = load %struct.Token*, %struct.Token** %5, align 8
  %13 = load %struct.Type*, %struct.Type** %6, align 8
  %14 = call %struct.Type* @declarator(%struct.Token** noundef %5, %struct.Token* noundef %12, %struct.Type* noundef %13)
  store %struct.Type* %14, %struct.Type** %8, align 8
  %15 = load %struct.Type*, %struct.Type** %8, align 8
  %16 = getelementptr inbounds %struct.Type, %struct.Type* %15, i32 0, i32 9
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = icmp ne %struct.Token* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %3
  %20 = load %struct.Type*, %struct.Type** %8, align 8
  %21 = getelementptr inbounds %struct.Type, %struct.Type* %20, i32 0, i32 10
  %22 = load %struct.Token*, %struct.Token** %21, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.233.754, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

23:                                               ; preds = %3
  %24 = load %struct.Type*, %struct.Type** %8, align 8
  %25 = getelementptr inbounds %struct.Type, %struct.Type* %24, i32 0, i32 9
  %26 = load %struct.Token*, %struct.Token** %25, align 8
  %27 = call i8* @get_ident(%struct.Token* noundef %26)
  store i8* %27, i8** %9, align 8
  %28 = load i8*, i8** %9, align 8
  %29 = call %struct.Obj* @find_func(i8* noundef %28)
  store %struct.Obj* %29, %struct.Obj** %10, align 8
  %30 = load %struct.Obj*, %struct.Obj** %10, align 8
  %31 = icmp ne %struct.Obj* %30, null
  br i1 %31, label %32, label %75

32:                                               ; preds = %23
  %33 = load %struct.Obj*, %struct.Obj** %10, align 8
  %34 = getelementptr inbounds %struct.Obj, %struct.Obj* %33, i32 0, i32 10
  %35 = load i8, i8* %34, align 4
  %36 = trunc i8 %35 to i1
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %38, i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.234.757, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

39:                                               ; preds = %32
  %40 = load %struct.Obj*, %struct.Obj** %10, align 8
  %41 = getelementptr inbounds %struct.Obj, %struct.Obj* %40, i32 0, i32 11
  %42 = load i8, i8* %41, align 1
  %43 = trunc i8 %42 to i1
  br i1 %43, label %44, label %50

44:                                               ; preds = %39
  %45 = load %struct.Token*, %struct.Token** %5, align 8
  %46 = call zeroext i1 @equal(%struct.Token* noundef %45, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  %48 = load %struct.Token*, %struct.Token** %5, align 8
  %49 = load i8*, i8** %9, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %48, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.235.758, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0), i8* noundef %49) #11
  unreachable

50:                                               ; preds = %44, %39
  %51 = load %struct.Obj*, %struct.Obj** %10, align 8
  %52 = getelementptr inbounds %struct.Obj, %struct.Obj* %51, i32 0, i32 12
  %53 = load i8, i8* %52, align 2
  %54 = trunc i8 %53 to i1
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = load %struct.VarAttr*, %struct.VarAttr** %7, align 8
  %57 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %56, i32 0, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = trunc i8 %58 to i1
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %61, i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.236.759, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

62:                                               ; preds = %55, %50
  %63 = load %struct.Obj*, %struct.Obj** %10, align 8
  %64 = getelementptr inbounds %struct.Obj, %struct.Obj* %63, i32 0, i32 11
  %65 = load i8, i8* %64, align 1
  %66 = trunc i8 %65 to i1
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = load %struct.Token*, %struct.Token** %5, align 8
  %69 = call zeroext i1 @equal(%struct.Token* noundef %68, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br label %70

70:                                               ; preds = %67, %62
  %71 = phi i1 [ true, %62 ], [ %69, %67 ]
  %72 = load %struct.Obj*, %struct.Obj** %10, align 8
  %73 = getelementptr inbounds %struct.Obj, %struct.Obj* %72, i32 0, i32 11
  %74 = zext i1 %71 to i8
  store i8 %74, i8* %73, align 1
  br label %115

75:                                               ; preds = %23
  %76 = load i8*, i8** %9, align 8
  %77 = load %struct.Type*, %struct.Type** %8, align 8
  %78 = call %struct.Obj* @new_gvar(i8* noundef %76, %struct.Type* noundef %77)
  store %struct.Obj* %78, %struct.Obj** %10, align 8
  %79 = load %struct.Obj*, %struct.Obj** %10, align 8
  %80 = getelementptr inbounds %struct.Obj, %struct.Obj* %79, i32 0, i32 10
  store i8 1, i8* %80, align 4
  %81 = load %struct.Token*, %struct.Token** %5, align 8
  %82 = call zeroext i1 @equal(%struct.Token* noundef %81, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  %83 = load %struct.Obj*, %struct.Obj** %10, align 8
  %84 = getelementptr inbounds %struct.Obj, %struct.Obj* %83, i32 0, i32 11
  %85 = zext i1 %82 to i8
  store i8 %85, i8* %84, align 1
  %86 = load %struct.VarAttr*, %struct.VarAttr** %7, align 8
  %87 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %86, i32 0, i32 1
  %88 = load i8, i8* %87, align 1
  %89 = trunc i8 %88 to i1
  br i1 %89, label %103, label %90

90:                                               ; preds = %75
  %91 = load %struct.VarAttr*, %struct.VarAttr** %7, align 8
  %92 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %91, i32 0, i32 3
  %93 = load i8, i8* %92, align 1
  %94 = trunc i8 %93 to i1
  br i1 %94, label %95, label %101

95:                                               ; preds = %90
  %96 = load %struct.VarAttr*, %struct.VarAttr** %7, align 8
  %97 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %96, i32 0, i32 2
  %98 = load i8, i8* %97, align 2
  %99 = trunc i8 %98 to i1
  %100 = xor i1 %99, true
  br label %101

101:                                              ; preds = %95, %90
  %102 = phi i1 [ false, %90 ], [ %100, %95 ]
  br label %103

103:                                              ; preds = %101, %75
  %104 = phi i1 [ true, %75 ], [ %102, %101 ]
  %105 = load %struct.Obj*, %struct.Obj** %10, align 8
  %106 = getelementptr inbounds %struct.Obj, %struct.Obj* %105, i32 0, i32 12
  %107 = zext i1 %104 to i8
  store i8 %107, i8* %106, align 2
  %108 = load %struct.VarAttr*, %struct.VarAttr** %7, align 8
  %109 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %108, i32 0, i32 3
  %110 = load i8, i8* %109, align 1
  %111 = trunc i8 %110 to i1
  %112 = load %struct.Obj*, %struct.Obj** %10, align 8
  %113 = getelementptr inbounds %struct.Obj, %struct.Obj* %112, i32 0, i32 17
  %114 = zext i1 %111 to i8
  store i8 %114, i8* %113, align 8
  br label %115

115:                                              ; preds = %103, %70
  %116 = load %struct.Obj*, %struct.Obj** %10, align 8
  %117 = getelementptr inbounds %struct.Obj, %struct.Obj* %116, i32 0, i32 12
  %118 = load i8, i8* %117, align 2
  %119 = trunc i8 %118 to i1
  br i1 %119, label %120, label %125

120:                                              ; preds = %115
  %121 = load %struct.Obj*, %struct.Obj** %10, align 8
  %122 = getelementptr inbounds %struct.Obj, %struct.Obj* %121, i32 0, i32 17
  %123 = load i8, i8* %122, align 8
  %124 = trunc i8 %123 to i1
  br label %125

125:                                              ; preds = %120, %115
  %126 = phi i1 [ false, %115 ], [ %124, %120 ]
  %127 = xor i1 %126, true
  %128 = load %struct.Obj*, %struct.Obj** %10, align 8
  %129 = getelementptr inbounds %struct.Obj, %struct.Obj* %128, i32 0, i32 25
  %130 = zext i1 %127 to i8
  store i8 %130, i8* %129, align 1
  %131 = load %struct.Token*, %struct.Token** %5, align 8
  %132 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %131, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  br i1 %132, label %133, label %135

133:                                              ; preds = %125
  %134 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %134, %struct.Token** %4, align 8
  br label %234

135:                                              ; preds = %125
  %136 = load %struct.Obj*, %struct.Obj** %10, align 8
  store %struct.Obj* %136, %struct.Obj** @current_fn.708, align 8
  store %struct.Obj* null, %struct.Obj** @locals, align 8
  call void @enter_scope()
  %137 = load %struct.Type*, %struct.Type** %8, align 8
  %138 = getelementptr inbounds %struct.Type, %struct.Type* %137, i32 0, i32 18
  %139 = load %struct.Type*, %struct.Type** %138, align 8
  %140 = load i8*, i8** %9, align 8
  call void @create_param_lvars(%struct.Type* noundef %139, i8* noundef %140)
  %141 = load i32, i32* @order, align 4
  %142 = load %struct.Obj*, %struct.Obj** %10, align 8
  %143 = getelementptr inbounds %struct.Obj, %struct.Obj* %142, i32 0, i32 9
  store i32 %141, i32* %143, align 8
  %144 = load %struct.Type*, %struct.Type** %8, align 8
  %145 = getelementptr inbounds %struct.Type, %struct.Type* %144, i32 0, i32 17
  %146 = load %struct.Type*, %struct.Type** %145, align 8
  store %struct.Type* %146, %struct.Type** %11, align 8
  %147 = load %struct.Type*, %struct.Type** %11, align 8
  %148 = getelementptr inbounds %struct.Type, %struct.Type* %147, i32 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 14
  br i1 %150, label %156, label %151

151:                                              ; preds = %135
  %152 = load %struct.Type*, %struct.Type** %11, align 8
  %153 = getelementptr inbounds %struct.Type, %struct.Type* %152, i32 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = icmp eq i32 %154, 15
  br i1 %155, label %156, label %166

156:                                              ; preds = %151, %135
  %157 = load %struct.Type*, %struct.Type** %11, align 8
  %158 = getelementptr inbounds %struct.Type, %struct.Type* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, 16
  br i1 %160, label %161, label %166

161:                                              ; preds = %156
  %162 = load %struct.Type*, %struct.Type** %11, align 8
  %163 = call %struct.Type* @pointer_to(%struct.Type* noundef %162)
  %164 = load i8*, i8** %9, align 8
  %165 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.66.588, i64 0, i64 0), %struct.Type* noundef %163, i8* noundef %164)
  br label %166

166:                                              ; preds = %161, %156, %151
  %167 = load %struct.Obj*, %struct.Obj** @locals, align 8
  %168 = load %struct.Obj*, %struct.Obj** %10, align 8
  %169 = getelementptr inbounds %struct.Obj, %struct.Obj* %168, i32 0, i32 18
  store %struct.Obj* %167, %struct.Obj** %169, align 8
  %170 = load %struct.Type*, %struct.Type** %8, align 8
  %171 = getelementptr inbounds %struct.Type, %struct.Type* %170, i32 0, i32 19
  %172 = load i8, i8* %171, align 8
  %173 = trunc i8 %172 to i1
  br i1 %173, label %174, label %181

174:                                              ; preds = %166
  %175 = load %struct.Type*, %struct.Type** @ty_char, align 8
  %176 = call %struct.Type* @array_of(%struct.Type* noundef %175, i32 noundef 136)
  %177 = load i8*, i8** %9, align 8
  %178 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.237.760, i64 0, i64 0), %struct.Type* noundef %176, i8* noundef %177)
  %179 = load %struct.Obj*, %struct.Obj** %10, align 8
  %180 = getelementptr inbounds %struct.Obj, %struct.Obj* %179, i32 0, i32 21
  store %struct.Obj* %178, %struct.Obj** %180, align 8
  br label %181

181:                                              ; preds = %174, %166
  %182 = load %struct.Type*, %struct.Type** @ty_char, align 8
  %183 = call %struct.Type* @pointer_to(%struct.Type* noundef %182)
  %184 = load i8*, i8** %9, align 8
  %185 = call %struct.Obj* @new_lvar(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.238.761, i64 0, i64 0), %struct.Type* noundef %183, i8* noundef %184)
  %186 = load %struct.Obj*, %struct.Obj** %10, align 8
  %187 = getelementptr inbounds %struct.Obj, %struct.Obj* %186, i32 0, i32 22
  store %struct.Obj* %185, %struct.Obj** %187, align 8
  br label %188

188:                                              ; preds = %192, %181
  %189 = load %struct.Token*, %struct.Token** %5, align 8
  %190 = call zeroext i1 @equal(%struct.Token* noundef %189, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  %191 = xor i1 %190, true
  br i1 %191, label %192, label %195

192:                                              ; preds = %188
  %193 = load %struct.Token*, %struct.Token** %5, align 8
  %194 = call %struct.Token* @skip_excess_element2(%struct.Token* noundef %193)
  store %struct.Token* %194, %struct.Token** %5, align 8
  br label %188, !llvm.loop !96

195:                                              ; preds = %188
  %196 = load %struct.Token*, %struct.Token** %5, align 8
  %197 = call %struct.Token* @skip(%struct.Token* noundef %196, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  store %struct.Token* %197, %struct.Token** %5, align 8
  %198 = load %struct.Obj*, %struct.Obj** %10, align 8
  %199 = getelementptr inbounds %struct.Obj, %struct.Obj* %198, i32 0, i32 1
  %200 = load i8*, i8** %199, align 8
  %201 = load %struct.Type*, %struct.Type** @ty_char, align 8
  %202 = load %struct.Obj*, %struct.Obj** %10, align 8
  %203 = getelementptr inbounds %struct.Obj, %struct.Obj* %202, i32 0, i32 1
  %204 = load i8*, i8** %203, align 8
  %205 = call i64 @strlen(i8* noundef %204) #13
  %206 = add i64 %205, 1
  %207 = trunc i64 %206 to i32
  %208 = call %struct.Type* @array_of(%struct.Type* noundef %201, i32 noundef %207)
  %209 = call %struct.Obj* @new_string_literal(i8* noundef %200, %struct.Type* noundef %208)
  %210 = call %struct.VarScope* @push_scope(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.239.762, i64 0, i64 0))
  %211 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %210, i32 0, i32 0
  store %struct.Obj* %209, %struct.Obj** %211, align 8
  %212 = load %struct.Obj*, %struct.Obj** %10, align 8
  %213 = getelementptr inbounds %struct.Obj, %struct.Obj* %212, i32 0, i32 1
  %214 = load i8*, i8** %213, align 8
  %215 = load %struct.Type*, %struct.Type** @ty_char, align 8
  %216 = load %struct.Obj*, %struct.Obj** %10, align 8
  %217 = getelementptr inbounds %struct.Obj, %struct.Obj* %216, i32 0, i32 1
  %218 = load i8*, i8** %217, align 8
  %219 = call i64 @strlen(i8* noundef %218) #13
  %220 = add i64 %219, 1
  %221 = trunc i64 %220 to i32
  %222 = call %struct.Type* @array_of(%struct.Type* noundef %215, i32 noundef %221)
  %223 = call %struct.Obj* @new_string_literal(i8* noundef %214, %struct.Type* noundef %222)
  %224 = call %struct.VarScope* @push_scope(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.240.763, i64 0, i64 0))
  %225 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %224, i32 0, i32 0
  store %struct.Obj* %223, %struct.Obj** %225, align 8
  %226 = load %struct.Token*, %struct.Token** %5, align 8
  %227 = call %struct.Node* @compound_stmt(%struct.Token** noundef %5, %struct.Token* noundef %226)
  %228 = load %struct.Obj*, %struct.Obj** %10, align 8
  %229 = getelementptr inbounds %struct.Obj, %struct.Obj* %228, i32 0, i32 19
  store %struct.Node* %227, %struct.Node** %229, align 8
  %230 = load %struct.Obj*, %struct.Obj** @locals, align 8
  %231 = load %struct.Obj*, %struct.Obj** %10, align 8
  %232 = getelementptr inbounds %struct.Obj, %struct.Obj* %231, i32 0, i32 20
  store %struct.Obj* %230, %struct.Obj** %232, align 8
  store i32 0, i32* @order, align 4
  call void @leave_scope()
  call void @resolve_goto_labels()
  %233 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %233, %struct.Token** %4, align 8
  br label %234

234:                                              ; preds = %195, %133
  %235 = load %struct.Token*, %struct.Token** %4, align 8
  ret %struct.Token* %235
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @global_variable(%struct.Token* noundef %0, %struct.Type* noundef %1, %struct.VarAttr* noundef %2) #0 {
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Type*, align 8
  %6 = alloca %struct.VarAttr*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.Type*, align 8
  %9 = alloca %struct.Obj*, align 8
  store %struct.Token* %0, %struct.Token** %4, align 8
  store %struct.Type* %1, %struct.Type** %5, align 8
  store %struct.VarAttr* %2, %struct.VarAttr** %6, align 8
  store i8 1, i8* %7, align 1
  br label %10

10:                                               ; preds = %93, %3
  %11 = load %struct.Token*, %struct.Token** %4, align 8
  %12 = call zeroext i1 @consume(%struct.Token** noundef %4, %struct.Token* noundef %11, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %13 = xor i1 %12, true
  br i1 %13, label %14, label %94

14:                                               ; preds = %10
  %15 = load i8, i8* %7, align 1
  %16 = trunc i8 %15 to i1
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = load %struct.Token*, %struct.Token** %4, align 8
  %19 = call %struct.Token* @skip(%struct.Token* noundef %18, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %19, %struct.Token** %4, align 8
  br label %20

20:                                               ; preds = %17, %14
  store i8 0, i8* %7, align 1
  %21 = load %struct.Token*, %struct.Token** %4, align 8
  %22 = load %struct.Type*, %struct.Type** %5, align 8
  %23 = call %struct.Type* @declarator(%struct.Token** noundef %4, %struct.Token* noundef %21, %struct.Type* noundef %22)
  store %struct.Type* %23, %struct.Type** %8, align 8
  %24 = load %struct.Type*, %struct.Type** %8, align 8
  %25 = getelementptr inbounds %struct.Type, %struct.Type* %24, i32 0, i32 9
  %26 = load %struct.Token*, %struct.Token** %25, align 8
  %27 = icmp ne %struct.Token* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %20
  %29 = load %struct.Type*, %struct.Type** %8, align 8
  %30 = getelementptr inbounds %struct.Type, %struct.Type* %29, i32 0, i32 10
  %31 = load %struct.Token*, %struct.Token** %30, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %31, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.242.753, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

32:                                               ; preds = %20
  %33 = load %struct.Type*, %struct.Type** %8, align 8
  %34 = getelementptr inbounds %struct.Type, %struct.Type* %33, i32 0, i32 9
  %35 = load %struct.Token*, %struct.Token** %34, align 8
  %36 = call i8* @get_ident(%struct.Token* noundef %35)
  %37 = load %struct.Type*, %struct.Type** %8, align 8
  %38 = call %struct.Obj* @new_gvar(i8* noundef %36, %struct.Type* noundef %37)
  store %struct.Obj* %38, %struct.Obj** %9, align 8
  %39 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %40 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %39, i32 0, i32 2
  %41 = load i8, i8* %40, align 2
  %42 = trunc i8 %41 to i1
  %43 = xor i1 %42, true
  %44 = load %struct.Obj*, %struct.Obj** %9, align 8
  %45 = getelementptr inbounds %struct.Obj, %struct.Obj* %44, i32 0, i32 11
  %46 = zext i1 %43 to i8
  store i8 %46, i8* %45, align 1
  %47 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %48 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %47, i32 0, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = trunc i8 %49 to i1
  %51 = load %struct.Obj*, %struct.Obj** %9, align 8
  %52 = getelementptr inbounds %struct.Obj, %struct.Obj* %51, i32 0, i32 12
  %53 = zext i1 %50 to i8
  store i8 %53, i8* %52, align 2
  %54 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %55 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %54, i32 0, i32 4
  %56 = load i8, i8* %55, align 4
  %57 = trunc i8 %56 to i1
  %58 = load %struct.Obj*, %struct.Obj** %9, align 8
  %59 = getelementptr inbounds %struct.Obj, %struct.Obj* %58, i32 0, i32 14
  %60 = zext i1 %57 to i8
  store i8 %60, i8* %59, align 8
  %61 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %62 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %61, i32 0, i32 5
  %63 = load i32, i32* %62, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %71

65:                                               ; preds = %32
  %66 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %67 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %66, i32 0, i32 5
  %68 = load i32, i32* %67, align 4
  %69 = load %struct.Obj*, %struct.Obj** %9, align 8
  %70 = getelementptr inbounds %struct.Obj, %struct.Obj* %69, i32 0, i32 6
  store i32 %68, i32* %70, align 4
  br label %71

71:                                               ; preds = %65, %32
  %72 = load %struct.Token*, %struct.Token** %4, align 8
  %73 = call zeroext i1 @equal(%struct.Token* noundef %72, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150.590, i64 0, i64 0))
  br i1 %73, label %74, label %79

74:                                               ; preds = %71
  %75 = load %struct.Token*, %struct.Token** %4, align 8
  %76 = getelementptr inbounds %struct.Token, %struct.Token* %75, i32 0, i32 1
  %77 = load %struct.Token*, %struct.Token** %76, align 8
  %78 = load %struct.Obj*, %struct.Obj** %9, align 8
  call void @gvar_initializer(%struct.Token** noundef %4, %struct.Token* noundef %77, %struct.Obj* noundef %78)
  br label %93

79:                                               ; preds = %71
  %80 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %81 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %80, i32 0, i32 2
  %82 = load i8, i8* %81, align 2
  %83 = trunc i8 %82 to i1
  br i1 %83, label %92, label %84

84:                                               ; preds = %79
  %85 = load %struct.VarAttr*, %struct.VarAttr** %6, align 8
  %86 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %85, i32 0, i32 4
  %87 = load i8, i8* %86, align 4
  %88 = trunc i8 %87 to i1
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = load %struct.Obj*, %struct.Obj** %9, align 8
  %91 = getelementptr inbounds %struct.Obj, %struct.Obj* %90, i32 0, i32 13
  store i8 1, i8* %91, align 1
  br label %92

92:                                               ; preds = %89, %84, %79
  br label %93

93:                                               ; preds = %92, %74
  br label %10, !llvm.loop !97

94:                                               ; preds = %10
  %95 = load %struct.Token*, %struct.Token** %4, align 8
  ret %struct.Token* %95
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @declaration(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2, %struct.VarAttr* noundef %3) #0 {
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.VarAttr*, align 8
  %9 = alloca %struct.Node, align 16
  %10 = alloca %struct.Node*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.Type*, align 8
  %13 = alloca %struct.Obj*, align 8
  %14 = alloca %struct.Obj*, align 8
  %15 = alloca %struct.Token*, align 8
  %16 = alloca %struct.Node*, align 8
  %17 = alloca %struct.Obj*, align 8
  %18 = alloca %struct.Node*, align 8
  %19 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Type* %2, %struct.Type** %7, align 8
  store %struct.VarAttr* %3, %struct.VarAttr** %8, align 8
  %20 = bitcast %struct.Node* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %20, i8 0, i64 320, i1 false)
  store %struct.Node* %9, %struct.Node** %10, align 8
  store i32 0, i32* %11, align 4
  br label %21

21:                                               ; preds = %176, %94, %76, %4
  %22 = load %struct.Token*, %struct.Token** %6, align 8
  %23 = call zeroext i1 @equal(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %24 = xor i1 %23, true
  br i1 %24, label %25, label %177

25:                                               ; preds = %21
  %26 = load i32, i32* %11, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %11, align 4
  %28 = icmp sgt i32 %26, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = load %struct.Token*, %struct.Token** %6, align 8
  %31 = call %struct.Token* @skip(%struct.Token* noundef %30, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %31, %struct.Token** %6, align 8
  br label %32

32:                                               ; preds = %29, %25
  %33 = load %struct.Token*, %struct.Token** %6, align 8
  %34 = load %struct.Type*, %struct.Type** %7, align 8
  %35 = call %struct.Type* @declarator(%struct.Token** noundef %6, %struct.Token* noundef %33, %struct.Type* noundef %34)
  store %struct.Type* %35, %struct.Type** %12, align 8
  %36 = load %struct.Type*, %struct.Type** %12, align 8
  %37 = getelementptr inbounds %struct.Type, %struct.Type* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %32
  %41 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %41, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.181.740, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

42:                                               ; preds = %32
  %43 = load %struct.Type*, %struct.Type** %12, align 8
  %44 = getelementptr inbounds %struct.Type, %struct.Type* %43, i32 0, i32 9
  %45 = load %struct.Token*, %struct.Token** %44, align 8
  %46 = icmp ne %struct.Token* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %42
  %48 = load %struct.Type*, %struct.Type** %12, align 8
  %49 = getelementptr inbounds %struct.Type, %struct.Type* %48, i32 0, i32 10
  %50 = load %struct.Token*, %struct.Token** %49, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %50, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.182.741, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

51:                                               ; preds = %42
  %52 = load %struct.VarAttr*, %struct.VarAttr** %8, align 8
  %53 = icmp ne %struct.VarAttr* %52, null
  br i1 %53, label %54, label %77

54:                                               ; preds = %51
  %55 = load %struct.VarAttr*, %struct.VarAttr** %8, align 8
  %56 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %55, i32 0, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = trunc i8 %57 to i1
  br i1 %58, label %59, label %77

59:                                               ; preds = %54
  %60 = load %struct.Type*, %struct.Type** %12, align 8
  %61 = call %struct.Obj* @new_anon_gvar(%struct.Type* noundef %60)
  store %struct.Obj* %61, %struct.Obj** %13, align 8
  %62 = load %struct.Obj*, %struct.Obj** %13, align 8
  %63 = load %struct.Type*, %struct.Type** %12, align 8
  %64 = getelementptr inbounds %struct.Type, %struct.Type* %63, i32 0, i32 9
  %65 = load %struct.Token*, %struct.Token** %64, align 8
  %66 = call i8* @get_ident(%struct.Token* noundef %65)
  %67 = call %struct.VarScope* @push_scope(i8* noundef %66)
  %68 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %67, i32 0, i32 0
  store %struct.Obj* %62, %struct.Obj** %68, align 8
  %69 = load %struct.Token*, %struct.Token** %6, align 8
  %70 = call zeroext i1 @equal(%struct.Token* noundef %69, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150.590, i64 0, i64 0))
  br i1 %70, label %71, label %76

71:                                               ; preds = %59
  %72 = load %struct.Token*, %struct.Token** %6, align 8
  %73 = getelementptr inbounds %struct.Token, %struct.Token* %72, i32 0, i32 1
  %74 = load %struct.Token*, %struct.Token** %73, align 8
  %75 = load %struct.Obj*, %struct.Obj** %13, align 8
  call void @gvar_initializer(%struct.Token** noundef %6, %struct.Token* noundef %74, %struct.Obj* noundef %75)
  br label %76

76:                                               ; preds = %71, %59
  br label %21, !llvm.loop !98

77:                                               ; preds = %54, %51
  %78 = load %struct.Type*, %struct.Type** %12, align 8
  %79 = load %struct.Token*, %struct.Token** %6, align 8
  %80 = call %struct.Node* @compute_vla_size(%struct.Type* noundef %78, %struct.Token* noundef %79)
  %81 = load %struct.Token*, %struct.Token** %6, align 8
  %82 = call %struct.Node* @new_unary(i32 noundef 38, %struct.Node* noundef %80, %struct.Token* noundef %81)
  %83 = load %struct.Node*, %struct.Node** %10, align 8
  %84 = getelementptr inbounds %struct.Node, %struct.Node* %83, i32 0, i32 1
  store %struct.Node* %82, %struct.Node** %84, align 8
  store %struct.Node* %82, %struct.Node** %10, align 8
  %85 = load %struct.Type*, %struct.Type** %12, align 8
  %86 = getelementptr inbounds %struct.Type, %struct.Type* %85, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 13
  br i1 %88, label %89, label %120

89:                                               ; preds = %77
  %90 = load %struct.Token*, %struct.Token** %6, align 8
  %91 = call zeroext i1 @equal(%struct.Token* noundef %90, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150.590, i64 0, i64 0))
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  %93 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %93, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.183.742, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

94:                                               ; preds = %89
  %95 = load %struct.Type*, %struct.Type** %12, align 8
  %96 = getelementptr inbounds %struct.Type, %struct.Type* %95, i32 0, i32 9
  %97 = load %struct.Token*, %struct.Token** %96, align 8
  %98 = call i8* @get_ident(%struct.Token* noundef %97)
  %99 = load %struct.Type*, %struct.Type** %12, align 8
  %100 = call %struct.Obj* @new_lvar(i8* noundef %98, %struct.Type* noundef %99, i8* noundef null)
  store %struct.Obj* %100, %struct.Obj** %14, align 8
  %101 = load %struct.Type*, %struct.Type** %12, align 8
  %102 = getelementptr inbounds %struct.Type, %struct.Type* %101, i32 0, i32 9
  %103 = load %struct.Token*, %struct.Token** %102, align 8
  store %struct.Token* %103, %struct.Token** %15, align 8
  %104 = load %struct.Obj*, %struct.Obj** %14, align 8
  %105 = load %struct.Token*, %struct.Token** %15, align 8
  %106 = call %struct.Node* @new_vla_ptr(%struct.Obj* noundef %104, %struct.Token* noundef %105)
  %107 = load %struct.Type*, %struct.Type** %12, align 8
  %108 = getelementptr inbounds %struct.Type, %struct.Type* %107, i32 0, i32 13
  %109 = load %struct.Obj*, %struct.Obj** %108, align 8
  %110 = load %struct.Token*, %struct.Token** %15, align 8
  %111 = call %struct.Node* @new_var_node(%struct.Obj* noundef %109, %struct.Token* noundef %110)
  %112 = call %struct.Node* @new_alloca(%struct.Node* noundef %111)
  %113 = load %struct.Token*, %struct.Token** %15, align 8
  %114 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %106, %struct.Node* noundef %112, %struct.Token* noundef %113)
  store %struct.Node* %114, %struct.Node** %16, align 8
  %115 = load %struct.Node*, %struct.Node** %16, align 8
  %116 = load %struct.Token*, %struct.Token** %15, align 8
  %117 = call %struct.Node* @new_unary(i32 noundef 38, %struct.Node* noundef %115, %struct.Token* noundef %116)
  %118 = load %struct.Node*, %struct.Node** %10, align 8
  %119 = getelementptr inbounds %struct.Node, %struct.Node* %118, i32 0, i32 1
  store %struct.Node* %117, %struct.Node** %119, align 8
  store %struct.Node* %117, %struct.Node** %10, align 8
  br label %21, !llvm.loop !98

120:                                              ; preds = %77
  %121 = load %struct.Type*, %struct.Type** %12, align 8
  %122 = getelementptr inbounds %struct.Type, %struct.Type* %121, i32 0, i32 9
  %123 = load %struct.Token*, %struct.Token** %122, align 8
  %124 = call i8* @get_ident(%struct.Token* noundef %123)
  %125 = load %struct.Type*, %struct.Type** %12, align 8
  %126 = call %struct.Obj* @new_lvar(i8* noundef %124, %struct.Type* noundef %125, i8* noundef null)
  store %struct.Obj* %126, %struct.Obj** %17, align 8
  %127 = load %struct.VarAttr*, %struct.VarAttr** %8, align 8
  %128 = icmp ne %struct.VarAttr* %127, null
  br i1 %128, label %129, label %140

129:                                              ; preds = %120
  %130 = load %struct.VarAttr*, %struct.VarAttr** %8, align 8
  %131 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %130, i32 0, i32 5
  %132 = load i32, i32* %131, align 4
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = load %struct.VarAttr*, %struct.VarAttr** %8, align 8
  %136 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %135, i32 0, i32 5
  %137 = load i32, i32* %136, align 4
  %138 = load %struct.Obj*, %struct.Obj** %17, align 8
  %139 = getelementptr inbounds %struct.Obj, %struct.Obj* %138, i32 0, i32 6
  store i32 %137, i32* %139, align 4
  br label %140

140:                                              ; preds = %134, %129, %120
  %141 = load %struct.Token*, %struct.Token** %6, align 8
  %142 = call zeroext i1 @equal(%struct.Token* noundef %141, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150.590, i64 0, i64 0))
  br i1 %142, label %143, label %154

143:                                              ; preds = %140
  %144 = load %struct.Token*, %struct.Token** %6, align 8
  %145 = getelementptr inbounds %struct.Token, %struct.Token* %144, i32 0, i32 1
  %146 = load %struct.Token*, %struct.Token** %145, align 8
  %147 = load %struct.Obj*, %struct.Obj** %17, align 8
  %148 = call %struct.Node* @lvar_initializer(%struct.Token** noundef %6, %struct.Token* noundef %146, %struct.Obj* noundef %147)
  store %struct.Node* %148, %struct.Node** %18, align 8
  %149 = load %struct.Node*, %struct.Node** %18, align 8
  %150 = load %struct.Token*, %struct.Token** %6, align 8
  %151 = call %struct.Node* @new_unary(i32 noundef 38, %struct.Node* noundef %149, %struct.Token* noundef %150)
  %152 = load %struct.Node*, %struct.Node** %10, align 8
  %153 = getelementptr inbounds %struct.Node, %struct.Node* %152, i32 0, i32 1
  store %struct.Node* %151, %struct.Node** %153, align 8
  store %struct.Node* %151, %struct.Node** %10, align 8
  br label %154

154:                                              ; preds = %143, %140
  %155 = load %struct.Obj*, %struct.Obj** %17, align 8
  %156 = getelementptr inbounds %struct.Obj, %struct.Obj* %155, i32 0, i32 3
  %157 = load %struct.Type*, %struct.Type** %156, align 8
  %158 = getelementptr inbounds %struct.Type, %struct.Type* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = icmp slt i32 %159, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %154
  %162 = load %struct.Type*, %struct.Type** %12, align 8
  %163 = getelementptr inbounds %struct.Type, %struct.Type* %162, i32 0, i32 9
  %164 = load %struct.Token*, %struct.Token** %163, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %164, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.184.743, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

165:                                              ; preds = %154
  %166 = load %struct.Obj*, %struct.Obj** %17, align 8
  %167 = getelementptr inbounds %struct.Obj, %struct.Obj* %166, i32 0, i32 3
  %168 = load %struct.Type*, %struct.Type** %167, align 8
  %169 = getelementptr inbounds %struct.Type, %struct.Type* %168, i32 0, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %165
  %173 = load %struct.Type*, %struct.Type** %12, align 8
  %174 = getelementptr inbounds %struct.Type, %struct.Type* %173, i32 0, i32 9
  %175 = load %struct.Token*, %struct.Token** %174, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %175, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.181.740, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

176:                                              ; preds = %165
  br label %21, !llvm.loop !98

177:                                              ; preds = %21
  %178 = load %struct.Token*, %struct.Token** %6, align 8
  %179 = call %struct.Node* @new_node(i32 noundef 32, %struct.Token* noundef %178)
  store %struct.Node* %179, %struct.Node** %19, align 8
  %180 = getelementptr inbounds %struct.Node, %struct.Node* %9, i32 0, i32 1
  %181 = load %struct.Node*, %struct.Node** %180, align 8
  %182 = load %struct.Node*, %struct.Node** %19, align 8
  %183 = getelementptr inbounds %struct.Node, %struct.Node* %182, i32 0, i32 13
  store %struct.Node* %181, %struct.Node** %183, align 8
  %184 = load %struct.Token*, %struct.Token** %6, align 8
  %185 = getelementptr inbounds %struct.Token, %struct.Token* %184, i32 0, i32 1
  %186 = load %struct.Token*, %struct.Token** %185, align 8
  %187 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %186, %struct.Token** %187, align 8
  %188 = load %struct.Node*, %struct.Node** %19, align 8
  ret %struct.Node* %188
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @stmt(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.Node*, align 8
  %8 = alloca %struct.Node*, align 8
  %9 = alloca %struct.Node*, align 8
  %10 = alloca %struct.Node*, align 8
  %11 = alloca %struct.Node*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.Node*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.Node*, align 8
  %17 = alloca %struct.Node*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca %struct.Type*, align 8
  %21 = alloca %struct.Node*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca %struct.Node*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca %struct.Node*, align 8
  %28 = alloca %struct.Node*, align 8
  %29 = alloca %struct.Node*, align 8
  %30 = alloca %struct.Node*, align 8
  %31 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %32 = load %struct.Token*, %struct.Token** %5, align 8
  %33 = call zeroext i1 @equal(%struct.Token* noundef %32, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185.713, i64 0, i64 0))
  br i1 %33, label %34, label %115

34:                                               ; preds = %2
  %35 = load %struct.Obj*, %struct.Obj** @current_fn.708, align 8
  %36 = getelementptr inbounds %struct.Obj, %struct.Obj* %35, i32 0, i32 3
  %37 = load %struct.Type*, %struct.Type** %36, align 8
  %38 = getelementptr inbounds %struct.Type, %struct.Type* %37, i32 0, i32 17
  %39 = load %struct.Type*, %struct.Type** %38, align 8
  store %struct.Type* %39, %struct.Type** %6, align 8
  %40 = load %struct.Token*, %struct.Token** %5, align 8
  %41 = call %struct.Node* @new_node(i32 noundef 26, %struct.Token* noundef %40)
  store %struct.Node* %41, %struct.Node** %7, align 8
  %42 = load %struct.Token**, %struct.Token*** %4, align 8
  %43 = load %struct.Token*, %struct.Token** %5, align 8
  %44 = getelementptr inbounds %struct.Token, %struct.Token* %43, i32 0, i32 1
  %45 = load %struct.Token*, %struct.Token** %44, align 8
  %46 = call zeroext i1 @consume(%struct.Token** noundef %42, %struct.Token* noundef %45, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  br i1 %46, label %47, label %56

47:                                               ; preds = %34
  %48 = load %struct.Type*, %struct.Type** %6, align 8
  %49 = getelementptr inbounds %struct.Type, %struct.Type* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %53, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.186.715, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

54:                                               ; preds = %47
  %55 = load %struct.Node*, %struct.Node** %7, align 8
  store %struct.Node* %55, %struct.Node** %3, align 8
  br label %704

56:                                               ; preds = %34
  %57 = load %struct.Token*, %struct.Token** %5, align 8
  %58 = getelementptr inbounds %struct.Token, %struct.Token* %57, i32 0, i32 1
  %59 = load %struct.Token*, %struct.Token** %58, align 8
  %60 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %59)
  store %struct.Node* %60, %struct.Node** %8, align 8
  %61 = load %struct.Token*, %struct.Token** %5, align 8
  %62 = call %struct.Token* @skip(%struct.Token* noundef %61, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %63 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %62, %struct.Token** %63, align 8
  %64 = load %struct.Node*, %struct.Node** %8, align 8
  call void @add_type(%struct.Node* noundef %64)
  %65 = load %struct.Type*, %struct.Type** %6, align 8
  %66 = getelementptr inbounds %struct.Type, %struct.Type* %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %80

69:                                               ; preds = %56
  %70 = load %struct.Node*, %struct.Node** %8, align 8
  %71 = getelementptr inbounds %struct.Node, %struct.Node* %70, i32 0, i32 2
  %72 = load %struct.Type*, %struct.Type** %71, align 16
  %73 = getelementptr inbounds %struct.Type, %struct.Type* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %69
  %77 = load %struct.Node*, %struct.Node** %8, align 8
  %78 = getelementptr inbounds %struct.Node, %struct.Node* %77, i32 0, i32 3
  %79 = load %struct.Token*, %struct.Token** %78, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %79, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.187.716, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

80:                                               ; preds = %69, %56
  %81 = load %struct.Type*, %struct.Type** %6, align 8
  %82 = getelementptr inbounds %struct.Type, %struct.Type* %81, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %96

85:                                               ; preds = %80
  %86 = load %struct.Node*, %struct.Node** %8, align 8
  %87 = getelementptr inbounds %struct.Node, %struct.Node* %86, i32 0, i32 2
  %88 = load %struct.Type*, %struct.Type** %87, align 16
  %89 = getelementptr inbounds %struct.Type, %struct.Type* %88, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %85
  %93 = load %struct.Node*, %struct.Node** %8, align 8
  %94 = getelementptr inbounds %struct.Node, %struct.Node* %93, i32 0, i32 3
  %95 = load %struct.Token*, %struct.Token** %94, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %95, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.188.717, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

96:                                               ; preds = %85, %80
  %97 = load %struct.Type*, %struct.Type** %6, align 8
  %98 = getelementptr inbounds %struct.Type, %struct.Type* %97, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp ne i32 %99, 14
  br i1 %100, label %101, label %110

101:                                              ; preds = %96
  %102 = load %struct.Type*, %struct.Type** %6, align 8
  %103 = getelementptr inbounds %struct.Type, %struct.Type* %102, i32 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = icmp ne i32 %104, 15
  br i1 %105, label %106, label %110

106:                                              ; preds = %101
  %107 = load %struct.Node*, %struct.Node** %8, align 8
  %108 = load %struct.Type*, %struct.Type** %6, align 8
  %109 = call %struct.Node* @new_cast(%struct.Node* noundef %107, %struct.Type* noundef %108)
  store %struct.Node* %109, %struct.Node** %8, align 8
  br label %110

110:                                              ; preds = %106, %101, %96
  %111 = load %struct.Node*, %struct.Node** %8, align 8
  %112 = load %struct.Node*, %struct.Node** %7, align 8
  %113 = getelementptr inbounds %struct.Node, %struct.Node* %112, i32 0, i32 4
  store %struct.Node* %111, %struct.Node** %113, align 16
  %114 = load %struct.Node*, %struct.Node** %7, align 8
  store %struct.Node* %114, %struct.Node** %3, align 8
  br label %704

115:                                              ; preds = %2
  %116 = load %struct.Token*, %struct.Token** %5, align 8
  %117 = call zeroext i1 @equal(%struct.Token* noundef %116, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.189.718, i64 0, i64 0))
  br i1 %117, label %118, label %229

118:                                              ; preds = %115
  %119 = load %struct.Token*, %struct.Token** %5, align 8
  %120 = call %struct.Node* @new_node(i32 noundef 27, %struct.Token* noundef %119)
  store %struct.Node* %120, %struct.Node** %9, align 8
  %121 = load %struct.Token*, %struct.Token** %5, align 8
  %122 = getelementptr inbounds %struct.Token, %struct.Token* %121, i32 0, i32 1
  %123 = load %struct.Token*, %struct.Token** %122, align 8
  %124 = call %struct.Token* @skip(%struct.Token* noundef %123, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %124, %struct.Token** %5, align 8
  %125 = load %struct.Token*, %struct.Token** %5, align 8
  %126 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %125)
  %127 = load %struct.Node*, %struct.Node** %9, align 8
  %128 = getelementptr inbounds %struct.Node, %struct.Node* %127, i32 0, i32 6
  store %struct.Node* %126, %struct.Node** %128, align 16
  %129 = load i8, i8* @isDotfile, align 1
  %130 = trunc i8 %129 to i1
  br i1 %130, label %131, label %155

131:                                              ; preds = %118
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %133 = icmp ne %struct._IO_FILE* %132, null
  br i1 %133, label %134, label %155

134:                                              ; preds = %131
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %136 = load %struct.Node*, %struct.Node** %9, align 8
  %137 = getelementptr inbounds %struct.Node, %struct.Node* %136, i32 0, i32 0
  %138 = load i32, i32* %137, align 16
  %139 = call i8* @nodekind2str(i32 noundef %138)
  %140 = load %struct.Node*, %struct.Node** %9, align 8
  %141 = getelementptr inbounds %struct.Node, %struct.Node* %140, i32 0, i32 36
  %142 = load i32, i32* %141, align 16
  %143 = load %struct.Node*, %struct.Node** %9, align 8
  %144 = getelementptr inbounds %struct.Node, %struct.Node* %143, i32 0, i32 6
  %145 = load %struct.Node*, %struct.Node** %144, align 16
  %146 = getelementptr inbounds %struct.Node, %struct.Node* %145, i32 0, i32 0
  %147 = load i32, i32* %146, align 16
  %148 = call i8* @nodekind2str(i32 noundef %147)
  %149 = load %struct.Node*, %struct.Node** %9, align 8
  %150 = getelementptr inbounds %struct.Node, %struct.Node* %149, i32 0, i32 6
  %151 = load %struct.Node*, %struct.Node** %150, align 16
  %152 = getelementptr inbounds %struct.Node, %struct.Node* %151, i32 0, i32 36
  %153 = load i32, i32* %152, align 16
  %154 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %135, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %139, i32 noundef %142, i8* noundef %148, i32 noundef %153)
  br label %155

155:                                              ; preds = %134, %131, %118
  %156 = load %struct.Token*, %struct.Token** %5, align 8
  %157 = call %struct.Token* @skip(%struct.Token* noundef %156, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %157, %struct.Token** %5, align 8
  %158 = load %struct.Token*, %struct.Token** %5, align 8
  %159 = call %struct.Node* @stmt(%struct.Token** noundef %5, %struct.Token* noundef %158)
  %160 = load %struct.Node*, %struct.Node** %9, align 8
  %161 = getelementptr inbounds %struct.Node, %struct.Node* %160, i32 0, i32 7
  store %struct.Node* %159, %struct.Node** %161, align 8
  %162 = load i8, i8* @isDotfile, align 1
  %163 = trunc i8 %162 to i1
  br i1 %163, label %164, label %188

164:                                              ; preds = %155
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %166 = icmp ne %struct._IO_FILE* %165, null
  br i1 %166, label %167, label %188

167:                                              ; preds = %164
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %169 = load %struct.Node*, %struct.Node** %9, align 8
  %170 = getelementptr inbounds %struct.Node, %struct.Node* %169, i32 0, i32 0
  %171 = load i32, i32* %170, align 16
  %172 = call i8* @nodekind2str(i32 noundef %171)
  %173 = load %struct.Node*, %struct.Node** %9, align 8
  %174 = getelementptr inbounds %struct.Node, %struct.Node* %173, i32 0, i32 36
  %175 = load i32, i32* %174, align 16
  %176 = load %struct.Node*, %struct.Node** %9, align 8
  %177 = getelementptr inbounds %struct.Node, %struct.Node* %176, i32 0, i32 7
  %178 = load %struct.Node*, %struct.Node** %177, align 8
  %179 = getelementptr inbounds %struct.Node, %struct.Node* %178, i32 0, i32 0
  %180 = load i32, i32* %179, align 16
  %181 = call i8* @nodekind2str(i32 noundef %180)
  %182 = load %struct.Node*, %struct.Node** %9, align 8
  %183 = getelementptr inbounds %struct.Node, %struct.Node* %182, i32 0, i32 7
  %184 = load %struct.Node*, %struct.Node** %183, align 8
  %185 = getelementptr inbounds %struct.Node, %struct.Node* %184, i32 0, i32 36
  %186 = load i32, i32* %185, align 16
  %187 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %168, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %172, i32 noundef %175, i8* noundef %181, i32 noundef %186)
  br label %188

188:                                              ; preds = %167, %164, %155
  %189 = load %struct.Token*, %struct.Token** %5, align 8
  %190 = call zeroext i1 @equal(%struct.Token* noundef %189, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.190.719, i64 0, i64 0))
  br i1 %190, label %191, label %225

191:                                              ; preds = %188
  %192 = load %struct.Token*, %struct.Token** %5, align 8
  %193 = getelementptr inbounds %struct.Token, %struct.Token* %192, i32 0, i32 1
  %194 = load %struct.Token*, %struct.Token** %193, align 8
  %195 = call %struct.Node* @stmt(%struct.Token** noundef %5, %struct.Token* noundef %194)
  %196 = load %struct.Node*, %struct.Node** %9, align 8
  %197 = getelementptr inbounds %struct.Node, %struct.Node* %196, i32 0, i32 8
  store %struct.Node* %195, %struct.Node** %197, align 16
  %198 = load i8, i8* @isDotfile, align 1
  %199 = trunc i8 %198 to i1
  br i1 %199, label %200, label %224

200:                                              ; preds = %191
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %202 = icmp ne %struct._IO_FILE* %201, null
  br i1 %202, label %203, label %224

203:                                              ; preds = %200
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %205 = load %struct.Node*, %struct.Node** %9, align 8
  %206 = getelementptr inbounds %struct.Node, %struct.Node* %205, i32 0, i32 0
  %207 = load i32, i32* %206, align 16
  %208 = call i8* @nodekind2str(i32 noundef %207)
  %209 = load %struct.Node*, %struct.Node** %9, align 8
  %210 = getelementptr inbounds %struct.Node, %struct.Node* %209, i32 0, i32 36
  %211 = load i32, i32* %210, align 16
  %212 = load %struct.Node*, %struct.Node** %9, align 8
  %213 = getelementptr inbounds %struct.Node, %struct.Node* %212, i32 0, i32 8
  %214 = load %struct.Node*, %struct.Node** %213, align 16
  %215 = getelementptr inbounds %struct.Node, %struct.Node* %214, i32 0, i32 0
  %216 = load i32, i32* %215, align 16
  %217 = call i8* @nodekind2str(i32 noundef %216)
  %218 = load %struct.Node*, %struct.Node** %9, align 8
  %219 = getelementptr inbounds %struct.Node, %struct.Node* %218, i32 0, i32 8
  %220 = load %struct.Node*, %struct.Node** %219, align 16
  %221 = getelementptr inbounds %struct.Node, %struct.Node* %220, i32 0, i32 36
  %222 = load i32, i32* %221, align 16
  %223 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %204, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %208, i32 noundef %211, i8* noundef %217, i32 noundef %222)
  br label %224

224:                                              ; preds = %203, %200, %191
  br label %225

225:                                              ; preds = %224, %188
  %226 = load %struct.Token*, %struct.Token** %5, align 8
  %227 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %226, %struct.Token** %227, align 8
  %228 = load %struct.Node*, %struct.Node** %9, align 8
  store %struct.Node* %228, %struct.Node** %3, align 8
  br label %704

229:                                              ; preds = %115
  %230 = load %struct.Token*, %struct.Token** %5, align 8
  %231 = call zeroext i1 @equal(%struct.Token* noundef %230, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.191.720, i64 0, i64 0))
  br i1 %231, label %232, label %259

232:                                              ; preds = %229
  %233 = load %struct.Token*, %struct.Token** %5, align 8
  %234 = call %struct.Node* @new_node(i32 noundef 30, %struct.Token* noundef %233)
  store %struct.Node* %234, %struct.Node** %10, align 8
  %235 = load %struct.Token*, %struct.Token** %5, align 8
  %236 = getelementptr inbounds %struct.Token, %struct.Token* %235, i32 0, i32 1
  %237 = load %struct.Token*, %struct.Token** %236, align 8
  %238 = call %struct.Token* @skip(%struct.Token* noundef %237, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %238, %struct.Token** %5, align 8
  %239 = load %struct.Token*, %struct.Token** %5, align 8
  %240 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %239)
  %241 = load %struct.Node*, %struct.Node** %10, align 8
  %242 = getelementptr inbounds %struct.Node, %struct.Node* %241, i32 0, i32 6
  store %struct.Node* %240, %struct.Node** %242, align 16
  %243 = load %struct.Token*, %struct.Token** %5, align 8
  %244 = call %struct.Token* @skip(%struct.Token* noundef %243, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %244, %struct.Token** %5, align 8
  %245 = load %struct.Node*, %struct.Node** @current_switch, align 8
  store %struct.Node* %245, %struct.Node** %11, align 8
  %246 = load %struct.Node*, %struct.Node** %10, align 8
  store %struct.Node* %246, %struct.Node** @current_switch, align 8
  %247 = load i8*, i8** @brk_label, align 8
  store i8* %247, i8** %12, align 8
  %248 = call i8* @new_unique_name()
  %249 = load %struct.Node*, %struct.Node** %10, align 8
  %250 = getelementptr inbounds %struct.Node, %struct.Node* %249, i32 0, i32 11
  store i8* %248, i8** %250, align 8
  store i8* %248, i8** @brk_label, align 8
  %251 = load %struct.Token**, %struct.Token*** %4, align 8
  %252 = load %struct.Token*, %struct.Token** %5, align 8
  %253 = call %struct.Node* @stmt(%struct.Token** noundef %251, %struct.Token* noundef %252)
  %254 = load %struct.Node*, %struct.Node** %10, align 8
  %255 = getelementptr inbounds %struct.Node, %struct.Node* %254, i32 0, i32 7
  store %struct.Node* %253, %struct.Node** %255, align 8
  %256 = load %struct.Node*, %struct.Node** %11, align 8
  store %struct.Node* %256, %struct.Node** @current_switch, align 8
  %257 = load i8*, i8** %12, align 8
  store i8* %257, i8** @brk_label, align 8
  %258 = load %struct.Node*, %struct.Node** %10, align 8
  store %struct.Node* %258, %struct.Node** %3, align 8
  br label %704

259:                                              ; preds = %229
  %260 = load %struct.Token*, %struct.Token** %5, align 8
  %261 = call zeroext i1 @equal(%struct.Token* noundef %260, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192.721, i64 0, i64 0))
  br i1 %261, label %262, label %319

262:                                              ; preds = %259
  %263 = load %struct.Node*, %struct.Node** @current_switch, align 8
  %264 = icmp ne %struct.Node* %263, null
  br i1 %264, label %267, label %265

265:                                              ; preds = %262
  %266 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %266, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.193.722, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

267:                                              ; preds = %262
  %268 = load %struct.Token*, %struct.Token** %5, align 8
  %269 = call %struct.Node* @new_node(i32 noundef 31, %struct.Token* noundef %268)
  store %struct.Node* %269, %struct.Node** %13, align 8
  %270 = load %struct.Token*, %struct.Token** %5, align 8
  %271 = getelementptr inbounds %struct.Token, %struct.Token* %270, i32 0, i32 1
  %272 = load %struct.Token*, %struct.Token** %271, align 8
  %273 = call i64 @const_expr(%struct.Token** noundef %5, %struct.Token* noundef %272)
  %274 = trunc i64 %273 to i32
  store i32 %274, i32* %14, align 4
  %275 = load %struct.Token*, %struct.Token** %5, align 8
  %276 = call zeroext i1 @equal(%struct.Token* noundef %275, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120.723, i64 0, i64 0))
  br i1 %276, label %277, label %289

277:                                              ; preds = %267
  %278 = load %struct.Token*, %struct.Token** %5, align 8
  %279 = getelementptr inbounds %struct.Token, %struct.Token* %278, i32 0, i32 1
  %280 = load %struct.Token*, %struct.Token** %279, align 8
  %281 = call i64 @const_expr(%struct.Token** noundef %5, %struct.Token* noundef %280)
  %282 = trunc i64 %281 to i32
  store i32 %282, i32* %15, align 4
  %283 = load i32, i32* %15, align 4
  %284 = load i32, i32* %14, align 4
  %285 = icmp slt i32 %283, %284
  br i1 %285, label %286, label %288

286:                                              ; preds = %277
  %287 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %287, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.194.724, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

288:                                              ; preds = %277
  br label %291

289:                                              ; preds = %267
  %290 = load i32, i32* %14, align 4
  store i32 %290, i32* %15, align 4
  br label %291

291:                                              ; preds = %289, %288
  %292 = load %struct.Token*, %struct.Token** %5, align 8
  %293 = call %struct.Token* @skip(%struct.Token* noundef %292, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  store %struct.Token* %293, %struct.Token** %5, align 8
  %294 = call i8* @new_unique_name()
  %295 = load %struct.Node*, %struct.Node** %13, align 8
  %296 = getelementptr inbounds %struct.Node, %struct.Node* %295, i32 0, i32 19
  store i8* %294, i8** %296, align 8
  %297 = load %struct.Token**, %struct.Token*** %4, align 8
  %298 = load %struct.Token*, %struct.Token** %5, align 8
  %299 = call %struct.Node* @stmt(%struct.Token** noundef %297, %struct.Token* noundef %298)
  %300 = load %struct.Node*, %struct.Node** %13, align 8
  %301 = getelementptr inbounds %struct.Node, %struct.Node* %300, i32 0, i32 4
  store %struct.Node* %299, %struct.Node** %301, align 16
  %302 = load i32, i32* %14, align 4
  %303 = sext i32 %302 to i64
  %304 = load %struct.Node*, %struct.Node** %13, align 8
  %305 = getelementptr inbounds %struct.Node, %struct.Node* %304, i32 0, i32 24
  store i64 %303, i64* %305, align 16
  %306 = load i32, i32* %15, align 4
  %307 = sext i32 %306 to i64
  %308 = load %struct.Node*, %struct.Node** %13, align 8
  %309 = getelementptr inbounds %struct.Node, %struct.Node* %308, i32 0, i32 25
  store i64 %307, i64* %309, align 8
  %310 = load %struct.Node*, %struct.Node** @current_switch, align 8
  %311 = getelementptr inbounds %struct.Node, %struct.Node* %310, i32 0, i32 22
  %312 = load %struct.Node*, %struct.Node** %311, align 16
  %313 = load %struct.Node*, %struct.Node** %13, align 8
  %314 = getelementptr inbounds %struct.Node, %struct.Node* %313, i32 0, i32 22
  store %struct.Node* %312, %struct.Node** %314, align 16
  %315 = load %struct.Node*, %struct.Node** %13, align 8
  %316 = load %struct.Node*, %struct.Node** @current_switch, align 8
  %317 = getelementptr inbounds %struct.Node, %struct.Node* %316, i32 0, i32 22
  store %struct.Node* %315, %struct.Node** %317, align 16
  %318 = load %struct.Node*, %struct.Node** %13, align 8
  store %struct.Node* %318, %struct.Node** %3, align 8
  br label %704

319:                                              ; preds = %259
  %320 = load %struct.Token*, %struct.Token** %5, align 8
  %321 = call zeroext i1 @equal(%struct.Token* noundef %320, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195.711, i64 0, i64 0))
  br i1 %321, label %322, label %346

322:                                              ; preds = %319
  %323 = load %struct.Node*, %struct.Node** @current_switch, align 8
  %324 = icmp ne %struct.Node* %323, null
  br i1 %324, label %327, label %325

325:                                              ; preds = %322
  %326 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %326, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.196.725, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

327:                                              ; preds = %322
  %328 = load %struct.Token*, %struct.Token** %5, align 8
  %329 = call %struct.Node* @new_node(i32 noundef 31, %struct.Token* noundef %328)
  store %struct.Node* %329, %struct.Node** %16, align 8
  %330 = load %struct.Token*, %struct.Token** %5, align 8
  %331 = getelementptr inbounds %struct.Token, %struct.Token* %330, i32 0, i32 1
  %332 = load %struct.Token*, %struct.Token** %331, align 8
  %333 = call %struct.Token* @skip(%struct.Token* noundef %332, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  store %struct.Token* %333, %struct.Token** %5, align 8
  %334 = call i8* @new_unique_name()
  %335 = load %struct.Node*, %struct.Node** %16, align 8
  %336 = getelementptr inbounds %struct.Node, %struct.Node* %335, i32 0, i32 19
  store i8* %334, i8** %336, align 8
  %337 = load %struct.Token**, %struct.Token*** %4, align 8
  %338 = load %struct.Token*, %struct.Token** %5, align 8
  %339 = call %struct.Node* @stmt(%struct.Token** noundef %337, %struct.Token* noundef %338)
  %340 = load %struct.Node*, %struct.Node** %16, align 8
  %341 = getelementptr inbounds %struct.Node, %struct.Node* %340, i32 0, i32 4
  store %struct.Node* %339, %struct.Node** %341, align 16
  %342 = load %struct.Node*, %struct.Node** %16, align 8
  %343 = load %struct.Node*, %struct.Node** @current_switch, align 8
  %344 = getelementptr inbounds %struct.Node, %struct.Node* %343, i32 0, i32 23
  store %struct.Node* %342, %struct.Node** %344, align 8
  %345 = load %struct.Node*, %struct.Node** %16, align 8
  store %struct.Node* %345, %struct.Node** %3, align 8
  br label %704

346:                                              ; preds = %319
  %347 = load %struct.Token*, %struct.Token** %5, align 8
  %348 = call zeroext i1 @equal(%struct.Token* noundef %347, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.197.726, i64 0, i64 0))
  br i1 %348, label %349, label %489

349:                                              ; preds = %346
  %350 = load %struct.Token*, %struct.Token** %5, align 8
  %351 = call %struct.Node* @new_node(i32 noundef 28, %struct.Token* noundef %350)
  store %struct.Node* %351, %struct.Node** %17, align 8
  %352 = load %struct.Token*, %struct.Token** %5, align 8
  %353 = getelementptr inbounds %struct.Token, %struct.Token* %352, i32 0, i32 1
  %354 = load %struct.Token*, %struct.Token** %353, align 8
  %355 = call %struct.Token* @skip(%struct.Token* noundef %354, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %355, %struct.Token** %5, align 8
  call void @enter_scope()
  %356 = load i8*, i8** @brk_label, align 8
  store i8* %356, i8** %18, align 8
  %357 = load i8*, i8** @cont_label, align 8
  store i8* %357, i8** %19, align 8
  %358 = call i8* @new_unique_name()
  %359 = load %struct.Node*, %struct.Node** %17, align 8
  %360 = getelementptr inbounds %struct.Node, %struct.Node* %359, i32 0, i32 11
  store i8* %358, i8** %360, align 8
  store i8* %358, i8** @brk_label, align 8
  %361 = call i8* @new_unique_name()
  %362 = load %struct.Node*, %struct.Node** %17, align 8
  %363 = getelementptr inbounds %struct.Node, %struct.Node* %362, i32 0, i32 12
  store i8* %361, i8** %363, align 16
  store i8* %361, i8** @cont_label, align 8
  %364 = load %struct.Token*, %struct.Token** %5, align 8
  %365 = call zeroext i1 @is_typename(%struct.Token* noundef %364)
  br i1 %365, label %366, label %374

366:                                              ; preds = %349
  %367 = load %struct.Token*, %struct.Token** %5, align 8
  %368 = call %struct.Type* @declspec(%struct.Token** noundef %5, %struct.Token* noundef %367, %struct.VarAttr* noundef null)
  store %struct.Type* %368, %struct.Type** %20, align 8
  %369 = load %struct.Token*, %struct.Token** %5, align 8
  %370 = load %struct.Type*, %struct.Type** %20, align 8
  %371 = call %struct.Node* @declaration(%struct.Token** noundef %5, %struct.Token* noundef %369, %struct.Type* noundef %370, %struct.VarAttr* noundef null)
  %372 = load %struct.Node*, %struct.Node** %17, align 8
  %373 = getelementptr inbounds %struct.Node, %struct.Node* %372, i32 0, i32 9
  store %struct.Node* %371, %struct.Node** %373, align 8
  br label %379

374:                                              ; preds = %349
  %375 = load %struct.Token*, %struct.Token** %5, align 8
  %376 = call %struct.Node* @expr_stmt(%struct.Token** noundef %5, %struct.Token* noundef %375)
  %377 = load %struct.Node*, %struct.Node** %17, align 8
  %378 = getelementptr inbounds %struct.Node, %struct.Node* %377, i32 0, i32 9
  store %struct.Node* %376, %struct.Node** %378, align 8
  br label %379

379:                                              ; preds = %374, %366
  %380 = load %struct.Token*, %struct.Token** %5, align 8
  %381 = call zeroext i1 @equal(%struct.Token* noundef %380, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  br i1 %381, label %414, label %382

382:                                              ; preds = %379
  %383 = load %struct.Token*, %struct.Token** %5, align 8
  %384 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %383)
  %385 = load %struct.Node*, %struct.Node** %17, align 8
  %386 = getelementptr inbounds %struct.Node, %struct.Node* %385, i32 0, i32 6
  store %struct.Node* %384, %struct.Node** %386, align 16
  %387 = load i8, i8* @isDotfile, align 1
  %388 = trunc i8 %387 to i1
  br i1 %388, label %389, label %413

389:                                              ; preds = %382
  %390 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %391 = icmp ne %struct._IO_FILE* %390, null
  br i1 %391, label %392, label %413

392:                                              ; preds = %389
  %393 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %394 = load %struct.Node*, %struct.Node** %17, align 8
  %395 = getelementptr inbounds %struct.Node, %struct.Node* %394, i32 0, i32 0
  %396 = load i32, i32* %395, align 16
  %397 = call i8* @nodekind2str(i32 noundef %396)
  %398 = load %struct.Node*, %struct.Node** %17, align 8
  %399 = getelementptr inbounds %struct.Node, %struct.Node* %398, i32 0, i32 36
  %400 = load i32, i32* %399, align 16
  %401 = load %struct.Node*, %struct.Node** %17, align 8
  %402 = getelementptr inbounds %struct.Node, %struct.Node* %401, i32 0, i32 6
  %403 = load %struct.Node*, %struct.Node** %402, align 16
  %404 = getelementptr inbounds %struct.Node, %struct.Node* %403, i32 0, i32 0
  %405 = load i32, i32* %404, align 16
  %406 = call i8* @nodekind2str(i32 noundef %405)
  %407 = load %struct.Node*, %struct.Node** %17, align 8
  %408 = getelementptr inbounds %struct.Node, %struct.Node* %407, i32 0, i32 6
  %409 = load %struct.Node*, %struct.Node** %408, align 16
  %410 = getelementptr inbounds %struct.Node, %struct.Node* %409, i32 0, i32 36
  %411 = load i32, i32* %410, align 16
  %412 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %393, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %397, i32 noundef %400, i8* noundef %406, i32 noundef %411)
  br label %413

413:                                              ; preds = %392, %389, %382
  br label %414

414:                                              ; preds = %413, %379
  %415 = load %struct.Token*, %struct.Token** %5, align 8
  %416 = call %struct.Token* @skip(%struct.Token* noundef %415, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  store %struct.Token* %416, %struct.Token** %5, align 8
  %417 = load %struct.Token*, %struct.Token** %5, align 8
  %418 = call zeroext i1 @equal(%struct.Token* noundef %417, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  br i1 %418, label %451, label %419

419:                                              ; preds = %414
  %420 = load %struct.Token*, %struct.Token** %5, align 8
  %421 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %420)
  %422 = load %struct.Node*, %struct.Node** %17, align 8
  %423 = getelementptr inbounds %struct.Node, %struct.Node* %422, i32 0, i32 10
  store %struct.Node* %421, %struct.Node** %423, align 16
  %424 = load i8, i8* @isDotfile, align 1
  %425 = trunc i8 %424 to i1
  br i1 %425, label %426, label %450

426:                                              ; preds = %419
  %427 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %428 = icmp ne %struct._IO_FILE* %427, null
  br i1 %428, label %429, label %450

429:                                              ; preds = %426
  %430 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %431 = load %struct.Node*, %struct.Node** %17, align 8
  %432 = getelementptr inbounds %struct.Node, %struct.Node* %431, i32 0, i32 0
  %433 = load i32, i32* %432, align 16
  %434 = call i8* @nodekind2str(i32 noundef %433)
  %435 = load %struct.Node*, %struct.Node** %17, align 8
  %436 = getelementptr inbounds %struct.Node, %struct.Node* %435, i32 0, i32 36
  %437 = load i32, i32* %436, align 16
  %438 = load %struct.Node*, %struct.Node** %17, align 8
  %439 = getelementptr inbounds %struct.Node, %struct.Node* %438, i32 0, i32 10
  %440 = load %struct.Node*, %struct.Node** %439, align 16
  %441 = getelementptr inbounds %struct.Node, %struct.Node* %440, i32 0, i32 0
  %442 = load i32, i32* %441, align 16
  %443 = call i8* @nodekind2str(i32 noundef %442)
  %444 = load %struct.Node*, %struct.Node** %17, align 8
  %445 = getelementptr inbounds %struct.Node, %struct.Node* %444, i32 0, i32 10
  %446 = load %struct.Node*, %struct.Node** %445, align 16
  %447 = getelementptr inbounds %struct.Node, %struct.Node* %446, i32 0, i32 36
  %448 = load i32, i32* %447, align 16
  %449 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %430, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %434, i32 noundef %437, i8* noundef %443, i32 noundef %448)
  br label %450

450:                                              ; preds = %429, %426, %419
  br label %451

451:                                              ; preds = %450, %414
  %452 = load %struct.Token*, %struct.Token** %5, align 8
  %453 = call %struct.Token* @skip(%struct.Token* noundef %452, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %453, %struct.Token** %5, align 8
  %454 = load %struct.Token**, %struct.Token*** %4, align 8
  %455 = load %struct.Token*, %struct.Token** %5, align 8
  %456 = call %struct.Node* @stmt(%struct.Token** noundef %454, %struct.Token* noundef %455)
  %457 = load %struct.Node*, %struct.Node** %17, align 8
  %458 = getelementptr inbounds %struct.Node, %struct.Node* %457, i32 0, i32 7
  store %struct.Node* %456, %struct.Node** %458, align 8
  %459 = load i8, i8* @isDotfile, align 1
  %460 = trunc i8 %459 to i1
  br i1 %460, label %461, label %485

461:                                              ; preds = %451
  %462 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %463 = icmp ne %struct._IO_FILE* %462, null
  br i1 %463, label %464, label %485

464:                                              ; preds = %461
  %465 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %466 = load %struct.Node*, %struct.Node** %17, align 8
  %467 = getelementptr inbounds %struct.Node, %struct.Node* %466, i32 0, i32 0
  %468 = load i32, i32* %467, align 16
  %469 = call i8* @nodekind2str(i32 noundef %468)
  %470 = load %struct.Node*, %struct.Node** %17, align 8
  %471 = getelementptr inbounds %struct.Node, %struct.Node* %470, i32 0, i32 36
  %472 = load i32, i32* %471, align 16
  %473 = load %struct.Node*, %struct.Node** %17, align 8
  %474 = getelementptr inbounds %struct.Node, %struct.Node* %473, i32 0, i32 7
  %475 = load %struct.Node*, %struct.Node** %474, align 8
  %476 = getelementptr inbounds %struct.Node, %struct.Node* %475, i32 0, i32 0
  %477 = load i32, i32* %476, align 16
  %478 = call i8* @nodekind2str(i32 noundef %477)
  %479 = load %struct.Node*, %struct.Node** %17, align 8
  %480 = getelementptr inbounds %struct.Node, %struct.Node* %479, i32 0, i32 7
  %481 = load %struct.Node*, %struct.Node** %480, align 8
  %482 = getelementptr inbounds %struct.Node, %struct.Node* %481, i32 0, i32 36
  %483 = load i32, i32* %482, align 16
  %484 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %465, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %469, i32 noundef %472, i8* noundef %478, i32 noundef %483)
  br label %485

485:                                              ; preds = %464, %461, %451
  call void @leave_scope()
  %486 = load i8*, i8** %18, align 8
  store i8* %486, i8** @brk_label, align 8
  %487 = load i8*, i8** %19, align 8
  store i8* %487, i8** @cont_label, align 8
  %488 = load %struct.Node*, %struct.Node** %17, align 8
  store %struct.Node* %488, %struct.Node** %3, align 8
  br label %704

489:                                              ; preds = %346
  %490 = load %struct.Token*, %struct.Token** %5, align 8
  %491 = call zeroext i1 @equal(%struct.Token* noundef %490, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.198.727, i64 0, i64 0))
  br i1 %491, label %492, label %521

492:                                              ; preds = %489
  %493 = load %struct.Token*, %struct.Token** %5, align 8
  %494 = call %struct.Node* @new_node(i32 noundef 28, %struct.Token* noundef %493)
  store %struct.Node* %494, %struct.Node** %21, align 8
  %495 = load %struct.Token*, %struct.Token** %5, align 8
  %496 = getelementptr inbounds %struct.Token, %struct.Token* %495, i32 0, i32 1
  %497 = load %struct.Token*, %struct.Token** %496, align 8
  %498 = call %struct.Token* @skip(%struct.Token* noundef %497, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %498, %struct.Token** %5, align 8
  %499 = load %struct.Token*, %struct.Token** %5, align 8
  %500 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %499)
  %501 = load %struct.Node*, %struct.Node** %21, align 8
  %502 = getelementptr inbounds %struct.Node, %struct.Node* %501, i32 0, i32 6
  store %struct.Node* %500, %struct.Node** %502, align 16
  %503 = load %struct.Token*, %struct.Token** %5, align 8
  %504 = call %struct.Token* @skip(%struct.Token* noundef %503, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %504, %struct.Token** %5, align 8
  %505 = load i8*, i8** @brk_label, align 8
  store i8* %505, i8** %22, align 8
  %506 = load i8*, i8** @cont_label, align 8
  store i8* %506, i8** %23, align 8
  %507 = call i8* @new_unique_name()
  %508 = load %struct.Node*, %struct.Node** %21, align 8
  %509 = getelementptr inbounds %struct.Node, %struct.Node* %508, i32 0, i32 11
  store i8* %507, i8** %509, align 8
  store i8* %507, i8** @brk_label, align 8
  %510 = call i8* @new_unique_name()
  %511 = load %struct.Node*, %struct.Node** %21, align 8
  %512 = getelementptr inbounds %struct.Node, %struct.Node* %511, i32 0, i32 12
  store i8* %510, i8** %512, align 16
  store i8* %510, i8** @cont_label, align 8
  %513 = load %struct.Token**, %struct.Token*** %4, align 8
  %514 = load %struct.Token*, %struct.Token** %5, align 8
  %515 = call %struct.Node* @stmt(%struct.Token** noundef %513, %struct.Token* noundef %514)
  %516 = load %struct.Node*, %struct.Node** %21, align 8
  %517 = getelementptr inbounds %struct.Node, %struct.Node* %516, i32 0, i32 7
  store %struct.Node* %515, %struct.Node** %517, align 8
  %518 = load i8*, i8** %22, align 8
  store i8* %518, i8** @brk_label, align 8
  %519 = load i8*, i8** %23, align 8
  store i8* %519, i8** @cont_label, align 8
  %520 = load %struct.Node*, %struct.Node** %21, align 8
  store %struct.Node* %520, %struct.Node** %3, align 8
  br label %704

521:                                              ; preds = %489
  %522 = load %struct.Token*, %struct.Token** %5, align 8
  %523 = call zeroext i1 @equal(%struct.Token* noundef %522, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199.728, i64 0, i64 0))
  br i1 %523, label %524, label %557

524:                                              ; preds = %521
  %525 = load %struct.Token*, %struct.Token** %5, align 8
  %526 = call %struct.Node* @new_node(i32 noundef 29, %struct.Token* noundef %525)
  store %struct.Node* %526, %struct.Node** %24, align 8
  %527 = load i8*, i8** @brk_label, align 8
  store i8* %527, i8** %25, align 8
  %528 = load i8*, i8** @cont_label, align 8
  store i8* %528, i8** %26, align 8
  %529 = call i8* @new_unique_name()
  %530 = load %struct.Node*, %struct.Node** %24, align 8
  %531 = getelementptr inbounds %struct.Node, %struct.Node* %530, i32 0, i32 11
  store i8* %529, i8** %531, align 8
  store i8* %529, i8** @brk_label, align 8
  %532 = call i8* @new_unique_name()
  %533 = load %struct.Node*, %struct.Node** %24, align 8
  %534 = getelementptr inbounds %struct.Node, %struct.Node* %533, i32 0, i32 12
  store i8* %532, i8** %534, align 16
  store i8* %532, i8** @cont_label, align 8
  %535 = load %struct.Token*, %struct.Token** %5, align 8
  %536 = getelementptr inbounds %struct.Token, %struct.Token* %535, i32 0, i32 1
  %537 = load %struct.Token*, %struct.Token** %536, align 8
  %538 = call %struct.Node* @stmt(%struct.Token** noundef %5, %struct.Token* noundef %537)
  %539 = load %struct.Node*, %struct.Node** %24, align 8
  %540 = getelementptr inbounds %struct.Node, %struct.Node* %539, i32 0, i32 7
  store %struct.Node* %538, %struct.Node** %540, align 8
  %541 = load i8*, i8** %25, align 8
  store i8* %541, i8** @brk_label, align 8
  %542 = load i8*, i8** %26, align 8
  store i8* %542, i8** @cont_label, align 8
  %543 = load %struct.Token*, %struct.Token** %5, align 8
  %544 = call %struct.Token* @skip(%struct.Token* noundef %543, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.198.727, i64 0, i64 0))
  store %struct.Token* %544, %struct.Token** %5, align 8
  %545 = load %struct.Token*, %struct.Token** %5, align 8
  %546 = call %struct.Token* @skip(%struct.Token* noundef %545, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %546, %struct.Token** %5, align 8
  %547 = load %struct.Token*, %struct.Token** %5, align 8
  %548 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %547)
  %549 = load %struct.Node*, %struct.Node** %24, align 8
  %550 = getelementptr inbounds %struct.Node, %struct.Node* %549, i32 0, i32 6
  store %struct.Node* %548, %struct.Node** %550, align 16
  %551 = load %struct.Token*, %struct.Token** %5, align 8
  %552 = call %struct.Token* @skip(%struct.Token* noundef %551, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %552, %struct.Token** %5, align 8
  %553 = load %struct.Token*, %struct.Token** %5, align 8
  %554 = call %struct.Token* @skip(%struct.Token* noundef %553, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %555 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %554, %struct.Token** %555, align 8
  %556 = load %struct.Node*, %struct.Node** %24, align 8
  store %struct.Node* %556, %struct.Node** %3, align 8
  br label %704

557:                                              ; preds = %521
  %558 = load %struct.Token*, %struct.Token** %5, align 8
  %559 = call zeroext i1 @equal(%struct.Token* noundef %558, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.200.729, i64 0, i64 0))
  br i1 %559, label %563, label %560

560:                                              ; preds = %557
  %561 = load %struct.Token*, %struct.Token** %5, align 8
  %562 = call zeroext i1 @equal(%struct.Token* noundef %561, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.201.730, i64 0, i64 0))
  br i1 %562, label %563, label %567

563:                                              ; preds = %560, %557
  %564 = load %struct.Token**, %struct.Token*** %4, align 8
  %565 = load %struct.Token*, %struct.Token** %5, align 8
  %566 = call %struct.Node* @asm_stmt(%struct.Token** noundef %564, %struct.Token* noundef %565)
  store %struct.Node* %566, %struct.Node** %3, align 8
  br label %704

567:                                              ; preds = %560
  %568 = load %struct.Token*, %struct.Token** %5, align 8
  %569 = call zeroext i1 @equal(%struct.Token* noundef %568, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202.731, i64 0, i64 0))
  br i1 %569, label %570, label %611

570:                                              ; preds = %567
  %571 = load %struct.Token*, %struct.Token** %5, align 8
  %572 = getelementptr inbounds %struct.Token, %struct.Token* %571, i32 0, i32 1
  %573 = load %struct.Token*, %struct.Token** %572, align 8
  %574 = call zeroext i1 @equal(%struct.Token* noundef %573, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82.674, i64 0, i64 0))
  br i1 %574, label %575, label %590

575:                                              ; preds = %570
  %576 = load %struct.Token*, %struct.Token** %5, align 8
  %577 = call %struct.Node* @new_node(i32 noundef 34, %struct.Token* noundef %576)
  store %struct.Node* %577, %struct.Node** %27, align 8
  %578 = load %struct.Token*, %struct.Token** %5, align 8
  %579 = getelementptr inbounds %struct.Token, %struct.Token* %578, i32 0, i32 1
  %580 = load %struct.Token*, %struct.Token** %579, align 8
  %581 = getelementptr inbounds %struct.Token, %struct.Token* %580, i32 0, i32 1
  %582 = load %struct.Token*, %struct.Token** %581, align 8
  %583 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %582)
  %584 = load %struct.Node*, %struct.Node** %27, align 8
  %585 = getelementptr inbounds %struct.Node, %struct.Node* %584, i32 0, i32 4
  store %struct.Node* %583, %struct.Node** %585, align 16
  %586 = load %struct.Token*, %struct.Token** %5, align 8
  %587 = call %struct.Token* @skip(%struct.Token* noundef %586, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %588 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %587, %struct.Token** %588, align 8
  %589 = load %struct.Node*, %struct.Node** %27, align 8
  store %struct.Node* %589, %struct.Node** %3, align 8
  br label %704

590:                                              ; preds = %570
  %591 = load %struct.Token*, %struct.Token** %5, align 8
  %592 = call %struct.Node* @new_node(i32 noundef 33, %struct.Token* noundef %591)
  store %struct.Node* %592, %struct.Node** %28, align 8
  %593 = load %struct.Token*, %struct.Token** %5, align 8
  %594 = getelementptr inbounds %struct.Token, %struct.Token* %593, i32 0, i32 1
  %595 = load %struct.Token*, %struct.Token** %594, align 8
  %596 = call i8* @get_ident(%struct.Token* noundef %595)
  %597 = load %struct.Node*, %struct.Node** %28, align 8
  %598 = getelementptr inbounds %struct.Node, %struct.Node* %597, i32 0, i32 19
  store i8* %596, i8** %598, align 8
  %599 = load %struct.Node*, %struct.Node** @gotos, align 8
  %600 = load %struct.Node*, %struct.Node** %28, align 8
  %601 = getelementptr inbounds %struct.Node, %struct.Node* %600, i32 0, i32 21
  store %struct.Node* %599, %struct.Node** %601, align 8
  %602 = load %struct.Node*, %struct.Node** %28, align 8
  store %struct.Node* %602, %struct.Node** @gotos, align 8
  %603 = load %struct.Token*, %struct.Token** %5, align 8
  %604 = getelementptr inbounds %struct.Token, %struct.Token* %603, i32 0, i32 1
  %605 = load %struct.Token*, %struct.Token** %604, align 8
  %606 = getelementptr inbounds %struct.Token, %struct.Token* %605, i32 0, i32 1
  %607 = load %struct.Token*, %struct.Token** %606, align 8
  %608 = call %struct.Token* @skip(%struct.Token* noundef %607, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %609 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %608, %struct.Token** %609, align 8
  %610 = load %struct.Node*, %struct.Node** %28, align 8
  store %struct.Node* %610, %struct.Node** %3, align 8
  br label %704

611:                                              ; preds = %567
  %612 = load %struct.Token*, %struct.Token** %5, align 8
  %613 = call zeroext i1 @equal(%struct.Token* noundef %612, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.203.732, i64 0, i64 0))
  br i1 %613, label %614, label %631

614:                                              ; preds = %611
  %615 = load i8*, i8** @brk_label, align 8
  %616 = icmp ne i8* %615, null
  br i1 %616, label %619, label %617

617:                                              ; preds = %614
  %618 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %618, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.204.733, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

619:                                              ; preds = %614
  %620 = load %struct.Token*, %struct.Token** %5, align 8
  %621 = call %struct.Node* @new_node(i32 noundef 33, %struct.Token* noundef %620)
  store %struct.Node* %621, %struct.Node** %29, align 8
  %622 = load i8*, i8** @brk_label, align 8
  %623 = load %struct.Node*, %struct.Node** %29, align 8
  %624 = getelementptr inbounds %struct.Node, %struct.Node* %623, i32 0, i32 20
  store i8* %622, i8** %624, align 16
  %625 = load %struct.Token*, %struct.Token** %5, align 8
  %626 = getelementptr inbounds %struct.Token, %struct.Token* %625, i32 0, i32 1
  %627 = load %struct.Token*, %struct.Token** %626, align 8
  %628 = call %struct.Token* @skip(%struct.Token* noundef %627, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %629 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %628, %struct.Token** %629, align 8
  %630 = load %struct.Node*, %struct.Node** %29, align 8
  store %struct.Node* %630, %struct.Node** %3, align 8
  br label %704

631:                                              ; preds = %611
  %632 = load %struct.Token*, %struct.Token** %5, align 8
  %633 = call zeroext i1 @equal(%struct.Token* noundef %632, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.205.734, i64 0, i64 0))
  br i1 %633, label %634, label %651

634:                                              ; preds = %631
  %635 = load i8*, i8** @cont_label, align 8
  %636 = icmp ne i8* %635, null
  br i1 %636, label %639, label %637

637:                                              ; preds = %634
  %638 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %638, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.206.735, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

639:                                              ; preds = %634
  %640 = load %struct.Token*, %struct.Token** %5, align 8
  %641 = call %struct.Node* @new_node(i32 noundef 33, %struct.Token* noundef %640)
  store %struct.Node* %641, %struct.Node** %30, align 8
  %642 = load i8*, i8** @cont_label, align 8
  %643 = load %struct.Node*, %struct.Node** %30, align 8
  %644 = getelementptr inbounds %struct.Node, %struct.Node* %643, i32 0, i32 20
  store i8* %642, i8** %644, align 16
  %645 = load %struct.Token*, %struct.Token** %5, align 8
  %646 = getelementptr inbounds %struct.Token, %struct.Token* %645, i32 0, i32 1
  %647 = load %struct.Token*, %struct.Token** %646, align 8
  %648 = call %struct.Token* @skip(%struct.Token* noundef %647, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %649 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %648, %struct.Token** %649, align 8
  %650 = load %struct.Node*, %struct.Node** %30, align 8
  store %struct.Node* %650, %struct.Node** %3, align 8
  br label %704

651:                                              ; preds = %631
  %652 = load %struct.Token*, %struct.Token** %5, align 8
  %653 = getelementptr inbounds %struct.Token, %struct.Token* %652, i32 0, i32 0
  %654 = load i32, i32* %653, align 16
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %656, label %691

656:                                              ; preds = %651
  %657 = load %struct.Token*, %struct.Token** %5, align 8
  %658 = getelementptr inbounds %struct.Token, %struct.Token* %657, i32 0, i32 1
  %659 = load %struct.Token*, %struct.Token** %658, align 8
  %660 = call zeroext i1 @equal(%struct.Token* noundef %659, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  br i1 %660, label %661, label %691

661:                                              ; preds = %656
  %662 = load %struct.Token*, %struct.Token** %5, align 8
  %663 = call %struct.Node* @new_node(i32 noundef 35, %struct.Token* noundef %662)
  store %struct.Node* %663, %struct.Node** %31, align 8
  %664 = load %struct.Token*, %struct.Token** %5, align 8
  %665 = getelementptr inbounds %struct.Token, %struct.Token* %664, i32 0, i32 4
  %666 = load i8*, i8** %665, align 16
  %667 = load %struct.Token*, %struct.Token** %5, align 8
  %668 = getelementptr inbounds %struct.Token, %struct.Token* %667, i32 0, i32 5
  %669 = load i32, i32* %668, align 8
  %670 = sext i32 %669 to i64
  %671 = call noalias i8* @strndup(i8* noundef %666, i64 noundef %670) #14
  %672 = load %struct.Node*, %struct.Node** %31, align 8
  %673 = getelementptr inbounds %struct.Node, %struct.Node* %672, i32 0, i32 19
  store i8* %671, i8** %673, align 8
  %674 = call i8* @new_unique_name()
  %675 = load %struct.Node*, %struct.Node** %31, align 8
  %676 = getelementptr inbounds %struct.Node, %struct.Node* %675, i32 0, i32 20
  store i8* %674, i8** %676, align 16
  %677 = load %struct.Token**, %struct.Token*** %4, align 8
  %678 = load %struct.Token*, %struct.Token** %5, align 8
  %679 = getelementptr inbounds %struct.Token, %struct.Token* %678, i32 0, i32 1
  %680 = load %struct.Token*, %struct.Token** %679, align 8
  %681 = getelementptr inbounds %struct.Token, %struct.Token* %680, i32 0, i32 1
  %682 = load %struct.Token*, %struct.Token** %681, align 8
  %683 = call %struct.Node* @stmt(%struct.Token** noundef %677, %struct.Token* noundef %682)
  %684 = load %struct.Node*, %struct.Node** %31, align 8
  %685 = getelementptr inbounds %struct.Node, %struct.Node* %684, i32 0, i32 4
  store %struct.Node* %683, %struct.Node** %685, align 16
  %686 = load %struct.Node*, %struct.Node** @labels, align 8
  %687 = load %struct.Node*, %struct.Node** %31, align 8
  %688 = getelementptr inbounds %struct.Node, %struct.Node* %687, i32 0, i32 21
  store %struct.Node* %686, %struct.Node** %688, align 8
  %689 = load %struct.Node*, %struct.Node** %31, align 8
  store %struct.Node* %689, %struct.Node** @labels, align 8
  %690 = load %struct.Node*, %struct.Node** %31, align 8
  store %struct.Node* %690, %struct.Node** %3, align 8
  br label %704

691:                                              ; preds = %656, %651
  %692 = load %struct.Token*, %struct.Token** %5, align 8
  %693 = call zeroext i1 @equal(%struct.Token* noundef %692, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %693, label %694, label %700

694:                                              ; preds = %691
  %695 = load %struct.Token**, %struct.Token*** %4, align 8
  %696 = load %struct.Token*, %struct.Token** %5, align 8
  %697 = getelementptr inbounds %struct.Token, %struct.Token* %696, i32 0, i32 1
  %698 = load %struct.Token*, %struct.Token** %697, align 8
  %699 = call %struct.Node* @compound_stmt(%struct.Token** noundef %695, %struct.Token* noundef %698)
  store %struct.Node* %699, %struct.Node** %3, align 8
  br label %704

700:                                              ; preds = %691
  %701 = load %struct.Token**, %struct.Token*** %4, align 8
  %702 = load %struct.Token*, %struct.Token** %5, align 8
  %703 = call %struct.Node* @expr_stmt(%struct.Token** noundef %701, %struct.Token* noundef %702)
  store %struct.Node* %703, %struct.Node** %3, align 8
  br label %704

704:                                              ; preds = %700, %694, %661, %639, %619, %590, %575, %563, %524, %492, %485, %327, %291, %232, %225, %110, %54
  %705 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %705
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @leave_scope() #0 {
  %1 = load %struct.Scope*, %struct.Scope** @scope, align 8
  %2 = getelementptr inbounds %struct.Scope, %struct.Scope* %1, i32 0, i32 0
  %3 = load %struct.Scope*, %struct.Scope** %2, align 8
  store %struct.Scope* %3, %struct.Scope** @scope, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @expr_stmt(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %7 = load %struct.Token*, %struct.Token** %5, align 8
  %8 = call zeroext i1 @equal(%struct.Token* noundef %7, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = load %struct.Token*, %struct.Token** %5, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 1
  %12 = load %struct.Token*, %struct.Token** %11, align 8
  %13 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %12, %struct.Token** %13, align 8
  %14 = load %struct.Token*, %struct.Token** %5, align 8
  %15 = call %struct.Node* @new_node(i32 noundef 32, %struct.Token* noundef %14)
  store %struct.Node* %15, %struct.Node** %3, align 8
  br label %54

16:                                               ; preds = %2
  %17 = load %struct.Token*, %struct.Token** %5, align 8
  %18 = call %struct.Node* @new_node(i32 noundef 38, %struct.Token* noundef %17)
  store %struct.Node* %18, %struct.Node** %6, align 8
  %19 = load %struct.Token*, %struct.Token** %5, align 8
  %20 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %19)
  %21 = load %struct.Node*, %struct.Node** %6, align 8
  %22 = getelementptr inbounds %struct.Node, %struct.Node* %21, i32 0, i32 4
  store %struct.Node* %20, %struct.Node** %22, align 16
  %23 = load i8, i8* @isDotfile, align 1
  %24 = trunc i8 %23 to i1
  br i1 %24, label %25, label %49

25:                                               ; preds = %16
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %27 = icmp ne %struct._IO_FILE* %26, null
  br i1 %27, label %28, label %49

28:                                               ; preds = %25
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %30 = load %struct.Node*, %struct.Node** %6, align 8
  %31 = getelementptr inbounds %struct.Node, %struct.Node* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 16
  %33 = call i8* @nodekind2str(i32 noundef %32)
  %34 = load %struct.Node*, %struct.Node** %6, align 8
  %35 = getelementptr inbounds %struct.Node, %struct.Node* %34, i32 0, i32 36
  %36 = load i32, i32* %35, align 16
  %37 = load %struct.Node*, %struct.Node** %6, align 8
  %38 = getelementptr inbounds %struct.Node, %struct.Node* %37, i32 0, i32 4
  %39 = load %struct.Node*, %struct.Node** %38, align 16
  %40 = getelementptr inbounds %struct.Node, %struct.Node* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 16
  %42 = call i8* @nodekind2str(i32 noundef %41)
  %43 = load %struct.Node*, %struct.Node** %6, align 8
  %44 = getelementptr inbounds %struct.Node, %struct.Node* %43, i32 0, i32 4
  %45 = load %struct.Node*, %struct.Node** %44, align 16
  %46 = getelementptr inbounds %struct.Node, %struct.Node* %45, i32 0, i32 36
  %47 = load i32, i32* %46, align 16
  %48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %29, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131.603, i64 0, i64 0), i8* noundef %33, i32 noundef %36, i8* noundef %42, i32 noundef %47)
  br label %49

49:                                               ; preds = %28, %25, %16
  %50 = load %struct.Token*, %struct.Token** %5, align 8
  %51 = call %struct.Token* @skip(%struct.Token* noundef %50, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %52 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %51, %struct.Token** %52, align 8
  %53 = load %struct.Node*, %struct.Node** %6, align 8
  store %struct.Node* %53, %struct.Node** %3, align 8
  br label %54

54:                                               ; preds = %49, %9
  %55 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %55
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @asm_stmt(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %7 = load %struct.Token*, %struct.Token** %5, align 8
  %8 = call %struct.Node* @new_node(i32 noundef 45, %struct.Token* noundef %7)
  store %struct.Node* %8, %struct.Node** %6, align 8
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = getelementptr inbounds %struct.Token, %struct.Token* %9, i32 0, i32 1
  %11 = load %struct.Token*, %struct.Token** %10, align 8
  store %struct.Token* %11, %struct.Token** %5, align 8
  br label %12

12:                                               ; preds = %20, %2
  %13 = load %struct.Token*, %struct.Token** %5, align 8
  %14 = call zeroext i1 @equal(%struct.Token* noundef %13, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104.736, i64 0, i64 0))
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = load %struct.Token*, %struct.Token** %5, align 8
  %17 = call zeroext i1 @equal(%struct.Token* noundef %16, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114.737, i64 0, i64 0))
  br label %18

18:                                               ; preds = %15, %12
  %19 = phi i1 [ true, %12 ], [ %17, %15 ]
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = load %struct.Token*, %struct.Token** %5, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 1
  %23 = load %struct.Token*, %struct.Token** %22, align 8
  store %struct.Token* %23, %struct.Token** %5, align 8
  br label %12, !llvm.loop !99

24:                                               ; preds = %18
  %25 = load %struct.Token*, %struct.Token** %5, align 8
  %26 = call %struct.Token* @skip(%struct.Token* noundef %25, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %26, %struct.Token** %5, align 8
  %27 = load %struct.Token*, %struct.Token** %5, align 8
  %28 = getelementptr inbounds %struct.Token, %struct.Token* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 16
  %30 = icmp ne i32 %29, 3
  br i1 %30, label %40, label %31

31:                                               ; preds = %24
  %32 = load %struct.Token*, %struct.Token** %5, align 8
  %33 = getelementptr inbounds %struct.Token, %struct.Token* %32, i32 0, i32 6
  %34 = load %struct.Type*, %struct.Type** %33, align 16
  %35 = getelementptr inbounds %struct.Type, %struct.Type* %34, i32 0, i32 8
  %36 = load %struct.Type*, %struct.Type** %35, align 8
  %37 = getelementptr inbounds %struct.Type, %struct.Type* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp ne i32 %38, 2
  br i1 %39, label %40, label %42

40:                                               ; preds = %31, %24
  %41 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %41, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.207.738, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

42:                                               ; preds = %31
  %43 = load %struct.Token*, %struct.Token** %5, align 8
  %44 = getelementptr inbounds %struct.Token, %struct.Token* %43, i32 0, i32 1
  %45 = load %struct.Token*, %struct.Token** %44, align 8
  %46 = call zeroext i1 @equal(%struct.Token* noundef %45, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  br i1 %46, label %47, label %62

47:                                               ; preds = %42
  %48 = load %struct.Node*, %struct.Node** %6, align 8
  %49 = load %struct.Token**, %struct.Token*** %4, align 8
  %50 = load %struct.Token*, %struct.Token** %5, align 8
  %51 = call i8* @extended_asm(%struct.Node* noundef %48, %struct.Token** noundef %49, %struct.Token* noundef %50)
  %52 = load %struct.Node*, %struct.Node** %6, align 8
  %53 = getelementptr inbounds %struct.Node, %struct.Node* %52, i32 0, i32 26
  store i8* %51, i8** %53, align 16
  %54 = load %struct.Node*, %struct.Node** %6, align 8
  %55 = getelementptr inbounds %struct.Node, %struct.Node* %54, i32 0, i32 26
  %56 = load i8*, i8** %55, align 16
  %57 = icmp ne i8* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %47
  %59 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %59, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.208.739, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

60:                                               ; preds = %47
  %61 = load %struct.Node*, %struct.Node** %6, align 8
  store %struct.Node* %61, %struct.Node** %3, align 8
  br label %74

62:                                               ; preds = %42
  %63 = load %struct.Token*, %struct.Token** %5, align 8
  %64 = getelementptr inbounds %struct.Token, %struct.Token* %63, i32 0, i32 7
  %65 = load i8*, i8** %64, align 8
  %66 = load %struct.Node*, %struct.Node** %6, align 8
  %67 = getelementptr inbounds %struct.Node, %struct.Node* %66, i32 0, i32 26
  store i8* %65, i8** %67, align 16
  %68 = load %struct.Token*, %struct.Token** %5, align 8
  %69 = getelementptr inbounds %struct.Token, %struct.Token* %68, i32 0, i32 1
  %70 = load %struct.Token*, %struct.Token** %69, align 8
  %71 = call %struct.Token* @skip(%struct.Token* noundef %70, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %72 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %71, %struct.Token** %72, align 8
  %73 = load %struct.Node*, %struct.Node** %6, align 8
  store %struct.Node* %73, %struct.Node** %3, align 8
  br label %74

74:                                               ; preds = %62, %60
  %75 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %75
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @declarator(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.Token*, align 8
  %9 = alloca %struct.Type, align 8
  %10 = alloca %struct.Token*, align 8
  %11 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Type* %2, %struct.Type** %7, align 8
  %12 = load %struct.Token*, %struct.Token** %6, align 8
  %13 = load %struct.Type*, %struct.Type** %7, align 8
  %14 = call %struct.Type* @pointers(%struct.Token** noundef %6, %struct.Token* noundef %12, %struct.Type* noundef %13)
  store %struct.Type* %14, %struct.Type** %7, align 8
  %15 = load %struct.Token*, %struct.Token** %6, align 8
  %16 = call zeroext i1 @equal(%struct.Token* noundef %15, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %16, label %17, label %45

17:                                               ; preds = %3
  %18 = load %struct.Token*, %struct.Token** %6, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 1
  %20 = load %struct.Token*, %struct.Token** %19, align 8
  %21 = call zeroext i1 @is_typename(%struct.Token* noundef %20)
  br i1 %21, label %45, label %22

22:                                               ; preds = %17
  %23 = load %struct.Token*, %struct.Token** %6, align 8
  %24 = getelementptr inbounds %struct.Token, %struct.Token* %23, i32 0, i32 1
  %25 = load %struct.Token*, %struct.Token** %24, align 8
  %26 = call zeroext i1 @equal(%struct.Token* noundef %25, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  br i1 %26, label %45, label %27

27:                                               ; preds = %22
  %28 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %28, %struct.Token** %8, align 8
  %29 = bitcast %struct.Type* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 128, i1 false)
  %30 = load %struct.Token*, %struct.Token** %8, align 8
  %31 = getelementptr inbounds %struct.Token, %struct.Token* %30, i32 0, i32 1
  %32 = load %struct.Token*, %struct.Token** %31, align 8
  %33 = call %struct.Type* @declarator(%struct.Token** noundef %6, %struct.Token* noundef %32, %struct.Type* noundef %9)
  %34 = load %struct.Token*, %struct.Token** %6, align 8
  %35 = call %struct.Token* @skip(%struct.Token* noundef %34, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %35, %struct.Token** %6, align 8
  %36 = load %struct.Token**, %struct.Token*** %5, align 8
  %37 = load %struct.Token*, %struct.Token** %6, align 8
  %38 = load %struct.Type*, %struct.Type** %7, align 8
  %39 = call %struct.Type* @type_suffix(%struct.Token** noundef %36, %struct.Token* noundef %37, %struct.Type* noundef %38)
  store %struct.Type* %39, %struct.Type** %7, align 8
  %40 = load %struct.Token*, %struct.Token** %8, align 8
  %41 = getelementptr inbounds %struct.Token, %struct.Token* %40, i32 0, i32 1
  %42 = load %struct.Token*, %struct.Token** %41, align 8
  %43 = load %struct.Type*, %struct.Type** %7, align 8
  %44 = call %struct.Type* @declarator(%struct.Token** noundef %6, %struct.Token* noundef %42, %struct.Type* noundef %43)
  store %struct.Type* %44, %struct.Type** %4, align 8
  br label %68

45:                                               ; preds = %22, %17, %3
  store %struct.Token* null, %struct.Token** %10, align 8
  %46 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %46, %struct.Token** %11, align 8
  %47 = load %struct.Token*, %struct.Token** %6, align 8
  %48 = getelementptr inbounds %struct.Token, %struct.Token* %47, i32 0, i32 0
  %49 = load i32, i32* %48, align 16
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %45
  %52 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %52, %struct.Token** %10, align 8
  %53 = load %struct.Token*, %struct.Token** %6, align 8
  %54 = getelementptr inbounds %struct.Token, %struct.Token* %53, i32 0, i32 1
  %55 = load %struct.Token*, %struct.Token** %54, align 8
  store %struct.Token* %55, %struct.Token** %6, align 8
  br label %56

56:                                               ; preds = %51, %45
  %57 = load %struct.Token**, %struct.Token*** %5, align 8
  %58 = load %struct.Token*, %struct.Token** %6, align 8
  %59 = load %struct.Type*, %struct.Type** %7, align 8
  %60 = call %struct.Type* @type_suffix(%struct.Token** noundef %57, %struct.Token* noundef %58, %struct.Type* noundef %59)
  store %struct.Type* %60, %struct.Type** %7, align 8
  %61 = load %struct.Token*, %struct.Token** %10, align 8
  %62 = load %struct.Type*, %struct.Type** %7, align 8
  %63 = getelementptr inbounds %struct.Type, %struct.Type* %62, i32 0, i32 9
  store %struct.Token* %61, %struct.Token** %63, align 8
  %64 = load %struct.Token*, %struct.Token** %11, align 8
  %65 = load %struct.Type*, %struct.Type** %7, align 8
  %66 = getelementptr inbounds %struct.Type, %struct.Type* %65, i32 0, i32 10
  store %struct.Token* %64, %struct.Token** %66, align 8
  %67 = load %struct.Type*, %struct.Type** %7, align 8
  store %struct.Type* %67, %struct.Type** %4, align 8
  br label %68

68:                                               ; preds = %56, %27
  %69 = load %struct.Type*, %struct.Type** %4, align 8
  ret %struct.Type* %69
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_vla_ptr(%struct.Obj* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Obj*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Node*, align 8
  store %struct.Obj* %0, %struct.Obj** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load %struct.Token*, %struct.Token** %4, align 8
  %7 = call %struct.Node* @new_node(i32 noundef 41, %struct.Token* noundef %6)
  store %struct.Node* %7, %struct.Node** %5, align 8
  %8 = load %struct.Obj*, %struct.Obj** %3, align 8
  %9 = load %struct.Node*, %struct.Node** %5, align 8
  %10 = getelementptr inbounds %struct.Node, %struct.Node* %9, i32 0, i32 33
  store %struct.Obj* %8, %struct.Obj** %10, align 8
  %11 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @new_alloca(%struct.Node* noundef %0) #0 {
  %2 = alloca %struct.Node*, align 8
  %3 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %2, align 8
  %4 = load %struct.Obj*, %struct.Obj** @builtin_alloca.744, align 8
  %5 = load %struct.Node*, %struct.Node** %2, align 8
  %6 = getelementptr inbounds %struct.Node, %struct.Node* %5, i32 0, i32 3
  %7 = load %struct.Token*, %struct.Token** %6, align 8
  %8 = call %struct.Node* @new_var_node(%struct.Obj* noundef %4, %struct.Token* noundef %7)
  %9 = load %struct.Node*, %struct.Node** %2, align 8
  %10 = getelementptr inbounds %struct.Node, %struct.Node* %9, i32 0, i32 3
  %11 = load %struct.Token*, %struct.Token** %10, align 8
  %12 = call %struct.Node* @new_unary(i32 noundef 37, %struct.Node* noundef %8, %struct.Token* noundef %11)
  store %struct.Node* %12, %struct.Node** %3, align 8
  %13 = load %struct.Obj*, %struct.Obj** @builtin_alloca.744, align 8
  %14 = getelementptr inbounds %struct.Obj, %struct.Obj* %13, i32 0, i32 3
  %15 = load %struct.Type*, %struct.Type** %14, align 8
  %16 = load %struct.Node*, %struct.Node** %3, align 8
  %17 = getelementptr inbounds %struct.Node, %struct.Node* %16, i32 0, i32 15
  store %struct.Type* %15, %struct.Type** %17, align 8
  %18 = load %struct.Obj*, %struct.Obj** @builtin_alloca.744, align 8
  %19 = getelementptr inbounds %struct.Obj, %struct.Obj* %18, i32 0, i32 3
  %20 = load %struct.Type*, %struct.Type** %19, align 8
  %21 = getelementptr inbounds %struct.Type, %struct.Type* %20, i32 0, i32 17
  %22 = load %struct.Type*, %struct.Type** %21, align 8
  %23 = load %struct.Node*, %struct.Node** %3, align 8
  %24 = getelementptr inbounds %struct.Node, %struct.Node* %23, i32 0, i32 2
  store %struct.Type* %22, %struct.Type** %24, align 16
  %25 = load %struct.Node*, %struct.Node** %2, align 8
  %26 = load %struct.Node*, %struct.Node** %3, align 8
  %27 = getelementptr inbounds %struct.Node, %struct.Node* %26, i32 0, i32 16
  store %struct.Node* %25, %struct.Node** %27, align 16
  %28 = load %struct.Node*, %struct.Node** %2, align 8
  call void @add_type(%struct.Node* noundef %28)
  %29 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @pointers(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Type*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Type* %2, %struct.Type** %6, align 8
  br label %7

7:                                                ; preds = %40, %3
  %8 = load %struct.Token*, %struct.Token** %5, align 8
  %9 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %8, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82.674, i64 0, i64 0))
  br i1 %9, label %10, label %41

10:                                               ; preds = %7
  %11 = load %struct.Type*, %struct.Type** %6, align 8
  %12 = call %struct.Type* @pointer_to(%struct.Type* noundef %11)
  store %struct.Type* %12, %struct.Type** %6, align 8
  br label %13

13:                                               ; preds = %36, %10
  %14 = load %struct.Token*, %struct.Token** %5, align 8
  %15 = call zeroext i1 @equal(%struct.Token* noundef %14, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103.748, i64 0, i64 0))
  br i1 %15, label %34, label %16

16:                                               ; preds = %13
  %17 = load %struct.Token*, %struct.Token** %5, align 8
  %18 = call zeroext i1 @equal(%struct.Token* noundef %17, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104.736, i64 0, i64 0))
  br i1 %18, label %34, label %19

19:                                               ; preds = %16
  %20 = load %struct.Token*, %struct.Token** %5, align 8
  %21 = call zeroext i1 @equal(%struct.Token* noundef %20, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107.746, i64 0, i64 0))
  br i1 %21, label %34, label %22

22:                                               ; preds = %19
  %23 = load %struct.Token*, %struct.Token** %5, align 8
  %24 = call zeroext i1 @equal(%struct.Token* noundef %23, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.108.749, i64 0, i64 0))
  br i1 %24, label %34, label %25

25:                                               ; preds = %22
  %26 = load %struct.Token*, %struct.Token** %5, align 8
  %27 = call zeroext i1 @equal(%struct.Token* noundef %26, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109.750, i64 0, i64 0))
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = load %struct.Token*, %struct.Token** %5, align 8
  %30 = call zeroext i1 @equal(%struct.Token* noundef %29, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117.751, i64 0, i64 0))
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = load %struct.Token*, %struct.Token** %5, align 8
  %33 = call zeroext i1 @equal(%struct.Token* noundef %32, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118.752, i64 0, i64 0))
  br label %34

34:                                               ; preds = %31, %28, %25, %22, %19, %16, %13
  %35 = phi i1 [ true, %28 ], [ true, %25 ], [ true, %22 ], [ true, %19 ], [ true, %16 ], [ true, %13 ], [ %33, %31 ]
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = load %struct.Token*, %struct.Token** %5, align 8
  %38 = getelementptr inbounds %struct.Token, %struct.Token* %37, i32 0, i32 1
  %39 = load %struct.Token*, %struct.Token** %38, align 8
  store %struct.Token* %39, %struct.Token** %5, align 8
  br label %13, !llvm.loop !100

40:                                               ; preds = %34
  br label %7, !llvm.loop !101

41:                                               ; preds = %7
  %42 = load %struct.Token*, %struct.Token** %5, align 8
  %43 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %42, %struct.Token** %43, align 8
  %44 = load %struct.Type*, %struct.Type** %6, align 8
  ret %struct.Type* %44
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @type_suffix(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca i8, align 1
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Type* %2, %struct.Type** %7, align 8
  store i8 0, i8* %8, align 1
  %9 = load %struct.Token*, %struct.Token** %6, align 8
  %10 = call zeroext i1 @equal(%struct.Token* noundef %9, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %10, label %11, label %32

11:                                               ; preds = %3
  %12 = load %struct.Token*, %struct.Token** %6, align 8
  %13 = getelementptr inbounds %struct.Token, %struct.Token* %12, i32 0, i32 1
  %14 = load %struct.Token*, %struct.Token** %13, align 8
  %15 = call zeroext i1 @is_typename(%struct.Token* noundef %14)
  br i1 %15, label %32, label %16

16:                                               ; preds = %11
  %17 = load %struct.Token**, %struct.Token*** %5, align 8
  %18 = load %struct.Token*, %struct.Token** %6, align 8
  %19 = load %struct.Type*, %struct.Type** %7, align 8
  %20 = call zeroext i1 @check_old_style(%struct.Token** noundef %17, %struct.Token* noundef %18, %struct.Type* noundef %19)
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %8, align 1
  %22 = load i8, i8* %8, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %31

24:                                               ; preds = %16
  %25 = load %struct.Token**, %struct.Token*** %5, align 8
  %26 = load %struct.Token*, %struct.Token** %6, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  %29 = load %struct.Type*, %struct.Type** %7, align 8
  %30 = call %struct.Type* @func_params2(%struct.Token** noundef %25, %struct.Token* noundef %28, %struct.Type* noundef %29)
  store %struct.Type* %30, %struct.Type** %4, align 8
  br label %56

31:                                               ; preds = %16
  br label %32

32:                                               ; preds = %31, %11, %3
  %33 = load %struct.Token*, %struct.Token** %6, align 8
  %34 = call zeroext i1 @equal(%struct.Token* noundef %33, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %34, label %35, label %42

35:                                               ; preds = %32
  %36 = load %struct.Token**, %struct.Token*** %5, align 8
  %37 = load %struct.Token*, %struct.Token** %6, align 8
  %38 = getelementptr inbounds %struct.Token, %struct.Token* %37, i32 0, i32 1
  %39 = load %struct.Token*, %struct.Token** %38, align 8
  %40 = load %struct.Type*, %struct.Type** %7, align 8
  %41 = call %struct.Type* @func_params(%struct.Token** noundef %36, %struct.Token* noundef %39, %struct.Type* noundef %40)
  store %struct.Type* %41, %struct.Type** %4, align 8
  br label %56

42:                                               ; preds = %32
  %43 = load %struct.Token*, %struct.Token** %6, align 8
  %44 = call zeroext i1 @equal(%struct.Token* noundef %43, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119.685, i64 0, i64 0))
  br i1 %44, label %45, label %52

45:                                               ; preds = %42
  %46 = load %struct.Token**, %struct.Token*** %5, align 8
  %47 = load %struct.Token*, %struct.Token** %6, align 8
  %48 = getelementptr inbounds %struct.Token, %struct.Token* %47, i32 0, i32 1
  %49 = load %struct.Token*, %struct.Token** %48, align 8
  %50 = load %struct.Type*, %struct.Type** %7, align 8
  %51 = call %struct.Type* @array_dimensions(%struct.Token** noundef %46, %struct.Token* noundef %49, %struct.Type* noundef %50)
  store %struct.Type* %51, %struct.Type** %4, align 8
  br label %56

52:                                               ; preds = %42
  %53 = load %struct.Token*, %struct.Token** %6, align 8
  %54 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %53, %struct.Token** %54, align 8
  %55 = load %struct.Type*, %struct.Type** %7, align 8
  store %struct.Type* %55, %struct.Type** %4, align 8
  br label %56

56:                                               ; preds = %52, %45, %35, %24
  %57 = load %struct.Type*, %struct.Type** %4, align 8
  ret %struct.Type* %57
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_old_style(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Type* %2, %struct.Type** %7, align 8
  %8 = load %struct.Token*, %struct.Token** %6, align 8
  %9 = getelementptr inbounds %struct.Token, %struct.Token* %8, i32 0, i32 1
  %10 = load %struct.Token*, %struct.Token** %9, align 8
  %11 = call zeroext i1 @equal(%struct.Token* noundef %10, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  store i1 false, i1* %4, align 1
  br label %41

13:                                               ; preds = %3
  br label %14

14:                                               ; preds = %36, %13
  %15 = load %struct.Token*, %struct.Token** %6, align 8
  %16 = call zeroext i1 @equal(%struct.Token* noundef %15, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  %17 = xor i1 %16, true
  br i1 %17, label %18, label %40

18:                                               ; preds = %14
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = call zeroext i1 @equal(%struct.Token* noundef %19, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120.723, i64 0, i64 0))
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  br label %40

22:                                               ; preds = %18
  %23 = load %struct.Token*, %struct.Token** %6, align 8
  %24 = call zeroext i1 @is_typename(%struct.Token* noundef %23)
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  br label %40

26:                                               ; preds = %22
  %27 = load %struct.Token*, %struct.Token** %6, align 8
  %28 = call zeroext i1 @equal(%struct.Token* noundef %27, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = load %struct.Token*, %struct.Token** %6, align 8
  %31 = getelementptr inbounds %struct.Token, %struct.Token* %30, i32 0, i32 1
  %32 = load %struct.Token*, %struct.Token** %31, align 8
  %33 = call zeroext i1 @equal(%struct.Token* noundef %32, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %33, label %35, label %34

34:                                               ; preds = %29
  store i1 true, i1* %4, align 1
  br label %41

35:                                               ; preds = %29
  br label %36

36:                                               ; preds = %35, %26
  %37 = load %struct.Token*, %struct.Token** %6, align 8
  %38 = getelementptr inbounds %struct.Token, %struct.Token* %37, i32 0, i32 1
  %39 = load %struct.Token*, %struct.Token** %38, align 8
  store %struct.Token* %39, %struct.Token** %6, align 8
  br label %14, !llvm.loop !102

40:                                               ; preds = %25, %21, %14
  store i1 false, i1* %4, align 1
  br label %41

41:                                               ; preds = %40, %34, %12
  %42 = load i1, i1* %4, align 1
  ret i1 %42
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @func_params2(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.Type, align 8
  %8 = alloca %struct.Type*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.Token*, align 8
  %11 = alloca %struct.Node*, align 8
  %12 = alloca %struct.Type*, align 8
  %13 = alloca %struct.Type*, align 8
  %14 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Type* %2, %struct.Type** %6, align 8
  %15 = bitcast %struct.Type* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 128, i1 false)
  store %struct.Type* %7, %struct.Type** %8, align 8
  store i8 0, i8* %9, align 1
  %16 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %16, %struct.Token** %10, align 8
  br label %17

17:                                               ; preds = %23, %3
  %18 = load %struct.Token*, %struct.Token** %5, align 8
  %19 = call zeroext i1 @equal(%struct.Token* noundef %18, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %20 = xor i1 %19, true
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = load %struct.Token*, %struct.Token** %10, align 8
  store %struct.Token* %22, %struct.Token** %5, align 8
  br label %23

23:                                               ; preds = %21
  %24 = load %struct.Token*, %struct.Token** %10, align 8
  %25 = getelementptr inbounds %struct.Token, %struct.Token* %24, i32 0, i32 1
  %26 = load %struct.Token*, %struct.Token** %25, align 8
  store %struct.Token* %26, %struct.Token** %10, align 8
  br label %17, !llvm.loop !103

27:                                               ; preds = %17
  %28 = load %struct.Token*, %struct.Token** %5, align 8
  %29 = call zeroext i1 @equal(%struct.Token* noundef %28, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = getelementptr inbounds %struct.Token, %struct.Token* %31, i32 0, i32 1
  %33 = load %struct.Token*, %struct.Token** %32, align 8
  store %struct.Token* %33, %struct.Token** %5, align 8
  br label %34

34:                                               ; preds = %30, %27
  br label %35

35:                                               ; preds = %134, %34
  %36 = load %struct.Token*, %struct.Token** %5, align 8
  %37 = call zeroext i1 @equal(%struct.Token* noundef %36, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  %38 = xor i1 %37, true
  br i1 %38, label %39, label %142

39:                                               ; preds = %35
  %40 = load %struct.Type*, %struct.Type** %8, align 8
  %41 = icmp ne %struct.Type* %40, %7
  br i1 %41, label %42, label %56

42:                                               ; preds = %39
  %43 = load %struct.Token*, %struct.Token** %5, align 8
  %44 = call zeroext i1 @equal(%struct.Token* noundef %43, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = load %struct.Token*, %struct.Token** %5, align 8
  %47 = call %struct.Token* @skip(%struct.Token* noundef %46, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  store %struct.Token* %47, %struct.Token** %5, align 8
  br label %55

48:                                               ; preds = %42
  %49 = load %struct.Token*, %struct.Token** %5, align 8
  %50 = call zeroext i1 @equal(%struct.Token* noundef %49, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br i1 %50, label %51, label %54

51:                                               ; preds = %48
  %52 = load %struct.Token*, %struct.Token** %5, align 8
  %53 = call %struct.Token* @skip(%struct.Token* noundef %52, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %53, %struct.Token** %5, align 8
  br label %54

54:                                               ; preds = %51, %48
  br label %55

55:                                               ; preds = %54, %45
  br label %56

56:                                               ; preds = %55, %39
  %57 = load %struct.Token*, %struct.Token** %5, align 8
  %58 = call zeroext i1 @equal(%struct.Token* noundef %57, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120.723, i64 0, i64 0))
  br i1 %58, label %59, label %65

59:                                               ; preds = %56
  store i8 1, i8* %9, align 1
  %60 = load %struct.Token*, %struct.Token** %5, align 8
  %61 = getelementptr inbounds %struct.Token, %struct.Token* %60, i32 0, i32 1
  %62 = load %struct.Token*, %struct.Token** %61, align 8
  store %struct.Token* %62, %struct.Token** %5, align 8
  %63 = load %struct.Token*, %struct.Token** %5, align 8
  %64 = call %struct.Token* @skip(%struct.Token* noundef %63, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  br label %142

65:                                               ; preds = %56
  %66 = load %struct.Token*, %struct.Token** %5, align 8
  %67 = getelementptr inbounds %struct.Token, %struct.Token* %66, i32 0, i32 1
  %68 = load %struct.Token*, %struct.Token** %67, align 8
  %69 = call zeroext i1 @equal(%struct.Token* noundef %68, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72.663, i64 0, i64 0))
  br i1 %69, label %84, label %70

70:                                               ; preds = %65
  %71 = load %struct.Token*, %struct.Token** %5, align 8
  %72 = call zeroext i1 @equal(%struct.Token* noundef %71, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %72, label %73, label %78

73:                                               ; preds = %70
  %74 = load %struct.Token**, %struct.Token*** %4, align 8
  %75 = load %struct.Token*, %struct.Token** %5, align 8
  %76 = load %struct.Type*, %struct.Type** %6, align 8
  %77 = call zeroext i1 @is_expression(%struct.Token** noundef %74, %struct.Token* noundef %75, %struct.Type* noundef %76)
  br i1 %77, label %84, label %78

78:                                               ; preds = %73, %70
  %79 = load %struct.Token*, %struct.Token** %5, align 8
  %80 = call zeroext i1 @equal(%struct.Token* noundef %79, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123.694, i64 0, i64 0))
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = load %struct.Token*, %struct.Token** %5, align 8
  %83 = call zeroext i1 @equal(%struct.Token* noundef %82, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124.695, i64 0, i64 0))
  br i1 %83, label %84, label %89

84:                                               ; preds = %81, %78, %73, %65
  %85 = load %struct.Token*, %struct.Token** %5, align 8
  %86 = call %struct.Node* @expr(%struct.Token** noundef %5, %struct.Token* noundef %85)
  store %struct.Node* %86, %struct.Node** %11, align 8
  %87 = load %struct.Token*, %struct.Token** %5, align 8
  %88 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %87, %struct.Token** %88, align 8
  br label %142

89:                                               ; preds = %81
  %90 = load %struct.Token*, %struct.Token** %5, align 8
  %91 = call %struct.Type* @declspec(%struct.Token** noundef %5, %struct.Token* noundef %90, %struct.VarAttr* noundef null)
  store %struct.Type* %91, %struct.Type** %12, align 8
  %92 = load %struct.Type*, %struct.Type** %12, align 8
  store %struct.Type* %92, %struct.Type** %13, align 8
  %93 = load %struct.Token*, %struct.Token** %5, align 8
  %94 = load %struct.Type*, %struct.Type** %12, align 8
  %95 = call %struct.Type* @declarator(%struct.Token** noundef %5, %struct.Token* noundef %93, %struct.Type* noundef %94)
  store %struct.Type* %95, %struct.Type** %12, align 8
  %96 = load %struct.Type*, %struct.Type** %12, align 8
  %97 = getelementptr inbounds %struct.Type, %struct.Type* %96, i32 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 10
  br i1 %99, label %100, label %106

100:                                              ; preds = %89
  %101 = load %struct.Type*, %struct.Type** %12, align 8
  %102 = getelementptr inbounds %struct.Type, %struct.Type* %101, i32 0, i32 5
  store i8 1, i8* %102, align 2
  %103 = load %struct.Type*, %struct.Type** %13, align 8
  %104 = load %struct.Type*, %struct.Type** %12, align 8
  %105 = getelementptr inbounds %struct.Type, %struct.Type* %104, i32 0, i32 6
  store %struct.Type* %103, %struct.Type** %105, align 8
  br label %106

106:                                              ; preds = %100, %89
  %107 = load %struct.Type*, %struct.Type** %12, align 8
  %108 = getelementptr inbounds %struct.Type, %struct.Type* %107, i32 0, i32 9
  %109 = load %struct.Token*, %struct.Token** %108, align 8
  store %struct.Token* %109, %struct.Token** %14, align 8
  %110 = load %struct.Type*, %struct.Type** %12, align 8
  %111 = getelementptr inbounds %struct.Type, %struct.Type* %110, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 12
  br i1 %113, label %114, label %122

114:                                              ; preds = %106
  %115 = load %struct.Type*, %struct.Type** %12, align 8
  %116 = getelementptr inbounds %struct.Type, %struct.Type* %115, i32 0, i32 8
  %117 = load %struct.Type*, %struct.Type** %116, align 8
  %118 = call %struct.Type* @pointer_to(%struct.Type* noundef %117)
  store %struct.Type* %118, %struct.Type** %12, align 8
  %119 = load %struct.Token*, %struct.Token** %14, align 8
  %120 = load %struct.Type*, %struct.Type** %12, align 8
  %121 = getelementptr inbounds %struct.Type, %struct.Type* %120, i32 0, i32 9
  store %struct.Token* %119, %struct.Token** %121, align 8
  br label %134

122:                                              ; preds = %106
  %123 = load %struct.Type*, %struct.Type** %12, align 8
  %124 = getelementptr inbounds %struct.Type, %struct.Type* %123, i32 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 11
  br i1 %126, label %127, label %133

127:                                              ; preds = %122
  %128 = load %struct.Type*, %struct.Type** %12, align 8
  %129 = call %struct.Type* @pointer_to(%struct.Type* noundef %128)
  store %struct.Type* %129, %struct.Type** %12, align 8
  %130 = load %struct.Token*, %struct.Token** %14, align 8
  %131 = load %struct.Type*, %struct.Type** %12, align 8
  %132 = getelementptr inbounds %struct.Type, %struct.Type* %131, i32 0, i32 9
  store %struct.Token* %130, %struct.Token** %132, align 8
  br label %133

133:                                              ; preds = %127, %122
  br label %134

134:                                              ; preds = %133, %114
  %135 = load %struct.Type*, %struct.Type** %12, align 8
  %136 = call %struct.Type* @copy_type(%struct.Type* noundef %135)
  %137 = load %struct.Type*, %struct.Type** %8, align 8
  %138 = getelementptr inbounds %struct.Type, %struct.Type* %137, i32 0, i32 20
  store %struct.Type* %136, %struct.Type** %138, align 8
  store %struct.Type* %136, %struct.Type** %8, align 8
  %139 = load %struct.Token*, %struct.Token** %5, align 8
  %140 = getelementptr inbounds %struct.Token, %struct.Token* %139, i32 0, i32 1
  %141 = load %struct.Token*, %struct.Token** %140, align 8
  store %struct.Token* %141, %struct.Token** %5, align 8
  br label %35, !llvm.loop !104

142:                                              ; preds = %84, %59, %35
  %143 = load %struct.Type*, %struct.Type** %8, align 8
  %144 = icmp eq %struct.Type* %143, %7
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  store i8 1, i8* %9, align 1
  br label %146

146:                                              ; preds = %145, %142
  %147 = load %struct.Type*, %struct.Type** %6, align 8
  %148 = call %struct.Type* @func_type(%struct.Type* noundef %147)
  store %struct.Type* %148, %struct.Type** %6, align 8
  %149 = getelementptr inbounds %struct.Type, %struct.Type* %7, i32 0, i32 20
  %150 = load %struct.Type*, %struct.Type** %149, align 8
  %151 = load %struct.Type*, %struct.Type** %6, align 8
  %152 = getelementptr inbounds %struct.Type, %struct.Type* %151, i32 0, i32 18
  store %struct.Type* %150, %struct.Type** %152, align 8
  %153 = load i8, i8* %9, align 1
  %154 = trunc i8 %153 to i1
  %155 = load %struct.Type*, %struct.Type** %6, align 8
  %156 = getelementptr inbounds %struct.Type, %struct.Type* %155, i32 0, i32 19
  %157 = zext i1 %154 to i8
  store i8 %157, i8* %156, align 8
  %158 = load %struct.Token*, %struct.Token** %5, align 8
  %159 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %158, %struct.Token** %159, align 8
  %160 = load %struct.Type*, %struct.Type** %6, align 8
  ret %struct.Type* %160
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @func_params(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.Type, align 8
  %9 = alloca %struct.Type*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %struct.Node*, align 8
  %12 = alloca %struct.Type*, align 8
  %13 = alloca %struct.Type*, align 8
  %14 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Type* %2, %struct.Type** %7, align 8
  %15 = load %struct.Token*, %struct.Token** %6, align 8
  %16 = call zeroext i1 @equal(%struct.Token* noundef %15, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88.747, i64 0, i64 0))
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = load %struct.Token*, %struct.Token** %6, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 1
  %20 = load %struct.Token*, %struct.Token** %19, align 8
  %21 = call zeroext i1 @equal(%struct.Token* noundef %20, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  br i1 %21, label %22, label %31

22:                                               ; preds = %17
  %23 = load %struct.Token*, %struct.Token** %6, align 8
  %24 = getelementptr inbounds %struct.Token, %struct.Token* %23, i32 0, i32 1
  %25 = load %struct.Token*, %struct.Token** %24, align 8
  %26 = getelementptr inbounds %struct.Token, %struct.Token* %25, i32 0, i32 1
  %27 = load %struct.Token*, %struct.Token** %26, align 8
  %28 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %27, %struct.Token** %28, align 8
  %29 = load %struct.Type*, %struct.Type** %7, align 8
  %30 = call %struct.Type* @func_type(%struct.Type* noundef %29)
  store %struct.Type* %30, %struct.Type** %4, align 8
  br label %147

31:                                               ; preds = %17, %3
  %32 = bitcast %struct.Type* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 128, i1 false)
  store %struct.Type* %8, %struct.Type** %9, align 8
  store i8 0, i8* %10, align 1
  br label %33

33:                                               ; preds = %121, %31
  %34 = load %struct.Token*, %struct.Token** %6, align 8
  %35 = call zeroext i1 @equal(%struct.Token* noundef %34, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %36 = xor i1 %35, true
  br i1 %36, label %37, label %126

37:                                               ; preds = %33
  %38 = load %struct.Type*, %struct.Type** %9, align 8
  %39 = icmp ne %struct.Type* %38, %8
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load %struct.Token*, %struct.Token** %6, align 8
  %42 = call %struct.Token* @skip(%struct.Token* noundef %41, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %42, %struct.Token** %6, align 8
  br label %43

43:                                               ; preds = %40, %37
  %44 = load %struct.Token*, %struct.Token** %6, align 8
  %45 = call zeroext i1 @equal(%struct.Token* noundef %44, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120.723, i64 0, i64 0))
  br i1 %45, label %46, label %52

46:                                               ; preds = %43
  store i8 1, i8* %10, align 1
  %47 = load %struct.Token*, %struct.Token** %6, align 8
  %48 = getelementptr inbounds %struct.Token, %struct.Token* %47, i32 0, i32 1
  %49 = load %struct.Token*, %struct.Token** %48, align 8
  store %struct.Token* %49, %struct.Token** %6, align 8
  %50 = load %struct.Token*, %struct.Token** %6, align 8
  %51 = call %struct.Token* @skip(%struct.Token* noundef %50, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  br label %126

52:                                               ; preds = %43
  %53 = load %struct.Token*, %struct.Token** %6, align 8
  %54 = getelementptr inbounds %struct.Token, %struct.Token* %53, i32 0, i32 1
  %55 = load %struct.Token*, %struct.Token** %54, align 8
  %56 = call zeroext i1 @equal(%struct.Token* noundef %55, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72.663, i64 0, i64 0))
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = load %struct.Token*, %struct.Token** %6, align 8
  %59 = call zeroext i1 @equal(%struct.Token* noundef %58, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %59, label %60, label %65

60:                                               ; preds = %57
  %61 = load %struct.Token**, %struct.Token*** %5, align 8
  %62 = load %struct.Token*, %struct.Token** %6, align 8
  %63 = load %struct.Type*, %struct.Type** %7, align 8
  %64 = call zeroext i1 @is_expression(%struct.Token** noundef %61, %struct.Token* noundef %62, %struct.Type* noundef %63)
  br i1 %64, label %71, label %65

65:                                               ; preds = %60, %57
  %66 = load %struct.Token*, %struct.Token** %6, align 8
  %67 = call zeroext i1 @equal(%struct.Token* noundef %66, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.123.694, i64 0, i64 0))
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = load %struct.Token*, %struct.Token** %6, align 8
  %70 = call zeroext i1 @equal(%struct.Token* noundef %69, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124.695, i64 0, i64 0))
  br i1 %70, label %71, label %76

71:                                               ; preds = %68, %65, %60, %52
  %72 = load %struct.Token*, %struct.Token** %6, align 8
  %73 = call %struct.Node* @expr(%struct.Token** noundef %6, %struct.Token* noundef %72)
  store %struct.Node* %73, %struct.Node** %11, align 8
  %74 = load %struct.Token*, %struct.Token** %6, align 8
  %75 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %74, %struct.Token** %75, align 8
  br label %126

76:                                               ; preds = %68
  %77 = load %struct.Token*, %struct.Token** %6, align 8
  %78 = call %struct.Type* @declspec(%struct.Token** noundef %6, %struct.Token* noundef %77, %struct.VarAttr* noundef null)
  store %struct.Type* %78, %struct.Type** %12, align 8
  %79 = load %struct.Type*, %struct.Type** %12, align 8
  store %struct.Type* %79, %struct.Type** %13, align 8
  %80 = load %struct.Token*, %struct.Token** %6, align 8
  %81 = load %struct.Type*, %struct.Type** %12, align 8
  %82 = call %struct.Type* @declarator(%struct.Token** noundef %6, %struct.Token* noundef %80, %struct.Type* noundef %81)
  store %struct.Type* %82, %struct.Type** %12, align 8
  %83 = load %struct.Type*, %struct.Type** %12, align 8
  %84 = getelementptr inbounds %struct.Type, %struct.Type* %83, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 10
  br i1 %86, label %87, label %93

87:                                               ; preds = %76
  %88 = load %struct.Type*, %struct.Type** %12, align 8
  %89 = getelementptr inbounds %struct.Type, %struct.Type* %88, i32 0, i32 5
  store i8 1, i8* %89, align 2
  %90 = load %struct.Type*, %struct.Type** %13, align 8
  %91 = load %struct.Type*, %struct.Type** %12, align 8
  %92 = getelementptr inbounds %struct.Type, %struct.Type* %91, i32 0, i32 6
  store %struct.Type* %90, %struct.Type** %92, align 8
  br label %93

93:                                               ; preds = %87, %76
  %94 = load %struct.Type*, %struct.Type** %12, align 8
  %95 = getelementptr inbounds %struct.Type, %struct.Type* %94, i32 0, i32 9
  %96 = load %struct.Token*, %struct.Token** %95, align 8
  store %struct.Token* %96, %struct.Token** %14, align 8
  %97 = load %struct.Type*, %struct.Type** %12, align 8
  %98 = getelementptr inbounds %struct.Type, %struct.Type* %97, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 12
  br i1 %100, label %101, label %109

101:                                              ; preds = %93
  %102 = load %struct.Type*, %struct.Type** %12, align 8
  %103 = getelementptr inbounds %struct.Type, %struct.Type* %102, i32 0, i32 8
  %104 = load %struct.Type*, %struct.Type** %103, align 8
  %105 = call %struct.Type* @pointer_to(%struct.Type* noundef %104)
  store %struct.Type* %105, %struct.Type** %12, align 8
  %106 = load %struct.Token*, %struct.Token** %14, align 8
  %107 = load %struct.Type*, %struct.Type** %12, align 8
  %108 = getelementptr inbounds %struct.Type, %struct.Type* %107, i32 0, i32 9
  store %struct.Token* %106, %struct.Token** %108, align 8
  br label %121

109:                                              ; preds = %93
  %110 = load %struct.Type*, %struct.Type** %12, align 8
  %111 = getelementptr inbounds %struct.Type, %struct.Type* %110, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 11
  br i1 %113, label %114, label %120

114:                                              ; preds = %109
  %115 = load %struct.Type*, %struct.Type** %12, align 8
  %116 = call %struct.Type* @pointer_to(%struct.Type* noundef %115)
  store %struct.Type* %116, %struct.Type** %12, align 8
  %117 = load %struct.Token*, %struct.Token** %14, align 8
  %118 = load %struct.Type*, %struct.Type** %12, align 8
  %119 = getelementptr inbounds %struct.Type, %struct.Type* %118, i32 0, i32 9
  store %struct.Token* %117, %struct.Token** %119, align 8
  br label %120

120:                                              ; preds = %114, %109
  br label %121

121:                                              ; preds = %120, %101
  %122 = load %struct.Type*, %struct.Type** %12, align 8
  %123 = call %struct.Type* @copy_type(%struct.Type* noundef %122)
  %124 = load %struct.Type*, %struct.Type** %9, align 8
  %125 = getelementptr inbounds %struct.Type, %struct.Type* %124, i32 0, i32 20
  store %struct.Type* %123, %struct.Type** %125, align 8
  store %struct.Type* %123, %struct.Type** %9, align 8
  br label %33, !llvm.loop !105

126:                                              ; preds = %71, %46, %33
  %127 = load %struct.Type*, %struct.Type** %9, align 8
  %128 = icmp eq %struct.Type* %127, %8
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  store i8 1, i8* %10, align 1
  br label %130

130:                                              ; preds = %129, %126
  %131 = load %struct.Type*, %struct.Type** %7, align 8
  %132 = call %struct.Type* @func_type(%struct.Type* noundef %131)
  store %struct.Type* %132, %struct.Type** %7, align 8
  %133 = getelementptr inbounds %struct.Type, %struct.Type* %8, i32 0, i32 20
  %134 = load %struct.Type*, %struct.Type** %133, align 8
  %135 = load %struct.Type*, %struct.Type** %7, align 8
  %136 = getelementptr inbounds %struct.Type, %struct.Type* %135, i32 0, i32 18
  store %struct.Type* %134, %struct.Type** %136, align 8
  %137 = load i8, i8* %10, align 1
  %138 = trunc i8 %137 to i1
  %139 = load %struct.Type*, %struct.Type** %7, align 8
  %140 = getelementptr inbounds %struct.Type, %struct.Type* %139, i32 0, i32 19
  %141 = zext i1 %138 to i8
  store i8 %141, i8* %140, align 8
  %142 = load %struct.Token*, %struct.Token** %6, align 8
  %143 = getelementptr inbounds %struct.Token, %struct.Token* %142, i32 0, i32 1
  %144 = load %struct.Token*, %struct.Token** %143, align 8
  %145 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %144, %struct.Token** %145, align 8
  %146 = load %struct.Type*, %struct.Type** %7, align 8
  store %struct.Type* %146, %struct.Type** %4, align 8
  br label %147

147:                                              ; preds = %130, %22
  %148 = load %struct.Type*, %struct.Type** %4, align 8
  ret %struct.Type* %148
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @array_dimensions(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.VarScope*, align 8
  %9 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Type* %2, %struct.Type** %7, align 8
  br label %10

10:                                               ; preds = %18, %3
  %11 = load %struct.Token*, %struct.Token** %6, align 8
  %12 = call zeroext i1 @equal(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98.745, i64 0, i64 0))
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = load %struct.Token*, %struct.Token** %6, align 8
  %15 = call zeroext i1 @equal(%struct.Token* noundef %14, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107.746, i64 0, i64 0))
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi i1 [ true, %10 ], [ %15, %13 ]
  br i1 %17, label %18, label %22

18:                                               ; preds = %16
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 1
  %21 = load %struct.Token*, %struct.Token** %20, align 8
  store %struct.Token* %21, %struct.Token** %6, align 8
  br label %10, !llvm.loop !106

22:                                               ; preds = %16
  %23 = load %struct.Token*, %struct.Token** %6, align 8
  %24 = getelementptr inbounds %struct.Token, %struct.Token* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %22
  %28 = load %struct.Token*, %struct.Token** %6, align 8
  %29 = call %struct.VarScope* @find_var(%struct.Token* noundef %28)
  store %struct.VarScope* %29, %struct.VarScope** %8, align 8
  %30 = load %struct.VarScope*, %struct.VarScope** %8, align 8
  %31 = icmp eq %struct.VarScope* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  %33 = load %struct.Token*, %struct.Token** %6, align 8
  %34 = getelementptr inbounds %struct.Token, %struct.Token* %33, i32 0, i32 1
  %35 = load %struct.Token*, %struct.Token** %34, align 8
  store %struct.Token* %35, %struct.Token** %6, align 8
  br label %36

36:                                               ; preds = %32, %27
  br label %37

37:                                               ; preds = %36, %22
  %38 = load %struct.Token*, %struct.Token** %6, align 8
  %39 = call zeroext i1 @equal(%struct.Token* noundef %38, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125.686, i64 0, i64 0))
  br i1 %39, label %40, label %49

40:                                               ; preds = %37
  %41 = load %struct.Token**, %struct.Token*** %5, align 8
  %42 = load %struct.Token*, %struct.Token** %6, align 8
  %43 = getelementptr inbounds %struct.Token, %struct.Token* %42, i32 0, i32 1
  %44 = load %struct.Token*, %struct.Token** %43, align 8
  %45 = load %struct.Type*, %struct.Type** %7, align 8
  %46 = call %struct.Type* @type_suffix(%struct.Token** noundef %41, %struct.Token* noundef %44, %struct.Type* noundef %45)
  store %struct.Type* %46, %struct.Type** %7, align 8
  %47 = load %struct.Type*, %struct.Type** %7, align 8
  %48 = call %struct.Type* @array_of(%struct.Type* noundef %47, i32 noundef -1)
  store %struct.Type* %48, %struct.Type** %4, align 8
  br label %75

49:                                               ; preds = %37
  %50 = load %struct.Token*, %struct.Token** %6, align 8
  %51 = call %struct.Node* @conditional(%struct.Token** noundef %6, %struct.Token* noundef %50)
  store %struct.Node* %51, %struct.Node** %9, align 8
  %52 = load %struct.Token*, %struct.Token** %6, align 8
  %53 = call %struct.Token* @skip(%struct.Token* noundef %52, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125.686, i64 0, i64 0))
  store %struct.Token* %53, %struct.Token** %6, align 8
  %54 = load %struct.Token**, %struct.Token*** %5, align 8
  %55 = load %struct.Token*, %struct.Token** %6, align 8
  %56 = load %struct.Type*, %struct.Type** %7, align 8
  %57 = call %struct.Type* @type_suffix(%struct.Token** noundef %54, %struct.Token* noundef %55, %struct.Type* noundef %56)
  store %struct.Type* %57, %struct.Type** %7, align 8
  %58 = load %struct.Type*, %struct.Type** %7, align 8
  %59 = getelementptr inbounds %struct.Type, %struct.Type* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 13
  br i1 %61, label %65, label %62

62:                                               ; preds = %49
  %63 = load %struct.Node*, %struct.Node** %9, align 8
  %64 = call zeroext i1 @is_const_expr(%struct.Node* noundef %63)
  br i1 %64, label %69, label %65

65:                                               ; preds = %62, %49
  %66 = load %struct.Type*, %struct.Type** %7, align 8
  %67 = load %struct.Node*, %struct.Node** %9, align 8
  %68 = call %struct.Type* @vla_of(%struct.Type* noundef %66, %struct.Node* noundef %67)
  store %struct.Type* %68, %struct.Type** %4, align 8
  br label %75

69:                                               ; preds = %62
  %70 = load %struct.Type*, %struct.Type** %7, align 8
  %71 = load %struct.Node*, %struct.Node** %9, align 8
  %72 = call i64 @eval(%struct.Node* noundef %71)
  %73 = trunc i64 %72 to i32
  %74 = call %struct.Type* @array_of(%struct.Type* noundef %70, i32 noundef %73)
  store %struct.Type* %74, %struct.Type** %4, align 8
  br label %75

75:                                               ; preds = %69, %65, %40
  %76 = load %struct.Type*, %struct.Type** %4, align 8
  ret %struct.Type* %76
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_const_expr(%struct.Node* noundef %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %3, align 8
  %4 = load %struct.Node*, %struct.Node** %3, align 8
  call void @add_type(%struct.Node* noundef %4)
  %5 = load %struct.Node*, %struct.Node** %3, align 8
  %6 = getelementptr inbounds %struct.Node, %struct.Node* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 16
  switch i32 %7, label %54 [
    i32 1, label %8
    i32 2, label %8
    i32 3, label %8
    i32 4, label %8
    i32 7, label %8
    i32 8, label %8
    i32 9, label %8
    i32 10, label %8
    i32 11, label %8
    i32 12, label %8
    i32 13, label %8
    i32 14, label %8
    i32 15, label %8
    i32 24, label %8
    i32 25, label %8
    i32 17, label %20
    i32 18, label %43
    i32 5, label %48
    i32 22, label %48
    i32 23, label %48
    i32 43, label %48
    i32 42, label %53
  ]

8:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %9 = load %struct.Node*, %struct.Node** %3, align 8
  %10 = getelementptr inbounds %struct.Node, %struct.Node* %9, i32 0, i32 4
  %11 = load %struct.Node*, %struct.Node** %10, align 16
  %12 = call zeroext i1 @is_const_expr(%struct.Node* noundef %11)
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = load %struct.Node*, %struct.Node** %3, align 8
  %15 = getelementptr inbounds %struct.Node, %struct.Node* %14, i32 0, i32 5
  %16 = load %struct.Node*, %struct.Node** %15, align 8
  %17 = call zeroext i1 @is_const_expr(%struct.Node* noundef %16)
  br label %18

18:                                               ; preds = %13, %8
  %19 = phi i1 [ false, %8 ], [ %17, %13 ]
  store i1 %19, i1* %2, align 1
  br label %55

20:                                               ; preds = %1
  %21 = load %struct.Node*, %struct.Node** %3, align 8
  %22 = getelementptr inbounds %struct.Node, %struct.Node* %21, i32 0, i32 6
  %23 = load %struct.Node*, %struct.Node** %22, align 16
  %24 = call zeroext i1 @is_const_expr(%struct.Node* noundef %23)
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  store i1 false, i1* %2, align 1
  br label %55

26:                                               ; preds = %20
  %27 = load %struct.Node*, %struct.Node** %3, align 8
  %28 = getelementptr inbounds %struct.Node, %struct.Node* %27, i32 0, i32 6
  %29 = load %struct.Node*, %struct.Node** %28, align 16
  %30 = call i64 @eval(%struct.Node* noundef %29)
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = load %struct.Node*, %struct.Node** %3, align 8
  %34 = getelementptr inbounds %struct.Node, %struct.Node* %33, i32 0, i32 7
  %35 = load %struct.Node*, %struct.Node** %34, align 8
  br label %40

36:                                               ; preds = %26
  %37 = load %struct.Node*, %struct.Node** %3, align 8
  %38 = getelementptr inbounds %struct.Node, %struct.Node* %37, i32 0, i32 8
  %39 = load %struct.Node*, %struct.Node** %38, align 16
  br label %40

40:                                               ; preds = %36, %32
  %41 = phi %struct.Node* [ %35, %32 ], [ %39, %36 ]
  %42 = call zeroext i1 @is_const_expr(%struct.Node* noundef %41)
  store i1 %42, i1* %2, align 1
  br label %55

43:                                               ; preds = %1
  %44 = load %struct.Node*, %struct.Node** %3, align 8
  %45 = getelementptr inbounds %struct.Node, %struct.Node* %44, i32 0, i32 5
  %46 = load %struct.Node*, %struct.Node** %45, align 8
  %47 = call zeroext i1 @is_const_expr(%struct.Node* noundef %46)
  store i1 %47, i1* %2, align 1
  br label %55

48:                                               ; preds = %1, %1, %1, %1
  %49 = load %struct.Node*, %struct.Node** %3, align 8
  %50 = getelementptr inbounds %struct.Node, %struct.Node* %49, i32 0, i32 4
  %51 = load %struct.Node*, %struct.Node** %50, align 16
  %52 = call zeroext i1 @is_const_expr(%struct.Node* noundef %51)
  store i1 %52, i1* %2, align 1
  br label %55

53:                                               ; preds = %1
  store i1 true, i1* %2, align 1
  br label %55

54:                                               ; preds = %1
  store i1 false, i1* %2, align 1
  br label %55

55:                                               ; preds = %54, %53, %48, %43, %40, %25, %18
  %56 = load i1, i1* %2, align 1
  ret i1 %56
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_expression(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Type* %2, %struct.Type** %7, align 8
  br label %8

8:                                                ; preds = %20, %3
  %9 = load %struct.Token*, %struct.Token** %6, align 8
  %10 = call zeroext i1 @equal(%struct.Token* noundef %9, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  %11 = xor i1 %10, true
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = load %struct.Token*, %struct.Token** %6, align 8
  %14 = call zeroext i1 @equal(%struct.Token* noundef %13, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71.662, i64 0, i64 0))
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  store i1 true, i1* %4, align 1
  br label %25

16:                                               ; preds = %12
  %17 = load %struct.Token*, %struct.Token** %6, align 8
  %18 = call zeroext i1 @equal(%struct.Token* noundef %17, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.70.661, i64 0, i64 0))
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  store i1 true, i1* %4, align 1
  br label %25

20:                                               ; preds = %16
  %21 = load %struct.Token*, %struct.Token** %6, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 1
  %23 = load %struct.Token*, %struct.Token** %22, align 8
  store %struct.Token* %23, %struct.Token** %6, align 8
  br label %8, !llvm.loop !107

24:                                               ; preds = %8
  store i1 false, i1* %4, align 1
  br label %25

25:                                               ; preds = %24, %19, %15
  %26 = load i1, i1* %4, align 1
  ret i1 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Obj* @new_gvar(i8* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Obj*, align 8
  store i8* %0, i8** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = load %struct.Type*, %struct.Type** %4, align 8
  %8 = call %struct.Obj* @new_var(i8* noundef %6, %struct.Type* noundef %7)
  store %struct.Obj* %8, %struct.Obj** %5, align 8
  %9 = load %struct.Obj*, %struct.Obj** @globals, align 8
  %10 = load %struct.Obj*, %struct.Obj** %5, align 8
  %11 = getelementptr inbounds %struct.Obj, %struct.Obj* %10, i32 0, i32 0
  store %struct.Obj* %9, %struct.Obj** %11, align 8
  %12 = load %struct.Obj*, %struct.Obj** %5, align 8
  %13 = getelementptr inbounds %struct.Obj, %struct.Obj* %12, i32 0, i32 12
  store i8 1, i8* %13, align 2
  %14 = load %struct.Obj*, %struct.Obj** %5, align 8
  %15 = getelementptr inbounds %struct.Obj, %struct.Obj* %14, i32 0, i32 11
  store i8 1, i8* %15, align 1
  %16 = load %struct.Obj*, %struct.Obj** %5, align 8
  store %struct.Obj* %16, %struct.Obj** @globals, align 8
  %17 = load %struct.Obj*, %struct.Obj** %5, align 8
  ret %struct.Obj* %17
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Obj* @find_func(i8* noundef %0) #0 {
  %2 = alloca %struct.Obj*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.Scope*, align 8
  %5 = alloca %struct.VarScope*, align 8
  store i8* %0, i8** %3, align 8
  %6 = load %struct.Scope*, %struct.Scope** @scope, align 8
  store %struct.Scope* %6, %struct.Scope** %4, align 8
  br label %7

7:                                                ; preds = %12, %1
  %8 = load %struct.Scope*, %struct.Scope** %4, align 8
  %9 = getelementptr inbounds %struct.Scope, %struct.Scope* %8, i32 0, i32 0
  %10 = load %struct.Scope*, %struct.Scope** %9, align 8
  %11 = icmp ne %struct.Scope* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = load %struct.Scope*, %struct.Scope** %4, align 8
  %14 = getelementptr inbounds %struct.Scope, %struct.Scope* %13, i32 0, i32 0
  %15 = load %struct.Scope*, %struct.Scope** %14, align 8
  store %struct.Scope* %15, %struct.Scope** %4, align 8
  br label %7, !llvm.loop !108

16:                                               ; preds = %7
  %17 = load %struct.Scope*, %struct.Scope** %4, align 8
  %18 = getelementptr inbounds %struct.Scope, %struct.Scope* %17, i32 0, i32 1
  %19 = load i8*, i8** %3, align 8
  %20 = call i8* @hashmap_get(%struct.HashMap* noundef %18, i8* noundef %19)
  %21 = bitcast i8* %20 to %struct.VarScope*
  store %struct.VarScope* %21, %struct.VarScope** %5, align 8
  %22 = load %struct.VarScope*, %struct.VarScope** %5, align 8
  %23 = icmp ne %struct.VarScope* %22, null
  br i1 %23, label %24, label %40

24:                                               ; preds = %16
  %25 = load %struct.VarScope*, %struct.VarScope** %5, align 8
  %26 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %25, i32 0, i32 0
  %27 = load %struct.Obj*, %struct.Obj** %26, align 8
  %28 = icmp ne %struct.Obj* %27, null
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = load %struct.VarScope*, %struct.VarScope** %5, align 8
  %31 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %30, i32 0, i32 0
  %32 = load %struct.Obj*, %struct.Obj** %31, align 8
  %33 = getelementptr inbounds %struct.Obj, %struct.Obj* %32, i32 0, i32 10
  %34 = load i8, i8* %33, align 4
  %35 = trunc i8 %34 to i1
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = load %struct.VarScope*, %struct.VarScope** %5, align 8
  %38 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %37, i32 0, i32 0
  %39 = load %struct.Obj*, %struct.Obj** %38, align 8
  store %struct.Obj* %39, %struct.Obj** %2, align 8
  br label %41

40:                                               ; preds = %29, %24, %16
  store %struct.Obj* null, %struct.Obj** %2, align 8
  br label %41

41:                                               ; preds = %40, %36
  %42 = load %struct.Obj*, %struct.Obj** %2, align 8
  ret %struct.Obj* %42
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @create_param_lvars(%struct.Type* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.Type*, align 8
  %4 = alloca i8*, align 8
  store %struct.Type* %0, %struct.Type** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.Type*, %struct.Type** %3, align 8
  %6 = icmp ne %struct.Type* %5, null
  br i1 %6, label %7, label %27

7:                                                ; preds = %2
  %8 = load %struct.Type*, %struct.Type** %3, align 8
  %9 = getelementptr inbounds %struct.Type, %struct.Type* %8, i32 0, i32 20
  %10 = load %struct.Type*, %struct.Type** %9, align 8
  %11 = load i8*, i8** %4, align 8
  call void @create_param_lvars(%struct.Type* noundef %10, i8* noundef %11)
  %12 = load %struct.Type*, %struct.Type** %3, align 8
  %13 = getelementptr inbounds %struct.Type, %struct.Type* %12, i32 0, i32 9
  %14 = load %struct.Token*, %struct.Token** %13, align 8
  %15 = icmp ne %struct.Token* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %7
  br label %27

17:                                               ; preds = %7
  %18 = load %struct.Type*, %struct.Type** %3, align 8
  %19 = getelementptr inbounds %struct.Type, %struct.Type* %18, i32 0, i32 9
  %20 = load %struct.Token*, %struct.Token** %19, align 8
  %21 = call i8* @get_ident(%struct.Token* noundef %20)
  %22 = load %struct.Type*, %struct.Type** %3, align 8
  %23 = load i8*, i8** %4, align 8
  %24 = call %struct.Obj* @new_lvar(i8* noundef %21, %struct.Type* noundef %22, i8* noundef %23)
  %25 = load i32, i32* @order, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* @order, align 4
  br label %27

27:                                               ; preds = %17, %16, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @skip_excess_element2(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %3 = load %struct.Token*, %struct.Token** %2, align 8
  %4 = call zeroext i1 @equal(%struct.Token* noundef %3, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = load %struct.Token*, %struct.Token** %2, align 8
  %7 = getelementptr inbounds %struct.Token, %struct.Token* %6, i32 0, i32 1
  %8 = load %struct.Token*, %struct.Token** %7, align 8
  %9 = call %struct.Token* @skip_excess_element2(%struct.Token* noundef %8)
  store %struct.Token* %9, %struct.Token** %2, align 8
  br label %10

10:                                               ; preds = %5, %1
  %11 = load %struct.Token*, %struct.Token** %2, align 8
  ret %struct.Token* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @resolve_goto_labels() #0 {
  %1 = alloca %struct.Node*, align 8
  %2 = alloca %struct.Node*, align 8
  %3 = load %struct.Node*, %struct.Node** @gotos, align 8
  store %struct.Node* %3, %struct.Node** %1, align 8
  br label %4

4:                                                ; preds = %44, %0
  %5 = load %struct.Node*, %struct.Node** %1, align 8
  %6 = icmp ne %struct.Node* %5, null
  br i1 %6, label %7, label %48

7:                                                ; preds = %4
  %8 = load %struct.Node*, %struct.Node** @labels, align 8
  store %struct.Node* %8, %struct.Node** %2, align 8
  br label %9

9:                                                ; preds = %28, %7
  %10 = load %struct.Node*, %struct.Node** %2, align 8
  %11 = icmp ne %struct.Node* %10, null
  br i1 %11, label %12, label %32

12:                                               ; preds = %9
  %13 = load %struct.Node*, %struct.Node** %1, align 8
  %14 = getelementptr inbounds %struct.Node, %struct.Node* %13, i32 0, i32 19
  %15 = load i8*, i8** %14, align 8
  %16 = load %struct.Node*, %struct.Node** %2, align 8
  %17 = getelementptr inbounds %struct.Node, %struct.Node* %16, i32 0, i32 19
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @strcmp(i8* noundef %15, i8* noundef %18) #13
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %12
  %22 = load %struct.Node*, %struct.Node** %2, align 8
  %23 = getelementptr inbounds %struct.Node, %struct.Node* %22, i32 0, i32 20
  %24 = load i8*, i8** %23, align 16
  %25 = load %struct.Node*, %struct.Node** %1, align 8
  %26 = getelementptr inbounds %struct.Node, %struct.Node* %25, i32 0, i32 20
  store i8* %24, i8** %26, align 16
  br label %32

27:                                               ; preds = %12
  br label %28

28:                                               ; preds = %27
  %29 = load %struct.Node*, %struct.Node** %2, align 8
  %30 = getelementptr inbounds %struct.Node, %struct.Node* %29, i32 0, i32 21
  %31 = load %struct.Node*, %struct.Node** %30, align 8
  store %struct.Node* %31, %struct.Node** %2, align 8
  br label %9, !llvm.loop !109

32:                                               ; preds = %21, %9
  %33 = load %struct.Node*, %struct.Node** %1, align 8
  %34 = getelementptr inbounds %struct.Node, %struct.Node* %33, i32 0, i32 20
  %35 = load i8*, i8** %34, align 16
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %43

37:                                               ; preds = %32
  %38 = load %struct.Node*, %struct.Node** %1, align 8
  %39 = getelementptr inbounds %struct.Node, %struct.Node* %38, i32 0, i32 3
  %40 = load %struct.Token*, %struct.Token** %39, align 8
  %41 = getelementptr inbounds %struct.Token, %struct.Token* %40, i32 0, i32 1
  %42 = load %struct.Token*, %struct.Token** %41, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %42, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.241.764, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

43:                                               ; preds = %32
  br label %44

44:                                               ; preds = %43
  %45 = load %struct.Node*, %struct.Node** %1, align 8
  %46 = getelementptr inbounds %struct.Node, %struct.Node* %45, i32 0, i32 21
  %47 = load %struct.Node*, %struct.Node** %46, align 8
  store %struct.Node* %47, %struct.Node** %1, align 8
  br label %4, !llvm.loop !110

48:                                               ; preds = %4
  store %struct.Node* null, %struct.Node** @labels, align 8
  store %struct.Node* null, %struct.Node** @gotos, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @find_typedef(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.VarScope*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %5 = load %struct.Token*, %struct.Token** %3, align 8
  %6 = getelementptr inbounds %struct.Token, %struct.Token* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 16
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %19

9:                                                ; preds = %1
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  %11 = call %struct.VarScope* @find_var(%struct.Token* noundef %10)
  store %struct.VarScope* %11, %struct.VarScope** %4, align 8
  %12 = load %struct.VarScope*, %struct.VarScope** %4, align 8
  %13 = icmp ne %struct.VarScope* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = load %struct.VarScope*, %struct.VarScope** %4, align 8
  %16 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %15, i32 0, i32 1
  %17 = load %struct.Type*, %struct.Type** %16, align 8
  store %struct.Type* %17, %struct.Type** %2, align 8
  br label %20

18:                                               ; preds = %9
  br label %19

19:                                               ; preds = %18, %1
  store %struct.Type* null, %struct.Type** %2, align 8
  br label %20

20:                                               ; preds = %19, %14
  %21 = load %struct.Type*, %struct.Type** %2, align 8
  ret %struct.Type* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @struct_decl(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Type*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.Member*, align 8
  %9 = alloca i32, align 4
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %10 = load %struct.Token**, %struct.Token*** %4, align 8
  %11 = load %struct.Token*, %struct.Token** %5, align 8
  %12 = call %struct.Type* @struct_union_decl(%struct.Token** noundef %10, %struct.Token* noundef %11)
  store %struct.Type* %12, %struct.Type** %6, align 8
  %13 = load %struct.Type*, %struct.Type** %6, align 8
  %14 = getelementptr inbounds %struct.Type, %struct.Type* %13, i32 0, i32 0
  store i32 14, i32* %14, align 8
  %15 = load %struct.Type*, %struct.Type** %6, align 8
  %16 = getelementptr inbounds %struct.Type, %struct.Type* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = load %struct.Type*, %struct.Type** %6, align 8
  store %struct.Type* %20, %struct.Type** %3, align 8
  br label %156

21:                                               ; preds = %2
  store i32 0, i32* %7, align 4
  %22 = load %struct.Type*, %struct.Type** %6, align 8
  %23 = getelementptr inbounds %struct.Type, %struct.Type* %22, i32 0, i32 14
  %24 = load %struct.Member*, %struct.Member** %23, align 8
  store %struct.Member* %24, %struct.Member** %8, align 8
  br label %25

25:                                               ; preds = %141, %21
  %26 = load %struct.Member*, %struct.Member** %8, align 8
  %27 = icmp ne %struct.Member* %26, null
  br i1 %27, label %28, label %145

28:                                               ; preds = %25
  %29 = load %struct.Member*, %struct.Member** %8, align 8
  %30 = getelementptr inbounds %struct.Member, %struct.Member* %29, i32 0, i32 7
  %31 = load i8, i8* %30, align 4
  %32 = trunc i8 %31 to i1
  br i1 %32, label %33, label %47

33:                                               ; preds = %28
  %34 = load %struct.Member*, %struct.Member** %8, align 8
  %35 = getelementptr inbounds %struct.Member, %struct.Member* %34, i32 0, i32 9
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %33
  %39 = load i32, i32* %7, align 4
  %40 = load %struct.Member*, %struct.Member** %8, align 8
  %41 = getelementptr inbounds %struct.Member, %struct.Member* %40, i32 0, i32 1
  %42 = load %struct.Type*, %struct.Type** %41, align 8
  %43 = getelementptr inbounds %struct.Type, %struct.Type* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, 8
  %46 = call i32 @align_to(i32 noundef %39, i32 noundef %45)
  store i32 %46, i32* %7, align 4
  br label %121

47:                                               ; preds = %33, %28
  %48 = load %struct.Member*, %struct.Member** %8, align 8
  %49 = getelementptr inbounds %struct.Member, %struct.Member* %48, i32 0, i32 7
  %50 = load i8, i8* %49, align 4
  %51 = trunc i8 %50 to i1
  br i1 %51, label %52, label %95

52:                                               ; preds = %47
  %53 = load %struct.Member*, %struct.Member** %8, align 8
  %54 = getelementptr inbounds %struct.Member, %struct.Member* %53, i32 0, i32 1
  %55 = load %struct.Type*, %struct.Type** %54, align 8
  %56 = getelementptr inbounds %struct.Type, %struct.Type* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %9, align 4
  %58 = load i32, i32* %7, align 4
  %59 = load i32, i32* %9, align 4
  %60 = mul nsw i32 %59, 8
  %61 = sdiv i32 %58, %60
  %62 = load i32, i32* %7, align 4
  %63 = load %struct.Member*, %struct.Member** %8, align 8
  %64 = getelementptr inbounds %struct.Member, %struct.Member* %63, i32 0, i32 9
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %62, %65
  %67 = sub nsw i32 %66, 1
  %68 = load i32, i32* %9, align 4
  %69 = mul nsw i32 %68, 8
  %70 = sdiv i32 %67, %69
  %71 = icmp ne i32 %61, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %52
  %73 = load i32, i32* %7, align 4
  %74 = load i32, i32* %9, align 4
  %75 = mul nsw i32 %74, 8
  %76 = call i32 @align_to(i32 noundef %73, i32 noundef %75)
  store i32 %76, i32* %7, align 4
  br label %77

77:                                               ; preds = %72, %52
  %78 = load i32, i32* %7, align 4
  %79 = sdiv i32 %78, 8
  %80 = load i32, i32* %9, align 4
  %81 = call i32 @align_down(i32 noundef %79, i32 noundef %80)
  %82 = load %struct.Member*, %struct.Member** %8, align 8
  %83 = getelementptr inbounds %struct.Member, %struct.Member* %82, i32 0, i32 6
  store i32 %81, i32* %83, align 8
  %84 = load i32, i32* %7, align 4
  %85 = load i32, i32* %9, align 4
  %86 = mul nsw i32 %85, 8
  %87 = srem i32 %84, %86
  %88 = load %struct.Member*, %struct.Member** %8, align 8
  %89 = getelementptr inbounds %struct.Member, %struct.Member* %88, i32 0, i32 8
  store i32 %87, i32* %89, align 8
  %90 = load %struct.Member*, %struct.Member** %8, align 8
  %91 = getelementptr inbounds %struct.Member, %struct.Member* %90, i32 0, i32 9
  %92 = load i32, i32* %91, align 4
  %93 = load i32, i32* %7, align 4
  %94 = add nsw i32 %93, %92
  store i32 %94, i32* %7, align 4
  br label %120

95:                                               ; preds = %47
  %96 = load %struct.Type*, %struct.Type** %6, align 8
  %97 = getelementptr inbounds %struct.Type, %struct.Type* %96, i32 0, i32 16
  %98 = load i8, i8* %97, align 1
  %99 = trunc i8 %98 to i1
  br i1 %99, label %107, label %100

100:                                              ; preds = %95
  %101 = load i32, i32* %7, align 4
  %102 = load %struct.Member*, %struct.Member** %8, align 8
  %103 = getelementptr inbounds %struct.Member, %struct.Member* %102, i32 0, i32 5
  %104 = load i32, i32* %103, align 4
  %105 = mul nsw i32 %104, 8
  %106 = call i32 @align_to(i32 noundef %101, i32 noundef %105)
  store i32 %106, i32* %7, align 4
  br label %107

107:                                              ; preds = %100, %95
  %108 = load i32, i32* %7, align 4
  %109 = sdiv i32 %108, 8
  %110 = load %struct.Member*, %struct.Member** %8, align 8
  %111 = getelementptr inbounds %struct.Member, %struct.Member* %110, i32 0, i32 6
  store i32 %109, i32* %111, align 8
  %112 = load %struct.Member*, %struct.Member** %8, align 8
  %113 = getelementptr inbounds %struct.Member, %struct.Member* %112, i32 0, i32 1
  %114 = load %struct.Type*, %struct.Type** %113, align 8
  %115 = getelementptr inbounds %struct.Type, %struct.Type* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, 8
  %118 = load i32, i32* %7, align 4
  %119 = add nsw i32 %118, %117
  store i32 %119, i32* %7, align 4
  br label %120

120:                                              ; preds = %107, %77
  br label %121

121:                                              ; preds = %120, %38
  %122 = load %struct.Type*, %struct.Type** %6, align 8
  %123 = getelementptr inbounds %struct.Type, %struct.Type* %122, i32 0, i32 16
  %124 = load i8, i8* %123, align 1
  %125 = trunc i8 %124 to i1
  br i1 %125, label %140, label %126

126:                                              ; preds = %121
  %127 = load %struct.Type*, %struct.Type** %6, align 8
  %128 = getelementptr inbounds %struct.Type, %struct.Type* %127, i32 0, i32 2
  %129 = load i32, i32* %128, align 8
  %130 = load %struct.Member*, %struct.Member** %8, align 8
  %131 = getelementptr inbounds %struct.Member, %struct.Member* %130, i32 0, i32 5
  %132 = load i32, i32* %131, align 4
  %133 = icmp slt i32 %129, %132
  br i1 %133, label %134, label %140

134:                                              ; preds = %126
  %135 = load %struct.Member*, %struct.Member** %8, align 8
  %136 = getelementptr inbounds %struct.Member, %struct.Member* %135, i32 0, i32 5
  %137 = load i32, i32* %136, align 4
  %138 = load %struct.Type*, %struct.Type** %6, align 8
  %139 = getelementptr inbounds %struct.Type, %struct.Type* %138, i32 0, i32 2
  store i32 %137, i32* %139, align 8
  br label %140

140:                                              ; preds = %134, %126, %121
  br label %141

141:                                              ; preds = %140
  %142 = load %struct.Member*, %struct.Member** %8, align 8
  %143 = getelementptr inbounds %struct.Member, %struct.Member* %142, i32 0, i32 0
  %144 = load %struct.Member*, %struct.Member** %143, align 8
  store %struct.Member* %144, %struct.Member** %8, align 8
  br label %25, !llvm.loop !111

145:                                              ; preds = %25
  %146 = load i32, i32* %7, align 4
  %147 = load %struct.Type*, %struct.Type** %6, align 8
  %148 = getelementptr inbounds %struct.Type, %struct.Type* %147, i32 0, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = mul nsw i32 %149, 8
  %151 = call i32 @align_to(i32 noundef %146, i32 noundef %150)
  %152 = sdiv i32 %151, 8
  %153 = load %struct.Type*, %struct.Type** %6, align 8
  %154 = getelementptr inbounds %struct.Type, %struct.Type* %153, i32 0, i32 1
  store i32 %152, i32* %154, align 4
  %155 = load %struct.Type*, %struct.Type** %6, align 8
  store %struct.Type* %155, %struct.Type** %3, align 8
  br label %156

156:                                              ; preds = %145, %19
  %157 = load %struct.Type*, %struct.Type** %3, align 8
  ret %struct.Type* %157
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @union_decl(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Type*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.Member*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %8 = load %struct.Token**, %struct.Token*** %4, align 8
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = call %struct.Type* @struct_union_decl(%struct.Token** noundef %8, %struct.Token* noundef %9)
  store %struct.Type* %10, %struct.Type** %6, align 8
  %11 = load %struct.Type*, %struct.Type** %6, align 8
  %12 = getelementptr inbounds %struct.Type, %struct.Type* %11, i32 0, i32 0
  store i32 15, i32* %12, align 8
  %13 = load %struct.Type*, %struct.Type** %6, align 8
  %14 = getelementptr inbounds %struct.Type, %struct.Type* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load %struct.Type*, %struct.Type** %6, align 8
  store %struct.Type* %18, %struct.Type** %3, align 8
  br label %74

19:                                               ; preds = %2
  %20 = load %struct.Type*, %struct.Type** %6, align 8
  %21 = getelementptr inbounds %struct.Type, %struct.Type* %20, i32 0, i32 14
  %22 = load %struct.Member*, %struct.Member** %21, align 8
  store %struct.Member* %22, %struct.Member** %7, align 8
  br label %23

23:                                               ; preds = %59, %19
  %24 = load %struct.Member*, %struct.Member** %7, align 8
  %25 = icmp ne %struct.Member* %24, null
  br i1 %25, label %26, label %63

26:                                               ; preds = %23
  %27 = load %struct.Type*, %struct.Type** %6, align 8
  %28 = getelementptr inbounds %struct.Type, %struct.Type* %27, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = load %struct.Member*, %struct.Member** %7, align 8
  %31 = getelementptr inbounds %struct.Member, %struct.Member* %30, i32 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %29, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %26
  %35 = load %struct.Member*, %struct.Member** %7, align 8
  %36 = getelementptr inbounds %struct.Member, %struct.Member* %35, i32 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = load %struct.Type*, %struct.Type** %6, align 8
  %39 = getelementptr inbounds %struct.Type, %struct.Type* %38, i32 0, i32 2
  store i32 %37, i32* %39, align 8
  br label %40

40:                                               ; preds = %34, %26
  %41 = load %struct.Type*, %struct.Type** %6, align 8
  %42 = getelementptr inbounds %struct.Type, %struct.Type* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = load %struct.Member*, %struct.Member** %7, align 8
  %45 = getelementptr inbounds %struct.Member, %struct.Member* %44, i32 0, i32 1
  %46 = load %struct.Type*, %struct.Type** %45, align 8
  %47 = getelementptr inbounds %struct.Type, %struct.Type* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %43, %48
  br i1 %49, label %50, label %58

50:                                               ; preds = %40
  %51 = load %struct.Member*, %struct.Member** %7, align 8
  %52 = getelementptr inbounds %struct.Member, %struct.Member* %51, i32 0, i32 1
  %53 = load %struct.Type*, %struct.Type** %52, align 8
  %54 = getelementptr inbounds %struct.Type, %struct.Type* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.Type*, %struct.Type** %6, align 8
  %57 = getelementptr inbounds %struct.Type, %struct.Type* %56, i32 0, i32 1
  store i32 %55, i32* %57, align 4
  br label %58

58:                                               ; preds = %50, %40
  br label %59

59:                                               ; preds = %58
  %60 = load %struct.Member*, %struct.Member** %7, align 8
  %61 = getelementptr inbounds %struct.Member, %struct.Member* %60, i32 0, i32 0
  %62 = load %struct.Member*, %struct.Member** %61, align 8
  store %struct.Member* %62, %struct.Member** %7, align 8
  br label %23, !llvm.loop !112

63:                                               ; preds = %23
  %64 = load %struct.Type*, %struct.Type** %6, align 8
  %65 = getelementptr inbounds %struct.Type, %struct.Type* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = load %struct.Type*, %struct.Type** %6, align 8
  %68 = getelementptr inbounds %struct.Type, %struct.Type* %67, i32 0, i32 2
  %69 = load i32, i32* %68, align 8
  %70 = call i32 @align_to(i32 noundef %66, i32 noundef %69)
  %71 = load %struct.Type*, %struct.Type** %6, align 8
  %72 = getelementptr inbounds %struct.Type, %struct.Type* %71, i32 0, i32 1
  store i32 %70, i32* %72, align 4
  %73 = load %struct.Type*, %struct.Type** %6, align 8
  store %struct.Type* %73, %struct.Type** %3, align 8
  br label %74

74:                                               ; preds = %63, %17
  %75 = load %struct.Type*, %struct.Type** %3, align 8
  ret %struct.Type* %75
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @enum_specifier(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Type*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca %struct.Type*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %struct.VarScope*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %13 = call %struct.Type* @enum_type()
  store %struct.Type* %13, %struct.Type** %6, align 8
  store %struct.Token* null, %struct.Token** %7, align 8
  %14 = load %struct.Token*, %struct.Token** %5, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 16
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %19, %struct.Token** %7, align 8
  %20 = load %struct.Token*, %struct.Token** %5, align 8
  %21 = getelementptr inbounds %struct.Token, %struct.Token* %20, i32 0, i32 1
  %22 = load %struct.Token*, %struct.Token** %21, align 8
  store %struct.Token* %22, %struct.Token** %5, align 8
  br label %23

23:                                               ; preds = %18, %2
  %24 = load %struct.Token*, %struct.Token** %7, align 8
  %25 = icmp ne %struct.Token* %24, null
  br i1 %25, label %26, label %47

26:                                               ; preds = %23
  %27 = load %struct.Token*, %struct.Token** %5, align 8
  %28 = call zeroext i1 @equal(%struct.Token* noundef %27, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %28, label %47, label %29

29:                                               ; preds = %26
  %30 = load %struct.Token*, %struct.Token** %7, align 8
  %31 = call %struct.Type* @find_tag(%struct.Token* noundef %30)
  store %struct.Type* %31, %struct.Type** %8, align 8
  %32 = load %struct.Type*, %struct.Type** %8, align 8
  %33 = icmp ne %struct.Type* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %35, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.230.792, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

36:                                               ; preds = %29
  %37 = load %struct.Type*, %struct.Type** %8, align 8
  %38 = getelementptr inbounds %struct.Type, %struct.Type* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp ne i32 %39, 9
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %42, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.231.793, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

43:                                               ; preds = %36
  %44 = load %struct.Token*, %struct.Token** %5, align 8
  %45 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %44, %struct.Token** %45, align 8
  %46 = load %struct.Type*, %struct.Type** %8, align 8
  store %struct.Type* %46, %struct.Type** %3, align 8
  br label %94

47:                                               ; preds = %26, %23
  %48 = load %struct.Token*, %struct.Token** %5, align 8
  %49 = call %struct.Token* @skip(%struct.Token* noundef %48, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  store %struct.Token* %49, %struct.Token** %5, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %50

50:                                               ; preds = %76, %47
  %51 = load %struct.Token**, %struct.Token*** %4, align 8
  %52 = load %struct.Token*, %struct.Token** %5, align 8
  %53 = call zeroext i1 @consume_end(%struct.Token** noundef %51, %struct.Token* noundef %52)
  %54 = xor i1 %53, true
  br i1 %54, label %55, label %86

55:                                               ; preds = %50
  %56 = load i32, i32* %9, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %9, align 4
  %58 = icmp sgt i32 %56, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = load %struct.Token*, %struct.Token** %5, align 8
  %61 = call %struct.Token* @skip(%struct.Token* noundef %60, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %61, %struct.Token** %5, align 8
  br label %62

62:                                               ; preds = %59, %55
  %63 = load %struct.Token*, %struct.Token** %5, align 8
  %64 = call i8* @get_ident(%struct.Token* noundef %63)
  store i8* %64, i8** %11, align 8
  %65 = load %struct.Token*, %struct.Token** %5, align 8
  %66 = getelementptr inbounds %struct.Token, %struct.Token* %65, i32 0, i32 1
  %67 = load %struct.Token*, %struct.Token** %66, align 8
  store %struct.Token* %67, %struct.Token** %5, align 8
  %68 = load %struct.Token*, %struct.Token** %5, align 8
  %69 = call zeroext i1 @equal(%struct.Token* noundef %68, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150.590, i64 0, i64 0))
  br i1 %69, label %70, label %76

70:                                               ; preds = %62
  %71 = load %struct.Token*, %struct.Token** %5, align 8
  %72 = getelementptr inbounds %struct.Token, %struct.Token* %71, i32 0, i32 1
  %73 = load %struct.Token*, %struct.Token** %72, align 8
  %74 = call i64 @const_expr(%struct.Token** noundef %5, %struct.Token* noundef %73)
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %10, align 4
  br label %76

76:                                               ; preds = %70, %62
  %77 = load i8*, i8** %11, align 8
  %78 = call %struct.VarScope* @push_scope(i8* noundef %77)
  store %struct.VarScope* %78, %struct.VarScope** %12, align 8
  %79 = load %struct.Type*, %struct.Type** %6, align 8
  %80 = load %struct.VarScope*, %struct.VarScope** %12, align 8
  %81 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %80, i32 0, i32 2
  store %struct.Type* %79, %struct.Type** %81, align 8
  %82 = load i32, i32* %10, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %10, align 4
  %84 = load %struct.VarScope*, %struct.VarScope** %12, align 8
  %85 = getelementptr inbounds %struct.VarScope, %struct.VarScope* %84, i32 0, i32 3
  store i32 %82, i32* %85, align 8
  br label %50, !llvm.loop !113

86:                                               ; preds = %50
  %87 = load %struct.Token*, %struct.Token** %7, align 8
  %88 = icmp ne %struct.Token* %87, null
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = load %struct.Token*, %struct.Token** %7, align 8
  %91 = load %struct.Type*, %struct.Type** %6, align 8
  call void @push_tag_scope(%struct.Token* noundef %90, %struct.Type* noundef %91)
  br label %92

92:                                               ; preds = %89, %86
  %93 = load %struct.Type*, %struct.Type** %6, align 8
  store %struct.Type* %93, %struct.Type** %3, align 8
  br label %94

94:                                               ; preds = %92, %43
  %95 = load %struct.Type*, %struct.Type** %3, align 8
  ret %struct.Type* %95
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @typeof_specifier(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Type*, align 8
  %6 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  %8 = call %struct.Token* @skip(%struct.Token* noundef %7, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %8, %struct.Token** %4, align 8
  %9 = load %struct.Token*, %struct.Token** %4, align 8
  %10 = call zeroext i1 @is_typename(%struct.Token* noundef %9)
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = load %struct.Token*, %struct.Token** %4, align 8
  %13 = call %struct.Type* @typename(%struct.Token** noundef %4, %struct.Token* noundef %12)
  store %struct.Type* %13, %struct.Type** %5, align 8
  br label %21

14:                                               ; preds = %2
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = call %struct.Node* @expr(%struct.Token** noundef %4, %struct.Token* noundef %15)
  store %struct.Node* %16, %struct.Node** %6, align 8
  %17 = load %struct.Node*, %struct.Node** %6, align 8
  call void @add_type(%struct.Node* noundef %17)
  %18 = load %struct.Node*, %struct.Node** %6, align 8
  %19 = getelementptr inbounds %struct.Node, %struct.Node* %18, i32 0, i32 2
  %20 = load %struct.Type*, %struct.Type** %19, align 16
  store %struct.Type* %20, %struct.Type** %5, align 8
  br label %21

21:                                               ; preds = %14, %11
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = call %struct.Token* @skip(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %24 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %23, %struct.Token** %24, align 8
  %25 = load %struct.Type*, %struct.Type** %5, align 8
  ret %struct.Type* %25
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @find_tag(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Scope*, align 8
  %5 = alloca %struct.Type*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %6 = load %struct.Scope*, %struct.Scope** @scope, align 8
  store %struct.Scope* %6, %struct.Scope** %4, align 8
  br label %7

7:                                                ; preds = %26, %1
  %8 = load %struct.Scope*, %struct.Scope** %4, align 8
  %9 = icmp ne %struct.Scope* %8, null
  br i1 %9, label %10, label %30

10:                                               ; preds = %7
  %11 = load %struct.Scope*, %struct.Scope** %4, align 8
  %12 = getelementptr inbounds %struct.Scope, %struct.Scope* %11, i32 0, i32 2
  %13 = load %struct.Token*, %struct.Token** %3, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 4
  %15 = load i8*, i8** %14, align 16
  %16 = load %struct.Token*, %struct.Token** %3, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = call i8* @hashmap_get2(%struct.HashMap* noundef %12, i8* noundef %15, i32 noundef %18)
  %20 = bitcast i8* %19 to %struct.Type*
  store %struct.Type* %20, %struct.Type** %5, align 8
  %21 = load %struct.Type*, %struct.Type** %5, align 8
  %22 = icmp ne %struct.Type* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %10
  %24 = load %struct.Type*, %struct.Type** %5, align 8
  store %struct.Type* %24, %struct.Type** %2, align 8
  br label %31

25:                                               ; preds = %10
  br label %26

26:                                               ; preds = %25
  %27 = load %struct.Scope*, %struct.Scope** %4, align 8
  %28 = getelementptr inbounds %struct.Scope, %struct.Scope* %27, i32 0, i32 0
  %29 = load %struct.Scope*, %struct.Scope** %28, align 8
  store %struct.Scope* %29, %struct.Scope** %4, align 8
  br label %7, !llvm.loop !114

30:                                               ; preds = %7
  store %struct.Type* null, %struct.Type** %2, align 8
  br label %31

31:                                               ; preds = %30, %23
  %32 = load %struct.Type*, %struct.Type** %2, align 8
  ret %struct.Type* %32
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @consume_end(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %6 = load %struct.Token*, %struct.Token** %5, align 8
  %7 = call zeroext i1 @equal(%struct.Token* noundef %6, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = getelementptr inbounds %struct.Token, %struct.Token* %9, i32 0, i32 1
  %11 = load %struct.Token*, %struct.Token** %10, align 8
  %12 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %11, %struct.Token** %12, align 8
  store i1 true, i1* %3, align 1
  br label %29

13:                                               ; preds = %2
  %14 = load %struct.Token*, %struct.Token** %5, align 8
  %15 = call zeroext i1 @equal(%struct.Token* noundef %14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br i1 %15, label %16, label %28

16:                                               ; preds = %13
  %17 = load %struct.Token*, %struct.Token** %5, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 1
  %19 = load %struct.Token*, %struct.Token** %18, align 8
  %20 = call zeroext i1 @equal(%struct.Token* noundef %19, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = load %struct.Token*, %struct.Token** %5, align 8
  %23 = getelementptr inbounds %struct.Token, %struct.Token* %22, i32 0, i32 1
  %24 = load %struct.Token*, %struct.Token** %23, align 8
  %25 = getelementptr inbounds %struct.Token, %struct.Token* %24, i32 0, i32 1
  %26 = load %struct.Token*, %struct.Token** %25, align 8
  %27 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %26, %struct.Token** %27, align 8
  store i1 true, i1* %3, align 1
  br label %29

28:                                               ; preds = %16, %13
  store i1 false, i1* %3, align 1
  br label %29

29:                                               ; preds = %28, %21, %8
  %30 = load i1, i1* %3, align 1
  ret i1 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @push_tag_scope(%struct.Token* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Type*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  %5 = load %struct.Scope*, %struct.Scope** @scope, align 8
  %6 = getelementptr inbounds %struct.Scope, %struct.Scope* %5, i32 0, i32 2
  %7 = load %struct.Token*, %struct.Token** %3, align 8
  %8 = getelementptr inbounds %struct.Token, %struct.Token* %7, i32 0, i32 4
  %9 = load i8*, i8** %8, align 16
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = load %struct.Type*, %struct.Type** %4, align 8
  %14 = bitcast %struct.Type* %13 to i8*
  call void @hashmap_put2(%struct.HashMap* noundef %6, i8* noundef %9, i32 noundef %12, i8* noundef %14)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @struct_union_decl(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Type*, align 8
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca %struct.Type*, align 8
  %9 = alloca %struct.Type*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %10 = call %struct.Type* @struct_type()
  store %struct.Type* %10, %struct.Type** %6, align 8
  %11 = load %struct.Token*, %struct.Token** %5, align 8
  %12 = load %struct.Type*, %struct.Type** %6, align 8
  %13 = call %struct.Token* @attribute_list(%struct.Token* noundef %11, %struct.Type* noundef %12)
  store %struct.Token* %13, %struct.Token** %5, align 8
  store %struct.Token* null, %struct.Token** %7, align 8
  %14 = load %struct.Token*, %struct.Token** %5, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 16
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %19, %struct.Token** %7, align 8
  %20 = load %struct.Token*, %struct.Token** %5, align 8
  %21 = getelementptr inbounds %struct.Token, %struct.Token* %20, i32 0, i32 1
  %22 = load %struct.Token*, %struct.Token** %21, align 8
  store %struct.Token* %22, %struct.Token** %5, align 8
  br label %23

23:                                               ; preds = %18, %2
  %24 = load %struct.Token*, %struct.Token** %7, align 8
  %25 = icmp ne %struct.Token* %24, null
  br i1 %25, label %26, label %44

26:                                               ; preds = %23
  %27 = load %struct.Token*, %struct.Token** %5, align 8
  %28 = call zeroext i1 @equal(%struct.Token* noundef %27, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %28, label %44, label %29

29:                                               ; preds = %26
  %30 = load %struct.Token*, %struct.Token** %5, align 8
  %31 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %30, %struct.Token** %31, align 8
  %32 = load %struct.Token*, %struct.Token** %7, align 8
  %33 = call %struct.Type* @find_tag(%struct.Token* noundef %32)
  store %struct.Type* %33, %struct.Type** %8, align 8
  %34 = load %struct.Type*, %struct.Type** %8, align 8
  %35 = icmp ne %struct.Type* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = load %struct.Type*, %struct.Type** %8, align 8
  store %struct.Type* %37, %struct.Type** %3, align 8
  br label %79

38:                                               ; preds = %29
  %39 = load %struct.Type*, %struct.Type** %6, align 8
  %40 = getelementptr inbounds %struct.Type, %struct.Type* %39, i32 0, i32 1
  store i32 -1, i32* %40, align 4
  %41 = load %struct.Token*, %struct.Token** %7, align 8
  %42 = load %struct.Type*, %struct.Type** %6, align 8
  call void @push_tag_scope(%struct.Token* noundef %41, %struct.Type* noundef %42)
  %43 = load %struct.Type*, %struct.Type** %6, align 8
  store %struct.Type* %43, %struct.Type** %3, align 8
  br label %79

44:                                               ; preds = %26, %23
  %45 = load %struct.Token*, %struct.Token** %5, align 8
  %46 = call %struct.Token* @skip(%struct.Token* noundef %45, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  store %struct.Token* %46, %struct.Token** %5, align 8
  %47 = load %struct.Token*, %struct.Token** %5, align 8
  %48 = load %struct.Type*, %struct.Type** %6, align 8
  call void @struct_members(%struct.Token** noundef %5, %struct.Token* noundef %47, %struct.Type* noundef %48)
  %49 = load %struct.Token*, %struct.Token** %5, align 8
  %50 = load %struct.Type*, %struct.Type** %6, align 8
  %51 = call %struct.Token* @attribute_list(%struct.Token* noundef %49, %struct.Type* noundef %50)
  %52 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %51, %struct.Token** %52, align 8
  %53 = load %struct.Token*, %struct.Token** %7, align 8
  %54 = icmp ne %struct.Token* %53, null
  br i1 %54, label %55, label %77

55:                                               ; preds = %44
  %56 = load %struct.Scope*, %struct.Scope** @scope, align 8
  %57 = getelementptr inbounds %struct.Scope, %struct.Scope* %56, i32 0, i32 2
  %58 = load %struct.Token*, %struct.Token** %7, align 8
  %59 = getelementptr inbounds %struct.Token, %struct.Token* %58, i32 0, i32 4
  %60 = load i8*, i8** %59, align 16
  %61 = load %struct.Token*, %struct.Token** %7, align 8
  %62 = getelementptr inbounds %struct.Token, %struct.Token* %61, i32 0, i32 5
  %63 = load i32, i32* %62, align 8
  %64 = call i8* @hashmap_get2(%struct.HashMap* noundef %57, i8* noundef %60, i32 noundef %63)
  %65 = bitcast i8* %64 to %struct.Type*
  store %struct.Type* %65, %struct.Type** %9, align 8
  %66 = load %struct.Type*, %struct.Type** %9, align 8
  %67 = icmp ne %struct.Type* %66, null
  br i1 %67, label %68, label %74

68:                                               ; preds = %55
  %69 = load %struct.Type*, %struct.Type** %9, align 8
  %70 = load %struct.Type*, %struct.Type** %6, align 8
  %71 = bitcast %struct.Type* %69 to i8*
  %72 = bitcast %struct.Type* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 128, i1 false)
  %73 = load %struct.Type*, %struct.Type** %9, align 8
  store %struct.Type* %73, %struct.Type** %3, align 8
  br label %79

74:                                               ; preds = %55
  %75 = load %struct.Token*, %struct.Token** %7, align 8
  %76 = load %struct.Type*, %struct.Type** %6, align 8
  call void @push_tag_scope(%struct.Token* noundef %75, %struct.Type* noundef %76)
  br label %77

77:                                               ; preds = %74, %44
  %78 = load %struct.Type*, %struct.Type** %6, align 8
  store %struct.Type* %78, %struct.Type** %3, align 8
  br label %79

79:                                               ; preds = %77, %68, %38, %36
  %80 = load %struct.Type*, %struct.Type** %3, align 8
  ret %struct.Type* %80
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @attribute_list(%struct.Token* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca i8, align 1
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  br label %6

6:                                                ; preds = %45, %2
  %7 = load %struct.Token*, %struct.Token** %3, align 8
  %8 = call zeroext i1 @consume(%struct.Token** noundef %3, %struct.Token* noundef %7, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.223.797, i64 0, i64 0))
  br i1 %8, label %9, label %48

9:                                                ; preds = %6
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  %11 = call %struct.Token* @skip(%struct.Token* noundef %10, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %11, %struct.Token** %3, align 8
  %12 = load %struct.Token*, %struct.Token** %3, align 8
  %13 = call %struct.Token* @skip(%struct.Token* noundef %12, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %13, %struct.Token** %3, align 8
  store i8 1, i8* %5, align 1
  br label %14

14:                                               ; preds = %33, %27, %9
  %15 = load %struct.Token*, %struct.Token** %3, align 8
  %16 = call zeroext i1 @consume(%struct.Token** noundef %3, %struct.Token* noundef %15, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %17 = xor i1 %16, true
  br i1 %17, label %18, label %45

18:                                               ; preds = %14
  %19 = load i8, i8* %5, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = load %struct.Token*, %struct.Token** %3, align 8
  %23 = call %struct.Token* @skip(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %23, %struct.Token** %3, align 8
  br label %24

24:                                               ; preds = %21, %18
  store i8 0, i8* %5, align 1
  %25 = load %struct.Token*, %struct.Token** %3, align 8
  %26 = call zeroext i1 @consume(%struct.Token** noundef %3, %struct.Token* noundef %25, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.224.798, i64 0, i64 0))
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load %struct.Type*, %struct.Type** %4, align 8
  %29 = getelementptr inbounds %struct.Type, %struct.Type* %28, i32 0, i32 16
  store i8 1, i8* %29, align 1
  br label %14, !llvm.loop !115

30:                                               ; preds = %24
  %31 = load %struct.Token*, %struct.Token** %3, align 8
  %32 = call zeroext i1 @consume(%struct.Token** noundef %3, %struct.Token* noundef %31, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.225.799, i64 0, i64 0))
  br i1 %32, label %33, label %43

33:                                               ; preds = %30
  %34 = load %struct.Token*, %struct.Token** %3, align 8
  %35 = call %struct.Token* @skip(%struct.Token* noundef %34, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %35, %struct.Token** %3, align 8
  %36 = load %struct.Token*, %struct.Token** %3, align 8
  %37 = call i64 @const_expr(%struct.Token** noundef %3, %struct.Token* noundef %36)
  %38 = trunc i64 %37 to i32
  %39 = load %struct.Type*, %struct.Type** %4, align 8
  %40 = getelementptr inbounds %struct.Type, %struct.Type* %39, i32 0, i32 2
  store i32 %38, i32* %40, align 8
  %41 = load %struct.Token*, %struct.Token** %3, align 8
  %42 = call %struct.Token* @skip(%struct.Token* noundef %41, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %42, %struct.Token** %3, align 8
  br label %14, !llvm.loop !115

43:                                               ; preds = %30
  %44 = load %struct.Token*, %struct.Token** %3, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %44, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.226.800, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

45:                                               ; preds = %14
  %46 = load %struct.Token*, %struct.Token** %3, align 8
  %47 = call %struct.Token* @skip(%struct.Token* noundef %46, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %47, %struct.Token** %3, align 8
  br label %6, !llvm.loop !116

48:                                               ; preds = %6
  %49 = load %struct.Token*, %struct.Token** %3, align 8
  ret %struct.Token* %49
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @struct_members(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.Member, align 8
  %8 = alloca %struct.Member*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.VarAttr, align 4
  %11 = alloca %struct.Type*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %struct.Member*, align 8
  %14 = alloca %struct.Member*, align 8
  %15 = alloca %struct.Member*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Type* %2, %struct.Type** %6, align 8
  %16 = bitcast %struct.Member* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 56, i1 false)
  store %struct.Member* %7, %struct.Member** %8, align 8
  store i32 0, i32* %9, align 4
  br label %17

17:                                               ; preds = %141, %63, %3
  %18 = load %struct.Token*, %struct.Token** %5, align 8
  %19 = call zeroext i1 @equal(%struct.Token* noundef %18, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  %20 = xor i1 %19, true
  br i1 %20, label %21, label %142

21:                                               ; preds = %17
  %22 = bitcast %struct.VarAttr* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 12, i1 false)
  %23 = load %struct.Token*, %struct.Token** %5, align 8
  %24 = call %struct.Type* @declspec(%struct.Token** noundef %5, %struct.Token* noundef %23, %struct.VarAttr* noundef %10)
  store %struct.Type* %24, %struct.Type** %11, align 8
  store i8 1, i8* %12, align 1
  %25 = load %struct.Type*, %struct.Type** %11, align 8
  %26 = getelementptr inbounds %struct.Type, %struct.Type* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 14
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = load %struct.Type*, %struct.Type** %11, align 8
  %31 = getelementptr inbounds %struct.Type, %struct.Type* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 15
  br i1 %33, label %34, label %70

34:                                               ; preds = %29, %21
  %35 = load %struct.Token*, %struct.Token** %5, align 8
  %36 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %35, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  br i1 %36, label %37, label %70

37:                                               ; preds = %34
  %38 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 56) #14
  %39 = bitcast i8* %38 to %struct.Member*
  store %struct.Member* %39, %struct.Member** %13, align 8
  %40 = load %struct.Member*, %struct.Member** %13, align 8
  %41 = icmp eq %struct.Member* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.227.794, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

43:                                               ; preds = %37
  %44 = load %struct.Type*, %struct.Type** %11, align 8
  %45 = load %struct.Member*, %struct.Member** %13, align 8
  %46 = getelementptr inbounds %struct.Member, %struct.Member* %45, i32 0, i32 1
  store %struct.Type* %44, %struct.Type** %46, align 8
  %47 = load i32, i32* %9, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %9, align 4
  %49 = load %struct.Member*, %struct.Member** %13, align 8
  %50 = getelementptr inbounds %struct.Member, %struct.Member* %49, i32 0, i32 4
  store i32 %47, i32* %50, align 8
  %51 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %10, i32 0, i32 5
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %43
  %55 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %10, i32 0, i32 5
  %56 = load i32, i32* %55, align 4
  br label %63

57:                                               ; preds = %43
  %58 = load %struct.Member*, %struct.Member** %13, align 8
  %59 = getelementptr inbounds %struct.Member, %struct.Member* %58, i32 0, i32 1
  %60 = load %struct.Type*, %struct.Type** %59, align 8
  %61 = getelementptr inbounds %struct.Type, %struct.Type* %60, i32 0, i32 2
  %62 = load i32, i32* %61, align 8
  br label %63

63:                                               ; preds = %57, %54
  %64 = phi i32 [ %56, %54 ], [ %62, %57 ]
  %65 = load %struct.Member*, %struct.Member** %13, align 8
  %66 = getelementptr inbounds %struct.Member, %struct.Member* %65, i32 0, i32 5
  store i32 %64, i32* %66, align 4
  %67 = load %struct.Member*, %struct.Member** %13, align 8
  %68 = load %struct.Member*, %struct.Member** %8, align 8
  %69 = getelementptr inbounds %struct.Member, %struct.Member* %68, i32 0, i32 0
  store %struct.Member* %67, %struct.Member** %69, align 8
  store %struct.Member* %67, %struct.Member** %8, align 8
  br label %17, !llvm.loop !117

70:                                               ; preds = %34, %29
  br label %71

71:                                               ; preds = %137, %70
  %72 = load %struct.Token*, %struct.Token** %5, align 8
  %73 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %72, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121.714, i64 0, i64 0))
  %74 = xor i1 %73, true
  br i1 %74, label %75, label %141

75:                                               ; preds = %71
  %76 = load i8, i8* %12, align 1
  %77 = trunc i8 %76 to i1
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = load %struct.Token*, %struct.Token** %5, align 8
  %80 = call %struct.Token* @skip(%struct.Token* noundef %79, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %80, %struct.Token** %5, align 8
  br label %81

81:                                               ; preds = %78, %75
  store i8 0, i8* %12, align 1
  %82 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 56) #14
  %83 = bitcast i8* %82 to %struct.Member*
  store %struct.Member* %83, %struct.Member** %14, align 8
  %84 = load %struct.Member*, %struct.Member** %14, align 8
  %85 = icmp eq %struct.Member* %84, null
  br i1 %85, label %86, label %87

86:                                               ; preds = %81
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.228.795, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

87:                                               ; preds = %81
  %88 = load %struct.Token*, %struct.Token** %5, align 8
  %89 = load %struct.Type*, %struct.Type** %11, align 8
  %90 = call %struct.Type* @declarator(%struct.Token** noundef %5, %struct.Token* noundef %88, %struct.Type* noundef %89)
  %91 = load %struct.Member*, %struct.Member** %14, align 8
  %92 = getelementptr inbounds %struct.Member, %struct.Member* %91, i32 0, i32 1
  store %struct.Type* %90, %struct.Type** %92, align 8
  %93 = load %struct.Member*, %struct.Member** %14, align 8
  %94 = getelementptr inbounds %struct.Member, %struct.Member* %93, i32 0, i32 1
  %95 = load %struct.Type*, %struct.Type** %94, align 8
  %96 = getelementptr inbounds %struct.Type, %struct.Type* %95, i32 0, i32 9
  %97 = load %struct.Token*, %struct.Token** %96, align 8
  %98 = load %struct.Member*, %struct.Member** %14, align 8
  %99 = getelementptr inbounds %struct.Member, %struct.Member* %98, i32 0, i32 3
  store %struct.Token* %97, %struct.Token** %99, align 8
  %100 = load i32, i32* %9, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %9, align 4
  %102 = load %struct.Member*, %struct.Member** %14, align 8
  %103 = getelementptr inbounds %struct.Member, %struct.Member* %102, i32 0, i32 4
  store i32 %100, i32* %103, align 8
  %104 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %10, i32 0, i32 5
  %105 = load i32, i32* %104, align 4
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %87
  %108 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %10, i32 0, i32 5
  %109 = load i32, i32* %108, align 4
  br label %116

110:                                              ; preds = %87
  %111 = load %struct.Member*, %struct.Member** %14, align 8
  %112 = getelementptr inbounds %struct.Member, %struct.Member* %111, i32 0, i32 1
  %113 = load %struct.Type*, %struct.Type** %112, align 8
  %114 = getelementptr inbounds %struct.Type, %struct.Type* %113, i32 0, i32 2
  %115 = load i32, i32* %114, align 8
  br label %116

116:                                              ; preds = %110, %107
  %117 = phi i32 [ %109, %107 ], [ %115, %110 ]
  %118 = load %struct.Member*, %struct.Member** %14, align 8
  %119 = getelementptr inbounds %struct.Member, %struct.Member* %118, i32 0, i32 5
  store i32 %117, i32* %119, align 4
  %120 = load %struct.Token*, %struct.Token** %5, align 8
  %121 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %120, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65.587, i64 0, i64 0))
  br i1 %121, label %122, label %137

122:                                              ; preds = %116
  %123 = load %struct.Member*, %struct.Member** %14, align 8
  %124 = getelementptr inbounds %struct.Member, %struct.Member* %123, i32 0, i32 1
  %125 = load %struct.Type*, %struct.Type** %124, align 8
  %126 = call zeroext i1 @is_integer(%struct.Type* noundef %125)
  br i1 %126, label %129, label %127

127:                                              ; preds = %122
  %128 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %128, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.229.796, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

129:                                              ; preds = %122
  %130 = load %struct.Member*, %struct.Member** %14, align 8
  %131 = getelementptr inbounds %struct.Member, %struct.Member* %130, i32 0, i32 7
  store i8 1, i8* %131, align 4
  %132 = load %struct.Token*, %struct.Token** %5, align 8
  %133 = call i64 @const_expr(%struct.Token** noundef %5, %struct.Token* noundef %132)
  %134 = trunc i64 %133 to i32
  %135 = load %struct.Member*, %struct.Member** %14, align 8
  %136 = getelementptr inbounds %struct.Member, %struct.Member* %135, i32 0, i32 9
  store i32 %134, i32* %136, align 4
  br label %137

137:                                              ; preds = %129, %116
  %138 = load %struct.Member*, %struct.Member** %14, align 8
  %139 = load %struct.Member*, %struct.Member** %8, align 8
  %140 = getelementptr inbounds %struct.Member, %struct.Member* %139, i32 0, i32 0
  store %struct.Member* %138, %struct.Member** %140, align 8
  store %struct.Member* %138, %struct.Member** %8, align 8
  br label %71, !llvm.loop !118

141:                                              ; preds = %71
  br label %17, !llvm.loop !117

142:                                              ; preds = %17
  %143 = load i32, i32* %9, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %167

145:                                              ; preds = %142
  %146 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 56) #14
  %147 = bitcast i8* %146 to %struct.Member*
  store %struct.Member* %147, %struct.Member** %15, align 8
  %148 = load %struct.Member*, %struct.Member** %15, align 8
  %149 = icmp eq %struct.Member* %148, null
  br i1 %149, label %150, label %151

150:                                              ; preds = %145
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.227.794, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

151:                                              ; preds = %145
  %152 = load %struct.Type*, %struct.Type** @ty_char, align 8
  %153 = load %struct.Member*, %struct.Member** %15, align 8
  %154 = getelementptr inbounds %struct.Member, %struct.Member* %153, i32 0, i32 1
  store %struct.Type* %152, %struct.Type** %154, align 8
  %155 = load %struct.Member*, %struct.Member** %15, align 8
  %156 = getelementptr inbounds %struct.Member, %struct.Member* %155, i32 0, i32 4
  store i32 0, i32* %156, align 8
  %157 = load %struct.Member*, %struct.Member** %15, align 8
  %158 = getelementptr inbounds %struct.Member, %struct.Member* %157, i32 0, i32 1
  %159 = load %struct.Type*, %struct.Type** %158, align 8
  %160 = getelementptr inbounds %struct.Type, %struct.Type* %159, i32 0, i32 2
  %161 = load i32, i32* %160, align 8
  %162 = load %struct.Member*, %struct.Member** %15, align 8
  %163 = getelementptr inbounds %struct.Member, %struct.Member* %162, i32 0, i32 5
  store i32 %161, i32* %163, align 4
  %164 = load %struct.Member*, %struct.Member** %15, align 8
  %165 = load %struct.Member*, %struct.Member** %8, align 8
  %166 = getelementptr inbounds %struct.Member, %struct.Member* %165, i32 0, i32 0
  store %struct.Member* %164, %struct.Member** %166, align 8
  store %struct.Member* %164, %struct.Member** %8, align 8
  br label %167

167:                                              ; preds = %151, %142
  %168 = load %struct.Member*, %struct.Member** %8, align 8
  %169 = icmp ne %struct.Member* %168, %7
  br i1 %169, label %170, label %195

170:                                              ; preds = %167
  %171 = load %struct.Member*, %struct.Member** %8, align 8
  %172 = getelementptr inbounds %struct.Member, %struct.Member* %171, i32 0, i32 1
  %173 = load %struct.Type*, %struct.Type** %172, align 8
  %174 = getelementptr inbounds %struct.Type, %struct.Type* %173, i32 0, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, 12
  br i1 %176, label %177, label %195

177:                                              ; preds = %170
  %178 = load %struct.Member*, %struct.Member** %8, align 8
  %179 = getelementptr inbounds %struct.Member, %struct.Member* %178, i32 0, i32 1
  %180 = load %struct.Type*, %struct.Type** %179, align 8
  %181 = getelementptr inbounds %struct.Type, %struct.Type* %180, i32 0, i32 11
  %182 = load i32, i32* %181, align 8
  %183 = icmp slt i32 %182, 0
  br i1 %183, label %184, label %195

184:                                              ; preds = %177
  %185 = load %struct.Member*, %struct.Member** %8, align 8
  %186 = getelementptr inbounds %struct.Member, %struct.Member* %185, i32 0, i32 1
  %187 = load %struct.Type*, %struct.Type** %186, align 8
  %188 = getelementptr inbounds %struct.Type, %struct.Type* %187, i32 0, i32 8
  %189 = load %struct.Type*, %struct.Type** %188, align 8
  %190 = call %struct.Type* @array_of(%struct.Type* noundef %189, i32 noundef 0)
  %191 = load %struct.Member*, %struct.Member** %8, align 8
  %192 = getelementptr inbounds %struct.Member, %struct.Member* %191, i32 0, i32 1
  store %struct.Type* %190, %struct.Type** %192, align 8
  %193 = load %struct.Type*, %struct.Type** %6, align 8
  %194 = getelementptr inbounds %struct.Type, %struct.Type* %193, i32 0, i32 15
  store i8 1, i8* %194, align 8
  br label %195

195:                                              ; preds = %184, %177, %170, %167
  %196 = load %struct.Token*, %struct.Token** %5, align 8
  %197 = getelementptr inbounds %struct.Token, %struct.Token* %196, i32 0, i32 1
  %198 = load %struct.Token*, %struct.Token** %197, align 8
  %199 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %198, %struct.Token** %199, align 8
  %200 = getelementptr inbounds %struct.Member, %struct.Member* %7, i32 0, i32 0
  %201 = load %struct.Member*, %struct.Member** %200, align 8
  %202 = load %struct.Type*, %struct.Type** %6, align 8
  %203 = getelementptr inbounds %struct.Type, %struct.Type* %202, i32 0, i32 14
  store %struct.Member* %201, %struct.Member** %203, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @align_down(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = sub nsw i32 %5, %6
  %8 = add nsw i32 %7, 1
  %9 = load i32, i32* %4, align 4
  %10 = call i32 @align_to(i32 noundef %8, i32 noundef %9)
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Initializer* @initializer(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2, %struct.Type** noundef %3) #0 {
  %5 = alloca %struct.Initializer*, align 8
  %6 = alloca %struct.Token**, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca %struct.Type*, align 8
  %9 = alloca %struct.Type**, align 8
  %10 = alloca %struct.Initializer*, align 8
  %11 = alloca %struct.Member*, align 8
  store %struct.Token** %0, %struct.Token*** %6, align 8
  store %struct.Token* %1, %struct.Token** %7, align 8
  store %struct.Type* %2, %struct.Type** %8, align 8
  store %struct.Type** %3, %struct.Type*** %9, align 8
  %12 = load %struct.Type*, %struct.Type** %8, align 8
  %13 = call %struct.Initializer* @new_initializer(%struct.Type* noundef %12, i1 noundef zeroext true)
  store %struct.Initializer* %13, %struct.Initializer** %10, align 8
  %14 = load %struct.Token**, %struct.Token*** %6, align 8
  %15 = load %struct.Token*, %struct.Token** %7, align 8
  %16 = load %struct.Initializer*, %struct.Initializer** %10, align 8
  call void @initializer2(%struct.Token** noundef %14, %struct.Token* noundef %15, %struct.Initializer* noundef %16)
  %17 = load %struct.Type*, %struct.Type** %8, align 8
  %18 = getelementptr inbounds %struct.Type, %struct.Type* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 14
  br i1 %20, label %26, label %21

21:                                               ; preds = %4
  %22 = load %struct.Type*, %struct.Type** %8, align 8
  %23 = getelementptr inbounds %struct.Type, %struct.Type* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 15
  br i1 %25, label %26, label %72

26:                                               ; preds = %21, %4
  %27 = load %struct.Type*, %struct.Type** %8, align 8
  %28 = getelementptr inbounds %struct.Type, %struct.Type* %27, i32 0, i32 15
  %29 = load i8, i8* %28, align 8
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %72

31:                                               ; preds = %26
  %32 = load %struct.Type*, %struct.Type** %8, align 8
  %33 = call %struct.Type* @copy_struct_type(%struct.Type* noundef %32)
  store %struct.Type* %33, %struct.Type** %8, align 8
  %34 = load %struct.Type*, %struct.Type** %8, align 8
  %35 = getelementptr inbounds %struct.Type, %struct.Type* %34, i32 0, i32 14
  %36 = load %struct.Member*, %struct.Member** %35, align 8
  store %struct.Member* %36, %struct.Member** %11, align 8
  br label %37

37:                                               ; preds = %42, %31
  %38 = load %struct.Member*, %struct.Member** %11, align 8
  %39 = getelementptr inbounds %struct.Member, %struct.Member* %38, i32 0, i32 0
  %40 = load %struct.Member*, %struct.Member** %39, align 8
  %41 = icmp ne %struct.Member* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = load %struct.Member*, %struct.Member** %11, align 8
  %44 = getelementptr inbounds %struct.Member, %struct.Member* %43, i32 0, i32 0
  %45 = load %struct.Member*, %struct.Member** %44, align 8
  store %struct.Member* %45, %struct.Member** %11, align 8
  br label %37, !llvm.loop !119

46:                                               ; preds = %37
  %47 = load %struct.Initializer*, %struct.Initializer** %10, align 8
  %48 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %47, i32 0, i32 5
  %49 = load %struct.Initializer**, %struct.Initializer*** %48, align 8
  %50 = load %struct.Member*, %struct.Member** %11, align 8
  %51 = getelementptr inbounds %struct.Member, %struct.Member* %50, i32 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %49, i64 %53
  %55 = load %struct.Initializer*, %struct.Initializer** %54, align 8
  %56 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %55, i32 0, i32 1
  %57 = load %struct.Type*, %struct.Type** %56, align 8
  %58 = load %struct.Member*, %struct.Member** %11, align 8
  %59 = getelementptr inbounds %struct.Member, %struct.Member* %58, i32 0, i32 1
  store %struct.Type* %57, %struct.Type** %59, align 8
  %60 = load %struct.Member*, %struct.Member** %11, align 8
  %61 = getelementptr inbounds %struct.Member, %struct.Member* %60, i32 0, i32 1
  %62 = load %struct.Type*, %struct.Type** %61, align 8
  %63 = getelementptr inbounds %struct.Type, %struct.Type* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = load %struct.Type*, %struct.Type** %8, align 8
  %66 = getelementptr inbounds %struct.Type, %struct.Type* %65, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i32 %67, %64
  store i32 %68, i32* %66, align 4
  %69 = load %struct.Type*, %struct.Type** %8, align 8
  %70 = load %struct.Type**, %struct.Type*** %9, align 8
  store %struct.Type* %69, %struct.Type** %70, align 8
  %71 = load %struct.Initializer*, %struct.Initializer** %10, align 8
  store %struct.Initializer* %71, %struct.Initializer** %5, align 8
  br label %78

72:                                               ; preds = %26, %21
  %73 = load %struct.Initializer*, %struct.Initializer** %10, align 8
  %74 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %73, i32 0, i32 1
  %75 = load %struct.Type*, %struct.Type** %74, align 8
  %76 = load %struct.Type**, %struct.Type*** %9, align 8
  store %struct.Type* %75, %struct.Type** %76, align 8
  %77 = load %struct.Initializer*, %struct.Initializer** %10, align 8
  store %struct.Initializer* %77, %struct.Initializer** %5, align 8
  br label %78

78:                                               ; preds = %72, %46
  %79 = load %struct.Initializer*, %struct.Initializer** %5, align 8
  ret %struct.Initializer* %79
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @create_lvar_init(%struct.Initializer* noundef %0, %struct.Type* noundef %1, %struct.InitDesg* noundef %2, %struct.Token* noundef %3) #0 {
  %5 = alloca %struct.Node*, align 8
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.InitDesg*, align 8
  %9 = alloca %struct.Token*, align 8
  %10 = alloca %struct.Node*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.InitDesg, align 8
  %13 = alloca %struct.Node*, align 8
  %14 = alloca %struct.Node*, align 8
  %15 = alloca %struct.Member*, align 8
  %16 = alloca %struct.InitDesg, align 8
  %17 = alloca %struct.Node*, align 8
  %18 = alloca %struct.Member*, align 8
  %19 = alloca %struct.InitDesg, align 8
  %20 = alloca %struct.Node*, align 8
  store %struct.Initializer* %0, %struct.Initializer** %6, align 8
  store %struct.Type* %1, %struct.Type** %7, align 8
  store %struct.InitDesg* %2, %struct.InitDesg** %8, align 8
  store %struct.Token* %3, %struct.Token** %9, align 8
  %21 = load %struct.Type*, %struct.Type** %7, align 8
  %22 = getelementptr inbounds %struct.Type, %struct.Type* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 12
  br i1 %24, label %25, label %62

25:                                               ; preds = %4
  %26 = load %struct.Token*, %struct.Token** %9, align 8
  %27 = call %struct.Node* @new_node(i32 noundef 0, %struct.Token* noundef %26)
  store %struct.Node* %27, %struct.Node** %10, align 8
  store i32 0, i32* %11, align 4
  br label %28

28:                                               ; preds = %57, %25
  %29 = load i32, i32* %11, align 4
  %30 = load %struct.Type*, %struct.Type** %7, align 8
  %31 = getelementptr inbounds %struct.Type, %struct.Type* %30, i32 0, i32 11
  %32 = load i32, i32* %31, align 8
  %33 = icmp slt i32 %29, %32
  br i1 %33, label %34, label %60

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %12, i32 0, i32 0
  %36 = load %struct.InitDesg*, %struct.InitDesg** %8, align 8
  store %struct.InitDesg* %36, %struct.InitDesg** %35, align 8
  %37 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %12, i32 0, i32 1
  %38 = load i32, i32* %11, align 4
  store i32 %38, i32* %37, align 8
  %39 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %12, i32 0, i32 2
  store %struct.Member* null, %struct.Member** %39, align 8
  %40 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %12, i32 0, i32 3
  store %struct.Obj* null, %struct.Obj** %40, align 8
  %41 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %42 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %41, i32 0, i32 5
  %43 = load %struct.Initializer**, %struct.Initializer*** %42, align 8
  %44 = load i32, i32* %11, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %43, i64 %45
  %47 = load %struct.Initializer*, %struct.Initializer** %46, align 8
  %48 = load %struct.Type*, %struct.Type** %7, align 8
  %49 = getelementptr inbounds %struct.Type, %struct.Type* %48, i32 0, i32 8
  %50 = load %struct.Type*, %struct.Type** %49, align 8
  %51 = load %struct.Token*, %struct.Token** %9, align 8
  %52 = call %struct.Node* @create_lvar_init(%struct.Initializer* noundef %47, %struct.Type* noundef %50, %struct.InitDesg* noundef %12, %struct.Token* noundef %51)
  store %struct.Node* %52, %struct.Node** %13, align 8
  %53 = load %struct.Node*, %struct.Node** %10, align 8
  %54 = load %struct.Node*, %struct.Node** %13, align 8
  %55 = load %struct.Token*, %struct.Token** %9, align 8
  %56 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %53, %struct.Node* noundef %54, %struct.Token* noundef %55)
  store %struct.Node* %56, %struct.Node** %10, align 8
  br label %57

57:                                               ; preds = %34
  %58 = load i32, i32* %11, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %11, align 4
  br label %28, !llvm.loop !120

60:                                               ; preds = %28
  %61 = load %struct.Node*, %struct.Node** %10, align 8
  store %struct.Node* %61, %struct.Node** %5, align 8
  br label %170

62:                                               ; preds = %4
  %63 = load %struct.Type*, %struct.Type** %7, align 8
  %64 = getelementptr inbounds %struct.Type, %struct.Type* %63, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 14
  br i1 %66, label %67, label %112

67:                                               ; preds = %62
  %68 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %69 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %68, i32 0, i32 4
  %70 = load %struct.Node*, %struct.Node** %69, align 8
  %71 = icmp ne %struct.Node* %70, null
  br i1 %71, label %112, label %72

72:                                               ; preds = %67
  %73 = load %struct.Token*, %struct.Token** %9, align 8
  %74 = call %struct.Node* @new_node(i32 noundef 0, %struct.Token* noundef %73)
  store %struct.Node* %74, %struct.Node** %14, align 8
  %75 = load %struct.Type*, %struct.Type** %7, align 8
  %76 = getelementptr inbounds %struct.Type, %struct.Type* %75, i32 0, i32 14
  %77 = load %struct.Member*, %struct.Member** %76, align 8
  store %struct.Member* %77, %struct.Member** %15, align 8
  br label %78

78:                                               ; preds = %106, %72
  %79 = load %struct.Member*, %struct.Member** %15, align 8
  %80 = icmp ne %struct.Member* %79, null
  br i1 %80, label %81, label %110

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %16, i32 0, i32 0
  %83 = load %struct.InitDesg*, %struct.InitDesg** %8, align 8
  store %struct.InitDesg* %83, %struct.InitDesg** %82, align 8
  %84 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %16, i32 0, i32 1
  store i32 0, i32* %84, align 8
  %85 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %16, i32 0, i32 2
  %86 = load %struct.Member*, %struct.Member** %15, align 8
  store %struct.Member* %86, %struct.Member** %85, align 8
  %87 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %16, i32 0, i32 3
  store %struct.Obj* null, %struct.Obj** %87, align 8
  %88 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %89 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %88, i32 0, i32 5
  %90 = load %struct.Initializer**, %struct.Initializer*** %89, align 8
  %91 = load %struct.Member*, %struct.Member** %15, align 8
  %92 = getelementptr inbounds %struct.Member, %struct.Member* %91, i32 0, i32 4
  %93 = load i32, i32* %92, align 8
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %90, i64 %94
  %96 = load %struct.Initializer*, %struct.Initializer** %95, align 8
  %97 = load %struct.Member*, %struct.Member** %15, align 8
  %98 = getelementptr inbounds %struct.Member, %struct.Member* %97, i32 0, i32 1
  %99 = load %struct.Type*, %struct.Type** %98, align 8
  %100 = load %struct.Token*, %struct.Token** %9, align 8
  %101 = call %struct.Node* @create_lvar_init(%struct.Initializer* noundef %96, %struct.Type* noundef %99, %struct.InitDesg* noundef %16, %struct.Token* noundef %100)
  store %struct.Node* %101, %struct.Node** %17, align 8
  %102 = load %struct.Node*, %struct.Node** %14, align 8
  %103 = load %struct.Node*, %struct.Node** %17, align 8
  %104 = load %struct.Token*, %struct.Token** %9, align 8
  %105 = call %struct.Node* @new_binary(i32 noundef 18, %struct.Node* noundef %102, %struct.Node* noundef %103, %struct.Token* noundef %104)
  store %struct.Node* %105, %struct.Node** %14, align 8
  br label %106

106:                                              ; preds = %81
  %107 = load %struct.Member*, %struct.Member** %15, align 8
  %108 = getelementptr inbounds %struct.Member, %struct.Member* %107, i32 0, i32 0
  %109 = load %struct.Member*, %struct.Member** %108, align 8
  store %struct.Member* %109, %struct.Member** %15, align 8
  br label %78, !llvm.loop !121

110:                                              ; preds = %78
  %111 = load %struct.Node*, %struct.Node** %14, align 8
  store %struct.Node* %111, %struct.Node** %5, align 8
  br label %170

112:                                              ; preds = %67, %62
  %113 = load %struct.Type*, %struct.Type** %7, align 8
  %114 = getelementptr inbounds %struct.Type, %struct.Type* %113, i32 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 15
  br i1 %116, label %117, label %152

117:                                              ; preds = %112
  %118 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %119 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %118, i32 0, i32 6
  %120 = load %struct.Member*, %struct.Member** %119, align 8
  %121 = icmp ne %struct.Member* %120, null
  br i1 %121, label %122, label %126

122:                                              ; preds = %117
  %123 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %124 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %123, i32 0, i32 6
  %125 = load %struct.Member*, %struct.Member** %124, align 8
  br label %130

126:                                              ; preds = %117
  %127 = load %struct.Type*, %struct.Type** %7, align 8
  %128 = getelementptr inbounds %struct.Type, %struct.Type* %127, i32 0, i32 14
  %129 = load %struct.Member*, %struct.Member** %128, align 8
  br label %130

130:                                              ; preds = %126, %122
  %131 = phi %struct.Member* [ %125, %122 ], [ %129, %126 ]
  store %struct.Member* %131, %struct.Member** %18, align 8
  %132 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %19, i32 0, i32 0
  %133 = load %struct.InitDesg*, %struct.InitDesg** %8, align 8
  store %struct.InitDesg* %133, %struct.InitDesg** %132, align 8
  %134 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %19, i32 0, i32 1
  store i32 0, i32* %134, align 8
  %135 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %19, i32 0, i32 2
  %136 = load %struct.Member*, %struct.Member** %18, align 8
  store %struct.Member* %136, %struct.Member** %135, align 8
  %137 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %19, i32 0, i32 3
  store %struct.Obj* null, %struct.Obj** %137, align 8
  %138 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %139 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %138, i32 0, i32 5
  %140 = load %struct.Initializer**, %struct.Initializer*** %139, align 8
  %141 = load %struct.Member*, %struct.Member** %18, align 8
  %142 = getelementptr inbounds %struct.Member, %struct.Member* %141, i32 0, i32 4
  %143 = load i32, i32* %142, align 8
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %140, i64 %144
  %146 = load %struct.Initializer*, %struct.Initializer** %145, align 8
  %147 = load %struct.Member*, %struct.Member** %18, align 8
  %148 = getelementptr inbounds %struct.Member, %struct.Member* %147, i32 0, i32 1
  %149 = load %struct.Type*, %struct.Type** %148, align 8
  %150 = load %struct.Token*, %struct.Token** %9, align 8
  %151 = call %struct.Node* @create_lvar_init(%struct.Initializer* noundef %146, %struct.Type* noundef %149, %struct.InitDesg* noundef %19, %struct.Token* noundef %150)
  store %struct.Node* %151, %struct.Node** %5, align 8
  br label %170

152:                                              ; preds = %112
  %153 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %154 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %153, i32 0, i32 4
  %155 = load %struct.Node*, %struct.Node** %154, align 8
  %156 = icmp ne %struct.Node* %155, null
  br i1 %156, label %160, label %157

157:                                              ; preds = %152
  %158 = load %struct.Token*, %struct.Token** %9, align 8
  %159 = call %struct.Node* @new_node(i32 noundef 0, %struct.Token* noundef %158)
  store %struct.Node* %159, %struct.Node** %5, align 8
  br label %170

160:                                              ; preds = %152
  %161 = load %struct.InitDesg*, %struct.InitDesg** %8, align 8
  %162 = load %struct.Token*, %struct.Token** %9, align 8
  %163 = call %struct.Node* @init_desg_expr(%struct.InitDesg* noundef %161, %struct.Token* noundef %162)
  store %struct.Node* %163, %struct.Node** %20, align 8
  %164 = load %struct.Node*, %struct.Node** %20, align 8
  %165 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %166 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %165, i32 0, i32 4
  %167 = load %struct.Node*, %struct.Node** %166, align 8
  %168 = load %struct.Token*, %struct.Token** %9, align 8
  %169 = call %struct.Node* @new_binary(i32 noundef 16, %struct.Node* noundef %164, %struct.Node* noundef %167, %struct.Token* noundef %168)
  store %struct.Node* %169, %struct.Node** %5, align 8
  br label %170

170:                                              ; preds = %160, %157, %130, %110, %60
  %171 = load %struct.Node*, %struct.Node** %5, align 8
  ret %struct.Node* %171
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Node* @init_desg_expr(%struct.InitDesg* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.InitDesg*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Node*, align 8
  %7 = alloca %struct.Node*, align 8
  %8 = alloca %struct.Node*, align 8
  store %struct.InitDesg* %0, %struct.InitDesg** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %9 = load %struct.InitDesg*, %struct.InitDesg** %4, align 8
  %10 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %9, i32 0, i32 3
  %11 = load %struct.Obj*, %struct.Obj** %10, align 8
  %12 = icmp ne %struct.Obj* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %2
  %14 = load %struct.InitDesg*, %struct.InitDesg** %4, align 8
  %15 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %14, i32 0, i32 3
  %16 = load %struct.Obj*, %struct.Obj** %15, align 8
  %17 = load %struct.Token*, %struct.Token** %5, align 8
  %18 = call %struct.Node* @new_var_node(%struct.Obj* noundef %16, %struct.Token* noundef %17)
  store %struct.Node* %18, %struct.Node** %3, align 8
  br label %56

19:                                               ; preds = %2
  %20 = load %struct.InitDesg*, %struct.InitDesg** %4, align 8
  %21 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %20, i32 0, i32 2
  %22 = load %struct.Member*, %struct.Member** %21, align 8
  %23 = icmp ne %struct.Member* %22, null
  br i1 %23, label %24, label %38

24:                                               ; preds = %19
  %25 = load %struct.InitDesg*, %struct.InitDesg** %4, align 8
  %26 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %25, i32 0, i32 0
  %27 = load %struct.InitDesg*, %struct.InitDesg** %26, align 8
  %28 = load %struct.Token*, %struct.Token** %5, align 8
  %29 = call %struct.Node* @init_desg_expr(%struct.InitDesg* noundef %27, %struct.Token* noundef %28)
  %30 = load %struct.Token*, %struct.Token** %5, align 8
  %31 = call %struct.Node* @new_unary(i32 noundef 19, %struct.Node* noundef %29, %struct.Token* noundef %30)
  store %struct.Node* %31, %struct.Node** %6, align 8
  %32 = load %struct.InitDesg*, %struct.InitDesg** %4, align 8
  %33 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %32, i32 0, i32 2
  %34 = load %struct.Member*, %struct.Member** %33, align 8
  %35 = load %struct.Node*, %struct.Node** %6, align 8
  %36 = getelementptr inbounds %struct.Node, %struct.Node* %35, i32 0, i32 14
  store %struct.Member* %34, %struct.Member** %36, align 16
  %37 = load %struct.Node*, %struct.Node** %6, align 8
  store %struct.Node* %37, %struct.Node** %3, align 8
  br label %56

38:                                               ; preds = %19
  %39 = load %struct.InitDesg*, %struct.InitDesg** %4, align 8
  %40 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %39, i32 0, i32 0
  %41 = load %struct.InitDesg*, %struct.InitDesg** %40, align 8
  %42 = load %struct.Token*, %struct.Token** %5, align 8
  %43 = call %struct.Node* @init_desg_expr(%struct.InitDesg* noundef %41, %struct.Token* noundef %42)
  store %struct.Node* %43, %struct.Node** %7, align 8
  %44 = load %struct.InitDesg*, %struct.InitDesg** %4, align 8
  %45 = getelementptr inbounds %struct.InitDesg, %struct.InitDesg* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = load %struct.Token*, %struct.Token** %5, align 8
  %49 = call %struct.Node* @new_num(i64 noundef %47, %struct.Token* noundef %48)
  store %struct.Node* %49, %struct.Node** %8, align 8
  %50 = load %struct.Node*, %struct.Node** %7, align 8
  %51 = load %struct.Node*, %struct.Node** %8, align 8
  %52 = load %struct.Token*, %struct.Token** %5, align 8
  %53 = call %struct.Node* @new_add(%struct.Node* noundef %50, %struct.Node* noundef %51, %struct.Token* noundef %52)
  %54 = load %struct.Token*, %struct.Token** %5, align 8
  %55 = call %struct.Node* @new_unary(i32 noundef 21, %struct.Node* noundef %53, %struct.Token* noundef %54)
  store %struct.Node* %55, %struct.Node** %3, align 8
  br label %56

56:                                               ; preds = %38, %24, %13
  %57 = load %struct.Node*, %struct.Node** %3, align 8
  ret %struct.Node* %57
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Initializer* @new_initializer(%struct.Type* noundef %0, i1 noundef zeroext %1) #0 {
  %3 = alloca %struct.Initializer*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.Member*, align 8
  %10 = alloca %struct.Member*, align 8
  %11 = alloca %struct.Initializer*, align 8
  store %struct.Type* %0, %struct.Type** %4, align 8
  %12 = zext i1 %1 to i8
  store i8 %12, i8* %5, align 1
  %13 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 56) #14
  %14 = bitcast i8* %13 to %struct.Initializer*
  store %struct.Initializer* %14, %struct.Initializer** %6, align 8
  %15 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %16 = icmp eq %struct.Initializer* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.139.811, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

18:                                               ; preds = %2
  %19 = load %struct.Type*, %struct.Type** %4, align 8
  %20 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %21 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %20, i32 0, i32 1
  store %struct.Type* %19, %struct.Type** %21, align 8
  %22 = load %struct.Type*, %struct.Type** %4, align 8
  %23 = getelementptr inbounds %struct.Type, %struct.Type* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 12
  br i1 %25, label %26, label %75

26:                                               ; preds = %18
  %27 = load i8, i8* %5, align 1
  %28 = trunc i8 %27 to i1
  br i1 %28, label %29, label %38

29:                                               ; preds = %26
  %30 = load %struct.Type*, %struct.Type** %4, align 8
  %31 = getelementptr inbounds %struct.Type, %struct.Type* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %36 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %35, i32 0, i32 3
  store i8 1, i8* %36, align 8
  %37 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  store %struct.Initializer* %37, %struct.Initializer** %3, align 8
  br label %176

38:                                               ; preds = %29, %26
  %39 = load %struct.Type*, %struct.Type** %4, align 8
  %40 = getelementptr inbounds %struct.Type, %struct.Type* %39, i32 0, i32 11
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = call noalias i8* @calloc(i64 noundef %42, i64 noundef 8) #14
  %44 = bitcast i8* %43 to %struct.Initializer**
  %45 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %46 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %45, i32 0, i32 5
  store %struct.Initializer** %44, %struct.Initializer*** %46, align 8
  %47 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %48 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %47, i32 0, i32 5
  %49 = load %struct.Initializer**, %struct.Initializer*** %48, align 8
  %50 = icmp eq %struct.Initializer** %49, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %38
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.140.812, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

52:                                               ; preds = %38
  store i32 0, i32* %7, align 4
  br label %53

53:                                               ; preds = %70, %52
  %54 = load i32, i32* %7, align 4
  %55 = load %struct.Type*, %struct.Type** %4, align 8
  %56 = getelementptr inbounds %struct.Type, %struct.Type* %55, i32 0, i32 11
  %57 = load i32, i32* %56, align 8
  %58 = icmp slt i32 %54, %57
  br i1 %58, label %59, label %73

59:                                               ; preds = %53
  %60 = load %struct.Type*, %struct.Type** %4, align 8
  %61 = getelementptr inbounds %struct.Type, %struct.Type* %60, i32 0, i32 8
  %62 = load %struct.Type*, %struct.Type** %61, align 8
  %63 = call %struct.Initializer* @new_initializer(%struct.Type* noundef %62, i1 noundef zeroext false)
  %64 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %65 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %64, i32 0, i32 5
  %66 = load %struct.Initializer**, %struct.Initializer*** %65, align 8
  %67 = load i32, i32* %7, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %66, i64 %68
  store %struct.Initializer* %63, %struct.Initializer** %69, align 8
  br label %70

70:                                               ; preds = %59
  %71 = load i32, i32* %7, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %7, align 4
  br label %53, !llvm.loop !122

73:                                               ; preds = %53
  %74 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  store %struct.Initializer* %74, %struct.Initializer** %3, align 8
  br label %176

75:                                               ; preds = %18
  %76 = load %struct.Type*, %struct.Type** %4, align 8
  %77 = getelementptr inbounds %struct.Type, %struct.Type* %76, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 14
  br i1 %79, label %85, label %80

80:                                               ; preds = %75
  %81 = load %struct.Type*, %struct.Type** %4, align 8
  %82 = getelementptr inbounds %struct.Type, %struct.Type* %81, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 15
  br i1 %84, label %85, label %174

85:                                               ; preds = %80, %75
  store i32 0, i32* %8, align 4
  %86 = load %struct.Type*, %struct.Type** %4, align 8
  %87 = getelementptr inbounds %struct.Type, %struct.Type* %86, i32 0, i32 14
  %88 = load %struct.Member*, %struct.Member** %87, align 8
  store %struct.Member* %88, %struct.Member** %9, align 8
  br label %89

89:                                               ; preds = %95, %85
  %90 = load %struct.Member*, %struct.Member** %9, align 8
  %91 = icmp ne %struct.Member* %90, null
  br i1 %91, label %92, label %99

92:                                               ; preds = %89
  %93 = load i32, i32* %8, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %8, align 4
  br label %95

95:                                               ; preds = %92
  %96 = load %struct.Member*, %struct.Member** %9, align 8
  %97 = getelementptr inbounds %struct.Member, %struct.Member* %96, i32 0, i32 0
  %98 = load %struct.Member*, %struct.Member** %97, align 8
  store %struct.Member* %98, %struct.Member** %9, align 8
  br label %89, !llvm.loop !123

99:                                               ; preds = %89
  %100 = load i32, i32* %8, align 4
  %101 = sext i32 %100 to i64
  %102 = call noalias i8* @calloc(i64 noundef %101, i64 noundef 8) #14
  %103 = bitcast i8* %102 to %struct.Initializer**
  %104 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %105 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %104, i32 0, i32 5
  store %struct.Initializer** %103, %struct.Initializer*** %105, align 8
  %106 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %107 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %106, i32 0, i32 5
  %108 = load %struct.Initializer**, %struct.Initializer*** %107, align 8
  %109 = icmp eq %struct.Initializer** %108, null
  br i1 %109, label %110, label %111

110:                                              ; preds = %99
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.141.813, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

111:                                              ; preds = %99
  %112 = load %struct.Type*, %struct.Type** %4, align 8
  %113 = getelementptr inbounds %struct.Type, %struct.Type* %112, i32 0, i32 14
  %114 = load %struct.Member*, %struct.Member** %113, align 8
  store %struct.Member* %114, %struct.Member** %10, align 8
  br label %115

115:                                              ; preds = %168, %111
  %116 = load %struct.Member*, %struct.Member** %10, align 8
  %117 = icmp ne %struct.Member* %116, null
  br i1 %117, label %118, label %172

118:                                              ; preds = %115
  %119 = load i8, i8* %5, align 1
  %120 = trunc i8 %119 to i1
  br i1 %120, label %121, label %154

121:                                              ; preds = %118
  %122 = load %struct.Type*, %struct.Type** %4, align 8
  %123 = getelementptr inbounds %struct.Type, %struct.Type* %122, i32 0, i32 15
  %124 = load i8, i8* %123, align 8
  %125 = trunc i8 %124 to i1
  br i1 %125, label %126, label %154

126:                                              ; preds = %121
  %127 = load %struct.Member*, %struct.Member** %10, align 8
  %128 = getelementptr inbounds %struct.Member, %struct.Member* %127, i32 0, i32 0
  %129 = load %struct.Member*, %struct.Member** %128, align 8
  %130 = icmp ne %struct.Member* %129, null
  br i1 %130, label %154, label %131

131:                                              ; preds = %126
  %132 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 56) #14
  %133 = bitcast i8* %132 to %struct.Initializer*
  store %struct.Initializer* %133, %struct.Initializer** %11, align 8
  %134 = load %struct.Initializer*, %struct.Initializer** %11, align 8
  %135 = icmp eq %struct.Initializer* %134, null
  br i1 %135, label %136, label %137

136:                                              ; preds = %131
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.142.814, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

137:                                              ; preds = %131
  %138 = load %struct.Member*, %struct.Member** %10, align 8
  %139 = getelementptr inbounds %struct.Member, %struct.Member* %138, i32 0, i32 1
  %140 = load %struct.Type*, %struct.Type** %139, align 8
  %141 = load %struct.Initializer*, %struct.Initializer** %11, align 8
  %142 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %141, i32 0, i32 1
  store %struct.Type* %140, %struct.Type** %142, align 8
  %143 = load %struct.Initializer*, %struct.Initializer** %11, align 8
  %144 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %143, i32 0, i32 3
  store i8 1, i8* %144, align 8
  %145 = load %struct.Initializer*, %struct.Initializer** %11, align 8
  %146 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %147 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %146, i32 0, i32 5
  %148 = load %struct.Initializer**, %struct.Initializer*** %147, align 8
  %149 = load %struct.Member*, %struct.Member** %10, align 8
  %150 = getelementptr inbounds %struct.Member, %struct.Member* %149, i32 0, i32 4
  %151 = load i32, i32* %150, align 8
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %148, i64 %152
  store %struct.Initializer* %145, %struct.Initializer** %153, align 8
  br label %167

154:                                              ; preds = %126, %121, %118
  %155 = load %struct.Member*, %struct.Member** %10, align 8
  %156 = getelementptr inbounds %struct.Member, %struct.Member* %155, i32 0, i32 1
  %157 = load %struct.Type*, %struct.Type** %156, align 8
  %158 = call %struct.Initializer* @new_initializer(%struct.Type* noundef %157, i1 noundef zeroext false)
  %159 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %160 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %159, i32 0, i32 5
  %161 = load %struct.Initializer**, %struct.Initializer*** %160, align 8
  %162 = load %struct.Member*, %struct.Member** %10, align 8
  %163 = getelementptr inbounds %struct.Member, %struct.Member* %162, i32 0, i32 4
  %164 = load i32, i32* %163, align 8
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %161, i64 %165
  store %struct.Initializer* %158, %struct.Initializer** %166, align 8
  br label %167

167:                                              ; preds = %154, %137
  br label %168

168:                                              ; preds = %167
  %169 = load %struct.Member*, %struct.Member** %10, align 8
  %170 = getelementptr inbounds %struct.Member, %struct.Member* %169, i32 0, i32 0
  %171 = load %struct.Member*, %struct.Member** %170, align 8
  store %struct.Member* %171, %struct.Member** %10, align 8
  br label %115, !llvm.loop !124

172:                                              ; preds = %115
  %173 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  store %struct.Initializer* %173, %struct.Initializer** %3, align 8
  br label %176

174:                                              ; preds = %80
  %175 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  store %struct.Initializer* %175, %struct.Initializer** %3, align 8
  br label %176

176:                                              ; preds = %174, %172, %73, %34
  %177 = load %struct.Initializer*, %struct.Initializer** %3, align 8
  ret %struct.Initializer* %177
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initializer2(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Initializer* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Initializer* %2, %struct.Initializer** %6, align 8
  %8 = load %struct.Token*, %struct.Token** %5, align 8
  %9 = call zeroext i1 @equal(%struct.Token* noundef %8, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  br label %174

11:                                               ; preds = %3
  %12 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %13 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %12, i32 0, i32 1
  %14 = load %struct.Type*, %struct.Type** %13, align 8
  %15 = getelementptr inbounds %struct.Type, %struct.Type* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 12
  br i1 %17, label %18, label %27

18:                                               ; preds = %11
  %19 = load %struct.Token*, %struct.Token** %5, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 16
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %23, label %27

23:                                               ; preds = %18
  %24 = load %struct.Token**, %struct.Token*** %4, align 8
  %25 = load %struct.Token*, %struct.Token** %5, align 8
  %26 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @string_initializer(%struct.Token** noundef %24, %struct.Token* noundef %25, %struct.Initializer* noundef %26)
  br label %174

27:                                               ; preds = %18, %11
  %28 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %29 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %28, i32 0, i32 1
  %30 = load %struct.Type*, %struct.Type** %29, align 8
  %31 = getelementptr inbounds %struct.Type, %struct.Type* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 12
  br i1 %33, label %34, label %66

34:                                               ; preds = %27
  %35 = load %struct.Token*, %struct.Token** %5, align 8
  %36 = call zeroext i1 @equal(%struct.Token* noundef %35, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %36, label %37, label %66

37:                                               ; preds = %34
  %38 = load %struct.Token*, %struct.Token** %5, align 8
  %39 = call zeroext i1 @equal(%struct.Token* noundef %38, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %39, label %40, label %65

40:                                               ; preds = %37
  %41 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %42 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %41, i32 0, i32 1
  %43 = load %struct.Type*, %struct.Type** %42, align 8
  %44 = getelementptr inbounds %struct.Type, %struct.Type* %43, i32 0, i32 8
  %45 = load %struct.Type*, %struct.Type** %44, align 8
  %46 = getelementptr inbounds %struct.Type, %struct.Type* %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 2
  br i1 %48, label %49, label %64

49:                                               ; preds = %40
  %50 = load %struct.Token*, %struct.Token** %5, align 8
  %51 = getelementptr inbounds %struct.Token, %struct.Token* %50, i32 0, i32 1
  %52 = load %struct.Token*, %struct.Token** %51, align 8
  %53 = getelementptr inbounds %struct.Token, %struct.Token* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 16
  %55 = icmp eq i32 %54, 3
  br i1 %55, label %56, label %64

56:                                               ; preds = %49
  %57 = load %struct.Token*, %struct.Token** %5, align 8
  %58 = call %struct.Token* @skip(%struct.Token* noundef %57, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  store %struct.Token* %58, %struct.Token** %5, align 8
  %59 = load %struct.Token*, %struct.Token** %5, align 8
  %60 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @initializer2(%struct.Token** noundef %5, %struct.Token* noundef %59, %struct.Initializer* noundef %60)
  %61 = load %struct.Token*, %struct.Token** %5, align 8
  %62 = call %struct.Token* @skip(%struct.Token* noundef %61, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  %63 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %62, %struct.Token** %63, align 8
  br label %174

64:                                               ; preds = %49, %40
  br label %174

65:                                               ; preds = %37
  br label %66

66:                                               ; preds = %65, %34, %27
  %67 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %68 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %67, i32 0, i32 1
  %69 = load %struct.Type*, %struct.Type** %68, align 8
  %70 = getelementptr inbounds %struct.Type, %struct.Type* %69, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 12
  br i1 %72, label %73, label %108

73:                                               ; preds = %66
  %74 = load %struct.Token*, %struct.Token** %5, align 8
  %75 = call zeroext i1 @equal(%struct.Token* noundef %74, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %75, label %76, label %104

76:                                               ; preds = %73
  %77 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %78 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %77, i32 0, i32 1
  %79 = load %struct.Type*, %struct.Type** %78, align 8
  %80 = getelementptr inbounds %struct.Type, %struct.Type* %79, i32 0, i32 8
  %81 = load %struct.Type*, %struct.Type** %80, align 8
  %82 = getelementptr inbounds %struct.Type, %struct.Type* %81, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 2
  br i1 %84, label %85, label %100

85:                                               ; preds = %76
  %86 = load %struct.Token*, %struct.Token** %5, align 8
  %87 = getelementptr inbounds %struct.Token, %struct.Token* %86, i32 0, i32 1
  %88 = load %struct.Token*, %struct.Token** %87, align 8
  %89 = getelementptr inbounds %struct.Token, %struct.Token* %88, i32 0, i32 0
  %90 = load i32, i32* %89, align 16
  %91 = icmp eq i32 %90, 3
  br i1 %91, label %92, label %100

92:                                               ; preds = %85
  %93 = load %struct.Token*, %struct.Token** %5, align 8
  %94 = call %struct.Token* @skip(%struct.Token* noundef %93, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  store %struct.Token* %94, %struct.Token** %5, align 8
  %95 = load %struct.Token*, %struct.Token** %5, align 8
  %96 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @initializer2(%struct.Token** noundef %5, %struct.Token* noundef %95, %struct.Initializer* noundef %96)
  %97 = load %struct.Token*, %struct.Token** %5, align 8
  %98 = call %struct.Token* @skip(%struct.Token* noundef %97, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  %99 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %98, %struct.Token** %99, align 8
  br label %174

100:                                              ; preds = %85, %76
  %101 = load %struct.Token**, %struct.Token*** %4, align 8
  %102 = load %struct.Token*, %struct.Token** %5, align 8
  %103 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @array_initializer1(%struct.Token** noundef %101, %struct.Token* noundef %102, %struct.Initializer* noundef %103)
  br label %174

104:                                              ; preds = %73
  %105 = load %struct.Token**, %struct.Token*** %4, align 8
  %106 = load %struct.Token*, %struct.Token** %5, align 8
  %107 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @array_initializer2(%struct.Token** noundef %105, %struct.Token* noundef %106, %struct.Initializer* noundef %107, i32 noundef 0)
  br label %174

108:                                              ; preds = %66
  %109 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %110 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %109, i32 0, i32 1
  %111 = load %struct.Type*, %struct.Type** %110, align 8
  %112 = getelementptr inbounds %struct.Type, %struct.Type* %111, i32 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 14
  br i1 %114, label %115, label %146

115:                                              ; preds = %108
  %116 = load %struct.Token*, %struct.Token** %5, align 8
  %117 = call zeroext i1 @equal(%struct.Token* noundef %116, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %117, label %118, label %122

118:                                              ; preds = %115
  %119 = load %struct.Token**, %struct.Token*** %4, align 8
  %120 = load %struct.Token*, %struct.Token** %5, align 8
  %121 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @struct_initializer1(%struct.Token** noundef %119, %struct.Token* noundef %120, %struct.Initializer* noundef %121)
  br label %174

122:                                              ; preds = %115
  %123 = load %struct.Token**, %struct.Token*** %4, align 8
  %124 = load %struct.Token*, %struct.Token** %5, align 8
  %125 = call %struct.Node* @assign(%struct.Token** noundef %123, %struct.Token* noundef %124)
  store %struct.Node* %125, %struct.Node** %7, align 8
  %126 = load %struct.Node*, %struct.Node** %7, align 8
  call void @add_type(%struct.Node* noundef %126)
  %127 = load %struct.Node*, %struct.Node** %7, align 8
  %128 = getelementptr inbounds %struct.Node, %struct.Node* %127, i32 0, i32 2
  %129 = load %struct.Type*, %struct.Type** %128, align 16
  %130 = getelementptr inbounds %struct.Type, %struct.Type* %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 14
  br i1 %132, label %133, label %137

133:                                              ; preds = %122
  %134 = load %struct.Node*, %struct.Node** %7, align 8
  %135 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %136 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %135, i32 0, i32 4
  store %struct.Node* %134, %struct.Node** %136, align 8
  br label %174

137:                                              ; preds = %122
  %138 = load %struct.Token**, %struct.Token*** %4, align 8
  %139 = load %struct.Token*, %struct.Token** %5, align 8
  %140 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %141 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %142 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %141, i32 0, i32 1
  %143 = load %struct.Type*, %struct.Type** %142, align 8
  %144 = getelementptr inbounds %struct.Type, %struct.Type* %143, i32 0, i32 14
  %145 = load %struct.Member*, %struct.Member** %144, align 8
  call void @struct_initializer2(%struct.Token** noundef %138, %struct.Token* noundef %139, %struct.Initializer* noundef %140, %struct.Member* noundef %145)
  br label %174

146:                                              ; preds = %108
  %147 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %148 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %147, i32 0, i32 1
  %149 = load %struct.Type*, %struct.Type** %148, align 8
  %150 = getelementptr inbounds %struct.Type, %struct.Type* %149, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 15
  br i1 %152, label %153, label %157

153:                                              ; preds = %146
  %154 = load %struct.Token**, %struct.Token*** %4, align 8
  %155 = load %struct.Token*, %struct.Token** %5, align 8
  %156 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @union_initializer(%struct.Token** noundef %154, %struct.Token* noundef %155, %struct.Initializer* noundef %156)
  br label %174

157:                                              ; preds = %146
  %158 = load %struct.Token*, %struct.Token** %5, align 8
  %159 = call zeroext i1 @equal(%struct.Token* noundef %158, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %159, label %160, label %168

160:                                              ; preds = %157
  %161 = load %struct.Token*, %struct.Token** %5, align 8
  %162 = getelementptr inbounds %struct.Token, %struct.Token* %161, i32 0, i32 1
  %163 = load %struct.Token*, %struct.Token** %162, align 8
  %164 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @initializer2(%struct.Token** noundef %5, %struct.Token* noundef %163, %struct.Initializer* noundef %164)
  %165 = load %struct.Token*, %struct.Token** %5, align 8
  %166 = call %struct.Token* @skip(%struct.Token* noundef %165, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  %167 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %166, %struct.Token** %167, align 8
  br label %174

168:                                              ; preds = %157
  %169 = load %struct.Token**, %struct.Token*** %4, align 8
  %170 = load %struct.Token*, %struct.Token** %5, align 8
  %171 = call %struct.Node* @assign(%struct.Token** noundef %169, %struct.Token* noundef %170)
  %172 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %173 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %172, i32 0, i32 4
  store %struct.Node* %171, %struct.Node** %173, align 8
  br label %174

174:                                              ; preds = %168, %160, %153, %137, %133, %118, %104, %100, %92, %64, %56, %23, %10
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @copy_struct_type(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca %struct.Member, align 8
  %4 = alloca %struct.Member*, align 8
  %5 = alloca %struct.Member*, align 8
  %6 = alloca %struct.Member*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %7 = load %struct.Type*, %struct.Type** %2, align 8
  %8 = call %struct.Type* @copy_type(%struct.Type* noundef %7)
  store %struct.Type* %8, %struct.Type** %2, align 8
  %9 = bitcast %struct.Member* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 56, i1 false)
  store %struct.Member* %3, %struct.Member** %4, align 8
  %10 = load %struct.Type*, %struct.Type** %2, align 8
  %11 = getelementptr inbounds %struct.Type, %struct.Type* %10, i32 0, i32 14
  %12 = load %struct.Member*, %struct.Member** %11, align 8
  store %struct.Member* %12, %struct.Member** %5, align 8
  br label %13

13:                                               ; preds = %30, %1
  %14 = load %struct.Member*, %struct.Member** %5, align 8
  %15 = icmp ne %struct.Member* %14, null
  br i1 %15, label %16, label %34

16:                                               ; preds = %13
  %17 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 56) #14
  %18 = bitcast i8* %17 to %struct.Member*
  store %struct.Member* %18, %struct.Member** %6, align 8
  %19 = load %struct.Member*, %struct.Member** %6, align 8
  %20 = icmp eq %struct.Member* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.163.802, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

22:                                               ; preds = %16
  %23 = load %struct.Member*, %struct.Member** %6, align 8
  %24 = load %struct.Member*, %struct.Member** %5, align 8
  %25 = bitcast %struct.Member* %23 to i8*
  %26 = bitcast %struct.Member* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 56, i1 false)
  %27 = load %struct.Member*, %struct.Member** %6, align 8
  %28 = load %struct.Member*, %struct.Member** %4, align 8
  %29 = getelementptr inbounds %struct.Member, %struct.Member* %28, i32 0, i32 0
  store %struct.Member* %27, %struct.Member** %29, align 8
  store %struct.Member* %27, %struct.Member** %4, align 8
  br label %30

30:                                               ; preds = %22
  %31 = load %struct.Member*, %struct.Member** %5, align 8
  %32 = getelementptr inbounds %struct.Member, %struct.Member* %31, i32 0, i32 0
  %33 = load %struct.Member*, %struct.Member** %32, align 8
  store %struct.Member* %33, %struct.Member** %5, align 8
  br label %13, !llvm.loop !125

34:                                               ; preds = %13
  %35 = getelementptr inbounds %struct.Member, %struct.Member* %3, i32 0, i32 0
  %36 = load %struct.Member*, %struct.Member** %35, align 8
  %37 = load %struct.Type*, %struct.Type** %2, align 8
  %38 = getelementptr inbounds %struct.Type, %struct.Type* %37, i32 0, i32 14
  store %struct.Member* %36, %struct.Member** %38, align 8
  %39 = load %struct.Type*, %struct.Type** %2, align 8
  ret %struct.Type* %39
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @string_initializer(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Initializer* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i16*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Initializer* %2, %struct.Initializer** %6, align 8
  %14 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %15 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %14, i32 0, i32 3
  %16 = load i8, i8* %15, align 8
  %17 = trunc i8 %16 to i1
  br i1 %17, label %18, label %34

18:                                               ; preds = %3
  %19 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %20 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %21 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %20, i32 0, i32 1
  %22 = load %struct.Type*, %struct.Type** %21, align 8
  %23 = getelementptr inbounds %struct.Type, %struct.Type* %22, i32 0, i32 8
  %24 = load %struct.Type*, %struct.Type** %23, align 8
  %25 = load %struct.Token*, %struct.Token** %5, align 8
  %26 = getelementptr inbounds %struct.Token, %struct.Token* %25, i32 0, i32 6
  %27 = load %struct.Type*, %struct.Type** %26, align 16
  %28 = getelementptr inbounds %struct.Type, %struct.Type* %27, i32 0, i32 11
  %29 = load i32, i32* %28, align 8
  %30 = call %struct.Type* @array_of(%struct.Type* noundef %24, i32 noundef %29)
  %31 = call %struct.Initializer* @new_initializer(%struct.Type* noundef %30, i1 noundef zeroext false)
  %32 = bitcast %struct.Initializer* %19 to i8*
  %33 = bitcast %struct.Initializer* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 56, i1 false)
  br label %34

34:                                               ; preds = %18, %3
  %35 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %36 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %35, i32 0, i32 1
  %37 = load %struct.Type*, %struct.Type** %36, align 8
  %38 = getelementptr inbounds %struct.Type, %struct.Type* %37, i32 0, i32 11
  %39 = load i32, i32* %38, align 8
  %40 = load %struct.Token*, %struct.Token** %5, align 8
  %41 = getelementptr inbounds %struct.Token, %struct.Token* %40, i32 0, i32 6
  %42 = load %struct.Type*, %struct.Type** %41, align 16
  %43 = getelementptr inbounds %struct.Type, %struct.Type* %42, i32 0, i32 11
  %44 = load i32, i32* %43, align 8
  %45 = icmp slt i32 %39, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %34
  %47 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %48 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %47, i32 0, i32 1
  %49 = load %struct.Type*, %struct.Type** %48, align 8
  %50 = getelementptr inbounds %struct.Type, %struct.Type* %49, i32 0, i32 11
  %51 = load i32, i32* %50, align 8
  br label %58

52:                                               ; preds = %34
  %53 = load %struct.Token*, %struct.Token** %5, align 8
  %54 = getelementptr inbounds %struct.Token, %struct.Token* %53, i32 0, i32 6
  %55 = load %struct.Type*, %struct.Type** %54, align 16
  %56 = getelementptr inbounds %struct.Type, %struct.Type* %55, i32 0, i32 11
  %57 = load i32, i32* %56, align 8
  br label %58

58:                                               ; preds = %52, %46
  %59 = phi i32 [ %51, %46 ], [ %57, %52 ]
  store i32 %59, i32* %7, align 4
  %60 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %61 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %60, i32 0, i32 1
  %62 = load %struct.Type*, %struct.Type** %61, align 8
  %63 = getelementptr inbounds %struct.Type, %struct.Type* %62, i32 0, i32 8
  %64 = load %struct.Type*, %struct.Type** %63, align 8
  %65 = getelementptr inbounds %struct.Type, %struct.Type* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  switch i32 %66, label %156 [
    i32 1, label %67
    i32 2, label %96
    i32 4, label %126
  ]

67:                                               ; preds = %58
  %68 = load %struct.Token*, %struct.Token** %5, align 8
  %69 = getelementptr inbounds %struct.Token, %struct.Token* %68, i32 0, i32 7
  %70 = load i8*, i8** %69, align 8
  store i8* %70, i8** %8, align 8
  store i32 0, i32* %9, align 4
  br label %71

71:                                               ; preds = %92, %67
  %72 = load i32, i32* %9, align 4
  %73 = load i32, i32* %7, align 4
  %74 = icmp slt i32 %72, %73
  br i1 %74, label %75, label %95

75:                                               ; preds = %71
  %76 = load i8*, i8** %8, align 8
  %77 = load i32, i32* %9, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i64
  %82 = load %struct.Token*, %struct.Token** %5, align 8
  %83 = call %struct.Node* @new_num(i64 noundef %81, %struct.Token* noundef %82)
  %84 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %85 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %84, i32 0, i32 5
  %86 = load %struct.Initializer**, %struct.Initializer*** %85, align 8
  %87 = load i32, i32* %9, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %86, i64 %88
  %90 = load %struct.Initializer*, %struct.Initializer** %89, align 8
  %91 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %90, i32 0, i32 4
  store %struct.Node* %83, %struct.Node** %91, align 8
  br label %92

92:                                               ; preds = %75
  %93 = load i32, i32* %9, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %9, align 4
  br label %71, !llvm.loop !126

95:                                               ; preds = %71
  br label %158

96:                                               ; preds = %58
  %97 = load %struct.Token*, %struct.Token** %5, align 8
  %98 = getelementptr inbounds %struct.Token, %struct.Token* %97, i32 0, i32 7
  %99 = load i8*, i8** %98, align 8
  %100 = bitcast i8* %99 to i16*
  store i16* %100, i16** %10, align 8
  store i32 0, i32* %11, align 4
  br label %101

101:                                              ; preds = %122, %96
  %102 = load i32, i32* %11, align 4
  %103 = load i32, i32* %7, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %105, label %125

105:                                              ; preds = %101
  %106 = load i16*, i16** %10, align 8
  %107 = load i32, i32* %11, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %106, i64 %108
  %110 = load i16, i16* %109, align 2
  %111 = zext i16 %110 to i64
  %112 = load %struct.Token*, %struct.Token** %5, align 8
  %113 = call %struct.Node* @new_num(i64 noundef %111, %struct.Token* noundef %112)
  %114 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %115 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %114, i32 0, i32 5
  %116 = load %struct.Initializer**, %struct.Initializer*** %115, align 8
  %117 = load i32, i32* %11, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %116, i64 %118
  %120 = load %struct.Initializer*, %struct.Initializer** %119, align 8
  %121 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %120, i32 0, i32 4
  store %struct.Node* %113, %struct.Node** %121, align 8
  br label %122

122:                                              ; preds = %105
  %123 = load i32, i32* %11, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %11, align 4
  br label %101, !llvm.loop !127

125:                                              ; preds = %101
  br label %158

126:                                              ; preds = %58
  %127 = load %struct.Token*, %struct.Token** %5, align 8
  %128 = getelementptr inbounds %struct.Token, %struct.Token* %127, i32 0, i32 7
  %129 = load i8*, i8** %128, align 8
  %130 = bitcast i8* %129 to i32*
  store i32* %130, i32** %12, align 8
  store i32 0, i32* %13, align 4
  br label %131

131:                                              ; preds = %152, %126
  %132 = load i32, i32* %13, align 4
  %133 = load i32, i32* %7, align 4
  %134 = icmp slt i32 %132, %133
  br i1 %134, label %135, label %155

135:                                              ; preds = %131
  %136 = load i32*, i32** %12, align 8
  %137 = load i32, i32* %13, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i32, i32* %136, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  %142 = load %struct.Token*, %struct.Token** %5, align 8
  %143 = call %struct.Node* @new_num(i64 noundef %141, %struct.Token* noundef %142)
  %144 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %145 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %144, i32 0, i32 5
  %146 = load %struct.Initializer**, %struct.Initializer*** %145, align 8
  %147 = load i32, i32* %13, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %146, i64 %148
  %150 = load %struct.Initializer*, %struct.Initializer** %149, align 8
  %151 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %150, i32 0, i32 4
  store %struct.Node* %143, %struct.Node** %151, align 8
  br label %152

152:                                              ; preds = %135
  %153 = load i32, i32* %13, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %13, align 4
  br label %131, !llvm.loop !128

155:                                              ; preds = %131
  br label %158

156:                                              ; preds = %58
  %157 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %157, i8* noundef getelementptr inbounds ([89 x i8], [89 x i8]* @.str.144.810, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

158:                                              ; preds = %155, %125, %95
  %159 = load %struct.Token*, %struct.Token** %5, align 8
  %160 = getelementptr inbounds %struct.Token, %struct.Token* %159, i32 0, i32 1
  %161 = load %struct.Token*, %struct.Token** %160, align 8
  %162 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %161, %struct.Token** %162, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @array_initializer1(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Initializer* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.Token*, align 8
  %14 = alloca i32, align 4
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Initializer* %2, %struct.Initializer** %6, align 8
  %15 = load %struct.Token*, %struct.Token** %5, align 8
  %16 = call %struct.Token* @skip(%struct.Token* noundef %15, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  store %struct.Token* %16, %struct.Token** %5, align 8
  %17 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %18 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %17, i32 0, i32 3
  %19 = load i8, i8* %18, align 8
  %20 = trunc i8 %19 to i1
  br i1 %20, label %21, label %38

21:                                               ; preds = %3
  %22 = load %struct.Token*, %struct.Token** %5, align 8
  %23 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %24 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %23, i32 0, i32 1
  %25 = load %struct.Type*, %struct.Type** %24, align 8
  %26 = call i32 @count_array_init_elements(%struct.Token* noundef %22, %struct.Type* noundef %25)
  store i32 %26, i32* %7, align 4
  %27 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %28 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %29 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %28, i32 0, i32 1
  %30 = load %struct.Type*, %struct.Type** %29, align 8
  %31 = getelementptr inbounds %struct.Type, %struct.Type* %30, i32 0, i32 8
  %32 = load %struct.Type*, %struct.Type** %31, align 8
  %33 = load i32, i32* %7, align 4
  %34 = call %struct.Type* @array_of(%struct.Type* noundef %32, i32 noundef %33)
  %35 = call %struct.Initializer* @new_initializer(%struct.Type* noundef %34, i1 noundef zeroext false)
  %36 = bitcast %struct.Initializer* %27 to i8*
  %37 = bitcast %struct.Initializer* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 56, i1 false)
  br label %38

38:                                               ; preds = %21, %3
  store i8 1, i8* %8, align 1
  %39 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %40 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %39, i32 0, i32 3
  %41 = load i8, i8* %40, align 8
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %60

43:                                               ; preds = %38
  %44 = load %struct.Token*, %struct.Token** %5, align 8
  %45 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %46 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %45, i32 0, i32 1
  %47 = load %struct.Type*, %struct.Type** %46, align 8
  %48 = call i32 @count_array_init_elements(%struct.Token* noundef %44, %struct.Type* noundef %47)
  store i32 %48, i32* %9, align 4
  %49 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %50 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %51 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %50, i32 0, i32 1
  %52 = load %struct.Type*, %struct.Type** %51, align 8
  %53 = getelementptr inbounds %struct.Type, %struct.Type* %52, i32 0, i32 8
  %54 = load %struct.Type*, %struct.Type** %53, align 8
  %55 = load i32, i32* %9, align 4
  %56 = call %struct.Type* @array_of(%struct.Type* noundef %54, i32 noundef %55)
  %57 = call %struct.Initializer* @new_initializer(%struct.Type* noundef %56, i1 noundef zeroext false)
  %58 = bitcast %struct.Initializer* %49 to i8*
  %59 = bitcast %struct.Initializer* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 56, i1 false)
  br label %60

60:                                               ; preds = %43, %38
  store i32 0, i32* %10, align 4
  br label %61

61:                                               ; preds = %121, %60
  %62 = load %struct.Token**, %struct.Token*** %4, align 8
  %63 = load %struct.Token*, %struct.Token** %5, align 8
  %64 = call zeroext i1 @consume_end(%struct.Token** noundef %62, %struct.Token* noundef %63)
  %65 = xor i1 %64, true
  br i1 %65, label %66, label %124

66:                                               ; preds = %61
  %67 = load i8, i8* %8, align 1
  %68 = trunc i8 %67 to i1
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = load %struct.Token*, %struct.Token** %5, align 8
  %71 = call %struct.Token* @skip(%struct.Token* noundef %70, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %71, %struct.Token** %5, align 8
  br label %72

72:                                               ; preds = %69, %66
  store i8 0, i8* %8, align 1
  %73 = load %struct.Token*, %struct.Token** %5, align 8
  %74 = call zeroext i1 @equal(%struct.Token* noundef %73, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119.685, i64 0, i64 0))
  br i1 %74, label %75, label %100

75:                                               ; preds = %72
  %76 = load %struct.Token*, %struct.Token** %5, align 8
  %77 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %78 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %77, i32 0, i32 1
  %79 = load %struct.Type*, %struct.Type** %78, align 8
  call void @array_designator(%struct.Token** noundef %5, %struct.Token* noundef %76, %struct.Type* noundef %79, i32* noundef %11, i32* noundef %12)
  %80 = load i32, i32* %11, align 4
  store i32 %80, i32* %14, align 4
  br label %81

81:                                               ; preds = %94, %75
  %82 = load i32, i32* %14, align 4
  %83 = load i32, i32* %12, align 4
  %84 = icmp sle i32 %82, %83
  br i1 %84, label %85, label %97

85:                                               ; preds = %81
  %86 = load %struct.Token*, %struct.Token** %5, align 8
  %87 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %88 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %87, i32 0, i32 5
  %89 = load %struct.Initializer**, %struct.Initializer*** %88, align 8
  %90 = load i32, i32* %14, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %89, i64 %91
  %93 = load %struct.Initializer*, %struct.Initializer** %92, align 8
  call void @designation(%struct.Token** noundef %13, %struct.Token* noundef %86, %struct.Initializer* noundef %93)
  br label %94

94:                                               ; preds = %85
  %95 = load i32, i32* %14, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %14, align 4
  br label %81, !llvm.loop !129

97:                                               ; preds = %81
  %98 = load %struct.Token*, %struct.Token** %13, align 8
  store %struct.Token* %98, %struct.Token** %5, align 8
  %99 = load i32, i32* %12, align 4
  store i32 %99, i32* %10, align 4
  br label %121

100:                                              ; preds = %72
  %101 = load i32, i32* %10, align 4
  %102 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %103 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %102, i32 0, i32 1
  %104 = load %struct.Type*, %struct.Type** %103, align 8
  %105 = getelementptr inbounds %struct.Type, %struct.Type* %104, i32 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = icmp slt i32 %101, %106
  br i1 %107, label %108, label %117

108:                                              ; preds = %100
  %109 = load %struct.Token*, %struct.Token** %5, align 8
  %110 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %111 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %110, i32 0, i32 5
  %112 = load %struct.Initializer**, %struct.Initializer*** %111, align 8
  %113 = load i32, i32* %10, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %112, i64 %114
  %116 = load %struct.Initializer*, %struct.Initializer** %115, align 8
  call void @initializer2(%struct.Token** noundef %5, %struct.Token* noundef %109, %struct.Initializer* noundef %116)
  br label %120

117:                                              ; preds = %100
  %118 = load %struct.Token*, %struct.Token** %5, align 8
  %119 = call %struct.Token* @skip_excess_element(%struct.Token* noundef %118)
  store %struct.Token* %119, %struct.Token** %5, align 8
  br label %120

120:                                              ; preds = %117, %108
  br label %121

121:                                              ; preds = %120, %97
  %122 = load i32, i32* %10, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %10, align 4
  br label %61, !llvm.loop !130

124:                                              ; preds = %61
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @array_initializer2(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Initializer* noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Initializer*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Initializer* %2, %struct.Initializer** %7, align 8
  store i32 %3, i32* %8, align 4
  %11 = load %struct.Initializer*, %struct.Initializer** %7, align 8
  %12 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %11, i32 0, i32 3
  %13 = load i8, i8* %12, align 8
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %32

15:                                               ; preds = %4
  %16 = load %struct.Token*, %struct.Token** %6, align 8
  %17 = load %struct.Initializer*, %struct.Initializer** %7, align 8
  %18 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %17, i32 0, i32 1
  %19 = load %struct.Type*, %struct.Type** %18, align 8
  %20 = call i32 @count_array_init_elements(%struct.Token* noundef %16, %struct.Type* noundef %19)
  store i32 %20, i32* %9, align 4
  %21 = load %struct.Initializer*, %struct.Initializer** %7, align 8
  %22 = load %struct.Initializer*, %struct.Initializer** %7, align 8
  %23 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %22, i32 0, i32 1
  %24 = load %struct.Type*, %struct.Type** %23, align 8
  %25 = getelementptr inbounds %struct.Type, %struct.Type* %24, i32 0, i32 8
  %26 = load %struct.Type*, %struct.Type** %25, align 8
  %27 = load i32, i32* %9, align 4
  %28 = call %struct.Type* @array_of(%struct.Type* noundef %26, i32 noundef %27)
  %29 = call %struct.Initializer* @new_initializer(%struct.Type* noundef %28, i1 noundef zeroext false)
  %30 = bitcast %struct.Initializer* %21 to i8*
  %31 = bitcast %struct.Initializer* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 56, i1 false)
  br label %32

32:                                               ; preds = %15, %4
  br label %33

33:                                               ; preds = %72, %32
  %34 = load i32, i32* %8, align 4
  %35 = load %struct.Initializer*, %struct.Initializer** %7, align 8
  %36 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %35, i32 0, i32 1
  %37 = load %struct.Type*, %struct.Type** %36, align 8
  %38 = getelementptr inbounds %struct.Type, %struct.Type* %37, i32 0, i32 11
  %39 = load i32, i32* %38, align 8
  %40 = icmp slt i32 %34, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %33
  %42 = load %struct.Token*, %struct.Token** %6, align 8
  %43 = call zeroext i1 @is_end(%struct.Token* noundef %42)
  %44 = xor i1 %43, true
  br label %45

45:                                               ; preds = %41, %33
  %46 = phi i1 [ false, %33 ], [ %44, %41 ]
  br i1 %46, label %47, label %75

47:                                               ; preds = %45
  %48 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %48, %struct.Token** %10, align 8
  %49 = load i32, i32* %8, align 4
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = load %struct.Token*, %struct.Token** %6, align 8
  %53 = call %struct.Token* @skip(%struct.Token* noundef %52, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %53, %struct.Token** %6, align 8
  br label %54

54:                                               ; preds = %51, %47
  %55 = load %struct.Token*, %struct.Token** %6, align 8
  %56 = call zeroext i1 @equal(%struct.Token* noundef %55, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119.685, i64 0, i64 0))
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load %struct.Token*, %struct.Token** %6, align 8
  %59 = call zeroext i1 @equal(%struct.Token* noundef %58, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134.687, i64 0, i64 0))
  br i1 %59, label %60, label %63

60:                                               ; preds = %57, %54
  %61 = load %struct.Token*, %struct.Token** %10, align 8
  %62 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %61, %struct.Token** %62, align 8
  br label %78

63:                                               ; preds = %57
  %64 = load %struct.Token*, %struct.Token** %6, align 8
  %65 = load %struct.Initializer*, %struct.Initializer** %7, align 8
  %66 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %65, i32 0, i32 5
  %67 = load %struct.Initializer**, %struct.Initializer*** %66, align 8
  %68 = load i32, i32* %8, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %67, i64 %69
  %71 = load %struct.Initializer*, %struct.Initializer** %70, align 8
  call void @initializer2(%struct.Token** noundef %6, %struct.Token* noundef %64, %struct.Initializer* noundef %71)
  br label %72

72:                                               ; preds = %63
  %73 = load i32, i32* %8, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %8, align 4
  br label %33, !llvm.loop !131

75:                                               ; preds = %45
  %76 = load %struct.Token*, %struct.Token** %6, align 8
  %77 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %76, %struct.Token** %77, align 8
  br label %78

78:                                               ; preds = %75, %60
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @struct_initializer1(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Initializer* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca %struct.Member*, align 8
  %8 = alloca i8, align 1
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Initializer* %2, %struct.Initializer** %6, align 8
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = call %struct.Token* @skip(%struct.Token* noundef %9, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  store %struct.Token* %10, %struct.Token** %5, align 8
  %11 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %12 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %11, i32 0, i32 1
  %13 = load %struct.Type*, %struct.Type** %12, align 8
  %14 = getelementptr inbounds %struct.Type, %struct.Type* %13, i32 0, i32 14
  %15 = load %struct.Member*, %struct.Member** %14, align 8
  store %struct.Member* %15, %struct.Member** %7, align 8
  store i8 1, i8* %8, align 1
  br label %16

16:                                               ; preds = %69, %30, %3
  %17 = load %struct.Token**, %struct.Token*** %4, align 8
  %18 = load %struct.Token*, %struct.Token** %5, align 8
  %19 = call zeroext i1 @consume_end(%struct.Token** noundef %17, %struct.Token* noundef %18)
  %20 = xor i1 %19, true
  br i1 %20, label %21, label %70

21:                                               ; preds = %16
  %22 = load i8, i8* %8, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = load %struct.Token*, %struct.Token** %5, align 8
  %26 = call %struct.Token* @skip(%struct.Token* noundef %25, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %26, %struct.Token** %5, align 8
  br label %27

27:                                               ; preds = %24, %21
  store i8 0, i8* %8, align 1
  %28 = load %struct.Token*, %struct.Token** %5, align 8
  %29 = call zeroext i1 @equal(%struct.Token* noundef %28, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134.687, i64 0, i64 0))
  br i1 %29, label %30, label %49

30:                                               ; preds = %27
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %33 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %32, i32 0, i32 1
  %34 = load %struct.Type*, %struct.Type** %33, align 8
  %35 = call %struct.Member* @struct_designator(%struct.Token** noundef %5, %struct.Token* noundef %31, %struct.Type* noundef %34)
  store %struct.Member* %35, %struct.Member** %7, align 8
  %36 = load %struct.Token*, %struct.Token** %5, align 8
  %37 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %38 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %37, i32 0, i32 5
  %39 = load %struct.Initializer**, %struct.Initializer*** %38, align 8
  %40 = load %struct.Member*, %struct.Member** %7, align 8
  %41 = getelementptr inbounds %struct.Member, %struct.Member* %40, i32 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %39, i64 %43
  %45 = load %struct.Initializer*, %struct.Initializer** %44, align 8
  call void @designation(%struct.Token** noundef %5, %struct.Token* noundef %36, %struct.Initializer* noundef %45)
  %46 = load %struct.Member*, %struct.Member** %7, align 8
  %47 = getelementptr inbounds %struct.Member, %struct.Member* %46, i32 0, i32 0
  %48 = load %struct.Member*, %struct.Member** %47, align 8
  store %struct.Member* %48, %struct.Member** %7, align 8
  br label %16, !llvm.loop !132

49:                                               ; preds = %27
  %50 = load %struct.Member*, %struct.Member** %7, align 8
  %51 = icmp ne %struct.Member* %50, null
  br i1 %51, label %52, label %66

52:                                               ; preds = %49
  %53 = load %struct.Token*, %struct.Token** %5, align 8
  %54 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %55 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %54, i32 0, i32 5
  %56 = load %struct.Initializer**, %struct.Initializer*** %55, align 8
  %57 = load %struct.Member*, %struct.Member** %7, align 8
  %58 = getelementptr inbounds %struct.Member, %struct.Member* %57, i32 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %56, i64 %60
  %62 = load %struct.Initializer*, %struct.Initializer** %61, align 8
  call void @initializer2(%struct.Token** noundef %5, %struct.Token* noundef %53, %struct.Initializer* noundef %62)
  %63 = load %struct.Member*, %struct.Member** %7, align 8
  %64 = getelementptr inbounds %struct.Member, %struct.Member* %63, i32 0, i32 0
  %65 = load %struct.Member*, %struct.Member** %64, align 8
  store %struct.Member* %65, %struct.Member** %7, align 8
  br label %69

66:                                               ; preds = %49
  %67 = load %struct.Token*, %struct.Token** %5, align 8
  %68 = call %struct.Token* @skip_excess_element(%struct.Token* noundef %67)
  store %struct.Token* %68, %struct.Token** %5, align 8
  br label %69

69:                                               ; preds = %66, %52
  br label %16, !llvm.loop !132

70:                                               ; preds = %16
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @struct_initializer2(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Initializer* noundef %2, %struct.Member* noundef %3) #0 {
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Initializer*, align 8
  %8 = alloca %struct.Member*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Initializer* %2, %struct.Initializer** %7, align 8
  store %struct.Member* %3, %struct.Member** %8, align 8
  store i8 1, i8* %9, align 1
  br label %11

11:                                               ; preds = %47, %4
  %12 = load %struct.Member*, %struct.Member** %8, align 8
  %13 = icmp ne %struct.Member* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = load %struct.Token*, %struct.Token** %6, align 8
  %16 = call zeroext i1 @is_end(%struct.Token* noundef %15)
  %17 = xor i1 %16, true
  br label %18

18:                                               ; preds = %14, %11
  %19 = phi i1 [ false, %11 ], [ %17, %14 ]
  br i1 %19, label %20, label %51

20:                                               ; preds = %18
  %21 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %21, %struct.Token** %10, align 8
  %22 = load i8, i8* %9, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = load %struct.Token*, %struct.Token** %6, align 8
  %26 = call %struct.Token* @skip(%struct.Token* noundef %25, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %26, %struct.Token** %6, align 8
  br label %27

27:                                               ; preds = %24, %20
  store i8 0, i8* %9, align 1
  %28 = load %struct.Token*, %struct.Token** %6, align 8
  %29 = call zeroext i1 @equal(%struct.Token* noundef %28, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119.685, i64 0, i64 0))
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load %struct.Token*, %struct.Token** %6, align 8
  %32 = call zeroext i1 @equal(%struct.Token* noundef %31, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134.687, i64 0, i64 0))
  br i1 %32, label %33, label %36

33:                                               ; preds = %30, %27
  %34 = load %struct.Token*, %struct.Token** %10, align 8
  %35 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %34, %struct.Token** %35, align 8
  br label %54

36:                                               ; preds = %30
  %37 = load %struct.Token*, %struct.Token** %6, align 8
  %38 = load %struct.Initializer*, %struct.Initializer** %7, align 8
  %39 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %38, i32 0, i32 5
  %40 = load %struct.Initializer**, %struct.Initializer*** %39, align 8
  %41 = load %struct.Member*, %struct.Member** %8, align 8
  %42 = getelementptr inbounds %struct.Member, %struct.Member* %41, i32 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %40, i64 %44
  %46 = load %struct.Initializer*, %struct.Initializer** %45, align 8
  call void @initializer2(%struct.Token** noundef %6, %struct.Token* noundef %37, %struct.Initializer* noundef %46)
  br label %47

47:                                               ; preds = %36
  %48 = load %struct.Member*, %struct.Member** %8, align 8
  %49 = getelementptr inbounds %struct.Member, %struct.Member* %48, i32 0, i32 0
  %50 = load %struct.Member*, %struct.Member** %49, align 8
  store %struct.Member* %50, %struct.Member** %8, align 8
  br label %11, !llvm.loop !133

51:                                               ; preds = %18
  %52 = load %struct.Token*, %struct.Token** %6, align 8
  %53 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %52, %struct.Token** %53, align 8
  br label %54

54:                                               ; preds = %51, %33
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @union_initializer(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Initializer* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca %struct.Member*, align 8
  %8 = alloca %struct.Member*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Initializer* %2, %struct.Initializer** %6, align 8
  %9 = load %struct.Token*, %struct.Token** %5, align 8
  %10 = call zeroext i1 @equal(%struct.Token* noundef %9, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %10, label %11, label %88

11:                                               ; preds = %3
  %12 = load %struct.Token*, %struct.Token** %5, align 8
  %13 = getelementptr inbounds %struct.Token, %struct.Token* %12, i32 0, i32 1
  %14 = load %struct.Token*, %struct.Token** %13, align 8
  %15 = call zeroext i1 @equal(%struct.Token* noundef %14, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134.687, i64 0, i64 0))
  br i1 %15, label %16, label %88

16:                                               ; preds = %11
  %17 = load %struct.Token*, %struct.Token** %5, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 1
  %19 = load %struct.Token*, %struct.Token** %18, align 8
  %20 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %21 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %20, i32 0, i32 1
  %22 = load %struct.Type*, %struct.Type** %21, align 8
  %23 = call %struct.Member* @struct_designator(%struct.Token** noundef %5, %struct.Token* noundef %19, %struct.Type* noundef %22)
  store %struct.Member* %23, %struct.Member** %7, align 8
  %24 = load %struct.Member*, %struct.Member** %7, align 8
  %25 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %26 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %25, i32 0, i32 6
  store %struct.Member* %24, %struct.Member** %26, align 8
  %27 = load %struct.Token*, %struct.Token** %5, align 8
  %28 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %29 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %28, i32 0, i32 5
  %30 = load %struct.Initializer**, %struct.Initializer*** %29, align 8
  %31 = load %struct.Member*, %struct.Member** %7, align 8
  %32 = getelementptr inbounds %struct.Member, %struct.Member* %31, i32 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %30, i64 %34
  %36 = load %struct.Initializer*, %struct.Initializer** %35, align 8
  call void @designation(%struct.Token** noundef %5, %struct.Token* noundef %27, %struct.Initializer* noundef %36)
  %37 = load %struct.Token*, %struct.Token** %5, align 8
  %38 = call zeroext i1 @equal(%struct.Token* noundef %37, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br i1 %38, label %39, label %47

39:                                               ; preds = %16
  %40 = load %struct.Token*, %struct.Token** %5, align 8
  %41 = getelementptr inbounds %struct.Token, %struct.Token* %40, i32 0, i32 1
  %42 = load %struct.Token*, %struct.Token** %41, align 8
  %43 = call zeroext i1 @equal(%struct.Token* noundef %42, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = load %struct.Token*, %struct.Token** %5, align 8
  %46 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %45, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br label %47

47:                                               ; preds = %44, %39, %16
  br label %48

48:                                               ; preds = %83, %47
  %49 = load %struct.Token*, %struct.Token** %5, align 8
  %50 = call zeroext i1 @equal(%struct.Token* noundef %49, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  %51 = xor i1 %50, true
  br i1 %51, label %52, label %84

52:                                               ; preds = %48
  %53 = load %struct.Token*, %struct.Token** %5, align 8
  %54 = getelementptr inbounds %struct.Token, %struct.Token* %53, i32 0, i32 1
  %55 = load %struct.Token*, %struct.Token** %54, align 8
  %56 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %57 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %56, i32 0, i32 1
  %58 = load %struct.Type*, %struct.Type** %57, align 8
  %59 = call %struct.Member* @struct_designator(%struct.Token** noundef %5, %struct.Token* noundef %55, %struct.Type* noundef %58)
  store %struct.Member* %59, %struct.Member** %8, align 8
  %60 = load %struct.Member*, %struct.Member** %8, align 8
  %61 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %62 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %61, i32 0, i32 6
  store %struct.Member* %60, %struct.Member** %62, align 8
  %63 = load %struct.Token*, %struct.Token** %5, align 8
  %64 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %65 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %64, i32 0, i32 5
  %66 = load %struct.Initializer**, %struct.Initializer*** %65, align 8
  %67 = load %struct.Member*, %struct.Member** %8, align 8
  %68 = getelementptr inbounds %struct.Member, %struct.Member* %67, i32 0, i32 4
  %69 = load i32, i32* %68, align 8
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %66, i64 %70
  %72 = load %struct.Initializer*, %struct.Initializer** %71, align 8
  call void @designation(%struct.Token** noundef %5, %struct.Token* noundef %63, %struct.Initializer* noundef %72)
  %73 = load %struct.Token*, %struct.Token** %5, align 8
  %74 = call zeroext i1 @equal(%struct.Token* noundef %73, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br i1 %74, label %75, label %83

75:                                               ; preds = %52
  %76 = load %struct.Token*, %struct.Token** %5, align 8
  %77 = getelementptr inbounds %struct.Token, %struct.Token* %76, i32 0, i32 1
  %78 = load %struct.Token*, %struct.Token** %77, align 8
  %79 = call zeroext i1 @equal(%struct.Token* noundef %78, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = load %struct.Token*, %struct.Token** %5, align 8
  %82 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %81, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br label %83

83:                                               ; preds = %80, %75, %52
  br label %48, !llvm.loop !134

84:                                               ; preds = %48
  %85 = load %struct.Token*, %struct.Token** %5, align 8
  %86 = call %struct.Token* @skip(%struct.Token* noundef %85, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  %87 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %86, %struct.Token** %87, align 8
  br label %143

88:                                               ; preds = %11, %3
  %89 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %90 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %89, i32 0, i32 1
  %91 = load %struct.Type*, %struct.Type** %90, align 8
  %92 = getelementptr inbounds %struct.Type, %struct.Type* %91, i32 0, i32 14
  %93 = load %struct.Member*, %struct.Member** %92, align 8
  %94 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %95 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %94, i32 0, i32 6
  store %struct.Member* %93, %struct.Member** %95, align 8
  %96 = load %struct.Token*, %struct.Token** %5, align 8
  %97 = call zeroext i1 @equal(%struct.Token* noundef %96, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %97, label %98, label %121

98:                                               ; preds = %88
  %99 = load %struct.Token*, %struct.Token** %5, align 8
  %100 = getelementptr inbounds %struct.Token, %struct.Token* %99, i32 0, i32 1
  %101 = load %struct.Token*, %struct.Token** %100, align 8
  %102 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %103 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %102, i32 0, i32 5
  %104 = load %struct.Initializer**, %struct.Initializer*** %103, align 8
  %105 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %104, i64 0
  %106 = load %struct.Initializer*, %struct.Initializer** %105, align 8
  call void @initializer2(%struct.Token** noundef %5, %struct.Token* noundef %101, %struct.Initializer* noundef %106)
  %107 = load %struct.Token*, %struct.Token** %5, align 8
  %108 = call zeroext i1 @equal(%struct.Token* noundef %107, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br i1 %108, label %109, label %117

109:                                              ; preds = %98
  %110 = load %struct.Token*, %struct.Token** %5, align 8
  %111 = getelementptr inbounds %struct.Token, %struct.Token* %110, i32 0, i32 1
  %112 = load %struct.Token*, %struct.Token** %111, align 8
  %113 = call zeroext i1 @equal(%struct.Token* noundef %112, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = load %struct.Token*, %struct.Token** %5, align 8
  %116 = call zeroext i1 @consume(%struct.Token** noundef %5, %struct.Token* noundef %115, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br label %117

117:                                              ; preds = %114, %109, %98
  %118 = load %struct.Token*, %struct.Token** %5, align 8
  %119 = call %struct.Token* @skip(%struct.Token* noundef %118, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  %120 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %119, %struct.Token** %120, align 8
  br label %143

121:                                              ; preds = %88
  %122 = load %struct.Token*, %struct.Token** %5, align 8
  %123 = getelementptr inbounds %struct.Token, %struct.Token* %122, i32 0, i32 1
  %124 = load %struct.Token*, %struct.Token** %123, align 8
  %125 = call zeroext i1 @equal(%struct.Token* noundef %124, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135.688, i64 0, i64 0))
  br i1 %125, label %126, label %134

126:                                              ; preds = %121
  %127 = load %struct.Token**, %struct.Token*** %4, align 8
  %128 = load %struct.Token*, %struct.Token** %5, align 8
  %129 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %130 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %129, i32 0, i32 5
  %131 = load %struct.Initializer**, %struct.Initializer*** %130, align 8
  %132 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %131, i64 0
  %133 = load %struct.Initializer*, %struct.Initializer** %132, align 8
  call void @initializer3(%struct.Token** noundef %127, %struct.Token* noundef %128, %struct.Initializer* noundef %133)
  br label %143

134:                                              ; preds = %121
  %135 = load %struct.Token**, %struct.Token*** %4, align 8
  %136 = load %struct.Token*, %struct.Token** %5, align 8
  %137 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %138 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %137, i32 0, i32 5
  %139 = load %struct.Initializer**, %struct.Initializer*** %138, align 8
  %140 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %139, i64 0
  %141 = load %struct.Initializer*, %struct.Initializer** %140, align 8
  call void @initializer2(%struct.Token** noundef %135, %struct.Token* noundef %136, %struct.Initializer* noundef %141)
  br label %142

142:                                              ; preds = %134
  br label %143

143:                                              ; preds = %142, %126, %117, %84
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Member* @struct_designator(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca %struct.Member*, align 8
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.Token*, align 8
  %9 = alloca %struct.Member*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Type* %2, %struct.Type** %7, align 8
  %10 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %10, %struct.Token** %8, align 8
  %11 = load %struct.Token*, %struct.Token** %6, align 8
  %12 = call %struct.Token* @skip(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134.687, i64 0, i64 0))
  store %struct.Token* %12, %struct.Token** %6, align 8
  %13 = load %struct.Token*, %struct.Token** %6, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 16
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %18, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.151.808, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

19:                                               ; preds = %3
  %20 = load %struct.Type*, %struct.Type** %7, align 8
  %21 = getelementptr inbounds %struct.Type, %struct.Type* %20, i32 0, i32 14
  %22 = load %struct.Member*, %struct.Member** %21, align 8
  store %struct.Member* %22, %struct.Member** %9, align 8
  br label %23

23:                                               ; preds = %90, %19
  %24 = load %struct.Member*, %struct.Member** %9, align 8
  %25 = icmp ne %struct.Member* %24, null
  br i1 %25, label %26, label %94

26:                                               ; preds = %23
  %27 = load %struct.Member*, %struct.Member** %9, align 8
  %28 = getelementptr inbounds %struct.Member, %struct.Member* %27, i32 0, i32 3
  %29 = load %struct.Token*, %struct.Token** %28, align 8
  %30 = icmp ne %struct.Token* %29, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %26
  %32 = load %struct.Member*, %struct.Member** %9, align 8
  %33 = getelementptr inbounds %struct.Member, %struct.Member* %32, i32 0, i32 1
  %34 = load %struct.Type*, %struct.Type** %33, align 8
  %35 = getelementptr inbounds %struct.Type, %struct.Type* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 14
  br i1 %37, label %45, label %38

38:                                               ; preds = %31
  %39 = load %struct.Member*, %struct.Member** %9, align 8
  %40 = getelementptr inbounds %struct.Member, %struct.Member* %39, i32 0, i32 1
  %41 = load %struct.Type*, %struct.Type** %40, align 8
  %42 = getelementptr inbounds %struct.Type, %struct.Type* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 15
  br i1 %44, label %45, label %57

45:                                               ; preds = %38, %31
  %46 = load %struct.Member*, %struct.Member** %9, align 8
  %47 = getelementptr inbounds %struct.Member, %struct.Member* %46, i32 0, i32 1
  %48 = load %struct.Type*, %struct.Type** %47, align 8
  %49 = load %struct.Token*, %struct.Token** %6, align 8
  %50 = call %struct.Member* @get_struct_member(%struct.Type* noundef %48, %struct.Token* noundef %49)
  %51 = icmp ne %struct.Member* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %45
  %53 = load %struct.Token*, %struct.Token** %8, align 8
  %54 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %53, %struct.Token** %54, align 8
  %55 = load %struct.Member*, %struct.Member** %9, align 8
  store %struct.Member* %55, %struct.Member** %4, align 8
  br label %96

56:                                               ; preds = %45
  br label %57

57:                                               ; preds = %56, %38
  br label %90

58:                                               ; preds = %26
  %59 = load %struct.Member*, %struct.Member** %9, align 8
  %60 = getelementptr inbounds %struct.Member, %struct.Member* %59, i32 0, i32 3
  %61 = load %struct.Token*, %struct.Token** %60, align 8
  %62 = getelementptr inbounds %struct.Token, %struct.Token* %61, i32 0, i32 5
  %63 = load i32, i32* %62, align 8
  %64 = load %struct.Token*, %struct.Token** %6, align 8
  %65 = getelementptr inbounds %struct.Token, %struct.Token* %64, i32 0, i32 5
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %63, %66
  br i1 %67, label %68, label %89

68:                                               ; preds = %58
  %69 = load %struct.Member*, %struct.Member** %9, align 8
  %70 = getelementptr inbounds %struct.Member, %struct.Member* %69, i32 0, i32 3
  %71 = load %struct.Token*, %struct.Token** %70, align 8
  %72 = getelementptr inbounds %struct.Token, %struct.Token* %71, i32 0, i32 4
  %73 = load i8*, i8** %72, align 16
  %74 = load %struct.Token*, %struct.Token** %6, align 8
  %75 = getelementptr inbounds %struct.Token, %struct.Token* %74, i32 0, i32 4
  %76 = load i8*, i8** %75, align 16
  %77 = load %struct.Token*, %struct.Token** %6, align 8
  %78 = getelementptr inbounds %struct.Token, %struct.Token* %77, i32 0, i32 5
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = call i32 @strncmp(i8* noundef %73, i8* noundef %76, i64 noundef %80) #13
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %68
  %84 = load %struct.Token*, %struct.Token** %6, align 8
  %85 = getelementptr inbounds %struct.Token, %struct.Token* %84, i32 0, i32 1
  %86 = load %struct.Token*, %struct.Token** %85, align 8
  %87 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %86, %struct.Token** %87, align 8
  %88 = load %struct.Member*, %struct.Member** %9, align 8
  store %struct.Member* %88, %struct.Member** %4, align 8
  br label %96

89:                                               ; preds = %68, %58
  br label %90

90:                                               ; preds = %89, %57
  %91 = load %struct.Member*, %struct.Member** %9, align 8
  %92 = getelementptr inbounds %struct.Member, %struct.Member* %91, i32 0, i32 0
  %93 = load %struct.Member*, %struct.Member** %92, align 8
  store %struct.Member* %93, %struct.Member** %9, align 8
  br label %23, !llvm.loop !135

94:                                               ; preds = %23
  %95 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %95, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.152.809, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

96:                                               ; preds = %83, %52
  %97 = load %struct.Member*, %struct.Member** %4, align 8
  ret %struct.Member* %97
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @designation(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Initializer* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.Token*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.Member*, align 8
  %12 = alloca %struct.Member*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Initializer* %2, %struct.Initializer** %6, align 8
  %13 = load %struct.Token*, %struct.Token** %5, align 8
  %14 = call zeroext i1 @equal(%struct.Token* noundef %13, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119.685, i64 0, i64 0))
  br i1 %14, label %15, label %52

15:                                               ; preds = %3
  %16 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %17 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %16, i32 0, i32 1
  %18 = load %struct.Type*, %struct.Type** %17, align 8
  %19 = getelementptr inbounds %struct.Type, %struct.Type* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp ne i32 %20, 12
  br i1 %21, label %22, label %24

22:                                               ; preds = %15
  %23 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %23, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.148.803, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

24:                                               ; preds = %15
  %25 = load %struct.Token*, %struct.Token** %5, align 8
  %26 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %27 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %26, i32 0, i32 1
  %28 = load %struct.Type*, %struct.Type** %27, align 8
  call void @array_designator(%struct.Token** noundef %5, %struct.Token* noundef %25, %struct.Type* noundef %28, i32* noundef %7, i32* noundef %8)
  %29 = load i32, i32* %7, align 4
  store i32 %29, i32* %10, align 4
  br label %30

30:                                               ; preds = %43, %24
  %31 = load i32, i32* %10, align 4
  %32 = load i32, i32* %8, align 4
  %33 = icmp sle i32 %31, %32
  br i1 %33, label %34, label %46

34:                                               ; preds = %30
  %35 = load %struct.Token*, %struct.Token** %5, align 8
  %36 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %37 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %36, i32 0, i32 5
  %38 = load %struct.Initializer**, %struct.Initializer*** %37, align 8
  %39 = load i32, i32* %10, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %38, i64 %40
  %42 = load %struct.Initializer*, %struct.Initializer** %41, align 8
  call void @designation(%struct.Token** noundef %9, %struct.Token* noundef %35, %struct.Initializer* noundef %42)
  br label %43

43:                                               ; preds = %34
  %44 = load i32, i32* %10, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %10, align 4
  br label %30, !llvm.loop !136

46:                                               ; preds = %30
  %47 = load %struct.Token**, %struct.Token*** %4, align 8
  %48 = load %struct.Token*, %struct.Token** %9, align 8
  %49 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %50 = load i32, i32* %7, align 4
  %51 = add nsw i32 %50, 1
  call void @array_initializer2(%struct.Token** noundef %47, %struct.Token* noundef %48, %struct.Initializer* noundef %49, i32 noundef %51)
  br label %131

52:                                               ; preds = %3
  %53 = load %struct.Token*, %struct.Token** %5, align 8
  %54 = call zeroext i1 @equal(%struct.Token* noundef %53, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134.687, i64 0, i64 0))
  br i1 %54, label %55, label %86

55:                                               ; preds = %52
  %56 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %57 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %56, i32 0, i32 1
  %58 = load %struct.Type*, %struct.Type** %57, align 8
  %59 = getelementptr inbounds %struct.Type, %struct.Type* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 14
  br i1 %61, label %62, label %86

62:                                               ; preds = %55
  %63 = load %struct.Token*, %struct.Token** %5, align 8
  %64 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %65 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %64, i32 0, i32 1
  %66 = load %struct.Type*, %struct.Type** %65, align 8
  %67 = call %struct.Member* @struct_designator(%struct.Token** noundef %5, %struct.Token* noundef %63, %struct.Type* noundef %66)
  store %struct.Member* %67, %struct.Member** %11, align 8
  %68 = load %struct.Token*, %struct.Token** %5, align 8
  %69 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %70 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %69, i32 0, i32 5
  %71 = load %struct.Initializer**, %struct.Initializer*** %70, align 8
  %72 = load %struct.Member*, %struct.Member** %11, align 8
  %73 = getelementptr inbounds %struct.Member, %struct.Member* %72, i32 0, i32 4
  %74 = load i32, i32* %73, align 8
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %71, i64 %75
  %77 = load %struct.Initializer*, %struct.Initializer** %76, align 8
  call void @designation(%struct.Token** noundef %5, %struct.Token* noundef %68, %struct.Initializer* noundef %77)
  %78 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %79 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %78, i32 0, i32 4
  store %struct.Node* null, %struct.Node** %79, align 8
  %80 = load %struct.Token**, %struct.Token*** %4, align 8
  %81 = load %struct.Token*, %struct.Token** %5, align 8
  %82 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %83 = load %struct.Member*, %struct.Member** %11, align 8
  %84 = getelementptr inbounds %struct.Member, %struct.Member* %83, i32 0, i32 0
  %85 = load %struct.Member*, %struct.Member** %84, align 8
  call void @struct_initializer2(%struct.Token** noundef %80, %struct.Token* noundef %81, %struct.Initializer* noundef %82, %struct.Member* noundef %85)
  br label %131

86:                                               ; preds = %55, %52
  %87 = load %struct.Token*, %struct.Token** %5, align 8
  %88 = call zeroext i1 @equal(%struct.Token* noundef %87, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134.687, i64 0, i64 0))
  br i1 %88, label %89, label %116

89:                                               ; preds = %86
  %90 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %91 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %90, i32 0, i32 1
  %92 = load %struct.Type*, %struct.Type** %91, align 8
  %93 = getelementptr inbounds %struct.Type, %struct.Type* %92, i32 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 15
  br i1 %95, label %96, label %116

96:                                               ; preds = %89
  %97 = load %struct.Token*, %struct.Token** %5, align 8
  %98 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %99 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %98, i32 0, i32 1
  %100 = load %struct.Type*, %struct.Type** %99, align 8
  %101 = call %struct.Member* @struct_designator(%struct.Token** noundef %5, %struct.Token* noundef %97, %struct.Type* noundef %100)
  store %struct.Member* %101, %struct.Member** %12, align 8
  %102 = load %struct.Member*, %struct.Member** %12, align 8
  %103 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %104 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %103, i32 0, i32 6
  store %struct.Member* %102, %struct.Member** %104, align 8
  %105 = load %struct.Token**, %struct.Token*** %4, align 8
  %106 = load %struct.Token*, %struct.Token** %5, align 8
  %107 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %108 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %107, i32 0, i32 5
  %109 = load %struct.Initializer**, %struct.Initializer*** %108, align 8
  %110 = load %struct.Member*, %struct.Member** %12, align 8
  %111 = getelementptr inbounds %struct.Member, %struct.Member* %110, i32 0, i32 4
  %112 = load i32, i32* %111, align 8
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %109, i64 %113
  %115 = load %struct.Initializer*, %struct.Initializer** %114, align 8
  call void @designation(%struct.Token** noundef %105, %struct.Token* noundef %106, %struct.Initializer* noundef %115)
  br label %131

116:                                              ; preds = %89, %86
  %117 = load %struct.Token*, %struct.Token** %5, align 8
  %118 = call zeroext i1 @equal(%struct.Token* noundef %117, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.134.687, i64 0, i64 0))
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  %120 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %120, i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.149.804, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

121:                                              ; preds = %116
  %122 = load %struct.Token*, %struct.Token** %5, align 8
  %123 = call zeroext i1 @equal(%struct.Token* noundef %122, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150.590, i64 0, i64 0))
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = load %struct.Token*, %struct.Token** %5, align 8
  %126 = call %struct.Token* @skip(%struct.Token* noundef %125, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150.590, i64 0, i64 0))
  store %struct.Token* %126, %struct.Token** %5, align 8
  br label %127

127:                                              ; preds = %124, %121
  %128 = load %struct.Token**, %struct.Token*** %4, align 8
  %129 = load %struct.Token*, %struct.Token** %5, align 8
  %130 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @initializer2(%struct.Token** noundef %128, %struct.Token* noundef %129, %struct.Initializer* noundef %130)
  br label %131

131:                                              ; preds = %127, %96, %62, %46
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @initializer3(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Initializer* noundef %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca %struct.Node*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  store %struct.Initializer* %2, %struct.Initializer** %6, align 8
  %8 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %9 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %8, i32 0, i32 1
  %10 = load %struct.Type*, %struct.Type** %9, align 8
  %11 = getelementptr inbounds %struct.Type, %struct.Type* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 14
  br i1 %13, label %14, label %42

14:                                               ; preds = %3
  %15 = load %struct.Token**, %struct.Token*** %4, align 8
  %16 = load %struct.Token*, %struct.Token** %5, align 8
  %17 = call %struct.Node* @assign(%struct.Token** noundef %15, %struct.Token* noundef %16)
  store %struct.Node* %17, %struct.Node** %7, align 8
  %18 = load %struct.Node*, %struct.Node** %7, align 8
  call void @add_type(%struct.Node* noundef %18)
  %19 = load %struct.Node*, %struct.Node** %7, align 8
  %20 = getelementptr inbounds %struct.Node, %struct.Node* %19, i32 0, i32 2
  %21 = load %struct.Type*, %struct.Type** %20, align 16
  %22 = getelementptr inbounds %struct.Type, %struct.Type* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 14
  br i1 %24, label %32, label %25

25:                                               ; preds = %14
  %26 = load %struct.Node*, %struct.Node** %7, align 8
  %27 = getelementptr inbounds %struct.Node, %struct.Node* %26, i32 0, i32 2
  %28 = load %struct.Type*, %struct.Type** %27, align 16
  %29 = getelementptr inbounds %struct.Type, %struct.Type* %28, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 15
  br i1 %31, label %32, label %36

32:                                               ; preds = %25, %14
  %33 = load %struct.Node*, %struct.Node** %7, align 8
  %34 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %35 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %34, i32 0, i32 4
  store %struct.Node* %33, %struct.Node** %35, align 8
  br label %42

36:                                               ; preds = %25
  %37 = load %struct.Token**, %struct.Token*** %4, align 8
  %38 = load %struct.Token*, %struct.Token** %5, align 8
  %39 = call %struct.Node* @assign(%struct.Token** noundef %37, %struct.Token* noundef %38)
  %40 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  %41 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %40, i32 0, i32 4
  store %struct.Node* %39, %struct.Node** %41, align 8
  br label %42

42:                                               ; preds = %36, %32, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @array_designator(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2, i32* noundef %3, i32* noundef %4) #0 {
  %6 = alloca %struct.Token**, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca %struct.Type*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  store %struct.Token** %0, %struct.Token*** %6, align 8
  store %struct.Token* %1, %struct.Token** %7, align 8
  store %struct.Type* %2, %struct.Type** %8, align 8
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  %11 = load %struct.Token*, %struct.Token** %7, align 8
  %12 = getelementptr inbounds %struct.Token, %struct.Token* %11, i32 0, i32 1
  %13 = load %struct.Token*, %struct.Token** %12, align 8
  %14 = call i64 @const_expr(%struct.Token** noundef %7, %struct.Token* noundef %13)
  %15 = trunc i64 %14 to i32
  %16 = load i32*, i32** %9, align 8
  store i32 %15, i32* %16, align 4
  %17 = load i32*, i32** %9, align 8
  %18 = load i32, i32* %17, align 4
  %19 = load %struct.Type*, %struct.Type** %8, align 8
  %20 = getelementptr inbounds %struct.Type, %struct.Type* %19, i32 0, i32 11
  %21 = load i32, i32* %20, align 8
  %22 = icmp sge i32 %18, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %5
  %24 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %24, i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.145.805, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

25:                                               ; preds = %5
  %26 = load %struct.Token*, %struct.Token** %7, align 8
  %27 = call zeroext i1 @equal(%struct.Token* noundef %26, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120.723, i64 0, i64 0))
  br i1 %27, label %28, label %56

28:                                               ; preds = %25
  %29 = load %struct.Token*, %struct.Token** %7, align 8
  %30 = getelementptr inbounds %struct.Token, %struct.Token* %29, i32 0, i32 1
  %31 = load %struct.Token*, %struct.Token** %30, align 8
  %32 = call i64 @const_expr(%struct.Token** noundef %7, %struct.Token* noundef %31)
  %33 = trunc i64 %32 to i32
  %34 = load i32*, i32** %10, align 8
  store i32 %33, i32* %34, align 4
  %35 = load i32*, i32** %10, align 8
  %36 = load i32, i32* %35, align 4
  %37 = load %struct.Type*, %struct.Type** %8, align 8
  %38 = getelementptr inbounds %struct.Type, %struct.Type* %37, i32 0, i32 11
  %39 = load i32, i32* %38, align 8
  %40 = icmp sge i32 %36, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %28
  %42 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %42, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.146.806, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

43:                                               ; preds = %28
  %44 = load i32*, i32** %10, align 8
  %45 = load i32, i32* %44, align 4
  %46 = load i32*, i32** %9, align 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %45, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %43
  %50 = load %struct.Token*, %struct.Token** %7, align 8
  %51 = load i32*, i32** %9, align 8
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %10, align 8
  %54 = load i32, i32* %53, align 4
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %50, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.147.807, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0), i32 noundef %52, i32 noundef %54) #11
  unreachable

55:                                               ; preds = %43
  br label %60

56:                                               ; preds = %25
  %57 = load i32*, i32** %9, align 8
  %58 = load i32, i32* %57, align 4
  %59 = load i32*, i32** %10, align 8
  store i32 %58, i32* %59, align 4
  br label %60

60:                                               ; preds = %56, %55
  %61 = load %struct.Token*, %struct.Token** %7, align 8
  %62 = call %struct.Token* @skip(%struct.Token* noundef %61, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125.686, i64 0, i64 0))
  %63 = load %struct.Token**, %struct.Token*** %6, align 8
  store %struct.Token* %62, %struct.Token** %63, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_end(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %3 = load %struct.Token*, %struct.Token** %2, align 8
  %4 = call zeroext i1 @equal(%struct.Token* noundef %3, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = load %struct.Token*, %struct.Token** %2, align 8
  %7 = call zeroext i1 @equal(%struct.Token* noundef %6, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = load %struct.Token*, %struct.Token** %2, align 8
  %10 = getelementptr inbounds %struct.Token, %struct.Token* %9, i32 0, i32 1
  %11 = load %struct.Token*, %struct.Token** %10, align 8
  %12 = call zeroext i1 @equal(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  br label %13

13:                                               ; preds = %8, %5
  %14 = phi i1 [ false, %5 ], [ %12, %8 ]
  br label %15

15:                                               ; preds = %13, %1
  %16 = phi i1 [ true, %1 ], [ %14, %13 ]
  ret i1 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @skip_excess_element(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %4 = load %struct.Token*, %struct.Token** %3, align 8
  %5 = call zeroext i1 @equal(%struct.Token* noundef %4, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.679, i64 0, i64 0))
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = load %struct.Token*, %struct.Token** %3, align 8
  %8 = getelementptr inbounds %struct.Token, %struct.Token* %7, i32 0, i32 1
  %9 = load %struct.Token*, %struct.Token** %8, align 8
  %10 = call %struct.Token* @skip_excess_element(%struct.Token* noundef %9)
  store %struct.Token* %10, %struct.Token** %3, align 8
  %11 = load %struct.Token*, %struct.Token** %3, align 8
  %12 = call %struct.Token* @skip(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143.712, i64 0, i64 0))
  store %struct.Token* %12, %struct.Token** %2, align 8
  br label %17

13:                                               ; preds = %1
  %14 = load %struct.Token*, %struct.Token** %3, align 8
  %15 = call %struct.Node* @assign(%struct.Token** noundef %3, %struct.Token* noundef %14)
  %16 = load %struct.Token*, %struct.Token** %3, align 8
  store %struct.Token* %16, %struct.Token** %2, align 8
  br label %17

17:                                               ; preds = %13, %6
  %18 = load %struct.Token*, %struct.Token** %2, align 8
  ret %struct.Token* %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @count_array_init_elements(%struct.Token* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.Initializer*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  store i8 1, i8* %5, align 1
  %9 = load %struct.Type*, %struct.Type** %4, align 8
  %10 = getelementptr inbounds %struct.Type, %struct.Type* %9, i32 0, i32 8
  %11 = load %struct.Type*, %struct.Type** %10, align 8
  %12 = call %struct.Initializer* @new_initializer(%struct.Type* noundef %11, i1 noundef zeroext true)
  store %struct.Initializer* %12, %struct.Initializer** %6, align 8
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %13

13:                                               ; preds = %58, %2
  %14 = load %struct.Token*, %struct.Token** %3, align 8
  %15 = call zeroext i1 @consume_end(%struct.Token** noundef %3, %struct.Token* noundef %14)
  %16 = xor i1 %15, true
  br i1 %16, label %17, label %60

17:                                               ; preds = %13
  %18 = load i8, i8* %5, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = load %struct.Token*, %struct.Token** %3, align 8
  %22 = call %struct.Token* @skip(%struct.Token* noundef %21, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122.589, i64 0, i64 0))
  store %struct.Token* %22, %struct.Token** %3, align 8
  br label %23

23:                                               ; preds = %20, %17
  store i8 0, i8* %5, align 1
  %24 = load %struct.Token*, %struct.Token** %3, align 8
  %25 = call zeroext i1 @equal(%struct.Token* noundef %24, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119.685, i64 0, i64 0))
  br i1 %25, label %26, label %45

26:                                               ; preds = %23
  %27 = load %struct.Token*, %struct.Token** %3, align 8
  %28 = getelementptr inbounds %struct.Token, %struct.Token* %27, i32 0, i32 1
  %29 = load %struct.Token*, %struct.Token** %28, align 8
  %30 = call i64 @const_expr(%struct.Token** noundef %3, %struct.Token* noundef %29)
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %7, align 4
  %32 = load %struct.Token*, %struct.Token** %3, align 8
  %33 = call zeroext i1 @equal(%struct.Token* noundef %32, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120.723, i64 0, i64 0))
  br i1 %33, label %34, label %40

34:                                               ; preds = %26
  %35 = load %struct.Token*, %struct.Token** %3, align 8
  %36 = getelementptr inbounds %struct.Token, %struct.Token* %35, i32 0, i32 1
  %37 = load %struct.Token*, %struct.Token** %36, align 8
  %38 = call i64 @const_expr(%struct.Token** noundef %3, %struct.Token* noundef %37)
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %7, align 4
  br label %40

40:                                               ; preds = %34, %26
  %41 = load %struct.Token*, %struct.Token** %3, align 8
  %42 = call %struct.Token* @skip(%struct.Token* noundef %41, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125.686, i64 0, i64 0))
  store %struct.Token* %42, %struct.Token** %3, align 8
  %43 = load %struct.Token*, %struct.Token** %3, align 8
  %44 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @designation(%struct.Token** noundef %3, %struct.Token* noundef %43, %struct.Initializer* noundef %44)
  br label %48

45:                                               ; preds = %23
  %46 = load %struct.Token*, %struct.Token** %3, align 8
  %47 = load %struct.Initializer*, %struct.Initializer** %6, align 8
  call void @initializer2(%struct.Token** noundef %3, %struct.Token* noundef %46, %struct.Initializer* noundef %47)
  br label %48

48:                                               ; preds = %45, %40
  %49 = load i32, i32* %7, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %7, align 4
  %51 = load i32, i32* %8, align 4
  %52 = load i32, i32* %7, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = load i32, i32* %7, align 4
  br label %58

56:                                               ; preds = %48
  %57 = load i32, i32* %8, align 4
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i32 [ %55, %54 ], [ %57, %56 ]
  store i32 %59, i32* %8, align 4
  br label %13, !llvm.loop !137

60:                                               ; preds = %13
  %61 = load i32, i32* %8, align 4
  ret i32 %61
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Relocation* @write_gvar_data(%struct.Relocation* noundef %0, %struct.Initializer* noundef %1, %struct.Type* noundef %2, i8* noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.Relocation*, align 8
  %7 = alloca %struct.Relocation*, align 8
  %8 = alloca %struct.Initializer*, align 8
  %9 = alloca %struct.Type*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.Member*, align 8
  %15 = alloca %struct.Node*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8**, align 8
  %22 = alloca i64, align 8
  %23 = alloca %struct.Relocation*, align 8
  store %struct.Relocation* %0, %struct.Relocation** %7, align 8
  store %struct.Initializer* %1, %struct.Initializer** %8, align 8
  store %struct.Type* %2, %struct.Type** %9, align 8
  store i8* %3, i8** %10, align 8
  store i32 %4, i32* %11, align 4
  %24 = load %struct.Type*, %struct.Type** %9, align 8
  %25 = getelementptr inbounds %struct.Type, %struct.Type* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 12
  br i1 %27, label %28, label %64

28:                                               ; preds = %5
  %29 = load %struct.Type*, %struct.Type** %9, align 8
  %30 = getelementptr inbounds %struct.Type, %struct.Type* %29, i32 0, i32 8
  %31 = load %struct.Type*, %struct.Type** %30, align 8
  %32 = getelementptr inbounds %struct.Type, %struct.Type* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %12, align 4
  store i32 0, i32* %13, align 4
  br label %34

34:                                               ; preds = %59, %28
  %35 = load i32, i32* %13, align 4
  %36 = load %struct.Type*, %struct.Type** %9, align 8
  %37 = getelementptr inbounds %struct.Type, %struct.Type* %36, i32 0, i32 11
  %38 = load i32, i32* %37, align 8
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %40, label %62

40:                                               ; preds = %34
  %41 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  %42 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %43 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %42, i32 0, i32 5
  %44 = load %struct.Initializer**, %struct.Initializer*** %43, align 8
  %45 = load i32, i32* %13, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %44, i64 %46
  %48 = load %struct.Initializer*, %struct.Initializer** %47, align 8
  %49 = load %struct.Type*, %struct.Type** %9, align 8
  %50 = getelementptr inbounds %struct.Type, %struct.Type* %49, i32 0, i32 8
  %51 = load %struct.Type*, %struct.Type** %50, align 8
  %52 = load i8*, i8** %10, align 8
  %53 = load i32, i32* %11, align 4
  %54 = load i32, i32* %12, align 4
  %55 = load i32, i32* %13, align 4
  %56 = mul nsw i32 %54, %55
  %57 = add nsw i32 %53, %56
  %58 = call %struct.Relocation* @write_gvar_data(%struct.Relocation* noundef %41, %struct.Initializer* noundef %48, %struct.Type* noundef %51, i8* noundef %52, i32 noundef %57)
  store %struct.Relocation* %58, %struct.Relocation** %7, align 8
  br label %59

59:                                               ; preds = %40
  %60 = load i32, i32* %13, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %13, align 4
  br label %34, !llvm.loop !138

62:                                               ; preds = %34
  %63 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  store %struct.Relocation* %63, %struct.Relocation** %6, align 8
  br label %278

64:                                               ; preds = %5
  %65 = load %struct.Type*, %struct.Type** %9, align 8
  %66 = getelementptr inbounds %struct.Type, %struct.Type* %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 14
  br i1 %68, label %69, label %166

69:                                               ; preds = %64
  %70 = load %struct.Type*, %struct.Type** %9, align 8
  %71 = getelementptr inbounds %struct.Type, %struct.Type* %70, i32 0, i32 14
  %72 = load %struct.Member*, %struct.Member** %71, align 8
  store %struct.Member* %72, %struct.Member** %14, align 8
  br label %73

73:                                               ; preds = %160, %69
  %74 = load %struct.Member*, %struct.Member** %14, align 8
  %75 = icmp ne %struct.Member* %74, null
  br i1 %75, label %76, label %164

76:                                               ; preds = %73
  %77 = load %struct.Member*, %struct.Member** %14, align 8
  %78 = getelementptr inbounds %struct.Member, %struct.Member* %77, i32 0, i32 7
  %79 = load i8, i8* %78, align 4
  %80 = trunc i8 %79 to i1
  br i1 %80, label %81, label %138

81:                                               ; preds = %76
  %82 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %83 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %82, i32 0, i32 5
  %84 = load %struct.Initializer**, %struct.Initializer*** %83, align 8
  %85 = load %struct.Member*, %struct.Member** %14, align 8
  %86 = getelementptr inbounds %struct.Member, %struct.Member* %85, i32 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %84, i64 %88
  %90 = load %struct.Initializer*, %struct.Initializer** %89, align 8
  %91 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %90, i32 0, i32 4
  %92 = load %struct.Node*, %struct.Node** %91, align 8
  store %struct.Node* %92, %struct.Node** %15, align 8
  %93 = load %struct.Node*, %struct.Node** %15, align 8
  %94 = icmp ne %struct.Node* %93, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %81
  br label %164

96:                                               ; preds = %81
  %97 = load i8*, i8** %10, align 8
  %98 = load i32, i32* %11, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %97, i64 %99
  %101 = load %struct.Member*, %struct.Member** %14, align 8
  %102 = getelementptr inbounds %struct.Member, %struct.Member* %101, i32 0, i32 6
  %103 = load i32, i32* %102, align 8
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %100, i64 %104
  store i8* %105, i8** %16, align 8
  %106 = load i8*, i8** %16, align 8
  %107 = load %struct.Member*, %struct.Member** %14, align 8
  %108 = getelementptr inbounds %struct.Member, %struct.Member* %107, i32 0, i32 1
  %109 = load %struct.Type*, %struct.Type** %108, align 8
  %110 = getelementptr inbounds %struct.Type, %struct.Type* %109, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = call i64 @read_buf(i8* noundef %106, i32 noundef %111)
  store i64 %112, i64* %17, align 8
  %113 = load %struct.Node*, %struct.Node** %15, align 8
  %114 = call i64 @eval(%struct.Node* noundef %113)
  store i64 %114, i64* %18, align 8
  %115 = load %struct.Member*, %struct.Member** %14, align 8
  %116 = getelementptr inbounds %struct.Member, %struct.Member* %115, i32 0, i32 9
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = shl i64 1, %118
  %120 = sub nsw i64 %119, 1
  store i64 %120, i64* %19, align 8
  %121 = load i64, i64* %17, align 8
  %122 = load i64, i64* %18, align 8
  %123 = load i64, i64* %19, align 8
  %124 = and i64 %122, %123
  %125 = load %struct.Member*, %struct.Member** %14, align 8
  %126 = getelementptr inbounds %struct.Member, %struct.Member* %125, i32 0, i32 8
  %127 = load i32, i32* %126, align 8
  %128 = zext i32 %127 to i64
  %129 = shl i64 %124, %128
  %130 = or i64 %121, %129
  store i64 %130, i64* %20, align 8
  %131 = load i8*, i8** %16, align 8
  %132 = load i64, i64* %20, align 8
  %133 = load %struct.Member*, %struct.Member** %14, align 8
  %134 = getelementptr inbounds %struct.Member, %struct.Member* %133, i32 0, i32 1
  %135 = load %struct.Type*, %struct.Type** %134, align 8
  %136 = getelementptr inbounds %struct.Type, %struct.Type* %135, i32 0, i32 1
  %137 = load i32, i32* %136, align 4
  call void @write_buf(i8* noundef %131, i64 noundef %132, i32 noundef %137)
  br label %159

138:                                              ; preds = %76
  %139 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  %140 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %141 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %140, i32 0, i32 5
  %142 = load %struct.Initializer**, %struct.Initializer*** %141, align 8
  %143 = load %struct.Member*, %struct.Member** %14, align 8
  %144 = getelementptr inbounds %struct.Member, %struct.Member* %143, i32 0, i32 4
  %145 = load i32, i32* %144, align 8
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %142, i64 %146
  %148 = load %struct.Initializer*, %struct.Initializer** %147, align 8
  %149 = load %struct.Member*, %struct.Member** %14, align 8
  %150 = getelementptr inbounds %struct.Member, %struct.Member* %149, i32 0, i32 1
  %151 = load %struct.Type*, %struct.Type** %150, align 8
  %152 = load i8*, i8** %10, align 8
  %153 = load i32, i32* %11, align 4
  %154 = load %struct.Member*, %struct.Member** %14, align 8
  %155 = getelementptr inbounds %struct.Member, %struct.Member* %154, i32 0, i32 6
  %156 = load i32, i32* %155, align 8
  %157 = add nsw i32 %153, %156
  %158 = call %struct.Relocation* @write_gvar_data(%struct.Relocation* noundef %139, %struct.Initializer* noundef %148, %struct.Type* noundef %151, i8* noundef %152, i32 noundef %157)
  store %struct.Relocation* %158, %struct.Relocation** %7, align 8
  br label %159

159:                                              ; preds = %138, %96
  br label %160

160:                                              ; preds = %159
  %161 = load %struct.Member*, %struct.Member** %14, align 8
  %162 = getelementptr inbounds %struct.Member, %struct.Member* %161, i32 0, i32 0
  %163 = load %struct.Member*, %struct.Member** %162, align 8
  store %struct.Member* %163, %struct.Member** %14, align 8
  br label %73, !llvm.loop !139

164:                                              ; preds = %95, %73
  %165 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  store %struct.Relocation* %165, %struct.Relocation** %6, align 8
  br label %278

166:                                              ; preds = %64
  %167 = load %struct.Type*, %struct.Type** %9, align 8
  %168 = getelementptr inbounds %struct.Type, %struct.Type* %167, i32 0, i32 0
  %169 = load i32, i32* %168, align 8
  %170 = icmp eq i32 %169, 15
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %173 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %172, i32 0, i32 6
  %174 = load %struct.Member*, %struct.Member** %173, align 8
  %175 = icmp ne %struct.Member* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %171
  %177 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  store %struct.Relocation* %177, %struct.Relocation** %6, align 8
  br label %278

178:                                              ; preds = %171
  %179 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  %180 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %181 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %180, i32 0, i32 5
  %182 = load %struct.Initializer**, %struct.Initializer*** %181, align 8
  %183 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %184 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %183, i32 0, i32 6
  %185 = load %struct.Member*, %struct.Member** %184, align 8
  %186 = getelementptr inbounds %struct.Member, %struct.Member* %185, i32 0, i32 4
  %187 = load i32, i32* %186, align 8
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds %struct.Initializer*, %struct.Initializer** %182, i64 %188
  %190 = load %struct.Initializer*, %struct.Initializer** %189, align 8
  %191 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %192 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %191, i32 0, i32 6
  %193 = load %struct.Member*, %struct.Member** %192, align 8
  %194 = getelementptr inbounds %struct.Member, %struct.Member* %193, i32 0, i32 1
  %195 = load %struct.Type*, %struct.Type** %194, align 8
  %196 = load i8*, i8** %10, align 8
  %197 = load i32, i32* %11, align 4
  %198 = call %struct.Relocation* @write_gvar_data(%struct.Relocation* noundef %179, %struct.Initializer* noundef %190, %struct.Type* noundef %195, i8* noundef %196, i32 noundef %197)
  store %struct.Relocation* %198, %struct.Relocation** %6, align 8
  br label %278

199:                                              ; preds = %166
  %200 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %201 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %200, i32 0, i32 4
  %202 = load %struct.Node*, %struct.Node** %201, align 8
  %203 = icmp ne %struct.Node* %202, null
  br i1 %203, label %206, label %204

204:                                              ; preds = %199
  %205 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  store %struct.Relocation* %205, %struct.Relocation** %6, align 8
  br label %278

206:                                              ; preds = %199
  %207 = load %struct.Type*, %struct.Type** %9, align 8
  %208 = getelementptr inbounds %struct.Type, %struct.Type* %207, i32 0, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = icmp eq i32 %209, 6
  br i1 %210, label %211, label %223

211:                                              ; preds = %206
  %212 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %213 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %212, i32 0, i32 4
  %214 = load %struct.Node*, %struct.Node** %213, align 8
  %215 = call double @eval_double(%struct.Node* noundef %214)
  %216 = fptrunc double %215 to float
  %217 = load i8*, i8** %10, align 8
  %218 = load i32, i32* %11, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %217, i64 %219
  %221 = bitcast i8* %220 to float*
  store float %216, float* %221, align 4
  %222 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  store %struct.Relocation* %222, %struct.Relocation** %6, align 8
  br label %278

223:                                              ; preds = %206
  %224 = load %struct.Type*, %struct.Type** %9, align 8
  %225 = getelementptr inbounds %struct.Type, %struct.Type* %224, i32 0, i32 0
  %226 = load i32, i32* %225, align 8
  %227 = icmp eq i32 %226, 7
  br i1 %227, label %228, label %239

228:                                              ; preds = %223
  %229 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %230 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %229, i32 0, i32 4
  %231 = load %struct.Node*, %struct.Node** %230, align 8
  %232 = call double @eval_double(%struct.Node* noundef %231)
  %233 = load i8*, i8** %10, align 8
  %234 = load i32, i32* %11, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i8, i8* %233, i64 %235
  %237 = bitcast i8* %236 to double*
  store double %232, double* %237, align 8
  %238 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  store %struct.Relocation* %238, %struct.Relocation** %6, align 8
  br label %278

239:                                              ; preds = %223
  store i8** null, i8*** %21, align 8
  %240 = load %struct.Initializer*, %struct.Initializer** %8, align 8
  %241 = getelementptr inbounds %struct.Initializer, %struct.Initializer* %240, i32 0, i32 4
  %242 = load %struct.Node*, %struct.Node** %241, align 8
  %243 = call i64 @eval2(%struct.Node* noundef %242, i8*** noundef %21)
  store i64 %243, i64* %22, align 8
  %244 = load i8**, i8*** %21, align 8
  %245 = icmp ne i8** %244, null
  br i1 %245, label %256, label %246

246:                                              ; preds = %239
  %247 = load i8*, i8** %10, align 8
  %248 = load i32, i32* %11, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8, i8* %247, i64 %249
  %251 = load i64, i64* %22, align 8
  %252 = load %struct.Type*, %struct.Type** %9, align 8
  %253 = getelementptr inbounds %struct.Type, %struct.Type* %252, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  call void @write_buf(i8* noundef %250, i64 noundef %251, i32 noundef %254)
  %255 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  store %struct.Relocation* %255, %struct.Relocation** %6, align 8
  br label %278

256:                                              ; preds = %239
  %257 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 32) #14
  %258 = bitcast i8* %257 to %struct.Relocation*
  store %struct.Relocation* %258, %struct.Relocation** %23, align 8
  %259 = load %struct.Relocation*, %struct.Relocation** %23, align 8
  %260 = icmp eq %struct.Relocation* %259, null
  br i1 %260, label %261, label %262

261:                                              ; preds = %256
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.164.816, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0)) #11
  unreachable

262:                                              ; preds = %256
  %263 = load i32, i32* %11, align 4
  %264 = load %struct.Relocation*, %struct.Relocation** %23, align 8
  %265 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %264, i32 0, i32 1
  store i32 %263, i32* %265, align 8
  %266 = load i8**, i8*** %21, align 8
  %267 = load %struct.Relocation*, %struct.Relocation** %23, align 8
  %268 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %267, i32 0, i32 2
  store i8** %266, i8*** %268, align 8
  %269 = load i64, i64* %22, align 8
  %270 = load %struct.Relocation*, %struct.Relocation** %23, align 8
  %271 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %270, i32 0, i32 3
  store i64 %269, i64* %271, align 8
  %272 = load %struct.Relocation*, %struct.Relocation** %23, align 8
  %273 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  %274 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %273, i32 0, i32 0
  store %struct.Relocation* %272, %struct.Relocation** %274, align 8
  %275 = load %struct.Relocation*, %struct.Relocation** %7, align 8
  %276 = getelementptr inbounds %struct.Relocation, %struct.Relocation* %275, i32 0, i32 0
  %277 = load %struct.Relocation*, %struct.Relocation** %276, align 8
  store %struct.Relocation* %277, %struct.Relocation** %6, align 8
  br label %278

278:                                              ; preds = %262, %246, %228, %211, %204, %178, %176, %164, %62
  %279 = load %struct.Relocation*, %struct.Relocation** %6, align 8
  ret %struct.Relocation* %279
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @read_buf(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 8
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i64
  store i64 %11, i64* %3, align 8
  br label %44

12:                                               ; preds = %2
  %13 = load i32, i32* %5, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %20

15:                                               ; preds = %12
  %16 = load i8*, i8** %4, align 8
  %17 = bitcast i8* %16 to i16*
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i64
  store i64 %19, i64* %3, align 8
  br label %44

20:                                               ; preds = %12
  %21 = load i32, i32* %5, align 4
  %22 = icmp eq i32 %21, 4
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = load i8*, i8** %4, align 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %3, align 8
  br label %44

28:                                               ; preds = %20
  %29 = load i32, i32* %5, align 4
  %30 = icmp eq i32 %29, 8
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = load i8*, i8** %4, align 8
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %3, align 8
  br label %44

35:                                               ; preds = %28
  %36 = load i32, i32* %5, align 4
  %37 = icmp eq i32 %36, 16
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  %39 = load i8*, i8** %4, align 8
  %40 = bitcast i8* %39 to x86_fp80*
  %41 = load x86_fp80, x86_fp80* %40, align 16
  %42 = fptoui x86_fp80 %41 to i64
  store i64 %42, i64* %3, align 8
  br label %44

43:                                               ; preds = %35
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.165.790, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0), i32 noundef 1727) #11
  unreachable

44:                                               ; preds = %38, %31, %23, %15, %8
  %45 = load i64, i64* %3, align 8
  ret i64 %45
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_buf(i8* noundef %0, i64 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = load i64, i64* %5, align 8
  %11 = trunc i64 %10 to i8
  %12 = load i8*, i8** %4, align 8
  store i8 %11, i8* %12, align 1
  br label %49

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = load i64, i64* %5, align 8
  %18 = trunc i64 %17 to i16
  %19 = load i8*, i8** %4, align 8
  %20 = bitcast i8* %19 to i16*
  store i16 %18, i16* %20, align 2
  br label %48

21:                                               ; preds = %13
  %22 = load i32, i32* %6, align 4
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  %25 = load i64, i64* %5, align 8
  %26 = trunc i64 %25 to i32
  %27 = load i8*, i8** %4, align 8
  %28 = bitcast i8* %27 to i32*
  store i32 %26, i32* %28, align 4
  br label %47

29:                                               ; preds = %21
  %30 = load i32, i32* %6, align 4
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = load i64, i64* %5, align 8
  %34 = load i8*, i8** %4, align 8
  %35 = bitcast i8* %34 to i64*
  store i64 %33, i64* %35, align 8
  br label %46

36:                                               ; preds = %29
  %37 = load i32, i32* %6, align 4
  %38 = icmp eq i32 %37, 16
  br i1 %38, label %39, label %44

39:                                               ; preds = %36
  %40 = load i64, i64* %5, align 8
  %41 = uitofp i64 %40 to x86_fp80
  %42 = load i8*, i8** %4, align 8
  %43 = bitcast i8* %42 to x86_fp80*
  store x86_fp80 %41, x86_fp80* %43, align 16
  br label %45

44:                                               ; preds = %36
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.165.790, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0), i32 noundef 1743) #11
  unreachable

45:                                               ; preds = %39
  br label %46

46:                                               ; preds = %45, %32
  br label %47

47:                                               ; preds = %46, %24
  br label %48

48:                                               ; preds = %47, %16
  br label %49

49:                                               ; preds = %48, %9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @abstract_declarator(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.Token*, align 8
  %9 = alloca %struct.Type, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.Type* %2, %struct.Type** %7, align 8
  %10 = load %struct.Token*, %struct.Token** %6, align 8
  %11 = load %struct.Type*, %struct.Type** %7, align 8
  %12 = call %struct.Type* @pointers(%struct.Token** noundef %6, %struct.Token* noundef %10, %struct.Type* noundef %11)
  store %struct.Type* %12, %struct.Type** %7, align 8
  %13 = load %struct.Token*, %struct.Token** %6, align 8
  %14 = call zeroext i1 @equal(%struct.Token* noundef %13, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85.677, i64 0, i64 0))
  br i1 %14, label %15, label %33

15:                                               ; preds = %3
  %16 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %16, %struct.Token** %8, align 8
  %17 = bitcast %struct.Type* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 128, i1 false)
  %18 = load %struct.Token*, %struct.Token** %8, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 1
  %20 = load %struct.Token*, %struct.Token** %19, align 8
  %21 = call %struct.Type* @abstract_declarator(%struct.Token** noundef %6, %struct.Token* noundef %20, %struct.Type* noundef %9)
  %22 = load %struct.Token*, %struct.Token** %6, align 8
  %23 = call %struct.Token* @skip(%struct.Token* noundef %22, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86.678, i64 0, i64 0))
  store %struct.Token* %23, %struct.Token** %6, align 8
  %24 = load %struct.Token**, %struct.Token*** %5, align 8
  %25 = load %struct.Token*, %struct.Token** %6, align 8
  %26 = load %struct.Type*, %struct.Type** %7, align 8
  %27 = call %struct.Type* @type_suffix(%struct.Token** noundef %24, %struct.Token* noundef %25, %struct.Type* noundef %26)
  store %struct.Type* %27, %struct.Type** %7, align 8
  %28 = load %struct.Token*, %struct.Token** %8, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 1
  %30 = load %struct.Token*, %struct.Token** %29, align 8
  %31 = load %struct.Type*, %struct.Type** %7, align 8
  %32 = call %struct.Type* @abstract_declarator(%struct.Token** noundef %6, %struct.Token* noundef %30, %struct.Type* noundef %31)
  store %struct.Type* %32, %struct.Type** %4, align 8
  br label %38

33:                                               ; preds = %3
  %34 = load %struct.Token**, %struct.Token*** %5, align 8
  %35 = load %struct.Token*, %struct.Token** %6, align 8
  %36 = load %struct.Type*, %struct.Type** %7, align 8
  %37 = call %struct.Type* @type_suffix(%struct.Token** noundef %34, %struct.Token* noundef %35, %struct.Type* noundef %36)
  store %struct.Type* %37, %struct.Type** %4, align 8
  br label %38

38:                                               ; preds = %33, %15
  %39 = load %struct.Type*, %struct.Type** %4, align 8
  ret %struct.Type* %39
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Obj* @parse(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.VarAttr, align 4
  %7 = alloca %struct.Type*, align 8
  %8 = alloca %struct.Obj*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %9 = load i8, i8* @isDotfile, align 1
  %10 = trunc i8 %9 to i1
  br i1 %10, label %11, label %58

11:                                               ; preds = %1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %13 = icmp eq %struct._IO_FILE* %12, null
  br i1 %13, label %14, label %58

14:                                               ; preds = %11
  %15 = load i8*, i8** @base_file, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %23

17:                                               ; preds = %14
  %18 = load i8*, i8** @opt_o, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %21, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.820, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0))
  call void @exit(i32 noundef 5) #12
  unreachable

23:                                               ; preds = %17, %14
  %24 = load i8*, i8** @opt_o, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = load i8*, i8** @opt_o, align 8
  br label %30

28:                                               ; preds = %23
  %29 = load i8*, i8** @base_file, align 8
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i8* [ %27, %26 ], [ %29, %28 ]
  %32 = call i8* @replace_extn(i8* noundef %31, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.821, i64 0, i64 0))
  store i8* %32, i8** %3, align 8
  %33 = load i8*, i8** @opt_o, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = load i8*, i8** @opt_o, align 8
  %37 = call i8* @extract_filename(i8* noundef %36)
  store i8* %37, i8** %5, align 8
  %38 = load i8*, i8** @opt_o, align 8
  %39 = load i8*, i8** %5, align 8
  %40 = call i8* @extract_path(i8* noundef %38, i8* noundef %39)
  store i8* %40, i8** %4, align 8
  %41 = load i8*, i8** %4, align 8
  %42 = load i8*, i8** %3, align 8
  %43 = load i8*, i8** %3, align 8
  %44 = call i64 @strlen(i8* noundef %43) #13
  %45 = call i8* @strncat(i8* noundef %41, i8* noundef %42, i64 noundef %44) #14
  %46 = load i8*, i8** %4, align 8
  store i8* %46, i8** %3, align 8
  br label %47

47:                                               ; preds = %35, %30
  %48 = load i8*, i8** %3, align 8
  %49 = call noalias %struct._IO_FILE* @fopen(i8* noundef %48, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.822, i64 0, i64 0))
  store %struct._IO_FILE* %49, %struct._IO_FILE** @dotf, align 8
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %51 = icmp eq %struct._IO_FILE* %50, null
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %53, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.823, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.577, i64 0, i64 0))
  call void @exit(i32 noundef 4) #12
  unreachable

55:                                               ; preds = %47
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @dotf, align 8
  %57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %56, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6.824, i64 0, i64 0))
  br label %58

58:                                               ; preds = %55, %11, %1
  %59 = load i8, i8* @opt_fbuiltin, align 1
  %60 = trunc i8 %59 to i1
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @declare_builtin_functions()
  br label %62

62:                                               ; preds = %61, %58
  store %struct.Obj* null, %struct.Obj** @globals, align 8
  br label %63

63:                                               ; preds = %86, %82, %75, %62
  %64 = load %struct.Token*, %struct.Token** %2, align 8
  %65 = getelementptr inbounds %struct.Token, %struct.Token* %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 16
  %67 = icmp ne i32 %66, 6
  br i1 %67, label %68, label %90

68:                                               ; preds = %63
  %69 = bitcast %struct.VarAttr* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %69, i8 0, i64 12, i1 false)
  %70 = load %struct.Token*, %struct.Token** %2, align 8
  %71 = call %struct.Type* @declspec(%struct.Token** noundef %2, %struct.Token* noundef %70, %struct.VarAttr* noundef %6)
  store %struct.Type* %71, %struct.Type** %7, align 8
  %72 = getelementptr inbounds %struct.VarAttr, %struct.VarAttr* %6, i32 0, i32 0
  %73 = load i8, i8* %72, align 4
  %74 = trunc i8 %73 to i1
  br i1 %74, label %75, label %79

75:                                               ; preds = %68
  %76 = load %struct.Token*, %struct.Token** %2, align 8
  %77 = load %struct.Type*, %struct.Type** %7, align 8
  %78 = call %struct.Token* @parse_typedef(%struct.Token* noundef %76, %struct.Type* noundef %77)
  store %struct.Token* %78, %struct.Token** %2, align 8
  br label %63, !llvm.loop !140

79:                                               ; preds = %68
  %80 = load %struct.Token*, %struct.Token** %2, align 8
  %81 = call zeroext i1 @is_function(%struct.Token* noundef %80)
  br i1 %81, label %82, label %86

82:                                               ; preds = %79
  %83 = load %struct.Token*, %struct.Token** %2, align 8
  %84 = load %struct.Type*, %struct.Type** %7, align 8
  %85 = call %struct.Token* @function(%struct.Token* noundef %83, %struct.Type* noundef %84, %struct.VarAttr* noundef %6)
  store %struct.Token* %85, %struct.Token** %2, align 8
  br label %63, !llvm.loop !140

86:                                               ; preds = %79
  %87 = load %struct.Token*, %struct.Token** %2, align 8
  %88 = load %struct.Type*, %struct.Type** %7, align 8
  %89 = call %struct.Token* @global_variable(%struct.Token* noundef %87, %struct.Type* noundef %88, %struct.VarAttr* noundef %6)
  store %struct.Token* %89, %struct.Token** %2, align 8
  br label %63, !llvm.loop !140

90:                                               ; preds = %63
  %91 = load %struct.Obj*, %struct.Obj** @globals, align 8
  store %struct.Obj* %91, %struct.Obj** %8, align 8
  br label %92

92:                                               ; preds = %103, %90
  %93 = load %struct.Obj*, %struct.Obj** %8, align 8
  %94 = icmp ne %struct.Obj* %93, null
  br i1 %94, label %95, label %107

95:                                               ; preds = %92
  %96 = load %struct.Obj*, %struct.Obj** %8, align 8
  %97 = getelementptr inbounds %struct.Obj, %struct.Obj* %96, i32 0, i32 25
  %98 = load i8, i8* %97, align 1
  %99 = trunc i8 %98 to i1
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  %101 = load %struct.Obj*, %struct.Obj** %8, align 8
  call void @mark_live(%struct.Obj* noundef %101)
  br label %102

102:                                              ; preds = %100, %95
  br label %103

103:                                              ; preds = %102
  %104 = load %struct.Obj*, %struct.Obj** %8, align 8
  %105 = getelementptr inbounds %struct.Obj, %struct.Obj* %104, i32 0, i32 0
  %106 = load %struct.Obj*, %struct.Obj** %105, align 8
  store %struct.Obj* %106, %struct.Obj** %8, align 8
  br label %92, !llvm.loop !141

107:                                              ; preds = %92
  call void @scan_globals()
  %108 = load %struct.Obj*, %struct.Obj** @globals, align 8
  ret %struct.Obj* %108
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @declare_builtin_functions() #0 {
  %1 = alloca %struct.Type*, align 8
  %2 = load %struct.Type*, %struct.Type** @ty_void, align 8
  %3 = call %struct.Type* @pointer_to(%struct.Type* noundef %2)
  %4 = call %struct.Type* @func_type(%struct.Type* noundef %3)
  store %struct.Type* %4, %struct.Type** %1, align 8
  %5 = load %struct.Type*, %struct.Type** @ty_int, align 8
  %6 = call %struct.Type* @copy_type(%struct.Type* noundef %5)
  %7 = load %struct.Type*, %struct.Type** %1, align 8
  %8 = getelementptr inbounds %struct.Type, %struct.Type* %7, i32 0, i32 18
  store %struct.Type* %6, %struct.Type** %8, align 8
  %9 = load %struct.Type*, %struct.Type** %1, align 8
  %10 = call %struct.Obj* @new_gvar(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218.825, i64 0, i64 0), %struct.Type* noundef %9)
  store %struct.Obj* %10, %struct.Obj** @builtin_alloca.744, align 8
  %11 = load %struct.Obj*, %struct.Obj** @builtin_alloca.744, align 8
  %12 = getelementptr inbounds %struct.Obj, %struct.Obj* %11, i32 0, i32 11
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mark_live(%struct.Obj* noundef %0) #0 {
  %2 = alloca %struct.Obj*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.Obj*, align 8
  store %struct.Obj* %0, %struct.Obj** %2, align 8
  %5 = load %struct.Obj*, %struct.Obj** %2, align 8
  %6 = getelementptr inbounds %struct.Obj, %struct.Obj* %5, i32 0, i32 10
  %7 = load i8, i8* %6, align 4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = load %struct.Obj*, %struct.Obj** %2, align 8
  %11 = getelementptr inbounds %struct.Obj, %struct.Obj* %10, i32 0, i32 24
  %12 = load i8, i8* %11, align 4
  %13 = trunc i8 %12 to i1
  br i1 %13, label %14, label %15

14:                                               ; preds = %9, %1
  br label %43

15:                                               ; preds = %9
  %16 = load %struct.Obj*, %struct.Obj** %2, align 8
  %17 = getelementptr inbounds %struct.Obj, %struct.Obj* %16, i32 0, i32 24
  store i8 1, i8* %17, align 4
  store i32 0, i32* %3, align 4
  br label %18

18:                                               ; preds = %40, %15
  %19 = load i32, i32* %3, align 4
  %20 = load %struct.Obj*, %struct.Obj** %2, align 8
  %21 = getelementptr inbounds %struct.Obj, %struct.Obj* %20, i32 0, i32 26
  %22 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %19, %23
  br i1 %24, label %25, label %43

25:                                               ; preds = %18
  %26 = load %struct.Obj*, %struct.Obj** %2, align 8
  %27 = getelementptr inbounds %struct.Obj, %struct.Obj* %26, i32 0, i32 26
  %28 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %27, i32 0, i32 0
  %29 = load i8**, i8*** %28, align 8
  %30 = load i32, i32* %3, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %29, i64 %31
  %33 = load i8*, i8** %32, align 8
  %34 = call %struct.Obj* @find_func(i8* noundef %33)
  store %struct.Obj* %34, %struct.Obj** %4, align 8
  %35 = load %struct.Obj*, %struct.Obj** %4, align 8
  %36 = icmp ne %struct.Obj* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %25
  %38 = load %struct.Obj*, %struct.Obj** %4, align 8
  call void @mark_live(%struct.Obj* noundef %38)
  br label %39

39:                                               ; preds = %37, %25
  br label %40

40:                                               ; preds = %39
  %41 = load i32, i32* %3, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %3, align 4
  br label %18, !llvm.loop !142

43:                                               ; preds = %18, %14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @scan_globals() #0 {
  %1 = alloca %struct.Obj, align 8
  %2 = alloca %struct.Obj*, align 8
  %3 = alloca %struct.Obj*, align 8
  %4 = alloca %struct.Obj*, align 8
  store %struct.Obj* %1, %struct.Obj** %2, align 8
  %5 = load %struct.Obj*, %struct.Obj** @globals, align 8
  store %struct.Obj* %5, %struct.Obj** %3, align 8
  br label %6

6:                                                ; preds = %55, %0
  %7 = load %struct.Obj*, %struct.Obj** %3, align 8
  %8 = icmp ne %struct.Obj* %7, null
  br i1 %8, label %9, label %59

9:                                                ; preds = %6
  %10 = load %struct.Obj*, %struct.Obj** %3, align 8
  %11 = getelementptr inbounds %struct.Obj, %struct.Obj* %10, i32 0, i32 13
  %12 = load i8, i8* %11, align 1
  %13 = trunc i8 %12 to i1
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = load %struct.Obj*, %struct.Obj** %3, align 8
  %16 = load %struct.Obj*, %struct.Obj** %2, align 8
  %17 = getelementptr inbounds %struct.Obj, %struct.Obj* %16, i32 0, i32 0
  store %struct.Obj* %15, %struct.Obj** %17, align 8
  store %struct.Obj* %15, %struct.Obj** %2, align 8
  br label %55

18:                                               ; preds = %9
  %19 = load %struct.Obj*, %struct.Obj** @globals, align 8
  store %struct.Obj* %19, %struct.Obj** %4, align 8
  br label %20

20:                                               ; preds = %43, %18
  %21 = load %struct.Obj*, %struct.Obj** %4, align 8
  %22 = icmp ne %struct.Obj* %21, null
  br i1 %22, label %23, label %47

23:                                               ; preds = %20
  %24 = load %struct.Obj*, %struct.Obj** %3, align 8
  %25 = load %struct.Obj*, %struct.Obj** %4, align 8
  %26 = icmp ne %struct.Obj* %24, %25
  br i1 %26, label %27, label %42

27:                                               ; preds = %23
  %28 = load %struct.Obj*, %struct.Obj** %4, align 8
  %29 = getelementptr inbounds %struct.Obj, %struct.Obj* %28, i32 0, i32 11
  %30 = load i8, i8* %29, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %32, label %42

32:                                               ; preds = %27
  %33 = load %struct.Obj*, %struct.Obj** %3, align 8
  %34 = getelementptr inbounds %struct.Obj, %struct.Obj* %33, i32 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = load %struct.Obj*, %struct.Obj** %4, align 8
  %37 = getelementptr inbounds %struct.Obj, %struct.Obj* %36, i32 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 @strcmp(i8* noundef %35, i8* noundef %38) #13
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %32
  br label %47

42:                                               ; preds = %32, %27, %23
  br label %43

43:                                               ; preds = %42
  %44 = load %struct.Obj*, %struct.Obj** %4, align 8
  %45 = getelementptr inbounds %struct.Obj, %struct.Obj* %44, i32 0, i32 0
  %46 = load %struct.Obj*, %struct.Obj** %45, align 8
  store %struct.Obj* %46, %struct.Obj** %4, align 8
  br label %20, !llvm.loop !143

47:                                               ; preds = %41, %20
  %48 = load %struct.Obj*, %struct.Obj** %4, align 8
  %49 = icmp ne %struct.Obj* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = load %struct.Obj*, %struct.Obj** %3, align 8
  %52 = load %struct.Obj*, %struct.Obj** %2, align 8
  %53 = getelementptr inbounds %struct.Obj, %struct.Obj* %52, i32 0, i32 0
  store %struct.Obj* %51, %struct.Obj** %53, align 8
  store %struct.Obj* %51, %struct.Obj** %2, align 8
  br label %54

54:                                               ; preds = %50, %47
  br label %55

55:                                               ; preds = %54, %14
  %56 = load %struct.Obj*, %struct.Obj** %3, align 8
  %57 = getelementptr inbounds %struct.Obj, %struct.Obj* %56, i32 0, i32 0
  %58 = load %struct.Obj*, %struct.Obj** %57, align 8
  store %struct.Obj* %58, %struct.Obj** %3, align 8
  br label %6, !llvm.loop !144

59:                                               ; preds = %6
  %60 = load %struct.Obj*, %struct.Obj** %2, align 8
  %61 = getelementptr inbounds %struct.Obj, %struct.Obj* %60, i32 0, i32 0
  store %struct.Obj* null, %struct.Obj** %61, align 8
  %62 = getelementptr inbounds %struct.Obj, %struct.Obj* %1, i32 0, i32 0
  %63 = load %struct.Obj*, %struct.Obj** %62, align 8
  store %struct.Obj* %63, %struct.Obj** @globals, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @search_include_paths(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = icmp eq i32 %10, 47
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = load i8*, i8** %3, align 8
  store i8* %13, i8** %2, align 8
  br label %47

14:                                               ; preds = %1
  %15 = load i8*, i8** %3, align 8
  %16 = call i8* @hashmap_get(%struct.HashMap* noundef @search_include_paths.cache, i8* noundef %15)
  store i8* %16, i8** %4, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = load i8*, i8** %4, align 8
  store i8* %20, i8** %2, align 8
  br label %47

21:                                               ; preds = %14
  store i32 0, i32* %5, align 4
  br label %22

22:                                               ; preds = %43, %21
  %23 = load i32, i32* %5, align 4
  %24 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @include_paths, i32 0, i32 2), align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %46

26:                                               ; preds = %22
  %27 = load i8**, i8*** getelementptr inbounds (%struct.StringArray, %struct.StringArray* @include_paths, i32 0, i32 0), align 8
  %28 = load i32, i32* %5, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8*, i8** %27, i64 %29
  %31 = load i8*, i8** %30, align 8
  %32 = load i8*, i8** %3, align 8
  %33 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.828, i64 0, i64 0), i8* noundef %31, i8* noundef %32)
  store i8* %33, i8** %6, align 8
  %34 = load i8*, i8** %6, align 8
  %35 = call zeroext i1 @file_exists(i8* noundef %34)
  br i1 %35, label %37, label %36

36:                                               ; preds = %26
  br label %43

37:                                               ; preds = %26
  %38 = load i8*, i8** %3, align 8
  %39 = load i8*, i8** %6, align 8
  call void @hashmap_put(%struct.HashMap* noundef @search_include_paths.cache, i8* noundef %38, i8* noundef %39)
  %40 = load i32, i32* %5, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* @include_next_idx, align 4
  %42 = load i8*, i8** %6, align 8
  store i8* %42, i8** %2, align 8
  br label %47

43:                                               ; preds = %36
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %5, align 4
  br label %22, !llvm.loop !145

46:                                               ; preds = %22
  store i8* null, i8** %2, align 8
  br label %47

47:                                               ; preds = %46, %37, %19, %12
  %48 = load i8*, i8** %2, align 8
  ret i8* %48
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @define_macro(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Token*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call i32 @strncmp(i8* noundef %6, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.831, i64 0, i64 0), i64 noundef 15) #13
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = load i8*, i8** %4, align 8
  %11 = call %struct.File* @new_file(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.832, i64 0, i64 0), i32 noundef 1, i8* noundef %10)
  %12 = call %struct.Token* @tokenize(%struct.File* noundef %11)
  store %struct.Token* %12, %struct.Token** %5, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = load %struct.Token*, %struct.Token** %5, align 8
  %15 = call %struct.Macro* @add_macro(i8* noundef %13, i1 noundef zeroext true, %struct.Token* noundef %14)
  br label %16

16:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Macro* @add_macro(i8* noundef %0, i1 noundef zeroext %1, %struct.Token* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Macro*, align 8
  store i8* %0, i8** %4, align 8
  %8 = zext i1 %1 to i8
  store i8 %8, i8* %5, align 1
  store %struct.Token* %2, %struct.Token** %6, align 8
  %9 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 48) #14
  %10 = bitcast i8* %9 to %struct.Macro*
  store %struct.Macro* %10, %struct.Macro** %7, align 8
  %11 = load %struct.Macro*, %struct.Macro** %7, align 8
  %12 = icmp eq %struct.Macro* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66.833, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

14:                                               ; preds = %3
  %15 = load i8*, i8** %4, align 8
  %16 = load %struct.Macro*, %struct.Macro** %7, align 8
  %17 = getelementptr inbounds %struct.Macro, %struct.Macro* %16, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = load i8, i8* %5, align 1
  %19 = trunc i8 %18 to i1
  %20 = load %struct.Macro*, %struct.Macro** %7, align 8
  %21 = getelementptr inbounds %struct.Macro, %struct.Macro* %20, i32 0, i32 1
  %22 = zext i1 %19 to i8
  store i8 %22, i8* %21, align 8
  %23 = load %struct.Token*, %struct.Token** %6, align 8
  %24 = load %struct.Macro*, %struct.Macro** %7, align 8
  %25 = getelementptr inbounds %struct.Macro, %struct.Macro* %24, i32 0, i32 4
  store %struct.Token* %23, %struct.Token** %25, align 8
  %26 = load i8*, i8** %4, align 8
  %27 = load %struct.Macro*, %struct.Macro** %7, align 8
  %28 = bitcast %struct.Macro* %27 to i8*
  call void @hashmap_put(%struct.HashMap* noundef @macros, i8* noundef %26, i8* noundef %28)
  %29 = load %struct.Macro*, %struct.Macro** %7, align 8
  ret %struct.Macro* %29
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @undef_macro(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  call void @hashmap_delete(%struct.HashMap* noundef @macros, i8* noundef %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @init_macros() #0 {
  %1 = alloca i64, align 8
  %2 = alloca %struct.tm*, align 8
  call void @define_macro(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.839, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5.841, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.842, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.843, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.844, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.845, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10.846, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.847, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.848, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.847, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13.849, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.845, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.850, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.845, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.851, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.845, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.852, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.845, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.853, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.845, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18.854, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.855, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20.856, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.845, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21.857, i64 0, i64 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22.858, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23.859, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24.860, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25.861, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26.862, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27.863, i64 0, i64 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28.864, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29.865, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30.866, i64 0, i64 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.31.867, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.868, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33.869, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.870, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35.871, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36.872, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37.873, i64 0, i64 0), i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38.874, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39.875, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40.876, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41.877, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42.878, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43.879, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44.880, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45.881, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46.882, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47.883, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48.884, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49.885, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50.886, i64 0, i64 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51.887, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52.888, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53.889, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54.890, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55.891, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  call void @define_macro(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56.892, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.840, i64 0, i64 0))
  %3 = call %struct.Macro* @add_builtin(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.893, i64 0, i64 0), %struct.Token* (%struct.Token*)* noundef @file_macro)
  %4 = call %struct.Macro* @add_builtin(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58.894, i64 0, i64 0), %struct.Token* (%struct.Token*)* noundef @line_macro)
  %5 = call %struct.Macro* @add_builtin(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59.895, i64 0, i64 0), %struct.Token* (%struct.Token*)* noundef @counter_macro)
  %6 = call %struct.Macro* @add_builtin(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60.896, i64 0, i64 0), %struct.Token* (%struct.Token*)* noundef @timestamp_macro)
  %7 = call %struct.Macro* @add_builtin(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61.897, i64 0, i64 0), %struct.Token* (%struct.Token*)* noundef @base_file_macro)
  %8 = call i64 @time(i64* noundef null) #14
  store i64 %8, i64* %1, align 8
  %9 = call %struct.tm* @localtime(i64* noundef %1) #14
  store %struct.tm* %9, %struct.tm** %2, align 8
  %10 = load %struct.tm*, %struct.tm** %2, align 8
  %11 = call i8* @format_date(%struct.tm* noundef %10)
  call void @define_macro(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62.898, i64 0, i64 0), i8* noundef %11)
  %12 = load %struct.tm*, %struct.tm** %2, align 8
  %13 = call i8* @format_time(%struct.tm* noundef %12)
  call void @define_macro(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63.899, i64 0, i64 0), i8* noundef %13)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @file_macro(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  br label %3

3:                                                ; preds = %8, %1
  %4 = load %struct.Token*, %struct.Token** %2, align 8
  %5 = getelementptr inbounds %struct.Token, %struct.Token* %4, i32 0, i32 15
  %6 = load %struct.Token*, %struct.Token** %5, align 8
  %7 = icmp ne %struct.Token* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = load %struct.Token*, %struct.Token** %2, align 8
  %10 = getelementptr inbounds %struct.Token, %struct.Token* %9, i32 0, i32 15
  %11 = load %struct.Token*, %struct.Token** %10, align 8
  store %struct.Token* %11, %struct.Token** %2, align 8
  br label %3, !llvm.loop !146

12:                                               ; preds = %3
  %13 = load %struct.Token*, %struct.Token** %2, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 8
  %15 = load %struct.File*, %struct.File** %14, align 16
  %16 = getelementptr inbounds %struct.File, %struct.File* %15, i32 0, i32 3
  %17 = load i8*, i8** %16, align 8
  %18 = load %struct.Token*, %struct.Token** %2, align 8
  %19 = call %struct.Token* @new_str_token(i8* noundef %17, %struct.Token* noundef %18)
  ret %struct.Token* %19
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Macro* @add_builtin(i8* noundef %0, %struct.Token* (%struct.Token*)* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.Token* (%struct.Token*)*, align 8
  %5 = alloca %struct.Macro*, align 8
  store i8* %0, i8** %3, align 8
  store %struct.Token* (%struct.Token*)* %1, %struct.Token* (%struct.Token*)** %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call %struct.Macro* @add_macro(i8* noundef %6, i1 noundef zeroext true, %struct.Token* noundef null)
  store %struct.Macro* %7, %struct.Macro** %5, align 8
  %8 = load %struct.Token* (%struct.Token*)*, %struct.Token* (%struct.Token*)** %4, align 8
  %9 = load %struct.Macro*, %struct.Macro** %5, align 8
  %10 = getelementptr inbounds %struct.Macro, %struct.Macro* %9, i32 0, i32 5
  store %struct.Token* (%struct.Token*)* %8, %struct.Token* (%struct.Token*)** %10, align 8
  %11 = load %struct.Macro*, %struct.Macro** %5, align 8
  ret %struct.Macro* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @line_macro(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca i32, align 4
  store %struct.Token* %0, %struct.Token** %2, align 8
  br label %4

4:                                                ; preds = %9, %1
  %5 = load %struct.Token*, %struct.Token** %2, align 8
  %6 = getelementptr inbounds %struct.Token, %struct.Token* %5, i32 0, i32 15
  %7 = load %struct.Token*, %struct.Token** %6, align 8
  %8 = icmp ne %struct.Token* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = load %struct.Token*, %struct.Token** %2, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 15
  %12 = load %struct.Token*, %struct.Token** %11, align 8
  store %struct.Token* %12, %struct.Token** %2, align 8
  br label %4, !llvm.loop !147

13:                                               ; preds = %4
  %14 = load %struct.Token*, %struct.Token** %2, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 10
  %16 = load i32, i32* %15, align 16
  %17 = load %struct.Token*, %struct.Token** %2, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 8
  %19 = load %struct.File*, %struct.File** %18, align 16
  %20 = getelementptr inbounds %struct.File, %struct.File* %19, i32 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %16, %21
  store i32 %22, i32* %3, align 4
  %23 = load i32, i32* %3, align 4
  %24 = load %struct.Token*, %struct.Token** %2, align 8
  %25 = call %struct.Token* @new_num_token(i32 noundef %23, %struct.Token* noundef %24)
  ret %struct.Token* %25
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @counter_macro(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %3 = load i32, i32* @counter_macro.i, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* @counter_macro.i, align 4
  %5 = load %struct.Token*, %struct.Token** %2, align 8
  %6 = call %struct.Token* @new_num_token(i32 noundef %3, %struct.Token* noundef %5)
  ret %struct.Token* %6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @timestamp_macro(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.stat, align 8
  %5 = alloca [30 x i8], align 16
  store %struct.Token* %0, %struct.Token** %3, align 8
  %6 = load %struct.Token*, %struct.Token** %3, align 8
  %7 = getelementptr inbounds %struct.Token, %struct.Token* %6, i32 0, i32 8
  %8 = load %struct.File*, %struct.File** %7, align 16
  %9 = getelementptr inbounds %struct.File, %struct.File* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = call i32 @stat(i8* noundef %10, %struct.stat* noundef %4) #14
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = load %struct.Token*, %struct.Token** %3, align 8
  %15 = call %struct.Token* @new_str_token(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.69.903, i64 0, i64 0), %struct.Token* noundef %14)
  store %struct.Token* %15, %struct.Token** %2, align 8
  br label %25

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 12
  %18 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i32 0, i32 0
  %19 = getelementptr inbounds [30 x i8], [30 x i8]* %5, i64 0, i64 0
  %20 = call i8* @ctime_r(i64* noundef %18, i8* noundef %19) #14
  %21 = getelementptr inbounds [30 x i8], [30 x i8]* %5, i64 0, i64 24
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds [30 x i8], [30 x i8]* %5, i64 0, i64 0
  %23 = load %struct.Token*, %struct.Token** %3, align 8
  %24 = call %struct.Token* @new_str_token(i8* noundef %22, %struct.Token* noundef %23)
  store %struct.Token* %24, %struct.Token** %2, align 8
  br label %25

25:                                               ; preds = %16, %13
  %26 = load %struct.Token*, %struct.Token** %2, align 8
  ret %struct.Token* %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @base_file_macro(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %3 = load i8*, i8** @base_file, align 8
  %4 = load %struct.Token*, %struct.Token** %2, align 8
  %5 = call %struct.Token* @new_str_token(i8* noundef %3, %struct.Token* noundef %4)
  ret %struct.Token* %5
}

; Function Attrs: nounwind
declare i64 @time(i64* noundef) #6

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @format_date(%struct.tm* noundef %0) #0 {
  %2 = alloca %struct.tm*, align 8
  store %struct.tm* %0, %struct.tm** %2, align 8
  %3 = load %struct.tm*, %struct.tm** %2, align 8
  %4 = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [12 x [4 x i8]], [12 x [4 x i8]]* @format_date.mon, i64 0, i64 %6
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  %9 = load %struct.tm*, %struct.tm** %2, align 8
  %10 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = load %struct.tm*, %struct.tm** %2, align 8
  %13 = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, 1900
  %16 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70.901, i64 0, i64 0), i8* noundef %8, i32 noundef %11, i32 noundef %15)
  ret i8* %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @format_time(%struct.tm* noundef %0) #0 {
  %2 = alloca %struct.tm*, align 8
  store %struct.tm* %0, %struct.tm** %2, align 8
  %3 = load %struct.tm*, %struct.tm** %2, align 8
  %4 = getelementptr inbounds %struct.tm, %struct.tm* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = load %struct.tm*, %struct.tm** %2, align 8
  %7 = getelementptr inbounds %struct.tm, %struct.tm* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = load %struct.tm*, %struct.tm** %2, align 8
  %10 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71.900, i64 0, i64 0), i32 noundef %5, i32 noundef %8, i32 noundef %11)
  ret i8* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @new_str_token(i8* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call i8* @quote_string(i8* noundef %6)
  store i8* %7, i8** %5, align 8
  %8 = load %struct.Token*, %struct.Token** %4, align 8
  %9 = getelementptr inbounds %struct.Token, %struct.Token* %8, i32 0, i32 8
  %10 = load %struct.File*, %struct.File** %9, align 16
  %11 = getelementptr inbounds %struct.File, %struct.File* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 8
  %15 = load %struct.File*, %struct.File** %14, align 16
  %16 = getelementptr inbounds %struct.File, %struct.File* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = call %struct.File* @new_file(i8* noundef %12, i32 noundef %17, i8* noundef %18)
  %20 = call %struct.Token* @tokenize(%struct.File* noundef %19)
  ret %struct.Token* %20
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_string(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i32 3, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %37, %1
  %9 = load i8*, i8** %2, align 8
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %9, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  br i1 %14, label %15, label %40

15:                                               ; preds = %8
  %16 = load i8*, i8** %2, align 8
  %17 = load i32, i32* %4, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 92
  br i1 %22, label %31, label %23

23:                                               ; preds = %15
  %24 = load i8*, i8** %2, align 8
  %25 = load i32, i32* %4, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp eq i32 %29, 34
  br i1 %30, label %31, label %34

31:                                               ; preds = %23, %15
  %32 = load i32, i32* %3, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %3, align 4
  br label %34

34:                                               ; preds = %31, %23
  %35 = load i32, i32* %3, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %3, align 4
  br label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %4, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %4, align 4
  br label %8, !llvm.loop !148

40:                                               ; preds = %8
  %41 = load i32, i32* %3, align 4
  %42 = sext i32 %41 to i64
  %43 = call noalias i8* @calloc(i64 noundef 1, i64 noundef %42) #14
  store i8* %43, i8** %5, align 8
  %44 = load i8*, i8** %5, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %40
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.67.902, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

47:                                               ; preds = %40
  %48 = load i8*, i8** %5, align 8
  store i8* %48, i8** %6, align 8
  %49 = load i8*, i8** %6, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %6, align 8
  store i8 34, i8* %49, align 1
  store i32 0, i32* %7, align 4
  br label %51

51:                                               ; preds = %85, %47
  %52 = load i8*, i8** %2, align 8
  %53 = load i32, i32* %7, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = icmp ne i8 %56, 0
  br i1 %57, label %58, label %88

58:                                               ; preds = %51
  %59 = load i8*, i8** %2, align 8
  %60 = load i32, i32* %7, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %59, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %64, 92
  br i1 %65, label %74, label %66

66:                                               ; preds = %58
  %67 = load i8*, i8** %2, align 8
  %68 = load i32, i32* %7, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %67, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = sext i8 %71 to i32
  %73 = icmp eq i32 %72, 34
  br i1 %73, label %74, label %77

74:                                               ; preds = %66, %58
  %75 = load i8*, i8** %6, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %6, align 8
  store i8 92, i8* %75, align 1
  br label %77

77:                                               ; preds = %74, %66
  %78 = load i8*, i8** %2, align 8
  %79 = load i32, i32* %7, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = load i8*, i8** %6, align 8
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %6, align 8
  store i8 %82, i8* %83, align 1
  br label %85

85:                                               ; preds = %77
  %86 = load i32, i32* %7, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %7, align 4
  br label %51, !llvm.loop !149

88:                                               ; preds = %51
  %89 = load i8*, i8** %6, align 8
  %90 = getelementptr inbounds i8, i8* %89, i32 1
  store i8* %90, i8** %6, align 8
  store i8 34, i8* %89, align 1
  %91 = load i8*, i8** %6, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** %6, align 8
  store i8 0, i8* %91, align 1
  %93 = load i8*, i8** %5, align 8
  ret i8* %93
}

; Function Attrs: nounwind
declare i8* @ctime_r(i64* noundef, i8* noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @new_num_token(i32 noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.Token*, align 8
  %5 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load i32, i32* %3, align 4
  %7 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68.904, i64 0, i64 0), i32 noundef %6)
  store i8* %7, i8** %5, align 8
  %8 = load %struct.Token*, %struct.Token** %4, align 8
  %9 = getelementptr inbounds %struct.Token, %struct.Token* %8, i32 0, i32 8
  %10 = load %struct.File*, %struct.File** %9, align 16
  %11 = getelementptr inbounds %struct.File, %struct.File* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 8
  %15 = load %struct.File*, %struct.File** %14, align 16
  %16 = getelementptr inbounds %struct.File, %struct.File* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = call %struct.File* @new_file(i8* noundef %12, i32 noundef %17, i8* noundef %18)
  %20 = call %struct.Token* @tokenize(%struct.File* noundef %19)
  ret %struct.Token* %20
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Token* @preprocess(%struct.Token* noundef %0, i1 noundef zeroext %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca i8, align 1
  %5 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = load %struct.Token*, %struct.Token** %3, align 8
  %8 = call %struct.Token* @preprocess2(%struct.Token* noundef %7)
  store %struct.Token* %8, %struct.Token** %3, align 8
  %9 = load %struct.Token*, %struct.Token** %3, align 8
  %10 = call %struct.Token* @preprocess3(%struct.Token* noundef %9)
  store %struct.Token* %10, %struct.Token** %3, align 8
  %11 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %12 = icmp ne %struct.CondIncl* %11, null
  br i1 %12, label %13, label %20

13:                                               ; preds = %2
  %14 = load i8, i8* %4, align 1
  %15 = trunc i8 %14 to i1
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %18 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %17, i32 0, i32 2
  %19 = load %struct.Token*, %struct.Token** %18, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %19, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.64.907, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

20:                                               ; preds = %13, %2
  %21 = load %struct.Token*, %struct.Token** %3, align 8
  call void @convert_pp_tokens(%struct.Token* noundef %21)
  %22 = load %struct.Token*, %struct.Token** %3, align 8
  call void @join_adjacent_string_literals(%struct.Token* noundef %22)
  %23 = load %struct.Token*, %struct.Token** %3, align 8
  store %struct.Token* %23, %struct.Token** %5, align 8
  br label %24

24:                                               ; preds = %36, %20
  %25 = load %struct.Token*, %struct.Token** %5, align 8
  %26 = icmp ne %struct.Token* %25, null
  br i1 %26, label %27, label %40

27:                                               ; preds = %24
  %28 = load %struct.Token*, %struct.Token** %5, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 11
  %30 = load i32, i32* %29, align 4
  %31 = call i32 @abs(i32 noundef %30) #15
  %32 = load %struct.Token*, %struct.Token** %5, align 8
  %33 = getelementptr inbounds %struct.Token, %struct.Token* %32, i32 0, i32 10
  %34 = load i32, i32* %33, align 16
  %35 = add nsw i32 %34, %31
  store i32 %35, i32* %33, align 16
  br label %36

36:                                               ; preds = %27
  %37 = load %struct.Token*, %struct.Token** %5, align 8
  %38 = getelementptr inbounds %struct.Token, %struct.Token* %37, i32 0, i32 1
  %39 = load %struct.Token*, %struct.Token** %38, align 8
  store %struct.Token* %39, %struct.Token** %5, align 8
  br label %24, !llvm.loop !150

40:                                               ; preds = %24
  %41 = load %struct.Token*, %struct.Token** %3, align 8
  ret %struct.Token* %41
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @preprocess2(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token, align 16
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  store %struct.Token* %0, %struct.Token** %2, align 8
  %16 = bitcast %struct.Token* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %16, i8 0, i64 128, i1 false)
  store %struct.Token* %3, %struct.Token** %4, align 8
  br label %17

17:                                               ; preds = %389, %371, %360, %334, %324, %315, %304, %295, %267, %236, %209, %183, %155, %138, %127, %102, %82, %29, %25, %1
  %18 = load %struct.Token*, %struct.Token** %2, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 16
  %21 = icmp ne i32 %20, 6
  br i1 %21, label %22, label %398

22:                                               ; preds = %17
  %23 = load %struct.Token*, %struct.Token** %2, align 8
  %24 = call zeroext i1 @expand_macro(%struct.Token** noundef %2, %struct.Token* noundef %23)
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  br label %17, !llvm.loop !151

26:                                               ; preds = %22
  %27 = load %struct.Token*, %struct.Token** %2, align 8
  %28 = call zeroext i1 @is_hash(%struct.Token* noundef %27)
  br i1 %28, label %50, label %29

29:                                               ; preds = %26
  %30 = load %struct.Token*, %struct.Token** %2, align 8
  %31 = getelementptr inbounds %struct.Token, %struct.Token* %30, i32 0, i32 8
  %32 = load %struct.File*, %struct.File** %31, align 16
  %33 = getelementptr inbounds %struct.File, %struct.File* %32, i32 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = load %struct.Token*, %struct.Token** %2, align 8
  %36 = getelementptr inbounds %struct.Token, %struct.Token* %35, i32 0, i32 11
  store i32 %34, i32* %36, align 4
  %37 = load %struct.Token*, %struct.Token** %2, align 8
  %38 = getelementptr inbounds %struct.Token, %struct.Token* %37, i32 0, i32 8
  %39 = load %struct.File*, %struct.File** %38, align 16
  %40 = getelementptr inbounds %struct.File, %struct.File* %39, i32 0, i32 3
  %41 = load i8*, i8** %40, align 8
  %42 = load %struct.Token*, %struct.Token** %2, align 8
  %43 = getelementptr inbounds %struct.Token, %struct.Token* %42, i32 0, i32 9
  store i8* %41, i8** %43, align 8
  %44 = load %struct.Token*, %struct.Token** %2, align 8
  %45 = load %struct.Token*, %struct.Token** %4, align 8
  %46 = getelementptr inbounds %struct.Token, %struct.Token* %45, i32 0, i32 1
  store %struct.Token* %44, %struct.Token** %46, align 8
  store %struct.Token* %44, %struct.Token** %4, align 8
  %47 = load %struct.Token*, %struct.Token** %2, align 8
  %48 = getelementptr inbounds %struct.Token, %struct.Token* %47, i32 0, i32 1
  %49 = load %struct.Token*, %struct.Token** %48, align 8
  store %struct.Token* %49, %struct.Token** %2, align 8
  br label %17, !llvm.loop !151

50:                                               ; preds = %26
  %51 = load %struct.Token*, %struct.Token** %2, align 8
  store %struct.Token* %51, %struct.Token** %5, align 8
  %52 = load %struct.Token*, %struct.Token** %2, align 8
  %53 = getelementptr inbounds %struct.Token, %struct.Token* %52, i32 0, i32 1
  %54 = load %struct.Token*, %struct.Token** %53, align 8
  store %struct.Token* %54, %struct.Token** %2, align 8
  %55 = load %struct.Token*, %struct.Token** %2, align 8
  %56 = call zeroext i1 @equal(%struct.Token* noundef %55, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72.931, i64 0, i64 0))
  br i1 %56, label %57, label %110

57:                                               ; preds = %50
  %58 = load %struct.Token*, %struct.Token** %2, align 8
  %59 = getelementptr inbounds %struct.Token, %struct.Token* %58, i32 0, i32 1
  %60 = load %struct.Token*, %struct.Token** %59, align 8
  %61 = call i8* @read_include_filename(%struct.Token** noundef %2, %struct.Token* noundef %60, i8* noundef %6)
  store i8* %61, i8** %7, align 8
  %62 = load i8*, i8** %7, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 0
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = icmp ne i32 %65, 47
  br i1 %66, label %67, label %92

67:                                               ; preds = %57
  %68 = load i8, i8* %6, align 1
  %69 = trunc i8 %68 to i1
  br i1 %69, label %70, label %92

70:                                               ; preds = %67
  %71 = load %struct.Token*, %struct.Token** %5, align 8
  %72 = getelementptr inbounds %struct.Token, %struct.Token* %71, i32 0, i32 8
  %73 = load %struct.File*, %struct.File** %72, align 16
  %74 = getelementptr inbounds %struct.File, %struct.File* %73, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = call noalias i8* @strdup(i8* noundef %75) #14
  %77 = call i8* @dirname(i8* noundef %76) #14
  %78 = load i8*, i8** %7, align 8
  %79 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.828, i64 0, i64 0), i8* noundef %77, i8* noundef %78)
  store i8* %79, i8** %8, align 8
  %80 = load i8*, i8** %8, align 8
  %81 = call zeroext i1 @file_exists(i8* noundef %80)
  br i1 %81, label %82, label %91

82:                                               ; preds = %70
  %83 = load %struct.Token*, %struct.Token** %2, align 8
  %84 = load i8*, i8** %8, align 8
  %85 = load %struct.Token*, %struct.Token** %5, align 8
  %86 = getelementptr inbounds %struct.Token, %struct.Token* %85, i32 0, i32 1
  %87 = load %struct.Token*, %struct.Token** %86, align 8
  %88 = getelementptr inbounds %struct.Token, %struct.Token* %87, i32 0, i32 1
  %89 = load %struct.Token*, %struct.Token** %88, align 8
  %90 = call %struct.Token* @include_file(%struct.Token* noundef %83, i8* noundef %84, %struct.Token* noundef %89)
  store %struct.Token* %90, %struct.Token** %2, align 8
  br label %17, !llvm.loop !151

91:                                               ; preds = %70
  br label %92

92:                                               ; preds = %91, %67, %57
  %93 = load i8*, i8** %7, align 8
  %94 = call i8* @search_include_paths(i8* noundef %93)
  store i8* %94, i8** %9, align 8
  %95 = load %struct.Token*, %struct.Token** %2, align 8
  %96 = load i8*, i8** %9, align 8
  %97 = icmp ne i8* %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = load i8*, i8** %9, align 8
  br label %102

100:                                              ; preds = %92
  %101 = load i8*, i8** %7, align 8
  br label %102

102:                                              ; preds = %100, %98
  %103 = phi i8* [ %99, %98 ], [ %101, %100 ]
  %104 = load %struct.Token*, %struct.Token** %5, align 8
  %105 = getelementptr inbounds %struct.Token, %struct.Token* %104, i32 0, i32 1
  %106 = load %struct.Token*, %struct.Token** %105, align 8
  %107 = getelementptr inbounds %struct.Token, %struct.Token* %106, i32 0, i32 1
  %108 = load %struct.Token*, %struct.Token** %107, align 8
  %109 = call %struct.Token* @include_file(%struct.Token* noundef %95, i8* noundef %103, %struct.Token* noundef %108)
  store %struct.Token* %109, %struct.Token** %2, align 8
  br label %17, !llvm.loop !151

110:                                              ; preds = %50
  %111 = load %struct.Token*, %struct.Token** %2, align 8
  %112 = call zeroext i1 @equal(%struct.Token* noundef %111, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73.932, i64 0, i64 0))
  br i1 %112, label %113, label %135

113:                                              ; preds = %110
  %114 = load %struct.Token*, %struct.Token** %2, align 8
  %115 = getelementptr inbounds %struct.Token, %struct.Token* %114, i32 0, i32 1
  %116 = load %struct.Token*, %struct.Token** %115, align 8
  %117 = call i8* @read_include_filename(%struct.Token** noundef %2, %struct.Token* noundef %116, i8* noundef %10)
  store i8* %117, i8** %11, align 8
  %118 = load i8*, i8** %11, align 8
  %119 = call i8* @search_include_next(i8* noundef %118)
  store i8* %119, i8** %12, align 8
  %120 = load %struct.Token*, %struct.Token** %2, align 8
  %121 = load i8*, i8** %12, align 8
  %122 = icmp ne i8* %121, null
  br i1 %122, label %123, label %125

123:                                              ; preds = %113
  %124 = load i8*, i8** %12, align 8
  br label %127

125:                                              ; preds = %113
  %126 = load i8*, i8** %11, align 8
  br label %127

127:                                              ; preds = %125, %123
  %128 = phi i8* [ %124, %123 ], [ %126, %125 ]
  %129 = load %struct.Token*, %struct.Token** %5, align 8
  %130 = getelementptr inbounds %struct.Token, %struct.Token* %129, i32 0, i32 1
  %131 = load %struct.Token*, %struct.Token** %130, align 8
  %132 = getelementptr inbounds %struct.Token, %struct.Token* %131, i32 0, i32 1
  %133 = load %struct.Token*, %struct.Token** %132, align 8
  %134 = call %struct.Token* @include_file(%struct.Token* noundef %120, i8* noundef %128, %struct.Token* noundef %133)
  store %struct.Token* %134, %struct.Token** %2, align 8
  br label %17, !llvm.loop !151

135:                                              ; preds = %110
  %136 = load %struct.Token*, %struct.Token** %2, align 8
  %137 = call zeroext i1 @equal(%struct.Token* noundef %136, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74.933, i64 0, i64 0))
  br i1 %137, label %138, label %142

138:                                              ; preds = %135
  %139 = load %struct.Token*, %struct.Token** %2, align 8
  %140 = getelementptr inbounds %struct.Token, %struct.Token* %139, i32 0, i32 1
  %141 = load %struct.Token*, %struct.Token** %140, align 8
  call void @read_macro_definition(%struct.Token** noundef %2, %struct.Token* noundef %141)
  br label %17, !llvm.loop !151

142:                                              ; preds = %135
  %143 = load %struct.Token*, %struct.Token** %2, align 8
  %144 = call zeroext i1 @equal(%struct.Token* noundef %143, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75.934, i64 0, i64 0))
  br i1 %144, label %145, label %168

145:                                              ; preds = %142
  %146 = load %struct.Token*, %struct.Token** %2, align 8
  %147 = getelementptr inbounds %struct.Token, %struct.Token* %146, i32 0, i32 1
  %148 = load %struct.Token*, %struct.Token** %147, align 8
  store %struct.Token* %148, %struct.Token** %2, align 8
  %149 = load %struct.Token*, %struct.Token** %2, align 8
  %150 = getelementptr inbounds %struct.Token, %struct.Token* %149, i32 0, i32 0
  %151 = load i32, i32* %150, align 16
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %145
  %154 = load %struct.Token*, %struct.Token** %2, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %154, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.76.935, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

155:                                              ; preds = %145
  %156 = load %struct.Token*, %struct.Token** %2, align 8
  %157 = getelementptr inbounds %struct.Token, %struct.Token* %156, i32 0, i32 4
  %158 = load i8*, i8** %157, align 16
  %159 = load %struct.Token*, %struct.Token** %2, align 8
  %160 = getelementptr inbounds %struct.Token, %struct.Token* %159, i32 0, i32 5
  %161 = load i32, i32* %160, align 8
  %162 = sext i32 %161 to i64
  %163 = call noalias i8* @strndup(i8* noundef %158, i64 noundef %162) #14
  call void @undef_macro(i8* noundef %163)
  %164 = load %struct.Token*, %struct.Token** %2, align 8
  %165 = getelementptr inbounds %struct.Token, %struct.Token* %164, i32 0, i32 1
  %166 = load %struct.Token*, %struct.Token** %165, align 8
  %167 = call %struct.Token* @skip_line(%struct.Token* noundef %166)
  store %struct.Token* %167, %struct.Token** %2, align 8
  br label %17, !llvm.loop !151

168:                                              ; preds = %142
  %169 = load %struct.Token*, %struct.Token** %2, align 8
  %170 = call zeroext i1 @equal(%struct.Token* noundef %169, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77.936, i64 0, i64 0))
  br i1 %170, label %171, label %184

171:                                              ; preds = %168
  %172 = load %struct.Token*, %struct.Token** %2, align 8
  %173 = call i64 @eval_const_expr(%struct.Token** noundef %2, %struct.Token* noundef %172)
  store i64 %173, i64* %13, align 8
  %174 = load %struct.Token*, %struct.Token** %5, align 8
  %175 = load i64, i64* %13, align 8
  %176 = icmp ne i64 %175, 0
  %177 = call %struct.CondIncl* @push_cond_incl(%struct.Token* noundef %174, i1 noundef zeroext %176)
  %178 = load i64, i64* %13, align 8
  %179 = icmp ne i64 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %171
  %181 = load %struct.Token*, %struct.Token** %2, align 8
  %182 = call %struct.Token* @skip_cond_incl(%struct.Token* noundef %181)
  store %struct.Token* %182, %struct.Token** %2, align 8
  br label %183

183:                                              ; preds = %180, %171
  br label %17, !llvm.loop !151

184:                                              ; preds = %168
  %185 = load %struct.Token*, %struct.Token** %2, align 8
  %186 = call zeroext i1 @equal(%struct.Token* noundef %185, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78.937, i64 0, i64 0))
  br i1 %186, label %187, label %210

187:                                              ; preds = %184
  %188 = load %struct.Token*, %struct.Token** %2, align 8
  %189 = getelementptr inbounds %struct.Token, %struct.Token* %188, i32 0, i32 1
  %190 = load %struct.Token*, %struct.Token** %189, align 8
  %191 = call %struct.Macro* @find_macro(%struct.Token* noundef %190)
  %192 = icmp ne %struct.Macro* %191, null
  %193 = zext i1 %192 to i8
  store i8 %193, i8* %14, align 1
  %194 = load %struct.Token*, %struct.Token** %2, align 8
  %195 = load i8, i8* %14, align 1
  %196 = trunc i8 %195 to i1
  %197 = call %struct.CondIncl* @push_cond_incl(%struct.Token* noundef %194, i1 noundef zeroext %196)
  %198 = load %struct.Token*, %struct.Token** %2, align 8
  %199 = getelementptr inbounds %struct.Token, %struct.Token* %198, i32 0, i32 1
  %200 = load %struct.Token*, %struct.Token** %199, align 8
  %201 = getelementptr inbounds %struct.Token, %struct.Token* %200, i32 0, i32 1
  %202 = load %struct.Token*, %struct.Token** %201, align 8
  %203 = call %struct.Token* @skip_line(%struct.Token* noundef %202)
  store %struct.Token* %203, %struct.Token** %2, align 8
  %204 = load i8, i8* %14, align 1
  %205 = trunc i8 %204 to i1
  br i1 %205, label %209, label %206

206:                                              ; preds = %187
  %207 = load %struct.Token*, %struct.Token** %2, align 8
  %208 = call %struct.Token* @skip_cond_incl(%struct.Token* noundef %207)
  store %struct.Token* %208, %struct.Token** %2, align 8
  br label %209

209:                                              ; preds = %206, %187
  br label %17, !llvm.loop !151

210:                                              ; preds = %184
  %211 = load %struct.Token*, %struct.Token** %2, align 8
  %212 = call zeroext i1 @equal(%struct.Token* noundef %211, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79.938, i64 0, i64 0))
  br i1 %212, label %213, label %237

213:                                              ; preds = %210
  %214 = load %struct.Token*, %struct.Token** %2, align 8
  %215 = getelementptr inbounds %struct.Token, %struct.Token* %214, i32 0, i32 1
  %216 = load %struct.Token*, %struct.Token** %215, align 8
  %217 = call %struct.Macro* @find_macro(%struct.Token* noundef %216)
  %218 = icmp ne %struct.Macro* %217, null
  %219 = zext i1 %218 to i8
  store i8 %219, i8* %15, align 1
  %220 = load %struct.Token*, %struct.Token** %2, align 8
  %221 = load i8, i8* %15, align 1
  %222 = trunc i8 %221 to i1
  %223 = xor i1 %222, true
  %224 = call %struct.CondIncl* @push_cond_incl(%struct.Token* noundef %220, i1 noundef zeroext %223)
  %225 = load %struct.Token*, %struct.Token** %2, align 8
  %226 = getelementptr inbounds %struct.Token, %struct.Token* %225, i32 0, i32 1
  %227 = load %struct.Token*, %struct.Token** %226, align 8
  %228 = getelementptr inbounds %struct.Token, %struct.Token* %227, i32 0, i32 1
  %229 = load %struct.Token*, %struct.Token** %228, align 8
  %230 = call %struct.Token* @skip_line(%struct.Token* noundef %229)
  store %struct.Token* %230, %struct.Token** %2, align 8
  %231 = load i8, i8* %15, align 1
  %232 = trunc i8 %231 to i1
  br i1 %232, label %233, label %236

233:                                              ; preds = %213
  %234 = load %struct.Token*, %struct.Token** %2, align 8
  %235 = call %struct.Token* @skip_cond_incl(%struct.Token* noundef %234)
  store %struct.Token* %235, %struct.Token** %2, align 8
  br label %236

236:                                              ; preds = %233, %213
  br label %17, !llvm.loop !151

237:                                              ; preds = %210
  %238 = load %struct.Token*, %struct.Token** %2, align 8
  %239 = call zeroext i1 @equal(%struct.Token* noundef %238, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80.939, i64 0, i64 0))
  br i1 %239, label %240, label %268

240:                                              ; preds = %237
  %241 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %242 = icmp ne %struct.CondIncl* %241, null
  br i1 %242, label %243, label %248

243:                                              ; preds = %240
  %244 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %245 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %244, i32 0, i32 1
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %246, 2
  br i1 %247, label %248, label %250

248:                                              ; preds = %243, %240
  %249 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %249, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.81.940, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

250:                                              ; preds = %243
  %251 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %252 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %251, i32 0, i32 1
  store i32 1, i32* %252, align 8
  %253 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %254 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %253, i32 0, i32 3
  %255 = load i8, i8* %254, align 8
  %256 = trunc i8 %255 to i1
  br i1 %256, label %264, label %257

257:                                              ; preds = %250
  %258 = load %struct.Token*, %struct.Token** %2, align 8
  %259 = call i64 @eval_const_expr(%struct.Token** noundef %2, %struct.Token* noundef %258)
  %260 = icmp ne i64 %259, 0
  br i1 %260, label %261, label %264

261:                                              ; preds = %257
  %262 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %263 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %262, i32 0, i32 3
  store i8 1, i8* %263, align 8
  br label %267

264:                                              ; preds = %257, %250
  %265 = load %struct.Token*, %struct.Token** %2, align 8
  %266 = call %struct.Token* @skip_cond_incl(%struct.Token* noundef %265)
  store %struct.Token* %266, %struct.Token** %2, align 8
  br label %267

267:                                              ; preds = %264, %261
  br label %17, !llvm.loop !151

268:                                              ; preds = %237
  %269 = load %struct.Token*, %struct.Token** %2, align 8
  %270 = call zeroext i1 @equal(%struct.Token* noundef %269, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82.941, i64 0, i64 0))
  br i1 %270, label %271, label %296

271:                                              ; preds = %268
  %272 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %273 = icmp ne %struct.CondIncl* %272, null
  br i1 %273, label %274, label %279

274:                                              ; preds = %271
  %275 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %276 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %275, i32 0, i32 1
  %277 = load i32, i32* %276, align 8
  %278 = icmp eq i32 %277, 2
  br i1 %278, label %279, label %281

279:                                              ; preds = %274, %271
  %280 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %280, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.83.942, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

281:                                              ; preds = %274
  %282 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %283 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %282, i32 0, i32 1
  store i32 2, i32* %283, align 8
  %284 = load %struct.Token*, %struct.Token** %2, align 8
  %285 = getelementptr inbounds %struct.Token, %struct.Token* %284, i32 0, i32 1
  %286 = load %struct.Token*, %struct.Token** %285, align 8
  %287 = call %struct.Token* @skip_line(%struct.Token* noundef %286)
  store %struct.Token* %287, %struct.Token** %2, align 8
  %288 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %289 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %288, i32 0, i32 3
  %290 = load i8, i8* %289, align 8
  %291 = trunc i8 %290 to i1
  br i1 %291, label %292, label %295

292:                                              ; preds = %281
  %293 = load %struct.Token*, %struct.Token** %2, align 8
  %294 = call %struct.Token* @skip_cond_incl(%struct.Token* noundef %293)
  store %struct.Token* %294, %struct.Token** %2, align 8
  br label %295

295:                                              ; preds = %292, %281
  br label %17, !llvm.loop !151

296:                                              ; preds = %268
  %297 = load %struct.Token*, %struct.Token** %2, align 8
  %298 = call zeroext i1 @equal(%struct.Token* noundef %297, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84.943, i64 0, i64 0))
  br i1 %298, label %299, label %312

299:                                              ; preds = %296
  %300 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %301 = icmp ne %struct.CondIncl* %300, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %299
  %303 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %303, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.85.944, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

304:                                              ; preds = %299
  %305 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %306 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %305, i32 0, i32 0
  %307 = load %struct.CondIncl*, %struct.CondIncl** %306, align 8
  store %struct.CondIncl* %307, %struct.CondIncl** @cond_incl, align 8
  %308 = load %struct.Token*, %struct.Token** %2, align 8
  %309 = getelementptr inbounds %struct.Token, %struct.Token* %308, i32 0, i32 1
  %310 = load %struct.Token*, %struct.Token** %309, align 8
  %311 = call %struct.Token* @skip_line(%struct.Token* noundef %310)
  store %struct.Token* %311, %struct.Token** %2, align 8
  br label %17, !llvm.loop !151

312:                                              ; preds = %296
  %313 = load %struct.Token*, %struct.Token** %2, align 8
  %314 = call zeroext i1 @equal(%struct.Token* noundef %313, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86.945, i64 0, i64 0))
  br i1 %314, label %315, label %319

315:                                              ; preds = %312
  %316 = load %struct.Token*, %struct.Token** %2, align 8
  %317 = getelementptr inbounds %struct.Token, %struct.Token* %316, i32 0, i32 1
  %318 = load %struct.Token*, %struct.Token** %317, align 8
  call void @read_line_marker(%struct.Token** noundef %2, %struct.Token* noundef %318)
  br label %17, !llvm.loop !151

319:                                              ; preds = %312
  %320 = load %struct.Token*, %struct.Token** %2, align 8
  %321 = getelementptr inbounds %struct.Token, %struct.Token* %320, i32 0, i32 0
  %322 = load i32, i32* %321, align 16
  %323 = icmp eq i32 %322, 5
  br i1 %323, label %324, label %326

324:                                              ; preds = %319
  %325 = load %struct.Token*, %struct.Token** %2, align 8
  call void @read_line_marker(%struct.Token** noundef %2, %struct.Token* noundef %325)
  br label %17, !llvm.loop !151

326:                                              ; preds = %319
  %327 = load %struct.Token*, %struct.Token** %2, align 8
  %328 = call zeroext i1 @equal(%struct.Token* noundef %327, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87.946, i64 0, i64 0))
  br i1 %328, label %329, label %346

329:                                              ; preds = %326
  %330 = load %struct.Token*, %struct.Token** %2, align 8
  %331 = getelementptr inbounds %struct.Token, %struct.Token* %330, i32 0, i32 1
  %332 = load %struct.Token*, %struct.Token** %331, align 8
  %333 = call zeroext i1 @equal(%struct.Token* noundef %332, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88.947, i64 0, i64 0))
  br i1 %333, label %334, label %346

334:                                              ; preds = %329
  %335 = load %struct.Token*, %struct.Token** %2, align 8
  %336 = getelementptr inbounds %struct.Token, %struct.Token* %335, i32 0, i32 8
  %337 = load %struct.File*, %struct.File** %336, align 16
  %338 = getelementptr inbounds %struct.File, %struct.File* %337, i32 0, i32 0
  %339 = load i8*, i8** %338, align 8
  call void @hashmap_put(%struct.HashMap* noundef @pragma_once, i8* noundef %339, i8* noundef inttoptr (i64 1 to i8*))
  %340 = load %struct.Token*, %struct.Token** %2, align 8
  %341 = getelementptr inbounds %struct.Token, %struct.Token* %340, i32 0, i32 1
  %342 = load %struct.Token*, %struct.Token** %341, align 8
  %343 = getelementptr inbounds %struct.Token, %struct.Token* %342, i32 0, i32 1
  %344 = load %struct.Token*, %struct.Token** %343, align 8
  %345 = call %struct.Token* @skip_line(%struct.Token* noundef %344)
  store %struct.Token* %345, %struct.Token** %2, align 8
  br label %17, !llvm.loop !151

346:                                              ; preds = %329, %326
  %347 = load %struct.Token*, %struct.Token** %2, align 8
  %348 = call zeroext i1 @equal(%struct.Token* noundef %347, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87.946, i64 0, i64 0))
  br i1 %348, label %349, label %361

349:                                              ; preds = %346
  br label %350

350:                                              ; preds = %354, %349
  %351 = load %struct.Token*, %struct.Token** %2, align 8
  %352 = getelementptr inbounds %struct.Token, %struct.Token* %351, i32 0, i32 1
  %353 = load %struct.Token*, %struct.Token** %352, align 8
  store %struct.Token* %353, %struct.Token** %2, align 8
  br label %354

354:                                              ; preds = %350
  %355 = load %struct.Token*, %struct.Token** %2, align 8
  %356 = getelementptr inbounds %struct.Token, %struct.Token* %355, i32 0, i32 12
  %357 = load i8, i8* %356, align 8
  %358 = trunc i8 %357 to i1
  %359 = xor i1 %358, true
  br i1 %359, label %350, label %360, !llvm.loop !152

360:                                              ; preds = %354
  br label %17, !llvm.loop !151

361:                                              ; preds = %346
  %362 = load %struct.Token*, %struct.Token** %2, align 8
  %363 = call zeroext i1 @equal(%struct.Token* noundef %362, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89.948, i64 0, i64 0))
  br i1 %363, label %364, label %366

364:                                              ; preds = %361
  %365 = load %struct.Token*, %struct.Token** %2, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %365, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90.949, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

366:                                              ; preds = %361
  %367 = load %struct.Token*, %struct.Token** %2, align 8
  %368 = getelementptr inbounds %struct.Token, %struct.Token* %367, i32 0, i32 12
  %369 = load i8, i8* %368, align 8
  %370 = trunc i8 %369 to i1
  br i1 %370, label %371, label %372

371:                                              ; preds = %366
  br label %17, !llvm.loop !151

372:                                              ; preds = %366
  %373 = load %struct.Token*, %struct.Token** %2, align 8
  %374 = call zeroext i1 @equal(%struct.Token* noundef %373, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91.950, i64 0, i64 0))
  br i1 %374, label %375, label %396

375:                                              ; preds = %372
  %376 = load %struct.Token*, %struct.Token** %2, align 8
  %377 = getelementptr inbounds %struct.Token, %struct.Token* %376, i32 0, i32 1
  %378 = load %struct.Token*, %struct.Token** %377, align 8
  %379 = getelementptr inbounds %struct.Token, %struct.Token* %378, i32 0, i32 7
  %380 = load i8*, i8** %379, align 8
  %381 = icmp ne i8* %380, null
  br i1 %381, label %382, label %389

382:                                              ; preds = %375
  %383 = load %struct.Token*, %struct.Token** %2, align 8
  %384 = getelementptr inbounds %struct.Token, %struct.Token* %383, i32 0, i32 1
  %385 = load %struct.Token*, %struct.Token** %384, align 8
  %386 = getelementptr inbounds %struct.Token, %struct.Token* %385, i32 0, i32 7
  %387 = load i8*, i8** %386, align 8
  %388 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92.951, i64 0, i64 0), i8* noundef %387)
  br label %389

389:                                              ; preds = %382, %375
  %390 = load %struct.Token*, %struct.Token** %2, align 8
  %391 = getelementptr inbounds %struct.Token, %struct.Token* %390, i32 0, i32 1
  %392 = load %struct.Token*, %struct.Token** %391, align 8
  %393 = getelementptr inbounds %struct.Token, %struct.Token* %392, i32 0, i32 1
  %394 = load %struct.Token*, %struct.Token** %393, align 8
  %395 = call %struct.Token* @skip_line(%struct.Token* noundef %394)
  store %struct.Token* %395, %struct.Token** %2, align 8
  br label %17, !llvm.loop !151

396:                                              ; preds = %372
  %397 = load %struct.Token*, %struct.Token** %2, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %397, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.93.952, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

398:                                              ; preds = %17
  %399 = load %struct.Token*, %struct.Token** %2, align 8
  %400 = load %struct.Token*, %struct.Token** %4, align 8
  %401 = getelementptr inbounds %struct.Token, %struct.Token* %400, i32 0, i32 1
  store %struct.Token* %399, %struct.Token** %401, align 8
  %402 = getelementptr inbounds %struct.Token, %struct.Token* %3, i32 0, i32 1
  %403 = load %struct.Token*, %struct.Token** %402, align 8
  ret %struct.Token* %403
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Token* @preprocess3(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token, align 16
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Macro*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %6 = bitcast %struct.Token* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 128, i1 false)
  store %struct.Token* %3, %struct.Token** %4, align 8
  br label %7

7:                                                ; preds = %29, %27, %1
  %8 = load %struct.Token*, %struct.Token** %2, align 8
  %9 = getelementptr inbounds %struct.Token, %struct.Token* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 16
  %11 = icmp ne i32 %10, 6
  br i1 %11, label %12, label %36

12:                                               ; preds = %7
  %13 = load %struct.Token*, %struct.Token** %2, align 8
  %14 = call %struct.Macro* @find_macro(%struct.Token* noundef %13)
  store %struct.Macro* %14, %struct.Macro** %5, align 8
  %15 = load %struct.Macro*, %struct.Macro** %5, align 8
  %16 = icmp ne %struct.Macro* %15, null
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = load %struct.Macro*, %struct.Macro** %5, align 8
  %19 = getelementptr inbounds %struct.Macro, %struct.Macro* %18, i32 0, i32 4
  %20 = load %struct.Token*, %struct.Token** %19, align 8
  %21 = getelementptr inbounds %struct.Token, %struct.Token* %20, i32 0, i32 5
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %17
  %25 = load %struct.Token*, %struct.Token** %2, align 8
  %26 = call zeroext i1 @expand_macro(%struct.Token** noundef %2, %struct.Token* noundef %25)
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  br label %7, !llvm.loop !153

28:                                               ; preds = %24
  br label %29

29:                                               ; preds = %28, %17, %12
  %30 = load %struct.Token*, %struct.Token** %2, align 8
  %31 = load %struct.Token*, %struct.Token** %4, align 8
  %32 = getelementptr inbounds %struct.Token, %struct.Token* %31, i32 0, i32 1
  store %struct.Token* %30, %struct.Token** %32, align 8
  store %struct.Token* %30, %struct.Token** %4, align 8
  %33 = load %struct.Token*, %struct.Token** %2, align 8
  %34 = getelementptr inbounds %struct.Token, %struct.Token* %33, i32 0, i32 1
  %35 = load %struct.Token*, %struct.Token** %34, align 8
  store %struct.Token* %35, %struct.Token** %2, align 8
  br label %7, !llvm.loop !153

36:                                               ; preds = %7
  %37 = load %struct.Token*, %struct.Token** %2, align 8
  %38 = load %struct.Token*, %struct.Token** %4, align 8
  %39 = getelementptr inbounds %struct.Token, %struct.Token* %38, i32 0, i32 1
  store %struct.Token* %37, %struct.Token** %39, align 8
  %40 = getelementptr inbounds %struct.Token, %struct.Token* %3, i32 0, i32 1
  %41 = load %struct.Token*, %struct.Token** %40, align 8
  ret %struct.Token* %41
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @join_adjacent_string_literals(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.Type*, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.Token*, align 8
  %9 = alloca %struct.Token*, align 8
  %10 = alloca %struct.Token*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.Token*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %16 = load %struct.Token*, %struct.Token** %2, align 8
  store %struct.Token* %16, %struct.Token** %3, align 8
  br label %17

17:                                               ; preds = %125, %34, %1
  %18 = load %struct.Token*, %struct.Token** %3, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 16
  %21 = icmp ne i32 %20, 6
  br i1 %21, label %22, label %126

22:                                               ; preds = %17
  %23 = load %struct.Token*, %struct.Token** %3, align 8
  %24 = getelementptr inbounds %struct.Token, %struct.Token* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 16
  %26 = icmp ne i32 %25, 3
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = load %struct.Token*, %struct.Token** %3, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 1
  %30 = load %struct.Token*, %struct.Token** %29, align 8
  %31 = getelementptr inbounds %struct.Token, %struct.Token* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 16
  %33 = icmp ne i32 %32, 3
  br i1 %33, label %34, label %38

34:                                               ; preds = %27, %22
  %35 = load %struct.Token*, %struct.Token** %3, align 8
  %36 = getelementptr inbounds %struct.Token, %struct.Token* %35, i32 0, i32 1
  %37 = load %struct.Token*, %struct.Token** %36, align 8
  store %struct.Token* %37, %struct.Token** %3, align 8
  br label %17, !llvm.loop !154

38:                                               ; preds = %27
  %39 = load %struct.Token*, %struct.Token** %3, align 8
  %40 = call i32 @getStringKind(%struct.Token* noundef %39)
  store i32 %40, i32* %4, align 4
  %41 = load %struct.Token*, %struct.Token** %3, align 8
  %42 = getelementptr inbounds %struct.Token, %struct.Token* %41, i32 0, i32 6
  %43 = load %struct.Type*, %struct.Type** %42, align 16
  %44 = getelementptr inbounds %struct.Type, %struct.Type* %43, i32 0, i32 8
  %45 = load %struct.Type*, %struct.Type** %44, align 8
  store %struct.Type* %45, %struct.Type** %5, align 8
  %46 = load %struct.Token*, %struct.Token** %3, align 8
  %47 = getelementptr inbounds %struct.Token, %struct.Token* %46, i32 0, i32 1
  %48 = load %struct.Token*, %struct.Token** %47, align 8
  store %struct.Token* %48, %struct.Token** %6, align 8
  br label %49

49:                                               ; preds = %77, %38
  %50 = load %struct.Token*, %struct.Token** %6, align 8
  %51 = getelementptr inbounds %struct.Token, %struct.Token* %50, i32 0, i32 0
  %52 = load i32, i32* %51, align 16
  %53 = icmp eq i32 %52, 3
  br i1 %53, label %54, label %81

54:                                               ; preds = %49
  %55 = load %struct.Token*, %struct.Token** %6, align 8
  %56 = call i32 @getStringKind(%struct.Token* noundef %55)
  store i32 %56, i32* %7, align 4
  %57 = load i32, i32* %4, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %54
  %60 = load i32, i32* %7, align 4
  store i32 %60, i32* %4, align 4
  %61 = load %struct.Token*, %struct.Token** %6, align 8
  %62 = getelementptr inbounds %struct.Token, %struct.Token* %61, i32 0, i32 6
  %63 = load %struct.Type*, %struct.Type** %62, align 16
  %64 = getelementptr inbounds %struct.Type, %struct.Type* %63, i32 0, i32 8
  %65 = load %struct.Type*, %struct.Type** %64, align 8
  store %struct.Type* %65, %struct.Type** %5, align 8
  br label %76

66:                                               ; preds = %54
  %67 = load i32, i32* %7, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %66
  %70 = load i32, i32* %4, align 4
  %71 = load i32, i32* %7, align 4
  %72 = icmp ne i32 %70, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %74, i8* noundef getelementptr inbounds ([97 x i8], [97 x i8]* @.str.118.908, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

75:                                               ; preds = %69, %66
  br label %76

76:                                               ; preds = %75, %59
  br label %77

77:                                               ; preds = %76
  %78 = load %struct.Token*, %struct.Token** %6, align 8
  %79 = getelementptr inbounds %struct.Token, %struct.Token* %78, i32 0, i32 1
  %80 = load %struct.Token*, %struct.Token** %79, align 8
  store %struct.Token* %80, %struct.Token** %6, align 8
  br label %49, !llvm.loop !155

81:                                               ; preds = %49
  %82 = load %struct.Type*, %struct.Type** %5, align 8
  %83 = getelementptr inbounds %struct.Type, %struct.Type* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, 1
  br i1 %85, label %86, label %115

86:                                               ; preds = %81
  %87 = load %struct.Token*, %struct.Token** %3, align 8
  store %struct.Token* %87, %struct.Token** %8, align 8
  br label %88

88:                                               ; preds = %110, %86
  %89 = load %struct.Token*, %struct.Token** %8, align 8
  %90 = getelementptr inbounds %struct.Token, %struct.Token* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 16
  %92 = icmp eq i32 %91, 3
  br i1 %92, label %93, label %114

93:                                               ; preds = %88
  %94 = load %struct.Token*, %struct.Token** %8, align 8
  %95 = getelementptr inbounds %struct.Token, %struct.Token* %94, i32 0, i32 6
  %96 = load %struct.Type*, %struct.Type** %95, align 16
  %97 = getelementptr inbounds %struct.Type, %struct.Type* %96, i32 0, i32 8
  %98 = load %struct.Type*, %struct.Type** %97, align 8
  %99 = getelementptr inbounds %struct.Type, %struct.Type* %98, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %109

102:                                              ; preds = %93
  %103 = load %struct.Token*, %struct.Token** %8, align 8
  %104 = load %struct.Token*, %struct.Token** %8, align 8
  %105 = load %struct.Type*, %struct.Type** %5, align 8
  %106 = call %struct.Token* @tokenize_string_literal(%struct.Token* noundef %104, %struct.Type* noundef %105)
  %107 = bitcast %struct.Token* %103 to i8*
  %108 = bitcast %struct.Token* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %107, i8* align 16 %108, i64 128, i1 false)
  br label %109

109:                                              ; preds = %102, %93
  br label %110

110:                                              ; preds = %109
  %111 = load %struct.Token*, %struct.Token** %8, align 8
  %112 = getelementptr inbounds %struct.Token, %struct.Token* %111, i32 0, i32 1
  %113 = load %struct.Token*, %struct.Token** %112, align 8
  store %struct.Token* %113, %struct.Token** %8, align 8
  br label %88, !llvm.loop !156

114:                                              ; preds = %88
  br label %115

115:                                              ; preds = %114, %81
  br label %116

116:                                              ; preds = %121, %115
  %117 = load %struct.Token*, %struct.Token** %3, align 8
  %118 = getelementptr inbounds %struct.Token, %struct.Token* %117, i32 0, i32 0
  %119 = load i32, i32* %118, align 16
  %120 = icmp eq i32 %119, 3
  br i1 %120, label %121, label %125

121:                                              ; preds = %116
  %122 = load %struct.Token*, %struct.Token** %3, align 8
  %123 = getelementptr inbounds %struct.Token, %struct.Token* %122, i32 0, i32 1
  %124 = load %struct.Token*, %struct.Token** %123, align 8
  store %struct.Token* %124, %struct.Token** %3, align 8
  br label %116, !llvm.loop !157

125:                                              ; preds = %116
  br label %17, !llvm.loop !154

126:                                              ; preds = %17
  %127 = load %struct.Token*, %struct.Token** %2, align 8
  store %struct.Token* %127, %struct.Token** %9, align 8
  br label %128

128:                                              ; preds = %242, %145, %126
  %129 = load %struct.Token*, %struct.Token** %9, align 8
  %130 = getelementptr inbounds %struct.Token, %struct.Token* %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 16
  %132 = icmp ne i32 %131, 6
  br i1 %132, label %133, label %264

133:                                              ; preds = %128
  %134 = load %struct.Token*, %struct.Token** %9, align 8
  %135 = getelementptr inbounds %struct.Token, %struct.Token* %134, i32 0, i32 0
  %136 = load i32, i32* %135, align 16
  %137 = icmp ne i32 %136, 3
  br i1 %137, label %145, label %138

138:                                              ; preds = %133
  %139 = load %struct.Token*, %struct.Token** %9, align 8
  %140 = getelementptr inbounds %struct.Token, %struct.Token* %139, i32 0, i32 1
  %141 = load %struct.Token*, %struct.Token** %140, align 8
  %142 = getelementptr inbounds %struct.Token, %struct.Token* %141, i32 0, i32 0
  %143 = load i32, i32* %142, align 16
  %144 = icmp ne i32 %143, 3
  br i1 %144, label %145, label %149

145:                                              ; preds = %138, %133
  %146 = load %struct.Token*, %struct.Token** %9, align 8
  %147 = getelementptr inbounds %struct.Token, %struct.Token* %146, i32 0, i32 1
  %148 = load %struct.Token*, %struct.Token** %147, align 8
  store %struct.Token* %148, %struct.Token** %9, align 8
  br label %128, !llvm.loop !158

149:                                              ; preds = %138
  %150 = load %struct.Token*, %struct.Token** %9, align 8
  %151 = getelementptr inbounds %struct.Token, %struct.Token* %150, i32 0, i32 1
  %152 = load %struct.Token*, %struct.Token** %151, align 8
  store %struct.Token* %152, %struct.Token** %10, align 8
  br label %153

153:                                              ; preds = %158, %149
  %154 = load %struct.Token*, %struct.Token** %10, align 8
  %155 = getelementptr inbounds %struct.Token, %struct.Token* %154, i32 0, i32 0
  %156 = load i32, i32* %155, align 16
  %157 = icmp eq i32 %156, 3
  br i1 %157, label %158, label %162

158:                                              ; preds = %153
  %159 = load %struct.Token*, %struct.Token** %10, align 8
  %160 = getelementptr inbounds %struct.Token, %struct.Token* %159, i32 0, i32 1
  %161 = load %struct.Token*, %struct.Token** %160, align 8
  store %struct.Token* %161, %struct.Token** %10, align 8
  br label %153, !llvm.loop !159

162:                                              ; preds = %153
  %163 = load %struct.Token*, %struct.Token** %9, align 8
  %164 = getelementptr inbounds %struct.Token, %struct.Token* %163, i32 0, i32 6
  %165 = load %struct.Type*, %struct.Type** %164, align 16
  %166 = getelementptr inbounds %struct.Type, %struct.Type* %165, i32 0, i32 11
  %167 = load i32, i32* %166, align 8
  store i32 %167, i32* %11, align 4
  %168 = load %struct.Token*, %struct.Token** %9, align 8
  %169 = getelementptr inbounds %struct.Token, %struct.Token* %168, i32 0, i32 1
  %170 = load %struct.Token*, %struct.Token** %169, align 8
  store %struct.Token* %170, %struct.Token** %12, align 8
  br label %171

171:                                              ; preds = %184, %162
  %172 = load %struct.Token*, %struct.Token** %12, align 8
  %173 = load %struct.Token*, %struct.Token** %10, align 8
  %174 = icmp ne %struct.Token* %172, %173
  br i1 %174, label %175, label %188

175:                                              ; preds = %171
  %176 = load i32, i32* %11, align 4
  %177 = load %struct.Token*, %struct.Token** %12, align 8
  %178 = getelementptr inbounds %struct.Token, %struct.Token* %177, i32 0, i32 6
  %179 = load %struct.Type*, %struct.Type** %178, align 16
  %180 = getelementptr inbounds %struct.Type, %struct.Type* %179, i32 0, i32 11
  %181 = load i32, i32* %180, align 8
  %182 = add nsw i32 %176, %181
  %183 = sub nsw i32 %182, 1
  store i32 %183, i32* %11, align 4
  br label %184

184:                                              ; preds = %175
  %185 = load %struct.Token*, %struct.Token** %12, align 8
  %186 = getelementptr inbounds %struct.Token, %struct.Token* %185, i32 0, i32 1
  %187 = load %struct.Token*, %struct.Token** %186, align 8
  store %struct.Token* %187, %struct.Token** %12, align 8
  br label %171, !llvm.loop !160

188:                                              ; preds = %171
  %189 = load %struct.Token*, %struct.Token** %9, align 8
  %190 = getelementptr inbounds %struct.Token, %struct.Token* %189, i32 0, i32 6
  %191 = load %struct.Type*, %struct.Type** %190, align 16
  %192 = getelementptr inbounds %struct.Type, %struct.Type* %191, i32 0, i32 8
  %193 = load %struct.Type*, %struct.Type** %192, align 8
  %194 = getelementptr inbounds %struct.Type, %struct.Type* %193, i32 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = load i32, i32* %11, align 4
  %198 = sext i32 %197 to i64
  %199 = call noalias i8* @calloc(i64 noundef %196, i64 noundef %198) #14
  store i8* %199, i8** %13, align 8
  %200 = load i8*, i8** %13, align 8
  %201 = icmp eq i8* %200, null
  br i1 %201, label %202, label %203

202:                                              ; preds = %188
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.119.909, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

203:                                              ; preds = %188
  store i32 0, i32* %14, align 4
  %204 = load %struct.Token*, %struct.Token** %9, align 8
  store %struct.Token* %204, %struct.Token** %15, align 8
  br label %205

205:                                              ; preds = %238, %203
  %206 = load %struct.Token*, %struct.Token** %15, align 8
  %207 = load %struct.Token*, %struct.Token** %10, align 8
  %208 = icmp ne %struct.Token* %206, %207
  br i1 %208, label %209, label %242

209:                                              ; preds = %205
  %210 = load i8*, i8** %13, align 8
  %211 = load i32, i32* %14, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds i8, i8* %210, i64 %212
  %214 = load %struct.Token*, %struct.Token** %15, align 8
  %215 = getelementptr inbounds %struct.Token, %struct.Token* %214, i32 0, i32 7
  %216 = load i8*, i8** %215, align 8
  %217 = load %struct.Token*, %struct.Token** %15, align 8
  %218 = getelementptr inbounds %struct.Token, %struct.Token* %217, i32 0, i32 6
  %219 = load %struct.Type*, %struct.Type** %218, align 16
  %220 = getelementptr inbounds %struct.Type, %struct.Type* %219, i32 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = sext i32 %221 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %213, i8* align 1 %216, i64 %222, i1 false)
  %223 = load i32, i32* %14, align 4
  %224 = load %struct.Token*, %struct.Token** %15, align 8
  %225 = getelementptr inbounds %struct.Token, %struct.Token* %224, i32 0, i32 6
  %226 = load %struct.Type*, %struct.Type** %225, align 16
  %227 = getelementptr inbounds %struct.Type, %struct.Type* %226, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = add nsw i32 %223, %228
  %230 = load %struct.Token*, %struct.Token** %15, align 8
  %231 = getelementptr inbounds %struct.Token, %struct.Token* %230, i32 0, i32 6
  %232 = load %struct.Type*, %struct.Type** %231, align 16
  %233 = getelementptr inbounds %struct.Type, %struct.Type* %232, i32 0, i32 8
  %234 = load %struct.Type*, %struct.Type** %233, align 8
  %235 = getelementptr inbounds %struct.Type, %struct.Type* %234, i32 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = sub nsw i32 %229, %236
  store i32 %237, i32* %14, align 4
  br label %238

238:                                              ; preds = %209
  %239 = load %struct.Token*, %struct.Token** %15, align 8
  %240 = getelementptr inbounds %struct.Token, %struct.Token* %239, i32 0, i32 1
  %241 = load %struct.Token*, %struct.Token** %240, align 8
  store %struct.Token* %241, %struct.Token** %15, align 8
  br label %205, !llvm.loop !161

242:                                              ; preds = %205
  %243 = load %struct.Token*, %struct.Token** %9, align 8
  %244 = load %struct.Token*, %struct.Token** %9, align 8
  %245 = call %struct.Token* @copy_token(%struct.Token* noundef %244)
  %246 = bitcast %struct.Token* %243 to i8*
  %247 = bitcast %struct.Token* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %246, i8* align 16 %247, i64 128, i1 false)
  %248 = load %struct.Token*, %struct.Token** %9, align 8
  %249 = getelementptr inbounds %struct.Token, %struct.Token* %248, i32 0, i32 6
  %250 = load %struct.Type*, %struct.Type** %249, align 16
  %251 = getelementptr inbounds %struct.Type, %struct.Type* %250, i32 0, i32 8
  %252 = load %struct.Type*, %struct.Type** %251, align 8
  %253 = load i32, i32* %11, align 4
  %254 = call %struct.Type* @array_of(%struct.Type* noundef %252, i32 noundef %253)
  %255 = load %struct.Token*, %struct.Token** %9, align 8
  %256 = getelementptr inbounds %struct.Token, %struct.Token* %255, i32 0, i32 6
  store %struct.Type* %254, %struct.Type** %256, align 16
  %257 = load i8*, i8** %13, align 8
  %258 = load %struct.Token*, %struct.Token** %9, align 8
  %259 = getelementptr inbounds %struct.Token, %struct.Token* %258, i32 0, i32 7
  store i8* %257, i8** %259, align 8
  %260 = load %struct.Token*, %struct.Token** %10, align 8
  %261 = load %struct.Token*, %struct.Token** %9, align 8
  %262 = getelementptr inbounds %struct.Token, %struct.Token* %261, i32 0, i32 1
  store %struct.Token* %260, %struct.Token** %262, align 8
  %263 = load %struct.Token*, %struct.Token** %10, align 8
  store %struct.Token* %263, %struct.Token** %9, align 8
  br label %128, !llvm.loop !158

264:                                              ; preds = %128
  ret void
}

; Function Attrs: nounwind readnone willreturn
declare i32 @abs(i32 noundef) #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @getStringKind(%struct.Token* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %4 = load %struct.Token*, %struct.Token** %3, align 8
  %5 = getelementptr inbounds %struct.Token, %struct.Token* %4, i32 0, i32 4
  %6 = load i8*, i8** %5, align 16
  %7 = call i32 @strcmp(i8* noundef %6, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.120.911, i64 0, i64 0)) #13
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  store i32 1, i32* %2, align 4
  br label %22

10:                                               ; preds = %1
  %11 = load %struct.Token*, %struct.Token** %3, align 8
  %12 = getelementptr inbounds %struct.Token, %struct.Token* %11, i32 0, i32 4
  %13 = load i8*, i8** %12, align 16
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %21 [
    i32 34, label %17
    i32 117, label %18
    i32 85, label %19
    i32 76, label %20
  ]

17:                                               ; preds = %10
  store i32 0, i32* %2, align 4
  br label %22

18:                                               ; preds = %10
  store i32 2, i32* %2, align 4
  br label %22

19:                                               ; preds = %10
  store i32 3, i32* %2, align 4
  br label %22

20:                                               ; preds = %10
  store i32 4, i32* %2, align 4
  br label %22

21:                                               ; preds = %10
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.121.912, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0), i32 noundef 1325) #11
  unreachable

22:                                               ; preds = %20, %19, %18, %17, %9
  %23 = load i32, i32* %2, align 4
  ret i32 %23
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @copy_token(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %4 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 128) #14
  %5 = bitcast i8* %4 to %struct.Token*
  store %struct.Token* %5, %struct.Token** %3, align 8
  %6 = load %struct.Token*, %struct.Token** %3, align 8
  %7 = icmp eq %struct.Token* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.100.910, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %1
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  %11 = load %struct.Token*, %struct.Token** %2, align 8
  %12 = bitcast %struct.Token* %10 to i8*
  %13 = bitcast %struct.Token* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %12, i8* align 16 %13, i64 128, i1 false)
  %14 = load %struct.Token*, %struct.Token** %3, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 1
  store %struct.Token* null, %struct.Token** %15, align 8
  %16 = load %struct.Token*, %struct.Token** %3, align 8
  ret %struct.Token* %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Macro* @find_macro(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Macro*, align 8
  %3 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %4 = load %struct.Token*, %struct.Token** %3, align 8
  %5 = getelementptr inbounds %struct.Token, %struct.Token* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 16
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store %struct.Macro* null, %struct.Macro** %2, align 8
  br label %18

9:                                                ; preds = %1
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 4
  %12 = load i8*, i8** %11, align 16
  %13 = load %struct.Token*, %struct.Token** %3, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = call i8* @hashmap_get2(%struct.HashMap* noundef @macros, i8* noundef %12, i32 noundef %15)
  %17 = bitcast i8* %16 to %struct.Macro*
  store %struct.Macro* %17, %struct.Macro** %2, align 8
  br label %18

18:                                               ; preds = %9, %8
  %19 = load %struct.Macro*, %struct.Macro** %2, align 8
  ret %struct.Macro* %19
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @expand_macro(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Macro*, align 8
  %7 = alloca %struct.Hideset*, align 8
  %8 = alloca %struct.Token*, align 8
  %9 = alloca %struct.Token*, align 8
  %10 = alloca %struct.Token*, align 8
  %11 = alloca %struct.MacroArg*, align 8
  %12 = alloca %struct.Token*, align 8
  %13 = alloca %struct.Hideset*, align 8
  %14 = alloca %struct.Token*, align 8
  %15 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %16 = load %struct.Token*, %struct.Token** %5, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 14
  %18 = load %struct.Hideset*, %struct.Hideset** %17, align 16
  %19 = load %struct.Token*, %struct.Token** %5, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 4
  %21 = load i8*, i8** %20, align 16
  %22 = load %struct.Token*, %struct.Token** %5, align 8
  %23 = getelementptr inbounds %struct.Token, %struct.Token* %22, i32 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = call zeroext i1 @hideset_contains(%struct.Hideset* noundef %18, i8* noundef %21, i32 noundef %24)
  br i1 %25, label %26, label %27

26:                                               ; preds = %2
  store i1 false, i1* %3, align 1
  br label %158

27:                                               ; preds = %2
  %28 = load %struct.Token*, %struct.Token** %5, align 8
  %29 = call %struct.Macro* @find_macro(%struct.Token* noundef %28)
  store %struct.Macro* %29, %struct.Macro** %6, align 8
  %30 = load %struct.Macro*, %struct.Macro** %6, align 8
  %31 = icmp ne %struct.Macro* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  store i1 false, i1* %3, align 1
  br label %158

33:                                               ; preds = %27
  %34 = load %struct.Macro*, %struct.Macro** %6, align 8
  %35 = getelementptr inbounds %struct.Macro, %struct.Macro* %34, i32 0, i32 5
  %36 = load %struct.Token* (%struct.Token*)*, %struct.Token* (%struct.Token*)** %35, align 8
  %37 = icmp ne %struct.Token* (%struct.Token*)* %36, null
  br i1 %37, label %38, label %51

38:                                               ; preds = %33
  %39 = load %struct.Macro*, %struct.Macro** %6, align 8
  %40 = getelementptr inbounds %struct.Macro, %struct.Macro* %39, i32 0, i32 5
  %41 = load %struct.Token* (%struct.Token*)*, %struct.Token* (%struct.Token*)** %40, align 8
  %42 = load %struct.Token*, %struct.Token** %5, align 8
  %43 = call %struct.Token* %41(%struct.Token* noundef %42)
  %44 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %43, %struct.Token** %44, align 8
  %45 = load %struct.Token*, %struct.Token** %5, align 8
  %46 = getelementptr inbounds %struct.Token, %struct.Token* %45, i32 0, i32 1
  %47 = load %struct.Token*, %struct.Token** %46, align 8
  %48 = load %struct.Token**, %struct.Token*** %4, align 8
  %49 = load %struct.Token*, %struct.Token** %48, align 8
  %50 = getelementptr inbounds %struct.Token, %struct.Token* %49, i32 0, i32 1
  store %struct.Token* %47, %struct.Token** %50, align 8
  store i1 true, i1* %3, align 1
  br label %158

51:                                               ; preds = %33
  %52 = load %struct.Macro*, %struct.Macro** %6, align 8
  %53 = getelementptr inbounds %struct.Macro, %struct.Macro* %52, i32 0, i32 1
  %54 = load i8, i8* %53, align 8
  %55 = trunc i8 %54 to i1
  br i1 %55, label %56, label %99

56:                                               ; preds = %51
  %57 = load %struct.Token*, %struct.Token** %5, align 8
  %58 = getelementptr inbounds %struct.Token, %struct.Token* %57, i32 0, i32 14
  %59 = load %struct.Hideset*, %struct.Hideset** %58, align 16
  %60 = load %struct.Macro*, %struct.Macro** %6, align 8
  %61 = getelementptr inbounds %struct.Macro, %struct.Macro* %60, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = call %struct.Hideset* @new_hideset(i8* noundef %62)
  %64 = call %struct.Hideset* @hideset_union(%struct.Hideset* noundef %59, %struct.Hideset* noundef %63)
  store %struct.Hideset* %64, %struct.Hideset** %7, align 8
  %65 = load %struct.Macro*, %struct.Macro** %6, align 8
  %66 = getelementptr inbounds %struct.Macro, %struct.Macro* %65, i32 0, i32 4
  %67 = load %struct.Token*, %struct.Token** %66, align 8
  %68 = load %struct.Hideset*, %struct.Hideset** %7, align 8
  %69 = call %struct.Token* @add_hideset(%struct.Token* noundef %67, %struct.Hideset* noundef %68)
  store %struct.Token* %69, %struct.Token** %8, align 8
  %70 = load %struct.Token*, %struct.Token** %8, align 8
  store %struct.Token* %70, %struct.Token** %9, align 8
  br label %71

71:                                               ; preds = %80, %56
  %72 = load %struct.Token*, %struct.Token** %9, align 8
  %73 = getelementptr inbounds %struct.Token, %struct.Token* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 16
  %75 = icmp ne i32 %74, 6
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = load %struct.Token*, %struct.Token** %5, align 8
  %78 = load %struct.Token*, %struct.Token** %9, align 8
  %79 = getelementptr inbounds %struct.Token, %struct.Token* %78, i32 0, i32 15
  store %struct.Token* %77, %struct.Token** %79, align 8
  br label %80

80:                                               ; preds = %76
  %81 = load %struct.Token*, %struct.Token** %9, align 8
  %82 = getelementptr inbounds %struct.Token, %struct.Token* %81, i32 0, i32 1
  %83 = load %struct.Token*, %struct.Token** %82, align 8
  store %struct.Token* %83, %struct.Token** %9, align 8
  br label %71, !llvm.loop !162

84:                                               ; preds = %71
  %85 = load %struct.Token*, %struct.Token** %8, align 8
  %86 = load %struct.Token*, %struct.Token** %5, align 8
  %87 = getelementptr inbounds %struct.Token, %struct.Token* %86, i32 0, i32 1
  %88 = load %struct.Token*, %struct.Token** %87, align 8
  %89 = call %struct.Token* @append(%struct.Token* noundef %85, %struct.Token* noundef %88)
  %90 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %89, %struct.Token** %90, align 8
  %91 = load %struct.Token*, %struct.Token** %5, align 8
  %92 = getelementptr inbounds %struct.Token, %struct.Token* %91, i32 0, i32 13
  %93 = load i8, i8* %92, align 1
  %94 = trunc i8 %93 to i1
  %95 = load %struct.Token**, %struct.Token*** %4, align 8
  %96 = load %struct.Token*, %struct.Token** %95, align 8
  %97 = getelementptr inbounds %struct.Token, %struct.Token* %96, i32 0, i32 13
  %98 = zext i1 %94 to i8
  store i8 %98, i8* %97, align 1
  store i1 true, i1* %3, align 1
  br label %158

99:                                               ; preds = %51
  %100 = load %struct.Token*, %struct.Token** %5, align 8
  %101 = getelementptr inbounds %struct.Token, %struct.Token* %100, i32 0, i32 1
  %102 = load %struct.Token*, %struct.Token** %101, align 8
  %103 = call zeroext i1 @equal(%struct.Token* noundef %102, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103.913, i64 0, i64 0))
  br i1 %103, label %105, label %104

104:                                              ; preds = %99
  store i1 false, i1* %3, align 1
  br label %158

105:                                              ; preds = %99
  %106 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %106, %struct.Token** %10, align 8
  %107 = load %struct.Token*, %struct.Token** %5, align 8
  %108 = load %struct.Macro*, %struct.Macro** %6, align 8
  %109 = getelementptr inbounds %struct.Macro, %struct.Macro* %108, i32 0, i32 2
  %110 = load %struct.MacroParam*, %struct.MacroParam** %109, align 8
  %111 = load %struct.Macro*, %struct.Macro** %6, align 8
  %112 = getelementptr inbounds %struct.Macro, %struct.Macro* %111, i32 0, i32 3
  %113 = load i8*, i8** %112, align 8
  %114 = call %struct.MacroArg* @read_macro_args(%struct.Token** noundef %5, %struct.Token* noundef %107, %struct.MacroParam* noundef %110, i8* noundef %113)
  store %struct.MacroArg* %114, %struct.MacroArg** %11, align 8
  %115 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %115, %struct.Token** %12, align 8
  %116 = load %struct.Token*, %struct.Token** %10, align 8
  %117 = getelementptr inbounds %struct.Token, %struct.Token* %116, i32 0, i32 14
  %118 = load %struct.Hideset*, %struct.Hideset** %117, align 16
  %119 = load %struct.Token*, %struct.Token** %12, align 8
  %120 = getelementptr inbounds %struct.Token, %struct.Token* %119, i32 0, i32 14
  %121 = load %struct.Hideset*, %struct.Hideset** %120, align 16
  %122 = call %struct.Hideset* @hideset_intersection(%struct.Hideset* noundef %118, %struct.Hideset* noundef %121)
  store %struct.Hideset* %122, %struct.Hideset** %13, align 8
  %123 = load %struct.Hideset*, %struct.Hideset** %13, align 8
  %124 = load %struct.Macro*, %struct.Macro** %6, align 8
  %125 = getelementptr inbounds %struct.Macro, %struct.Macro* %124, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = call %struct.Hideset* @new_hideset(i8* noundef %126)
  %128 = call %struct.Hideset* @hideset_union(%struct.Hideset* noundef %123, %struct.Hideset* noundef %127)
  store %struct.Hideset* %128, %struct.Hideset** %13, align 8
  %129 = load %struct.Macro*, %struct.Macro** %6, align 8
  %130 = getelementptr inbounds %struct.Macro, %struct.Macro* %129, i32 0, i32 4
  %131 = load %struct.Token*, %struct.Token** %130, align 8
  %132 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %133 = call %struct.Token* @subst(%struct.Token* noundef %131, %struct.MacroArg* noundef %132)
  store %struct.Token* %133, %struct.Token** %14, align 8
  %134 = load %struct.Token*, %struct.Token** %14, align 8
  %135 = load %struct.Hideset*, %struct.Hideset** %13, align 8
  %136 = call %struct.Token* @add_hideset(%struct.Token* noundef %134, %struct.Hideset* noundef %135)
  store %struct.Token* %136, %struct.Token** %14, align 8
  %137 = load %struct.Token*, %struct.Token** %14, align 8
  store %struct.Token* %137, %struct.Token** %15, align 8
  br label %138

138:                                              ; preds = %147, %105
  %139 = load %struct.Token*, %struct.Token** %15, align 8
  %140 = getelementptr inbounds %struct.Token, %struct.Token* %139, i32 0, i32 0
  %141 = load i32, i32* %140, align 16
  %142 = icmp ne i32 %141, 6
  br i1 %142, label %143, label %151

143:                                              ; preds = %138
  %144 = load %struct.Token*, %struct.Token** %10, align 8
  %145 = load %struct.Token*, %struct.Token** %15, align 8
  %146 = getelementptr inbounds %struct.Token, %struct.Token* %145, i32 0, i32 15
  store %struct.Token* %144, %struct.Token** %146, align 8
  br label %147

147:                                              ; preds = %143
  %148 = load %struct.Token*, %struct.Token** %15, align 8
  %149 = getelementptr inbounds %struct.Token, %struct.Token* %148, i32 0, i32 1
  %150 = load %struct.Token*, %struct.Token** %149, align 8
  store %struct.Token* %150, %struct.Token** %15, align 8
  br label %138, !llvm.loop !163

151:                                              ; preds = %138
  %152 = load %struct.Token*, %struct.Token** %14, align 8
  %153 = load %struct.Token*, %struct.Token** %5, align 8
  %154 = getelementptr inbounds %struct.Token, %struct.Token* %153, i32 0, i32 1
  %155 = load %struct.Token*, %struct.Token** %154, align 8
  %156 = call %struct.Token* @append(%struct.Token* noundef %152, %struct.Token* noundef %155)
  %157 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %156, %struct.Token** %157, align 8
  store i1 true, i1* %3, align 1
  br label %158

158:                                              ; preds = %151, %104, %84, %38, %32, %26
  %159 = load i1, i1* %3, align 1
  ret i1 %159
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hideset_contains(%struct.Hideset* noundef %0, i8* noundef %1, i32 noundef %2) #0 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.Hideset*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store %struct.Hideset* %0, %struct.Hideset** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  br label %8

8:                                                ; preds = %30, %3
  %9 = load %struct.Hideset*, %struct.Hideset** %5, align 8
  %10 = icmp ne %struct.Hideset* %9, null
  br i1 %10, label %11, label %34

11:                                               ; preds = %8
  %12 = load %struct.Hideset*, %struct.Hideset** %5, align 8
  %13 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %12, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = call i64 @strlen(i8* noundef %14) #13
  %16 = load i32, i32* %7, align 4
  %17 = sext i32 %16 to i64
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %19, label %29

19:                                               ; preds = %11
  %20 = load %struct.Hideset*, %struct.Hideset** %5, align 8
  %21 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %20, i32 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = load i32, i32* %7, align 4
  %25 = sext i32 %24 to i64
  %26 = call i32 @strncmp(i8* noundef %22, i8* noundef %23, i64 noundef %25) #13
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %19
  store i1 true, i1* %4, align 1
  br label %35

29:                                               ; preds = %19, %11
  br label %30

30:                                               ; preds = %29
  %31 = load %struct.Hideset*, %struct.Hideset** %5, align 8
  %32 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %31, i32 0, i32 0
  %33 = load %struct.Hideset*, %struct.Hideset** %32, align 8
  store %struct.Hideset* %33, %struct.Hideset** %5, align 8
  br label %8, !llvm.loop !164

34:                                               ; preds = %8
  store i1 false, i1* %4, align 1
  br label %35

35:                                               ; preds = %34, %28
  %36 = load i1, i1* %4, align 1
  ret i1 %36
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Hideset* @new_hideset(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.Hideset*, align 8
  store i8* %0, i8** %2, align 8
  %4 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 16) #14
  %5 = bitcast i8* %4 to %struct.Hideset*
  store %struct.Hideset* %5, %struct.Hideset** %3, align 8
  %6 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %7 = icmp eq %struct.Hideset* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.122.930, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %1
  %10 = load i8*, i8** %2, align 8
  %11 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %12 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %11, i32 0, i32 1
  store i8* %10, i8** %12, align 8
  %13 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  ret %struct.Hideset* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Hideset* @hideset_union(%struct.Hideset* noundef %0, %struct.Hideset* noundef %1) #0 {
  %3 = alloca %struct.Hideset*, align 8
  %4 = alloca %struct.Hideset*, align 8
  %5 = alloca %struct.Hideset, align 8
  %6 = alloca %struct.Hideset*, align 8
  store %struct.Hideset* %0, %struct.Hideset** %3, align 8
  store %struct.Hideset* %1, %struct.Hideset** %4, align 8
  %7 = bitcast %struct.Hideset* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store %struct.Hideset* %5, %struct.Hideset** %6, align 8
  br label %8

8:                                                ; preds = %18, %2
  %9 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %10 = icmp ne %struct.Hideset* %9, null
  br i1 %10, label %11, label %22

11:                                               ; preds = %8
  %12 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %13 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %12, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = call %struct.Hideset* @new_hideset(i8* noundef %14)
  %16 = load %struct.Hideset*, %struct.Hideset** %6, align 8
  %17 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %16, i32 0, i32 0
  store %struct.Hideset* %15, %struct.Hideset** %17, align 8
  store %struct.Hideset* %15, %struct.Hideset** %6, align 8
  br label %18

18:                                               ; preds = %11
  %19 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %20 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %19, i32 0, i32 0
  %21 = load %struct.Hideset*, %struct.Hideset** %20, align 8
  store %struct.Hideset* %21, %struct.Hideset** %3, align 8
  br label %8, !llvm.loop !165

22:                                               ; preds = %8
  %23 = load %struct.Hideset*, %struct.Hideset** %4, align 8
  %24 = load %struct.Hideset*, %struct.Hideset** %6, align 8
  %25 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %24, i32 0, i32 0
  store %struct.Hideset* %23, %struct.Hideset** %25, align 8
  %26 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %5, i32 0, i32 0
  %27 = load %struct.Hideset*, %struct.Hideset** %26, align 8
  ret %struct.Hideset* %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @add_hideset(%struct.Token* noundef %0, %struct.Hideset* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Hideset*, align 8
  %5 = alloca %struct.Token, align 16
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.Hideset* %1, %struct.Hideset** %4, align 8
  %8 = bitcast %struct.Token* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %8, i8 0, i64 128, i1 false)
  store %struct.Token* %5, %struct.Token** %6, align 8
  br label %9

9:                                                ; preds = %25, %2
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  %11 = icmp ne %struct.Token* %10, null
  br i1 %11, label %12, label %29

12:                                               ; preds = %9
  %13 = load %struct.Token*, %struct.Token** %3, align 8
  %14 = call %struct.Token* @copy_token(%struct.Token* noundef %13)
  store %struct.Token* %14, %struct.Token** %7, align 8
  %15 = load %struct.Token*, %struct.Token** %7, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 14
  %17 = load %struct.Hideset*, %struct.Hideset** %16, align 16
  %18 = load %struct.Hideset*, %struct.Hideset** %4, align 8
  %19 = call %struct.Hideset* @hideset_union(%struct.Hideset* noundef %17, %struct.Hideset* noundef %18)
  %20 = load %struct.Token*, %struct.Token** %7, align 8
  %21 = getelementptr inbounds %struct.Token, %struct.Token* %20, i32 0, i32 14
  store %struct.Hideset* %19, %struct.Hideset** %21, align 16
  %22 = load %struct.Token*, %struct.Token** %7, align 8
  %23 = load %struct.Token*, %struct.Token** %6, align 8
  %24 = getelementptr inbounds %struct.Token, %struct.Token* %23, i32 0, i32 1
  store %struct.Token* %22, %struct.Token** %24, align 8
  store %struct.Token* %22, %struct.Token** %6, align 8
  br label %25

25:                                               ; preds = %12
  %26 = load %struct.Token*, %struct.Token** %3, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  store %struct.Token* %28, %struct.Token** %3, align 8
  br label %9, !llvm.loop !166

29:                                               ; preds = %9
  %30 = getelementptr inbounds %struct.Token, %struct.Token* %5, i32 0, i32 1
  %31 = load %struct.Token*, %struct.Token** %30, align 8
  ret %struct.Token* %31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @append(%struct.Token* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Token, align 16
  %7 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %8 = load %struct.Token*, %struct.Token** %4, align 8
  %9 = getelementptr inbounds %struct.Token, %struct.Token* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 16
  %11 = icmp eq i32 %10, 6
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %13, %struct.Token** %3, align 8
  br label %36

14:                                               ; preds = %2
  %15 = bitcast %struct.Token* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 128, i1 false)
  store %struct.Token* %6, %struct.Token** %7, align 8
  br label %16

16:                                               ; preds = %26, %14
  %17 = load %struct.Token*, %struct.Token** %4, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 16
  %20 = icmp ne i32 %19, 6
  br i1 %20, label %21, label %30

21:                                               ; preds = %16
  %22 = load %struct.Token*, %struct.Token** %4, align 8
  %23 = call %struct.Token* @copy_token(%struct.Token* noundef %22)
  %24 = load %struct.Token*, %struct.Token** %7, align 8
  %25 = getelementptr inbounds %struct.Token, %struct.Token* %24, i32 0, i32 1
  store %struct.Token* %23, %struct.Token** %25, align 8
  store %struct.Token* %23, %struct.Token** %7, align 8
  br label %26

26:                                               ; preds = %21
  %27 = load %struct.Token*, %struct.Token** %4, align 8
  %28 = getelementptr inbounds %struct.Token, %struct.Token* %27, i32 0, i32 1
  %29 = load %struct.Token*, %struct.Token** %28, align 8
  store %struct.Token* %29, %struct.Token** %4, align 8
  br label %16, !llvm.loop !167

30:                                               ; preds = %16
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = load %struct.Token*, %struct.Token** %7, align 8
  %33 = getelementptr inbounds %struct.Token, %struct.Token* %32, i32 0, i32 1
  store %struct.Token* %31, %struct.Token** %33, align 8
  %34 = getelementptr inbounds %struct.Token, %struct.Token* %6, i32 0, i32 1
  %35 = load %struct.Token*, %struct.Token** %34, align 8
  store %struct.Token* %35, %struct.Token** %3, align 8
  br label %36

36:                                               ; preds = %30, %12
  %37 = load %struct.Token*, %struct.Token** %3, align 8
  ret %struct.Token* %37
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.MacroArg* @read_macro_args(%struct.Token** noundef %0, %struct.Token* noundef %1, %struct.MacroParam* noundef %2, i8* noundef %3) #0 {
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.MacroParam*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.Token*, align 8
  %10 = alloca %struct.MacroArg, align 8
  %11 = alloca %struct.MacroArg*, align 8
  %12 = alloca %struct.MacroParam*, align 8
  %13 = alloca %struct.MacroArg*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store %struct.MacroParam* %2, %struct.MacroParam** %7, align 8
  store i8* %3, i8** %8, align 8
  %14 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %14, %struct.Token** %9, align 8
  %15 = load %struct.Token*, %struct.Token** %6, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 1
  %17 = load %struct.Token*, %struct.Token** %16, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 1
  %19 = load %struct.Token*, %struct.Token** %18, align 8
  store %struct.Token* %19, %struct.Token** %6, align 8
  %20 = bitcast %struct.MacroArg* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false)
  store %struct.MacroArg* %10, %struct.MacroArg** %11, align 8
  %21 = load %struct.MacroParam*, %struct.MacroParam** %7, align 8
  store %struct.MacroParam* %21, %struct.MacroParam** %12, align 8
  br label %22

22:                                               ; preds = %41, %4
  %23 = load %struct.MacroParam*, %struct.MacroParam** %12, align 8
  %24 = icmp ne %struct.MacroParam* %23, null
  br i1 %24, label %25, label %45

25:                                               ; preds = %22
  %26 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %27 = icmp ne %struct.MacroArg* %26, %10
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = load %struct.Token*, %struct.Token** %6, align 8
  %30 = call %struct.Token* @skip(%struct.Token* noundef %29, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.105.916, i64 0, i64 0))
  store %struct.Token* %30, %struct.Token** %6, align 8
  br label %31

31:                                               ; preds = %28, %25
  %32 = load %struct.Token*, %struct.Token** %6, align 8
  %33 = call %struct.MacroArg* @read_macro_arg_one(%struct.Token** noundef %6, %struct.Token* noundef %32, i1 noundef zeroext false)
  %34 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %35 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %34, i32 0, i32 0
  store %struct.MacroArg* %33, %struct.MacroArg** %35, align 8
  store %struct.MacroArg* %33, %struct.MacroArg** %11, align 8
  %36 = load %struct.MacroParam*, %struct.MacroParam** %12, align 8
  %37 = getelementptr inbounds %struct.MacroParam, %struct.MacroParam* %36, i32 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %40 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %39, i32 0, i32 1
  store i8* %38, i8** %40, align 8
  br label %41

41:                                               ; preds = %31
  %42 = load %struct.MacroParam*, %struct.MacroParam** %12, align 8
  %43 = getelementptr inbounds %struct.MacroParam, %struct.MacroParam* %42, i32 0, i32 0
  %44 = load %struct.MacroParam*, %struct.MacroParam** %43, align 8
  store %struct.MacroParam* %44, %struct.MacroParam** %12, align 8
  br label %22, !llvm.loop !168

45:                                               ; preds = %22
  %46 = load i8*, i8** %8, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %81

48:                                               ; preds = %45
  %49 = load %struct.Token*, %struct.Token** %6, align 8
  %50 = call zeroext i1 @equal(%struct.Token* noundef %49, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.921, i64 0, i64 0))
  br i1 %50, label %51, label %62

51:                                               ; preds = %48
  %52 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 32) #14
  %53 = bitcast i8* %52 to %struct.MacroArg*
  store %struct.MacroArg* %53, %struct.MacroArg** %13, align 8
  %54 = load %struct.MacroArg*, %struct.MacroArg** %13, align 8
  %55 = icmp eq %struct.MacroArg* %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.123.928, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

57:                                               ; preds = %51
  %58 = load %struct.Token*, %struct.Token** %6, align 8
  %59 = call %struct.Token* @new_eof(%struct.Token* noundef %58)
  %60 = load %struct.MacroArg*, %struct.MacroArg** %13, align 8
  %61 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %60, i32 0, i32 3
  store %struct.Token* %59, %struct.Token** %61, align 8
  br label %72

62:                                               ; preds = %48
  %63 = load %struct.MacroParam*, %struct.MacroParam** %12, align 8
  %64 = load %struct.MacroParam*, %struct.MacroParam** %7, align 8
  %65 = icmp ne %struct.MacroParam* %63, %64
  br i1 %65, label %66, label %69

66:                                               ; preds = %62
  %67 = load %struct.Token*, %struct.Token** %6, align 8
  %68 = call %struct.Token* @skip(%struct.Token* noundef %67, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.105.916, i64 0, i64 0))
  store %struct.Token* %68, %struct.Token** %6, align 8
  br label %69

69:                                               ; preds = %66, %62
  %70 = load %struct.Token*, %struct.Token** %6, align 8
  %71 = call %struct.MacroArg* @read_macro_arg_one(%struct.Token** noundef %6, %struct.Token* noundef %70, i1 noundef zeroext true)
  store %struct.MacroArg* %71, %struct.MacroArg** %13, align 8
  br label %72

72:                                               ; preds = %69, %57
  %73 = load i8*, i8** %8, align 8
  %74 = load %struct.MacroArg*, %struct.MacroArg** %13, align 8
  %75 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %74, i32 0, i32 1
  store i8* %73, i8** %75, align 8
  %76 = load %struct.MacroArg*, %struct.MacroArg** %13, align 8
  %77 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %76, i32 0, i32 2
  store i8 1, i8* %77, align 8
  %78 = load %struct.MacroArg*, %struct.MacroArg** %13, align 8
  %79 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %80 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %79, i32 0, i32 0
  store %struct.MacroArg* %78, %struct.MacroArg** %80, align 8
  store %struct.MacroArg* %78, %struct.MacroArg** %11, align 8
  br label %87

81:                                               ; preds = %45
  %82 = load %struct.MacroParam*, %struct.MacroParam** %12, align 8
  %83 = icmp ne %struct.MacroParam* %82, null
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = load %struct.Token*, %struct.Token** %9, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %85, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.124.929, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

86:                                               ; preds = %81
  br label %87

87:                                               ; preds = %86, %72
  %88 = load %struct.Token*, %struct.Token** %6, align 8
  %89 = call %struct.Token* @skip(%struct.Token* noundef %88, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.921, i64 0, i64 0))
  %90 = load %struct.Token*, %struct.Token** %6, align 8
  %91 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %90, %struct.Token** %91, align 8
  %92 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %10, i32 0, i32 0
  %93 = load %struct.MacroArg*, %struct.MacroArg** %92, align 8
  ret %struct.MacroArg* %93
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Hideset* @hideset_intersection(%struct.Hideset* noundef %0, %struct.Hideset* noundef %1) #0 {
  %3 = alloca %struct.Hideset*, align 8
  %4 = alloca %struct.Hideset*, align 8
  %5 = alloca %struct.Hideset, align 8
  %6 = alloca %struct.Hideset*, align 8
  store %struct.Hideset* %0, %struct.Hideset** %3, align 8
  store %struct.Hideset* %1, %struct.Hideset** %4, align 8
  %7 = bitcast %struct.Hideset* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store %struct.Hideset* %5, %struct.Hideset** %6, align 8
  br label %8

8:                                                ; preds = %30, %2
  %9 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %10 = icmp ne %struct.Hideset* %9, null
  br i1 %10, label %11, label %34

11:                                               ; preds = %8
  %12 = load %struct.Hideset*, %struct.Hideset** %4, align 8
  %13 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %14 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %13, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %17 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %16, i32 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = call i64 @strlen(i8* noundef %18) #13
  %20 = trunc i64 %19 to i32
  %21 = call zeroext i1 @hideset_contains(%struct.Hideset* noundef %12, i8* noundef %15, i32 noundef %20)
  br i1 %21, label %22, label %29

22:                                               ; preds = %11
  %23 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %24 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %23, i32 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = call %struct.Hideset* @new_hideset(i8* noundef %25)
  %27 = load %struct.Hideset*, %struct.Hideset** %6, align 8
  %28 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %27, i32 0, i32 0
  store %struct.Hideset* %26, %struct.Hideset** %28, align 8
  store %struct.Hideset* %26, %struct.Hideset** %6, align 8
  br label %29

29:                                               ; preds = %22, %11
  br label %30

30:                                               ; preds = %29
  %31 = load %struct.Hideset*, %struct.Hideset** %3, align 8
  %32 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %31, i32 0, i32 0
  %33 = load %struct.Hideset*, %struct.Hideset** %32, align 8
  store %struct.Hideset* %33, %struct.Hideset** %3, align 8
  br label %8, !llvm.loop !169

34:                                               ; preds = %8
  %35 = getelementptr inbounds %struct.Hideset, %struct.Hideset* %5, i32 0, i32 0
  %36 = load %struct.Hideset*, %struct.Hideset** %35, align 8
  ret %struct.Hideset* %36
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @subst(%struct.Token* noundef %0, %struct.MacroArg* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.MacroArg*, align 8
  %5 = alloca %struct.Token, align 16
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.MacroArg*, align 8
  %8 = alloca %struct.MacroArg*, align 8
  %9 = alloca %struct.MacroArg*, align 8
  %10 = alloca %struct.Token*, align 8
  %11 = alloca %struct.MacroArg*, align 8
  %12 = alloca %struct.Token*, align 8
  %13 = alloca %struct.MacroArg*, align 8
  %14 = alloca %struct.Token*, align 8
  %15 = alloca %struct.Token*, align 8
  %16 = alloca %struct.MacroArg*, align 8
  %17 = alloca %struct.Token*, align 8
  %18 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.MacroArg* %1, %struct.MacroArg** %4, align 8
  %19 = bitcast %struct.Token* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %19, i8 0, i64 128, i1 false)
  store %struct.Token* %5, %struct.Token** %6, align 8
  br label %20

20:                                               ; preds = %334, %330, %298, %259, %237, %170, %164, %101, %40, %2
  %21 = load %struct.Token*, %struct.Token** %3, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 16
  %24 = icmp ne i32 %23, 6
  br i1 %24, label %25, label %342

25:                                               ; preds = %20
  %26 = load %struct.Token*, %struct.Token** %3, align 8
  %27 = call zeroext i1 @equal(%struct.Token* noundef %26, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94.914, i64 0, i64 0))
  br i1 %27, label %28, label %53

28:                                               ; preds = %25
  %29 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %30 = load %struct.Token*, %struct.Token** %3, align 8
  %31 = getelementptr inbounds %struct.Token, %struct.Token* %30, i32 0, i32 1
  %32 = load %struct.Token*, %struct.Token** %31, align 8
  %33 = call %struct.MacroArg* @find_arg(%struct.MacroArg* noundef %29, %struct.Token* noundef %32)
  store %struct.MacroArg* %33, %struct.MacroArg** %7, align 8
  %34 = load %struct.MacroArg*, %struct.MacroArg** %7, align 8
  %35 = icmp ne %struct.MacroArg* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %28
  %37 = load %struct.Token*, %struct.Token** %3, align 8
  %38 = getelementptr inbounds %struct.Token, %struct.Token* %37, i32 0, i32 1
  %39 = load %struct.Token*, %struct.Token** %38, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %39, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.127.915, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

40:                                               ; preds = %28
  %41 = load %struct.Token*, %struct.Token** %3, align 8
  %42 = load %struct.MacroArg*, %struct.MacroArg** %7, align 8
  %43 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %42, i32 0, i32 3
  %44 = load %struct.Token*, %struct.Token** %43, align 8
  %45 = call %struct.Token* @stringize(%struct.Token* noundef %41, %struct.Token* noundef %44)
  %46 = load %struct.Token*, %struct.Token** %6, align 8
  %47 = getelementptr inbounds %struct.Token, %struct.Token* %46, i32 0, i32 1
  store %struct.Token* %45, %struct.Token** %47, align 8
  store %struct.Token* %45, %struct.Token** %6, align 8
  %48 = load %struct.Token*, %struct.Token** %3, align 8
  %49 = getelementptr inbounds %struct.Token, %struct.Token* %48, i32 0, i32 1
  %50 = load %struct.Token*, %struct.Token** %49, align 8
  %51 = getelementptr inbounds %struct.Token, %struct.Token* %50, i32 0, i32 1
  %52 = load %struct.Token*, %struct.Token** %51, align 8
  store %struct.Token* %52, %struct.Token** %3, align 8
  br label %20, !llvm.loop !170

53:                                               ; preds = %25
  %54 = load %struct.Token*, %struct.Token** %3, align 8
  %55 = call zeroext i1 @equal(%struct.Token* noundef %54, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.105.916, i64 0, i64 0))
  br i1 %55, label %56, label %103

56:                                               ; preds = %53
  %57 = load %struct.Token*, %struct.Token** %3, align 8
  %58 = getelementptr inbounds %struct.Token, %struct.Token* %57, i32 0, i32 1
  %59 = load %struct.Token*, %struct.Token** %58, align 8
  %60 = call zeroext i1 @equal(%struct.Token* noundef %59, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128.917, i64 0, i64 0))
  br i1 %60, label %61, label %103

61:                                               ; preds = %56
  %62 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %63 = load %struct.Token*, %struct.Token** %3, align 8
  %64 = getelementptr inbounds %struct.Token, %struct.Token* %63, i32 0, i32 1
  %65 = load %struct.Token*, %struct.Token** %64, align 8
  %66 = getelementptr inbounds %struct.Token, %struct.Token* %65, i32 0, i32 1
  %67 = load %struct.Token*, %struct.Token** %66, align 8
  %68 = call %struct.MacroArg* @find_arg(%struct.MacroArg* noundef %62, %struct.Token* noundef %67)
  store %struct.MacroArg* %68, %struct.MacroArg** %8, align 8
  %69 = load %struct.MacroArg*, %struct.MacroArg** %8, align 8
  %70 = icmp ne %struct.MacroArg* %69, null
  br i1 %70, label %71, label %102

71:                                               ; preds = %61
  %72 = load %struct.MacroArg*, %struct.MacroArg** %8, align 8
  %73 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %72, i32 0, i32 2
  %74 = load i8, i8* %73, align 8
  %75 = trunc i8 %74 to i1
  br i1 %75, label %76, label %102

76:                                               ; preds = %71
  %77 = load %struct.MacroArg*, %struct.MacroArg** %8, align 8
  %78 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %77, i32 0, i32 3
  %79 = load %struct.Token*, %struct.Token** %78, align 8
  %80 = getelementptr inbounds %struct.Token, %struct.Token* %79, i32 0, i32 0
  %81 = load i32, i32* %80, align 16
  %82 = icmp eq i32 %81, 6
  br i1 %82, label %83, label %91

83:                                               ; preds = %76
  %84 = load %struct.Token*, %struct.Token** %3, align 8
  %85 = getelementptr inbounds %struct.Token, %struct.Token* %84, i32 0, i32 1
  %86 = load %struct.Token*, %struct.Token** %85, align 8
  %87 = getelementptr inbounds %struct.Token, %struct.Token* %86, i32 0, i32 1
  %88 = load %struct.Token*, %struct.Token** %87, align 8
  %89 = getelementptr inbounds %struct.Token, %struct.Token* %88, i32 0, i32 1
  %90 = load %struct.Token*, %struct.Token** %89, align 8
  store %struct.Token* %90, %struct.Token** %3, align 8
  br label %101

91:                                               ; preds = %76
  %92 = load %struct.Token*, %struct.Token** %3, align 8
  %93 = call %struct.Token* @copy_token(%struct.Token* noundef %92)
  %94 = load %struct.Token*, %struct.Token** %6, align 8
  %95 = getelementptr inbounds %struct.Token, %struct.Token* %94, i32 0, i32 1
  store %struct.Token* %93, %struct.Token** %95, align 8
  store %struct.Token* %93, %struct.Token** %6, align 8
  %96 = load %struct.Token*, %struct.Token** %3, align 8
  %97 = getelementptr inbounds %struct.Token, %struct.Token* %96, i32 0, i32 1
  %98 = load %struct.Token*, %struct.Token** %97, align 8
  %99 = getelementptr inbounds %struct.Token, %struct.Token* %98, i32 0, i32 1
  %100 = load %struct.Token*, %struct.Token** %99, align 8
  store %struct.Token* %100, %struct.Token** %3, align 8
  br label %101

101:                                              ; preds = %91, %83
  br label %20, !llvm.loop !170

102:                                              ; preds = %71, %61
  br label %103

103:                                              ; preds = %102, %56, %53
  %104 = load %struct.Token*, %struct.Token** %3, align 8
  %105 = call zeroext i1 @equal(%struct.Token* noundef %104, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128.917, i64 0, i64 0))
  br i1 %105, label %106, label %184

106:                                              ; preds = %103
  %107 = load %struct.Token*, %struct.Token** %6, align 8
  %108 = icmp eq %struct.Token* %107, %5
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = load %struct.Token*, %struct.Token** %3, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %110, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.129.918, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

111:                                              ; preds = %106
  %112 = load %struct.Token*, %struct.Token** %3, align 8
  %113 = getelementptr inbounds %struct.Token, %struct.Token* %112, i32 0, i32 1
  %114 = load %struct.Token*, %struct.Token** %113, align 8
  %115 = getelementptr inbounds %struct.Token, %struct.Token* %114, i32 0, i32 0
  %116 = load i32, i32* %115, align 16
  %117 = icmp eq i32 %116, 6
  br i1 %117, label %118, label %120

118:                                              ; preds = %111
  %119 = load %struct.Token*, %struct.Token** %3, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %119, i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.130.919, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

120:                                              ; preds = %111
  %121 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %122 = load %struct.Token*, %struct.Token** %3, align 8
  %123 = getelementptr inbounds %struct.Token, %struct.Token* %122, i32 0, i32 1
  %124 = load %struct.Token*, %struct.Token** %123, align 8
  %125 = call %struct.MacroArg* @find_arg(%struct.MacroArg* noundef %121, %struct.Token* noundef %124)
  store %struct.MacroArg* %125, %struct.MacroArg** %9, align 8
  %126 = load %struct.MacroArg*, %struct.MacroArg** %9, align 8
  %127 = icmp ne %struct.MacroArg* %126, null
  br i1 %127, label %128, label %170

128:                                              ; preds = %120
  %129 = load %struct.MacroArg*, %struct.MacroArg** %9, align 8
  %130 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %129, i32 0, i32 3
  %131 = load %struct.Token*, %struct.Token** %130, align 8
  %132 = getelementptr inbounds %struct.Token, %struct.Token* %131, i32 0, i32 0
  %133 = load i32, i32* %132, align 16
  %134 = icmp ne i32 %133, 6
  br i1 %134, label %135, label %164

135:                                              ; preds = %128
  %136 = load %struct.Token*, %struct.Token** %6, align 8
  %137 = load %struct.Token*, %struct.Token** %6, align 8
  %138 = load %struct.MacroArg*, %struct.MacroArg** %9, align 8
  %139 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %138, i32 0, i32 3
  %140 = load %struct.Token*, %struct.Token** %139, align 8
  %141 = call %struct.Token* @paste(%struct.Token* noundef %137, %struct.Token* noundef %140)
  %142 = bitcast %struct.Token* %136 to i8*
  %143 = bitcast %struct.Token* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %142, i8* align 16 %143, i64 128, i1 false)
  %144 = load %struct.MacroArg*, %struct.MacroArg** %9, align 8
  %145 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %144, i32 0, i32 3
  %146 = load %struct.Token*, %struct.Token** %145, align 8
  %147 = getelementptr inbounds %struct.Token, %struct.Token* %146, i32 0, i32 1
  %148 = load %struct.Token*, %struct.Token** %147, align 8
  store %struct.Token* %148, %struct.Token** %10, align 8
  br label %149

149:                                              ; preds = %159, %135
  %150 = load %struct.Token*, %struct.Token** %10, align 8
  %151 = getelementptr inbounds %struct.Token, %struct.Token* %150, i32 0, i32 0
  %152 = load i32, i32* %151, align 16
  %153 = icmp ne i32 %152, 6
  br i1 %153, label %154, label %163

154:                                              ; preds = %149
  %155 = load %struct.Token*, %struct.Token** %10, align 8
  %156 = call %struct.Token* @copy_token(%struct.Token* noundef %155)
  %157 = load %struct.Token*, %struct.Token** %6, align 8
  %158 = getelementptr inbounds %struct.Token, %struct.Token* %157, i32 0, i32 1
  store %struct.Token* %156, %struct.Token** %158, align 8
  store %struct.Token* %156, %struct.Token** %6, align 8
  br label %159

159:                                              ; preds = %154
  %160 = load %struct.Token*, %struct.Token** %10, align 8
  %161 = getelementptr inbounds %struct.Token, %struct.Token* %160, i32 0, i32 1
  %162 = load %struct.Token*, %struct.Token** %161, align 8
  store %struct.Token* %162, %struct.Token** %10, align 8
  br label %149, !llvm.loop !171

163:                                              ; preds = %149
  br label %164

164:                                              ; preds = %163, %128
  %165 = load %struct.Token*, %struct.Token** %3, align 8
  %166 = getelementptr inbounds %struct.Token, %struct.Token* %165, i32 0, i32 1
  %167 = load %struct.Token*, %struct.Token** %166, align 8
  %168 = getelementptr inbounds %struct.Token, %struct.Token* %167, i32 0, i32 1
  %169 = load %struct.Token*, %struct.Token** %168, align 8
  store %struct.Token* %169, %struct.Token** %3, align 8
  br label %20, !llvm.loop !170

170:                                              ; preds = %120
  %171 = load %struct.Token*, %struct.Token** %6, align 8
  %172 = load %struct.Token*, %struct.Token** %6, align 8
  %173 = load %struct.Token*, %struct.Token** %3, align 8
  %174 = getelementptr inbounds %struct.Token, %struct.Token* %173, i32 0, i32 1
  %175 = load %struct.Token*, %struct.Token** %174, align 8
  %176 = call %struct.Token* @paste(%struct.Token* noundef %172, %struct.Token* noundef %175)
  %177 = bitcast %struct.Token* %171 to i8*
  %178 = bitcast %struct.Token* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %177, i8* align 16 %178, i64 128, i1 false)
  %179 = load %struct.Token*, %struct.Token** %3, align 8
  %180 = getelementptr inbounds %struct.Token, %struct.Token* %179, i32 0, i32 1
  %181 = load %struct.Token*, %struct.Token** %180, align 8
  %182 = getelementptr inbounds %struct.Token, %struct.Token* %181, i32 0, i32 1
  %183 = load %struct.Token*, %struct.Token** %182, align 8
  store %struct.Token* %183, %struct.Token** %3, align 8
  br label %20, !llvm.loop !170

184:                                              ; preds = %103
  %185 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %186 = load %struct.Token*, %struct.Token** %3, align 8
  %187 = call %struct.MacroArg* @find_arg(%struct.MacroArg* noundef %185, %struct.Token* noundef %186)
  store %struct.MacroArg* %187, %struct.MacroArg** %11, align 8
  %188 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %189 = icmp ne %struct.MacroArg* %188, null
  br i1 %189, label %190, label %263

190:                                              ; preds = %184
  %191 = load %struct.Token*, %struct.Token** %3, align 8
  %192 = getelementptr inbounds %struct.Token, %struct.Token* %191, i32 0, i32 1
  %193 = load %struct.Token*, %struct.Token** %192, align 8
  %194 = call zeroext i1 @equal(%struct.Token* noundef %193, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128.917, i64 0, i64 0))
  br i1 %194, label %195, label %263

195:                                              ; preds = %190
  %196 = load %struct.Token*, %struct.Token** %3, align 8
  %197 = getelementptr inbounds %struct.Token, %struct.Token* %196, i32 0, i32 1
  %198 = load %struct.Token*, %struct.Token** %197, align 8
  %199 = getelementptr inbounds %struct.Token, %struct.Token* %198, i32 0, i32 1
  %200 = load %struct.Token*, %struct.Token** %199, align 8
  store %struct.Token* %200, %struct.Token** %12, align 8
  %201 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %202 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %201, i32 0, i32 3
  %203 = load %struct.Token*, %struct.Token** %202, align 8
  %204 = getelementptr inbounds %struct.Token, %struct.Token* %203, i32 0, i32 0
  %205 = load i32, i32* %204, align 16
  %206 = icmp eq i32 %205, 6
  br i1 %206, label %207, label %241

207:                                              ; preds = %195
  %208 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %209 = load %struct.Token*, %struct.Token** %12, align 8
  %210 = call %struct.MacroArg* @find_arg(%struct.MacroArg* noundef %208, %struct.Token* noundef %209)
  store %struct.MacroArg* %210, %struct.MacroArg** %13, align 8
  %211 = load %struct.MacroArg*, %struct.MacroArg** %13, align 8
  %212 = icmp ne %struct.MacroArg* %211, null
  br i1 %212, label %213, label %232

213:                                              ; preds = %207
  %214 = load %struct.MacroArg*, %struct.MacroArg** %13, align 8
  %215 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %214, i32 0, i32 3
  %216 = load %struct.Token*, %struct.Token** %215, align 8
  store %struct.Token* %216, %struct.Token** %14, align 8
  br label %217

217:                                              ; preds = %227, %213
  %218 = load %struct.Token*, %struct.Token** %14, align 8
  %219 = getelementptr inbounds %struct.Token, %struct.Token* %218, i32 0, i32 0
  %220 = load i32, i32* %219, align 16
  %221 = icmp ne i32 %220, 6
  br i1 %221, label %222, label %231

222:                                              ; preds = %217
  %223 = load %struct.Token*, %struct.Token** %14, align 8
  %224 = call %struct.Token* @copy_token(%struct.Token* noundef %223)
  %225 = load %struct.Token*, %struct.Token** %6, align 8
  %226 = getelementptr inbounds %struct.Token, %struct.Token* %225, i32 0, i32 1
  store %struct.Token* %224, %struct.Token** %226, align 8
  store %struct.Token* %224, %struct.Token** %6, align 8
  br label %227

227:                                              ; preds = %222
  %228 = load %struct.Token*, %struct.Token** %14, align 8
  %229 = getelementptr inbounds %struct.Token, %struct.Token* %228, i32 0, i32 1
  %230 = load %struct.Token*, %struct.Token** %229, align 8
  store %struct.Token* %230, %struct.Token** %14, align 8
  br label %217, !llvm.loop !172

231:                                              ; preds = %217
  br label %237

232:                                              ; preds = %207
  %233 = load %struct.Token*, %struct.Token** %12, align 8
  %234 = call %struct.Token* @copy_token(%struct.Token* noundef %233)
  %235 = load %struct.Token*, %struct.Token** %6, align 8
  %236 = getelementptr inbounds %struct.Token, %struct.Token* %235, i32 0, i32 1
  store %struct.Token* %234, %struct.Token** %236, align 8
  store %struct.Token* %234, %struct.Token** %6, align 8
  br label %237

237:                                              ; preds = %232, %231
  %238 = load %struct.Token*, %struct.Token** %12, align 8
  %239 = getelementptr inbounds %struct.Token, %struct.Token* %238, i32 0, i32 1
  %240 = load %struct.Token*, %struct.Token** %239, align 8
  store %struct.Token* %240, %struct.Token** %3, align 8
  br label %20, !llvm.loop !170

241:                                              ; preds = %195
  %242 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %243 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %242, i32 0, i32 3
  %244 = load %struct.Token*, %struct.Token** %243, align 8
  store %struct.Token* %244, %struct.Token** %15, align 8
  br label %245

245:                                              ; preds = %255, %241
  %246 = load %struct.Token*, %struct.Token** %15, align 8
  %247 = getelementptr inbounds %struct.Token, %struct.Token* %246, i32 0, i32 0
  %248 = load i32, i32* %247, align 16
  %249 = icmp ne i32 %248, 6
  br i1 %249, label %250, label %259

250:                                              ; preds = %245
  %251 = load %struct.Token*, %struct.Token** %15, align 8
  %252 = call %struct.Token* @copy_token(%struct.Token* noundef %251)
  %253 = load %struct.Token*, %struct.Token** %6, align 8
  %254 = getelementptr inbounds %struct.Token, %struct.Token* %253, i32 0, i32 1
  store %struct.Token* %252, %struct.Token** %254, align 8
  store %struct.Token* %252, %struct.Token** %6, align 8
  br label %255

255:                                              ; preds = %250
  %256 = load %struct.Token*, %struct.Token** %15, align 8
  %257 = getelementptr inbounds %struct.Token, %struct.Token* %256, i32 0, i32 1
  %258 = load %struct.Token*, %struct.Token** %257, align 8
  store %struct.Token* %258, %struct.Token** %15, align 8
  br label %245, !llvm.loop !173

259:                                              ; preds = %245
  %260 = load %struct.Token*, %struct.Token** %3, align 8
  %261 = getelementptr inbounds %struct.Token, %struct.Token* %260, i32 0, i32 1
  %262 = load %struct.Token*, %struct.Token** %261, align 8
  store %struct.Token* %262, %struct.Token** %3, align 8
  br label %20, !llvm.loop !170

263:                                              ; preds = %190, %184
  %264 = load %struct.Token*, %struct.Token** %3, align 8
  %265 = call zeroext i1 @equal(%struct.Token* noundef %264, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131.920, i64 0, i64 0))
  br i1 %265, label %266, label %301

266:                                              ; preds = %263
  %267 = load %struct.Token*, %struct.Token** %3, align 8
  %268 = getelementptr inbounds %struct.Token, %struct.Token* %267, i32 0, i32 1
  %269 = load %struct.Token*, %struct.Token** %268, align 8
  %270 = call zeroext i1 @equal(%struct.Token* noundef %269, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103.913, i64 0, i64 0))
  br i1 %270, label %271, label %301

271:                                              ; preds = %266
  %272 = load %struct.Token*, %struct.Token** %3, align 8
  %273 = getelementptr inbounds %struct.Token, %struct.Token* %272, i32 0, i32 1
  %274 = load %struct.Token*, %struct.Token** %273, align 8
  %275 = getelementptr inbounds %struct.Token, %struct.Token* %274, i32 0, i32 1
  %276 = load %struct.Token*, %struct.Token** %275, align 8
  %277 = call %struct.MacroArg* @read_macro_arg_one(%struct.Token** noundef %3, %struct.Token* noundef %276, i1 noundef zeroext true)
  store %struct.MacroArg* %277, %struct.MacroArg** %16, align 8
  %278 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %279 = call zeroext i1 @has_varargs(%struct.MacroArg* noundef %278)
  br i1 %279, label %280, label %298

280:                                              ; preds = %271
  %281 = load %struct.MacroArg*, %struct.MacroArg** %16, align 8
  %282 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %281, i32 0, i32 3
  %283 = load %struct.Token*, %struct.Token** %282, align 8
  store %struct.Token* %283, %struct.Token** %17, align 8
  br label %284

284:                                              ; preds = %293, %280
  %285 = load %struct.Token*, %struct.Token** %17, align 8
  %286 = getelementptr inbounds %struct.Token, %struct.Token* %285, i32 0, i32 0
  %287 = load i32, i32* %286, align 16
  %288 = icmp ne i32 %287, 6
  br i1 %288, label %289, label %297

289:                                              ; preds = %284
  %290 = load %struct.Token*, %struct.Token** %17, align 8
  %291 = load %struct.Token*, %struct.Token** %6, align 8
  %292 = getelementptr inbounds %struct.Token, %struct.Token* %291, i32 0, i32 1
  store %struct.Token* %290, %struct.Token** %292, align 8
  store %struct.Token* %290, %struct.Token** %6, align 8
  br label %293

293:                                              ; preds = %289
  %294 = load %struct.Token*, %struct.Token** %17, align 8
  %295 = getelementptr inbounds %struct.Token, %struct.Token* %294, i32 0, i32 1
  %296 = load %struct.Token*, %struct.Token** %295, align 8
  store %struct.Token* %296, %struct.Token** %17, align 8
  br label %284, !llvm.loop !174

297:                                              ; preds = %284
  br label %298

298:                                              ; preds = %297, %271
  %299 = load %struct.Token*, %struct.Token** %3, align 8
  %300 = call %struct.Token* @skip(%struct.Token* noundef %299, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.921, i64 0, i64 0))
  store %struct.Token* %300, %struct.Token** %3, align 8
  br label %20, !llvm.loop !170

301:                                              ; preds = %266, %263
  %302 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %303 = icmp ne %struct.MacroArg* %302, null
  br i1 %303, label %304, label %334

304:                                              ; preds = %301
  %305 = load %struct.MacroArg*, %struct.MacroArg** %11, align 8
  %306 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %305, i32 0, i32 3
  %307 = load %struct.Token*, %struct.Token** %306, align 8
  %308 = call %struct.Token* @preprocess2(%struct.Token* noundef %307)
  store %struct.Token* %308, %struct.Token** %18, align 8
  %309 = load %struct.Token*, %struct.Token** %3, align 8
  %310 = getelementptr inbounds %struct.Token, %struct.Token* %309, i32 0, i32 13
  %311 = load i8, i8* %310, align 1
  %312 = trunc i8 %311 to i1
  %313 = load %struct.Token*, %struct.Token** %18, align 8
  %314 = getelementptr inbounds %struct.Token, %struct.Token* %313, i32 0, i32 13
  %315 = zext i1 %312 to i8
  store i8 %315, i8* %314, align 1
  br label %316

316:                                              ; preds = %326, %304
  %317 = load %struct.Token*, %struct.Token** %18, align 8
  %318 = getelementptr inbounds %struct.Token, %struct.Token* %317, i32 0, i32 0
  %319 = load i32, i32* %318, align 16
  %320 = icmp ne i32 %319, 6
  br i1 %320, label %321, label %330

321:                                              ; preds = %316
  %322 = load %struct.Token*, %struct.Token** %18, align 8
  %323 = call %struct.Token* @copy_token(%struct.Token* noundef %322)
  %324 = load %struct.Token*, %struct.Token** %6, align 8
  %325 = getelementptr inbounds %struct.Token, %struct.Token* %324, i32 0, i32 1
  store %struct.Token* %323, %struct.Token** %325, align 8
  store %struct.Token* %323, %struct.Token** %6, align 8
  br label %326

326:                                              ; preds = %321
  %327 = load %struct.Token*, %struct.Token** %18, align 8
  %328 = getelementptr inbounds %struct.Token, %struct.Token* %327, i32 0, i32 1
  %329 = load %struct.Token*, %struct.Token** %328, align 8
  store %struct.Token* %329, %struct.Token** %18, align 8
  br label %316, !llvm.loop !175

330:                                              ; preds = %316
  %331 = load %struct.Token*, %struct.Token** %3, align 8
  %332 = getelementptr inbounds %struct.Token, %struct.Token* %331, i32 0, i32 1
  %333 = load %struct.Token*, %struct.Token** %332, align 8
  store %struct.Token* %333, %struct.Token** %3, align 8
  br label %20, !llvm.loop !170

334:                                              ; preds = %301
  %335 = load %struct.Token*, %struct.Token** %3, align 8
  %336 = call %struct.Token* @copy_token(%struct.Token* noundef %335)
  %337 = load %struct.Token*, %struct.Token** %6, align 8
  %338 = getelementptr inbounds %struct.Token, %struct.Token* %337, i32 0, i32 1
  store %struct.Token* %336, %struct.Token** %338, align 8
  store %struct.Token* %336, %struct.Token** %6, align 8
  %339 = load %struct.Token*, %struct.Token** %3, align 8
  %340 = getelementptr inbounds %struct.Token, %struct.Token* %339, i32 0, i32 1
  %341 = load %struct.Token*, %struct.Token** %340, align 8
  store %struct.Token* %341, %struct.Token** %3, align 8
  br label %20, !llvm.loop !170

342:                                              ; preds = %20
  %343 = load %struct.Token*, %struct.Token** %3, align 8
  %344 = load %struct.Token*, %struct.Token** %6, align 8
  %345 = getelementptr inbounds %struct.Token, %struct.Token* %344, i32 0, i32 1
  store %struct.Token* %343, %struct.Token** %345, align 8
  %346 = getelementptr inbounds %struct.Token, %struct.Token* %5, i32 0, i32 1
  %347 = load %struct.Token*, %struct.Token** %346, align 8
  ret %struct.Token* %347
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.MacroArg* @find_arg(%struct.MacroArg* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.MacroArg*, align 8
  %4 = alloca %struct.MacroArg*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.MacroArg*, align 8
  store %struct.MacroArg* %0, %struct.MacroArg** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %7 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  store %struct.MacroArg* %7, %struct.MacroArg** %6, align 8
  br label %8

8:                                                ; preds = %37, %2
  %9 = load %struct.MacroArg*, %struct.MacroArg** %6, align 8
  %10 = icmp ne %struct.MacroArg* %9, null
  br i1 %10, label %11, label %41

11:                                               ; preds = %8
  %12 = load %struct.Token*, %struct.Token** %5, align 8
  %13 = getelementptr inbounds %struct.Token, %struct.Token* %12, i32 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = load %struct.MacroArg*, %struct.MacroArg** %6, align 8
  %17 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %16, i32 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = call i64 @strlen(i8* noundef %18) #13
  %20 = icmp eq i64 %15, %19
  br i1 %20, label %21, label %36

21:                                               ; preds = %11
  %22 = load %struct.Token*, %struct.Token** %5, align 8
  %23 = getelementptr inbounds %struct.Token, %struct.Token* %22, i32 0, i32 4
  %24 = load i8*, i8** %23, align 16
  %25 = load %struct.MacroArg*, %struct.MacroArg** %6, align 8
  %26 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %25, i32 0, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = load %struct.Token*, %struct.Token** %5, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = call i32 @strncmp(i8* noundef %24, i8* noundef %27, i64 noundef %31) #13
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %21
  %35 = load %struct.MacroArg*, %struct.MacroArg** %6, align 8
  store %struct.MacroArg* %35, %struct.MacroArg** %3, align 8
  br label %42

36:                                               ; preds = %21, %11
  br label %37

37:                                               ; preds = %36
  %38 = load %struct.MacroArg*, %struct.MacroArg** %6, align 8
  %39 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %38, i32 0, i32 0
  %40 = load %struct.MacroArg*, %struct.MacroArg** %39, align 8
  store %struct.MacroArg* %40, %struct.MacroArg** %6, align 8
  br label %8, !llvm.loop !176

41:                                               ; preds = %8
  store %struct.MacroArg* null, %struct.MacroArg** %3, align 8
  br label %42

42:                                               ; preds = %41, %34
  %43 = load %struct.MacroArg*, %struct.MacroArg** %3, align 8
  ret %struct.MacroArg* %43
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @stringize(%struct.Token* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca i8*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %6 = load %struct.Token*, %struct.Token** %4, align 8
  %7 = call i8* @join_tokens(%struct.Token* noundef %6, %struct.Token* noundef null)
  store i8* %7, i8** %5, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load %struct.Token*, %struct.Token** %3, align 8
  %10 = call %struct.Token* @new_str_token(i8* noundef %8, %struct.Token* noundef %9)
  ret %struct.Token* %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @paste(%struct.Token* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %3, align 8
  %8 = getelementptr inbounds %struct.Token, %struct.Token* %7, i32 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 4
  %12 = load i8*, i8** %11, align 16
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = load %struct.Token*, %struct.Token** %4, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 4
  %18 = load i8*, i8** %17, align 16
  %19 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132.925, i64 0, i64 0), i32 noundef %9, i8* noundef %12, i32 noundef %15, i8* noundef %18)
  store i8* %19, i8** %5, align 8
  %20 = load %struct.Token*, %struct.Token** %3, align 8
  %21 = getelementptr inbounds %struct.Token, %struct.Token* %20, i32 0, i32 8
  %22 = load %struct.File*, %struct.File** %21, align 16
  %23 = getelementptr inbounds %struct.File, %struct.File* %22, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = load %struct.Token*, %struct.Token** %3, align 8
  %26 = getelementptr inbounds %struct.Token, %struct.Token* %25, i32 0, i32 8
  %27 = load %struct.File*, %struct.File** %26, align 16
  %28 = getelementptr inbounds %struct.File, %struct.File* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = load i8*, i8** %5, align 8
  %31 = call %struct.File* @new_file(i8* noundef %24, i32 noundef %29, i8* noundef %30)
  %32 = call %struct.Token* @tokenize(%struct.File* noundef %31)
  store %struct.Token* %32, %struct.Token** %6, align 8
  %33 = load %struct.Token*, %struct.Token** %6, align 8
  %34 = getelementptr inbounds %struct.Token, %struct.Token* %33, i32 0, i32 1
  %35 = load %struct.Token*, %struct.Token** %34, align 8
  %36 = getelementptr inbounds %struct.Token, %struct.Token* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 16
  %38 = icmp ne i32 %37, 6
  br i1 %38, label %39, label %42

39:                                               ; preds = %2
  %40 = load %struct.Token*, %struct.Token** %3, align 8
  %41 = load i8*, i8** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %40, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.133.926, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0), i8* noundef %41) #11
  unreachable

42:                                               ; preds = %2
  %43 = load %struct.Token*, %struct.Token** %6, align 8
  ret %struct.Token* %43
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.MacroArg* @read_macro_arg_one(%struct.Token** noundef %0, %struct.Token* noundef %1, i1 noundef zeroext %2) #0 {
  %4 = alloca %struct.Token**, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.Token, align 16
  %8 = alloca %struct.Token*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.MacroArg*, align 8
  store %struct.Token** %0, %struct.Token*** %4, align 8
  store %struct.Token* %1, %struct.Token** %5, align 8
  %11 = zext i1 %2 to i8
  store i8 %11, i8* %6, align 1
  %12 = bitcast %struct.Token* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %12, i8 0, i64 128, i1 false)
  store %struct.Token* %7, %struct.Token** %8, align 8
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %50, %3
  %14 = load i32, i32* %9, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = load %struct.Token*, %struct.Token** %5, align 8
  %18 = call zeroext i1 @equal(%struct.Token* noundef %17, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.921, i64 0, i64 0))
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  br label %58

20:                                               ; preds = %16, %13
  %21 = load i32, i32* %9, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %20
  %24 = load i8, i8* %6, align 1
  %25 = trunc i8 %24 to i1
  br i1 %25, label %30, label %26

26:                                               ; preds = %23
  %27 = load %struct.Token*, %struct.Token** %5, align 8
  %28 = call zeroext i1 @equal(%struct.Token* noundef %27, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.105.916, i64 0, i64 0))
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  br label %58

30:                                               ; preds = %26, %23, %20
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = getelementptr inbounds %struct.Token, %struct.Token* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 16
  %34 = icmp eq i32 %33, 6
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %36, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.125.923, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

37:                                               ; preds = %30
  %38 = load %struct.Token*, %struct.Token** %5, align 8
  %39 = call zeroext i1 @equal(%struct.Token* noundef %38, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103.913, i64 0, i64 0))
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load i32, i32* %9, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %9, align 4
  br label %50

43:                                               ; preds = %37
  %44 = load %struct.Token*, %struct.Token** %5, align 8
  %45 = call zeroext i1 @equal(%struct.Token* noundef %44, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.921, i64 0, i64 0))
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  %47 = load i32, i32* %9, align 4
  %48 = add nsw i32 %47, -1
  store i32 %48, i32* %9, align 4
  br label %49

49:                                               ; preds = %46, %43
  br label %50

50:                                               ; preds = %49, %40
  %51 = load %struct.Token*, %struct.Token** %5, align 8
  %52 = call %struct.Token* @copy_token(%struct.Token* noundef %51)
  %53 = load %struct.Token*, %struct.Token** %8, align 8
  %54 = getelementptr inbounds %struct.Token, %struct.Token* %53, i32 0, i32 1
  store %struct.Token* %52, %struct.Token** %54, align 8
  store %struct.Token* %52, %struct.Token** %8, align 8
  %55 = load %struct.Token*, %struct.Token** %5, align 8
  %56 = getelementptr inbounds %struct.Token, %struct.Token* %55, i32 0, i32 1
  %57 = load %struct.Token*, %struct.Token** %56, align 8
  store %struct.Token* %57, %struct.Token** %5, align 8
  br label %13

58:                                               ; preds = %29, %19
  %59 = load %struct.Token*, %struct.Token** %5, align 8
  %60 = call %struct.Token* @new_eof(%struct.Token* noundef %59)
  %61 = load %struct.Token*, %struct.Token** %8, align 8
  %62 = getelementptr inbounds %struct.Token, %struct.Token* %61, i32 0, i32 1
  store %struct.Token* %60, %struct.Token** %62, align 8
  %63 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 32) #14
  %64 = bitcast i8* %63 to %struct.MacroArg*
  store %struct.MacroArg* %64, %struct.MacroArg** %10, align 8
  %65 = load %struct.MacroArg*, %struct.MacroArg** %10, align 8
  %66 = icmp eq %struct.MacroArg* %65, null
  br i1 %66, label %67, label %68

67:                                               ; preds = %58
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.126.924, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

68:                                               ; preds = %58
  %69 = getelementptr inbounds %struct.Token, %struct.Token* %7, i32 0, i32 1
  %70 = load %struct.Token*, %struct.Token** %69, align 8
  %71 = load %struct.MacroArg*, %struct.MacroArg** %10, align 8
  %72 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %71, i32 0, i32 3
  store %struct.Token* %70, %struct.Token** %72, align 8
  %73 = load %struct.Token*, %struct.Token** %5, align 8
  %74 = load %struct.Token**, %struct.Token*** %4, align 8
  store %struct.Token* %73, %struct.Token** %74, align 8
  %75 = load %struct.MacroArg*, %struct.MacroArg** %10, align 8
  ret %struct.MacroArg* %75
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @has_varargs(%struct.MacroArg* noundef %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.MacroArg*, align 8
  %4 = alloca %struct.MacroArg*, align 8
  store %struct.MacroArg* %0, %struct.MacroArg** %3, align 8
  %5 = load %struct.MacroArg*, %struct.MacroArg** %3, align 8
  store %struct.MacroArg* %5, %struct.MacroArg** %4, align 8
  br label %6

6:                                                ; preds = %23, %1
  %7 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %8 = icmp ne %struct.MacroArg* %7, null
  br i1 %8, label %9, label %27

9:                                                ; preds = %6
  %10 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %11 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %10, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = call i32 @strcmp(i8* noundef %12, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107.922, i64 0, i64 0)) #13
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %9
  %16 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %17 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %16, i32 0, i32 3
  %18 = load %struct.Token*, %struct.Token** %17, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 16
  %21 = icmp ne i32 %20, 6
  store i1 %21, i1* %2, align 1
  br label %28

22:                                               ; preds = %9
  br label %23

23:                                               ; preds = %22
  %24 = load %struct.MacroArg*, %struct.MacroArg** %4, align 8
  %25 = getelementptr inbounds %struct.MacroArg, %struct.MacroArg* %24, i32 0, i32 0
  %26 = load %struct.MacroArg*, %struct.MacroArg** %25, align 8
  store %struct.MacroArg* %26, %struct.MacroArg** %4, align 8
  br label %6, !llvm.loop !177

27:                                               ; preds = %6
  store i1 false, i1* %2, align 1
  br label %28

28:                                               ; preds = %27, %15
  %29 = load i1, i1* %2, align 1
  ret i1 %29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @new_eof(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %4 = load %struct.Token*, %struct.Token** %2, align 8
  %5 = call %struct.Token* @copy_token(%struct.Token* noundef %4)
  store %struct.Token* %5, %struct.Token** %3, align 8
  %6 = load %struct.Token*, %struct.Token** %3, align 8
  %7 = getelementptr inbounds %struct.Token, %struct.Token* %6, i32 0, i32 0
  store i32 6, i32* %7, align 16
  %8 = load %struct.Token*, %struct.Token** %3, align 8
  %9 = getelementptr inbounds %struct.Token, %struct.Token* %8, i32 0, i32 5
  store i32 0, i32* %9, align 8
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  ret %struct.Token* %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @join_tokens(%struct.Token* noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.Token*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  store i32 1, i32* %5, align 4
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  store %struct.Token* %10, %struct.Token** %6, align 8
  br label %11

11:                                               ; preds = %40, %2
  %12 = load %struct.Token*, %struct.Token** %6, align 8
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  %14 = icmp ne %struct.Token* %12, %13
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = load %struct.Token*, %struct.Token** %6, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 16
  %19 = icmp ne i32 %18, 6
  br label %20

20:                                               ; preds = %15, %11
  %21 = phi i1 [ false, %11 ], [ %19, %15 ]
  br i1 %21, label %22, label %44

22:                                               ; preds = %20
  %23 = load %struct.Token*, %struct.Token** %6, align 8
  %24 = load %struct.Token*, %struct.Token** %3, align 8
  %25 = icmp ne %struct.Token* %23, %24
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = load %struct.Token*, %struct.Token** %6, align 8
  %28 = getelementptr inbounds %struct.Token, %struct.Token* %27, i32 0, i32 13
  %29 = load i8, i8* %28, align 1
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %5, align 4
  br label %34

34:                                               ; preds = %31, %26, %22
  %35 = load %struct.Token*, %struct.Token** %6, align 8
  %36 = getelementptr inbounds %struct.Token, %struct.Token* %35, i32 0, i32 5
  %37 = load i32, i32* %36, align 8
  %38 = load i32, i32* %5, align 4
  %39 = add nsw i32 %38, %37
  store i32 %39, i32* %5, align 4
  br label %40

40:                                               ; preds = %34
  %41 = load %struct.Token*, %struct.Token** %6, align 8
  %42 = getelementptr inbounds %struct.Token, %struct.Token* %41, i32 0, i32 1
  %43 = load %struct.Token*, %struct.Token** %42, align 8
  store %struct.Token* %43, %struct.Token** %6, align 8
  br label %11, !llvm.loop !178

44:                                               ; preds = %20
  %45 = load i32, i32* %5, align 4
  %46 = sext i32 %45 to i64
  %47 = call noalias i8* @calloc(i64 noundef 1, i64 noundef %46) #14
  store i8* %47, i8** %7, align 8
  %48 = load i8*, i8** %7, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %44
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.99.927, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

51:                                               ; preds = %44
  store i32 0, i32* %8, align 4
  %52 = load %struct.Token*, %struct.Token** %3, align 8
  store %struct.Token* %52, %struct.Token** %9, align 8
  br label %53

53:                                               ; preds = %97, %51
  %54 = load %struct.Token*, %struct.Token** %9, align 8
  %55 = load %struct.Token*, %struct.Token** %4, align 8
  %56 = icmp ne %struct.Token* %54, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load %struct.Token*, %struct.Token** %9, align 8
  %59 = getelementptr inbounds %struct.Token, %struct.Token* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 16
  %61 = icmp ne i32 %60, 6
  br label %62

62:                                               ; preds = %57, %53
  %63 = phi i1 [ false, %53 ], [ %61, %57 ]
  br i1 %63, label %64, label %101

64:                                               ; preds = %62
  %65 = load %struct.Token*, %struct.Token** %9, align 8
  %66 = load %struct.Token*, %struct.Token** %3, align 8
  %67 = icmp ne %struct.Token* %65, %66
  br i1 %67, label %68, label %79

68:                                               ; preds = %64
  %69 = load %struct.Token*, %struct.Token** %9, align 8
  %70 = getelementptr inbounds %struct.Token, %struct.Token* %69, i32 0, i32 13
  %71 = load i8, i8* %70, align 1
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %79

73:                                               ; preds = %68
  %74 = load i8*, i8** %7, align 8
  %75 = load i32, i32* %8, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %8, align 4
  %77 = sext i32 %75 to i64
  %78 = getelementptr inbounds i8, i8* %74, i64 %77
  store i8 32, i8* %78, align 1
  br label %79

79:                                               ; preds = %73, %68, %64
  %80 = load i8*, i8** %7, align 8
  %81 = load i32, i32* %8, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  %84 = load %struct.Token*, %struct.Token** %9, align 8
  %85 = getelementptr inbounds %struct.Token, %struct.Token* %84, i32 0, i32 4
  %86 = load i8*, i8** %85, align 16
  %87 = load %struct.Token*, %struct.Token** %9, align 8
  %88 = getelementptr inbounds %struct.Token, %struct.Token* %87, i32 0, i32 5
  %89 = load i32, i32* %88, align 8
  %90 = sext i32 %89 to i64
  %91 = call i8* @strncpy(i8* noundef %83, i8* noundef %86, i64 noundef %90) #14
  %92 = load %struct.Token*, %struct.Token** %9, align 8
  %93 = getelementptr inbounds %struct.Token, %struct.Token* %92, i32 0, i32 5
  %94 = load i32, i32* %93, align 8
  %95 = load i32, i32* %8, align 4
  %96 = add nsw i32 %95, %94
  store i32 %96, i32* %8, align 4
  br label %97

97:                                               ; preds = %79
  %98 = load %struct.Token*, %struct.Token** %9, align 8
  %99 = getelementptr inbounds %struct.Token, %struct.Token* %98, i32 0, i32 1
  %100 = load %struct.Token*, %struct.Token** %99, align 8
  store %struct.Token* %100, %struct.Token** %9, align 8
  br label %53, !llvm.loop !179

101:                                              ; preds = %62
  %102 = load i8*, i8** %7, align 8
  %103 = load i32, i32* %8, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %102, i64 %104
  store i8 0, i8* %105, align 1
  %106 = load i8*, i8** %7, align 8
  ret i8* %106
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_hash(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %3 = load %struct.Token*, %struct.Token** %2, align 8
  %4 = getelementptr inbounds %struct.Token, %struct.Token* %3, i32 0, i32 12
  %5 = load i8, i8* %4, align 8
  %6 = trunc i8 %5 to i1
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = load %struct.Token*, %struct.Token** %2, align 8
  %9 = call zeroext i1 @equal(%struct.Token* noundef %8, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94.914, i64 0, i64 0))
  br label %10

10:                                               ; preds = %7, %1
  %11 = phi i1 [ false, %1 ], [ %9, %7 ]
  ret i1 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @read_include_filename(%struct.Token** noundef %0, %struct.Token* noundef %1, i8* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.Token*, align 8
  %9 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store i8* %2, i8** %7, align 8
  %10 = load %struct.Token*, %struct.Token** %6, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 16
  %13 = icmp eq i32 %12, 3
  br i1 %13, label %14, label %31

14:                                               ; preds = %3
  %15 = load i8*, i8** %7, align 8
  store i8 1, i8* %15, align 1
  %16 = load %struct.Token*, %struct.Token** %6, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 1
  %18 = load %struct.Token*, %struct.Token** %17, align 8
  %19 = call %struct.Token* @skip_line(%struct.Token* noundef %18)
  %20 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %19, %struct.Token** %20, align 8
  %21 = load %struct.Token*, %struct.Token** %6, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 4
  %23 = load i8*, i8** %22, align 16
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = load %struct.Token*, %struct.Token** %6, align 8
  %26 = getelementptr inbounds %struct.Token, %struct.Token* %25, i32 0, i32 5
  %27 = load i32, i32* %26, align 8
  %28 = sub nsw i32 %27, 2
  %29 = sext i32 %28 to i64
  %30 = call noalias i8* @strndup(i8* noundef %24, i64 noundef %29) #14
  store i8* %30, i8** %4, align 8
  br label %84

31:                                               ; preds = %3
  %32 = load %struct.Token*, %struct.Token** %6, align 8
  %33 = call zeroext i1 @equal(%struct.Token* noundef %32, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.95.966, i64 0, i64 0))
  br i1 %33, label %34, label %69

34:                                               ; preds = %31
  %35 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %35, %struct.Token** %8, align 8
  br label %36

36:                                               ; preds = %53, %34
  %37 = load %struct.Token*, %struct.Token** %6, align 8
  %38 = call zeroext i1 @equal(%struct.Token* noundef %37, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96.967, i64 0, i64 0))
  %39 = xor i1 %38, true
  br i1 %39, label %40, label %57

40:                                               ; preds = %36
  %41 = load %struct.Token*, %struct.Token** %6, align 8
  %42 = getelementptr inbounds %struct.Token, %struct.Token* %41, i32 0, i32 12
  %43 = load i8, i8* %42, align 8
  %44 = trunc i8 %43 to i1
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = load %struct.Token*, %struct.Token** %6, align 8
  %47 = getelementptr inbounds %struct.Token, %struct.Token* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 16
  %49 = icmp eq i32 %48, 6
  br i1 %49, label %50, label %52

50:                                               ; preds = %45, %40
  %51 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %51, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.97.968, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

52:                                               ; preds = %45
  br label %53

53:                                               ; preds = %52
  %54 = load %struct.Token*, %struct.Token** %6, align 8
  %55 = getelementptr inbounds %struct.Token, %struct.Token* %54, i32 0, i32 1
  %56 = load %struct.Token*, %struct.Token** %55, align 8
  store %struct.Token* %56, %struct.Token** %6, align 8
  br label %36, !llvm.loop !180

57:                                               ; preds = %36
  %58 = load i8*, i8** %7, align 8
  store i8 0, i8* %58, align 1
  %59 = load %struct.Token*, %struct.Token** %6, align 8
  %60 = getelementptr inbounds %struct.Token, %struct.Token* %59, i32 0, i32 1
  %61 = load %struct.Token*, %struct.Token** %60, align 8
  %62 = call %struct.Token* @skip_line(%struct.Token* noundef %61)
  %63 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %62, %struct.Token** %63, align 8
  %64 = load %struct.Token*, %struct.Token** %8, align 8
  %65 = getelementptr inbounds %struct.Token, %struct.Token* %64, i32 0, i32 1
  %66 = load %struct.Token*, %struct.Token** %65, align 8
  %67 = load %struct.Token*, %struct.Token** %6, align 8
  %68 = call i8* @join_tokens(%struct.Token* noundef %66, %struct.Token* noundef %67)
  store i8* %68, i8** %4, align 8
  br label %84

69:                                               ; preds = %31
  %70 = load %struct.Token*, %struct.Token** %6, align 8
  %71 = getelementptr inbounds %struct.Token, %struct.Token* %70, i32 0, i32 0
  %72 = load i32, i32* %71, align 16
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %82

74:                                               ; preds = %69
  %75 = load %struct.Token**, %struct.Token*** %5, align 8
  %76 = load %struct.Token*, %struct.Token** %6, align 8
  %77 = call %struct.Token* @copy_line(%struct.Token** noundef %75, %struct.Token* noundef %76)
  %78 = call %struct.Token* @preprocess2(%struct.Token* noundef %77)
  store %struct.Token* %78, %struct.Token** %9, align 8
  %79 = load %struct.Token*, %struct.Token** %9, align 8
  %80 = load i8*, i8** %7, align 8
  %81 = call i8* @read_include_filename(%struct.Token** noundef %9, %struct.Token* noundef %79, i8* noundef %80)
  store i8* %81, i8** %4, align 8
  br label %84

82:                                               ; preds = %69
  %83 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %83, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.98.969, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

84:                                               ; preds = %74, %57, %14
  %85 = load i8*, i8** %4, align 8
  ret i8* %85
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @include_file(%struct.Token* noundef %0, i8* noundef %1, %struct.Token* noundef %2) #0 {
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %5, align 8
  store i8* %1, i8** %6, align 8
  store %struct.Token* %2, %struct.Token** %7, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = call i8* @hashmap_get(%struct.HashMap* noundef @pragma_once, i8* noundef %10)
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %14, %struct.Token** %4, align 8
  br label %49

15:                                               ; preds = %3
  %16 = load i8*, i8** %6, align 8
  %17 = call i8* @hashmap_get(%struct.HashMap* noundef @include_file.include_guards, i8* noundef %16)
  store i8* %17, i8** %8, align 8
  %18 = load i8*, i8** %8, align 8
  %19 = icmp ne i8* %18, null
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = load i8*, i8** %8, align 8
  %22 = call i8* @hashmap_get(%struct.HashMap* noundef @macros, i8* noundef %21)
  %23 = icmp ne i8* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = load %struct.Token*, %struct.Token** %5, align 8
  store %struct.Token* %25, %struct.Token** %4, align 8
  br label %49

26:                                               ; preds = %20, %15
  %27 = load i8*, i8** %6, align 8
  %28 = call %struct.Token* @tokenize_file(i8* noundef %27)
  store %struct.Token* %28, %struct.Token** %9, align 8
  %29 = load %struct.Token*, %struct.Token** %9, align 8
  %30 = icmp ne %struct.Token* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = load %struct.Token*, %struct.Token** %7, align 8
  %33 = load i8*, i8** %6, align 8
  %34 = call i32* @__errno_location() #15
  %35 = load i32, i32* %34, align 4
  %36 = call i8* @strerror(i32 noundef %35) #14
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %32, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.101.965, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0), i8* noundef %33, i8* noundef %36) #11
  unreachable

37:                                               ; preds = %26
  %38 = load %struct.Token*, %struct.Token** %9, align 8
  %39 = call i8* @detect_include_guard(%struct.Token* noundef %38)
  store i8* %39, i8** %8, align 8
  %40 = load i8*, i8** %8, align 8
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = load i8*, i8** %6, align 8
  %44 = load i8*, i8** %8, align 8
  call void @hashmap_put(%struct.HashMap* noundef @include_file.include_guards, i8* noundef %43, i8* noundef %44)
  br label %45

45:                                               ; preds = %42, %37
  %46 = load %struct.Token*, %struct.Token** %9, align 8
  %47 = load %struct.Token*, %struct.Token** %5, align 8
  %48 = call %struct.Token* @append(%struct.Token* noundef %46, %struct.Token* noundef %47)
  store %struct.Token* %48, %struct.Token** %4, align 8
  br label %49

49:                                               ; preds = %45, %24, %13
  %50 = load %struct.Token*, %struct.Token** %4, align 8
  ret %struct.Token* %50
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @search_include_next(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  br label %5

5:                                                ; preds = %22, %1
  %6 = load i32, i32* @include_next_idx, align 4
  %7 = load i32, i32* getelementptr inbounds (%struct.StringArray, %struct.StringArray* @include_paths, i32 0, i32 2), align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = load i8**, i8*** getelementptr inbounds (%struct.StringArray, %struct.StringArray* @include_paths, i32 0, i32 0), align 8
  %11 = load i32, i32* @include_next_idx, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8*, i8** %10, i64 %12
  %14 = load i8*, i8** %13, align 8
  %15 = load i8*, i8** %3, align 8
  %16 = call i8* (i8*, ...) @format(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.828, i64 0, i64 0), i8* noundef %14, i8* noundef %15)
  store i8* %16, i8** %4, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = call zeroext i1 @file_exists(i8* noundef %17)
  br i1 %18, label %19, label %21

19:                                               ; preds = %9
  %20 = load i8*, i8** %4, align 8
  store i8* %20, i8** %2, align 8
  br label %26

21:                                               ; preds = %9
  br label %22

22:                                               ; preds = %21
  %23 = load i32, i32* @include_next_idx, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* @include_next_idx, align 4
  br label %5, !llvm.loop !181

25:                                               ; preds = %5
  store i8* null, i8** %2, align 8
  br label %26

26:                                               ; preds = %25, %19
  %27 = load i8*, i8** %2, align 8
  ret i8* %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @read_macro_definition(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.MacroParam*, align 8
  %8 = alloca %struct.Macro*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %9 = load %struct.Token*, %struct.Token** %4, align 8
  %10 = getelementptr inbounds %struct.Token, %struct.Token* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 16
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load %struct.Token*, %struct.Token** %4, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %14, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.102.961, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

15:                                               ; preds = %2
  %16 = load %struct.Token*, %struct.Token** %4, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 4
  %18 = load i8*, i8** %17, align 16
  %19 = load %struct.Token*, %struct.Token** %4, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 5
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = call noalias i8* @strndup(i8* noundef %18, i64 noundef %22) #14
  store i8* %23, i8** %5, align 8
  %24 = load %struct.Token*, %struct.Token** %4, align 8
  %25 = getelementptr inbounds %struct.Token, %struct.Token* %24, i32 0, i32 1
  %26 = load %struct.Token*, %struct.Token** %25, align 8
  store %struct.Token* %26, %struct.Token** %4, align 8
  %27 = load %struct.Token*, %struct.Token** %4, align 8
  %28 = getelementptr inbounds %struct.Token, %struct.Token* %27, i32 0, i32 13
  %29 = load i8, i8* %28, align 1
  %30 = trunc i8 %29 to i1
  br i1 %30, label %50, label %31

31:                                               ; preds = %15
  %32 = load %struct.Token*, %struct.Token** %4, align 8
  %33 = call zeroext i1 @equal(%struct.Token* noundef %32, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103.913, i64 0, i64 0))
  br i1 %33, label %34, label %50

34:                                               ; preds = %31
  store i8* null, i8** %6, align 8
  %35 = load %struct.Token*, %struct.Token** %4, align 8
  %36 = getelementptr inbounds %struct.Token, %struct.Token* %35, i32 0, i32 1
  %37 = load %struct.Token*, %struct.Token** %36, align 8
  %38 = call %struct.MacroParam* @read_macro_params(%struct.Token** noundef %4, %struct.Token* noundef %37, i8** noundef %6)
  store %struct.MacroParam* %38, %struct.MacroParam** %7, align 8
  %39 = load i8*, i8** %5, align 8
  %40 = load %struct.Token**, %struct.Token*** %3, align 8
  %41 = load %struct.Token*, %struct.Token** %4, align 8
  %42 = call %struct.Token* @copy_line(%struct.Token** noundef %40, %struct.Token* noundef %41)
  %43 = call %struct.Macro* @add_macro(i8* noundef %39, i1 noundef zeroext false, %struct.Token* noundef %42)
  store %struct.Macro* %43, %struct.Macro** %8, align 8
  %44 = load %struct.MacroParam*, %struct.MacroParam** %7, align 8
  %45 = load %struct.Macro*, %struct.Macro** %8, align 8
  %46 = getelementptr inbounds %struct.Macro, %struct.Macro* %45, i32 0, i32 2
  store %struct.MacroParam* %44, %struct.MacroParam** %46, align 8
  %47 = load i8*, i8** %6, align 8
  %48 = load %struct.Macro*, %struct.Macro** %8, align 8
  %49 = getelementptr inbounds %struct.Macro, %struct.Macro* %48, i32 0, i32 3
  store i8* %47, i8** %49, align 8
  br label %56

50:                                               ; preds = %31, %15
  %51 = load i8*, i8** %5, align 8
  %52 = load %struct.Token**, %struct.Token*** %3, align 8
  %53 = load %struct.Token*, %struct.Token** %4, align 8
  %54 = call %struct.Token* @copy_line(%struct.Token** noundef %52, %struct.Token* noundef %53)
  %55 = call %struct.Macro* @add_macro(i8* noundef %51, i1 noundef zeroext true, %struct.Token* noundef %54)
  br label %56

56:                                               ; preds = %50, %34
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @skip_line(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %4 = load %struct.Token*, %struct.Token** %3, align 8
  %5 = getelementptr inbounds %struct.Token, %struct.Token* %4, i32 0, i32 12
  %6 = load i8, i8* %5, align 8
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = load %struct.Token*, %struct.Token** %3, align 8
  store %struct.Token* %9, %struct.Token** %2, align 8
  br label %24

10:                                               ; preds = %1
  %11 = load %struct.Token*, %struct.Token** %3, align 8
  call void (%struct.Token*, i8*, ...) @warn_tok(%struct.Token* noundef %11, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110.960, i64 0, i64 0))
  br label %12

12:                                               ; preds = %18, %10
  %13 = load %struct.Token*, %struct.Token** %3, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 12
  %15 = load i8, i8* %14, align 8
  %16 = trunc i8 %15 to i1
  %17 = xor i1 %16, true
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = load %struct.Token*, %struct.Token** %3, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 1
  %21 = load %struct.Token*, %struct.Token** %20, align 8
  store %struct.Token* %21, %struct.Token** %3, align 8
  br label %12, !llvm.loop !182

22:                                               ; preds = %12
  %23 = load %struct.Token*, %struct.Token** %3, align 8
  store %struct.Token* %23, %struct.Token** %2, align 8
  br label %24

24:                                               ; preds = %22, %8
  %25 = load %struct.Token*, %struct.Token** %2, align 8
  ret %struct.Token* %25
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @eval_const_expr(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca %struct.Token*, align 8
  %9 = alloca %struct.Token*, align 8
  %10 = alloca i64, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %11 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %11, %struct.Token** %5, align 8
  %12 = load %struct.Token**, %struct.Token*** %3, align 8
  %13 = load %struct.Token*, %struct.Token** %4, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 1
  %15 = load %struct.Token*, %struct.Token** %14, align 8
  %16 = call %struct.Token* @read_const_expr(%struct.Token** noundef %12, %struct.Token* noundef %15)
  store %struct.Token* %16, %struct.Token** %6, align 8
  %17 = load %struct.Token*, %struct.Token** %6, align 8
  %18 = call %struct.Token* @preprocess2(%struct.Token* noundef %17)
  store %struct.Token* %18, %struct.Token** %6, align 8
  %19 = load %struct.Token*, %struct.Token** %6, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 16
  %22 = icmp eq i32 %21, 6
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = load %struct.Token*, %struct.Token** %5, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %24, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.111.956, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

25:                                               ; preds = %2
  %26 = load %struct.Token*, %struct.Token** %6, align 8
  store %struct.Token* %26, %struct.Token** %7, align 8
  br label %27

27:                                               ; preds = %50, %25
  %28 = load %struct.Token*, %struct.Token** %7, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 0
  %30 = load i32, i32* %29, align 16
  %31 = icmp ne i32 %30, 6
  br i1 %31, label %32, label %54

32:                                               ; preds = %27
  %33 = load %struct.Token*, %struct.Token** %7, align 8
  %34 = getelementptr inbounds %struct.Token, %struct.Token* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 16
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = load %struct.Token*, %struct.Token** %7, align 8
  %39 = getelementptr inbounds %struct.Token, %struct.Token* %38, i32 0, i32 1
  %40 = load %struct.Token*, %struct.Token** %39, align 8
  store %struct.Token* %40, %struct.Token** %8, align 8
  %41 = load %struct.Token*, %struct.Token** %7, align 8
  %42 = load %struct.Token*, %struct.Token** %7, align 8
  %43 = call %struct.Token* @new_num_token(i32 noundef 0, %struct.Token* noundef %42)
  %44 = bitcast %struct.Token* %41 to i8*
  %45 = bitcast %struct.Token* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %44, i8* align 16 %45, i64 128, i1 false)
  %46 = load %struct.Token*, %struct.Token** %8, align 8
  %47 = load %struct.Token*, %struct.Token** %7, align 8
  %48 = getelementptr inbounds %struct.Token, %struct.Token* %47, i32 0, i32 1
  store %struct.Token* %46, %struct.Token** %48, align 8
  br label %49

49:                                               ; preds = %37, %32
  br label %50

50:                                               ; preds = %49
  %51 = load %struct.Token*, %struct.Token** %7, align 8
  %52 = getelementptr inbounds %struct.Token, %struct.Token* %51, i32 0, i32 1
  %53 = load %struct.Token*, %struct.Token** %52, align 8
  store %struct.Token* %53, %struct.Token** %7, align 8
  br label %27, !llvm.loop !183

54:                                               ; preds = %27
  %55 = load %struct.Token*, %struct.Token** %6, align 8
  call void @convert_pp_tokens(%struct.Token* noundef %55)
  %56 = load %struct.Token*, %struct.Token** %6, align 8
  %57 = call i64 @const_expr(%struct.Token** noundef %9, %struct.Token* noundef %56)
  store i64 %57, i64* %10, align 8
  %58 = load %struct.Token*, %struct.Token** %9, align 8
  %59 = getelementptr inbounds %struct.Token, %struct.Token* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 16
  %61 = icmp ne i32 %60, 6
  br i1 %61, label %62, label %64

62:                                               ; preds = %54
  %63 = load %struct.Token*, %struct.Token** %9, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %63, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.112.957, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

64:                                               ; preds = %54
  %65 = load i64, i64* %10, align 8
  ret i64 %65
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.CondIncl* @push_cond_incl(%struct.Token* noundef %0, i1 noundef zeroext %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca i8, align 1
  %5 = alloca %struct.CondIncl*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  %7 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 32) #14
  %8 = bitcast i8* %7 to %struct.CondIncl*
  store %struct.CondIncl* %8, %struct.CondIncl** %5, align 8
  %9 = load %struct.CondIncl*, %struct.CondIncl** %5, align 8
  %10 = icmp eq %struct.CondIncl* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115.955, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

12:                                               ; preds = %2
  %13 = load %struct.CondIncl*, %struct.CondIncl** @cond_incl, align 8
  %14 = load %struct.CondIncl*, %struct.CondIncl** %5, align 8
  %15 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %14, i32 0, i32 0
  store %struct.CondIncl* %13, %struct.CondIncl** %15, align 8
  %16 = load %struct.CondIncl*, %struct.CondIncl** %5, align 8
  %17 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %16, i32 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = load %struct.Token*, %struct.Token** %3, align 8
  %19 = load %struct.CondIncl*, %struct.CondIncl** %5, align 8
  %20 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %19, i32 0, i32 2
  store %struct.Token* %18, %struct.Token** %20, align 8
  %21 = load i8, i8* %4, align 1
  %22 = trunc i8 %21 to i1
  %23 = load %struct.CondIncl*, %struct.CondIncl** %5, align 8
  %24 = getelementptr inbounds %struct.CondIncl, %struct.CondIncl* %23, i32 0, i32 3
  %25 = zext i1 %22 to i8
  store i8 %25, i8* %24, align 8
  %26 = load %struct.CondIncl*, %struct.CondIncl** %5, align 8
  store %struct.CondIncl* %26, %struct.CondIncl** @cond_incl, align 8
  %27 = load %struct.CondIncl*, %struct.CondIncl** %5, align 8
  ret %struct.CondIncl* %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @skip_cond_incl(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  br label %3

3:                                                ; preds = %52, %26, %1
  %4 = load %struct.Token*, %struct.Token** %2, align 8
  %5 = getelementptr inbounds %struct.Token, %struct.Token* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 16
  %7 = icmp ne i32 %6, 6
  br i1 %7, label %8, label %56

8:                                                ; preds = %3
  %9 = load %struct.Token*, %struct.Token** %2, align 8
  %10 = call zeroext i1 @is_hash(%struct.Token* noundef %9)
  br i1 %10, label %11, label %33

11:                                               ; preds = %8
  %12 = load %struct.Token*, %struct.Token** %2, align 8
  %13 = getelementptr inbounds %struct.Token, %struct.Token* %12, i32 0, i32 1
  %14 = load %struct.Token*, %struct.Token** %13, align 8
  %15 = call zeroext i1 @equal(%struct.Token* noundef %14, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77.936, i64 0, i64 0))
  br i1 %15, label %26, label %16

16:                                               ; preds = %11
  %17 = load %struct.Token*, %struct.Token** %2, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 1
  %19 = load %struct.Token*, %struct.Token** %18, align 8
  %20 = call zeroext i1 @equal(%struct.Token* noundef %19, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78.937, i64 0, i64 0))
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = load %struct.Token*, %struct.Token** %2, align 8
  %23 = getelementptr inbounds %struct.Token, %struct.Token* %22, i32 0, i32 1
  %24 = load %struct.Token*, %struct.Token** %23, align 8
  %25 = call zeroext i1 @equal(%struct.Token* noundef %24, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79.938, i64 0, i64 0))
  br i1 %25, label %26, label %33

26:                                               ; preds = %21, %16, %11
  %27 = load %struct.Token*, %struct.Token** %2, align 8
  %28 = getelementptr inbounds %struct.Token, %struct.Token* %27, i32 0, i32 1
  %29 = load %struct.Token*, %struct.Token** %28, align 8
  %30 = getelementptr inbounds %struct.Token, %struct.Token* %29, i32 0, i32 1
  %31 = load %struct.Token*, %struct.Token** %30, align 8
  %32 = call %struct.Token* @skip_cond_incl2(%struct.Token* noundef %31)
  store %struct.Token* %32, %struct.Token** %2, align 8
  br label %3, !llvm.loop !184

33:                                               ; preds = %21, %8
  %34 = load %struct.Token*, %struct.Token** %2, align 8
  %35 = call zeroext i1 @is_hash(%struct.Token* noundef %34)
  br i1 %35, label %36, label %52

36:                                               ; preds = %33
  %37 = load %struct.Token*, %struct.Token** %2, align 8
  %38 = getelementptr inbounds %struct.Token, %struct.Token* %37, i32 0, i32 1
  %39 = load %struct.Token*, %struct.Token** %38, align 8
  %40 = call zeroext i1 @equal(%struct.Token* noundef %39, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80.939, i64 0, i64 0))
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  %42 = load %struct.Token*, %struct.Token** %2, align 8
  %43 = getelementptr inbounds %struct.Token, %struct.Token* %42, i32 0, i32 1
  %44 = load %struct.Token*, %struct.Token** %43, align 8
  %45 = call zeroext i1 @equal(%struct.Token* noundef %44, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82.941, i64 0, i64 0))
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = load %struct.Token*, %struct.Token** %2, align 8
  %48 = getelementptr inbounds %struct.Token, %struct.Token* %47, i32 0, i32 1
  %49 = load %struct.Token*, %struct.Token** %48, align 8
  %50 = call zeroext i1 @equal(%struct.Token* noundef %49, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84.943, i64 0, i64 0))
  br i1 %50, label %51, label %52

51:                                               ; preds = %46, %41, %36
  br label %56

52:                                               ; preds = %46, %33
  %53 = load %struct.Token*, %struct.Token** %2, align 8
  %54 = getelementptr inbounds %struct.Token, %struct.Token* %53, i32 0, i32 1
  %55 = load %struct.Token*, %struct.Token** %54, align 8
  store %struct.Token* %55, %struct.Token** %2, align 8
  br label %3, !llvm.loop !184

56:                                               ; preds = %51, %3
  %57 = load %struct.Token*, %struct.Token** %2, align 8
  ret %struct.Token* %57
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @read_line_marker(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Token*, align 8
  %6 = alloca i8, align 1
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %7, %struct.Token** %5, align 8
  store i8 1, i8* %6, align 1
  %8 = load %struct.Token**, %struct.Token*** %3, align 8
  %9 = load %struct.Token*, %struct.Token** %4, align 8
  %10 = call %struct.Token* @copy_line(%struct.Token** noundef %8, %struct.Token* noundef %9)
  %11 = load i8, i8* %6, align 1
  %12 = trunc i8 %11 to i1
  %13 = call %struct.Token* @preprocess(%struct.Token* noundef %10, i1 noundef zeroext %12)
  store %struct.Token* %13, %struct.Token** %4, align 8
  %14 = load %struct.Token*, %struct.Token** %4, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 16
  %17 = icmp ne i32 %16, 4
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = load %struct.Token*, %struct.Token** %4, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 6
  %21 = load %struct.Type*, %struct.Type** %20, align 16
  %22 = getelementptr inbounds %struct.Type, %struct.Type* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp ne i32 %23, 4
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = load %struct.Token*, %struct.Token** %4, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %26, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.116.953, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

27:                                               ; preds = %18, %2
  %28 = load %struct.Token*, %struct.Token** %4, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 2
  %30 = load i64, i64* %29, align 16
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = getelementptr inbounds %struct.Token, %struct.Token* %31, i32 0, i32 10
  %33 = load i32, i32* %32, align 16
  %34 = sext i32 %33 to i64
  %35 = sub nsw i64 %30, %34
  %36 = trunc i64 %35 to i32
  %37 = load %struct.Token*, %struct.Token** %5, align 8
  %38 = getelementptr inbounds %struct.Token, %struct.Token* %37, i32 0, i32 8
  %39 = load %struct.File*, %struct.File** %38, align 16
  %40 = getelementptr inbounds %struct.File, %struct.File* %39, i32 0, i32 4
  store i32 %36, i32* %40, align 8
  %41 = load %struct.Token*, %struct.Token** %4, align 8
  %42 = getelementptr inbounds %struct.Token, %struct.Token* %41, i32 0, i32 1
  %43 = load %struct.Token*, %struct.Token** %42, align 8
  store %struct.Token* %43, %struct.Token** %4, align 8
  %44 = load %struct.Token*, %struct.Token** %4, align 8
  %45 = getelementptr inbounds %struct.Token, %struct.Token* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 16
  %47 = icmp eq i32 %46, 6
  br i1 %47, label %48, label %49

48:                                               ; preds = %27
  br label %64

49:                                               ; preds = %27
  %50 = load %struct.Token*, %struct.Token** %4, align 8
  %51 = getelementptr inbounds %struct.Token, %struct.Token* %50, i32 0, i32 0
  %52 = load i32, i32* %51, align 16
  %53 = icmp ne i32 %52, 3
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = load %struct.Token*, %struct.Token** %4, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %55, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.117.954, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

56:                                               ; preds = %49
  %57 = load %struct.Token*, %struct.Token** %4, align 8
  %58 = getelementptr inbounds %struct.Token, %struct.Token* %57, i32 0, i32 7
  %59 = load i8*, i8** %58, align 8
  %60 = load %struct.Token*, %struct.Token** %5, align 8
  %61 = getelementptr inbounds %struct.Token, %struct.Token* %60, i32 0, i32 8
  %62 = load %struct.File*, %struct.File** %61, align 16
  %63 = getelementptr inbounds %struct.File, %struct.File* %62, i32 0, i32 3
  store i8* %59, i8** %63, align 8
  br label %64

64:                                               ; preds = %56, %48
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @copy_line(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Token, align 16
  %6 = alloca %struct.Token*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %7 = bitcast %struct.Token* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %7, i8 0, i64 128, i1 false)
  store %struct.Token* %5, %struct.Token** %6, align 8
  br label %8

8:                                                ; preds = %19, %2
  %9 = load %struct.Token*, %struct.Token** %4, align 8
  %10 = getelementptr inbounds %struct.Token, %struct.Token* %9, i32 0, i32 12
  %11 = load i8, i8* %10, align 8
  %12 = trunc i8 %11 to i1
  %13 = xor i1 %12, true
  br i1 %13, label %14, label %23

14:                                               ; preds = %8
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = call %struct.Token* @copy_token(%struct.Token* noundef %15)
  %17 = load %struct.Token*, %struct.Token** %6, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 1
  store %struct.Token* %16, %struct.Token** %18, align 8
  store %struct.Token* %16, %struct.Token** %6, align 8
  br label %19

19:                                               ; preds = %14
  %20 = load %struct.Token*, %struct.Token** %4, align 8
  %21 = getelementptr inbounds %struct.Token, %struct.Token* %20, i32 0, i32 1
  %22 = load %struct.Token*, %struct.Token** %21, align 8
  store %struct.Token* %22, %struct.Token** %4, align 8
  br label %8, !llvm.loop !185

23:                                               ; preds = %8
  %24 = load %struct.Token*, %struct.Token** %4, align 8
  %25 = call %struct.Token* @new_eof(%struct.Token* noundef %24)
  %26 = load %struct.Token*, %struct.Token** %6, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  store %struct.Token* %25, %struct.Token** %27, align 8
  %28 = load %struct.Token*, %struct.Token** %4, align 8
  %29 = load %struct.Token**, %struct.Token*** %3, align 8
  store %struct.Token* %28, %struct.Token** %29, align 8
  %30 = getelementptr inbounds %struct.Token, %struct.Token* %5, i32 0, i32 1
  %31 = load %struct.Token*, %struct.Token** %30, align 8
  ret %struct.Token* %31
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @skip_cond_incl2(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  br label %4

4:                                                ; preds = %48, %27, %1
  %5 = load %struct.Token*, %struct.Token** %3, align 8
  %6 = getelementptr inbounds %struct.Token, %struct.Token* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 16
  %8 = icmp ne i32 %7, 6
  br i1 %8, label %9, label %52

9:                                                ; preds = %4
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  %11 = call zeroext i1 @is_hash(%struct.Token* noundef %10)
  br i1 %11, label %12, label %34

12:                                               ; preds = %9
  %13 = load %struct.Token*, %struct.Token** %3, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 1
  %15 = load %struct.Token*, %struct.Token** %14, align 8
  %16 = call zeroext i1 @equal(%struct.Token* noundef %15, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77.936, i64 0, i64 0))
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = load %struct.Token*, %struct.Token** %3, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 1
  %20 = load %struct.Token*, %struct.Token** %19, align 8
  %21 = call zeroext i1 @equal(%struct.Token* noundef %20, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78.937, i64 0, i64 0))
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = load %struct.Token*, %struct.Token** %3, align 8
  %24 = getelementptr inbounds %struct.Token, %struct.Token* %23, i32 0, i32 1
  %25 = load %struct.Token*, %struct.Token** %24, align 8
  %26 = call zeroext i1 @equal(%struct.Token* noundef %25, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79.938, i64 0, i64 0))
  br i1 %26, label %27, label %34

27:                                               ; preds = %22, %17, %12
  %28 = load %struct.Token*, %struct.Token** %3, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 1
  %30 = load %struct.Token*, %struct.Token** %29, align 8
  %31 = getelementptr inbounds %struct.Token, %struct.Token* %30, i32 0, i32 1
  %32 = load %struct.Token*, %struct.Token** %31, align 8
  %33 = call %struct.Token* @skip_cond_incl2(%struct.Token* noundef %32)
  store %struct.Token* %33, %struct.Token** %3, align 8
  br label %4, !llvm.loop !186

34:                                               ; preds = %22, %9
  %35 = load %struct.Token*, %struct.Token** %3, align 8
  %36 = call zeroext i1 @is_hash(%struct.Token* noundef %35)
  br i1 %36, label %37, label %48

37:                                               ; preds = %34
  %38 = load %struct.Token*, %struct.Token** %3, align 8
  %39 = getelementptr inbounds %struct.Token, %struct.Token* %38, i32 0, i32 1
  %40 = load %struct.Token*, %struct.Token** %39, align 8
  %41 = call zeroext i1 @equal(%struct.Token* noundef %40, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84.943, i64 0, i64 0))
  br i1 %41, label %42, label %48

42:                                               ; preds = %37
  %43 = load %struct.Token*, %struct.Token** %3, align 8
  %44 = getelementptr inbounds %struct.Token, %struct.Token* %43, i32 0, i32 1
  %45 = load %struct.Token*, %struct.Token** %44, align 8
  %46 = getelementptr inbounds %struct.Token, %struct.Token* %45, i32 0, i32 1
  %47 = load %struct.Token*, %struct.Token** %46, align 8
  store %struct.Token* %47, %struct.Token** %2, align 8
  br label %54

48:                                               ; preds = %37, %34
  %49 = load %struct.Token*, %struct.Token** %3, align 8
  %50 = getelementptr inbounds %struct.Token, %struct.Token* %49, i32 0, i32 1
  %51 = load %struct.Token*, %struct.Token** %50, align 8
  store %struct.Token* %51, %struct.Token** %3, align 8
  br label %4, !llvm.loop !186

52:                                               ; preds = %4
  %53 = load %struct.Token*, %struct.Token** %3, align 8
  store %struct.Token* %53, %struct.Token** %2, align 8
  br label %54

54:                                               ; preds = %52, %42
  %55 = load %struct.Token*, %struct.Token** %2, align 8
  ret %struct.Token* %55
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @read_const_expr(%struct.Token** noundef %0, %struct.Token* noundef %1) #0 {
  %3 = alloca %struct.Token**, align 8
  %4 = alloca %struct.Token*, align 8
  %5 = alloca %struct.Token, align 16
  %6 = alloca %struct.Token*, align 8
  %7 = alloca %struct.Token*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %struct.Macro*, align 8
  store %struct.Token** %0, %struct.Token*** %3, align 8
  store %struct.Token* %1, %struct.Token** %4, align 8
  %10 = load %struct.Token**, %struct.Token*** %3, align 8
  %11 = load %struct.Token*, %struct.Token** %4, align 8
  %12 = call %struct.Token* @copy_line(%struct.Token** noundef %10, %struct.Token* noundef %11)
  store %struct.Token* %12, %struct.Token** %4, align 8
  %13 = bitcast %struct.Token* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %13, i8 0, i64 128, i1 false)
  store %struct.Token* %5, %struct.Token** %6, align 8
  br label %14

14:                                               ; preds = %58, %49, %2
  %15 = load %struct.Token*, %struct.Token** %4, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 16
  %18 = icmp ne i32 %17, 6
  br i1 %18, label %19, label %65

19:                                               ; preds = %14
  %20 = load %struct.Token*, %struct.Token** %4, align 8
  %21 = call zeroext i1 @equal(%struct.Token* noundef %20, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113.958, i64 0, i64 0))
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = load %struct.Token*, %struct.Token** %4, align 8
  %24 = call zeroext i1 @equal(%struct.Token* noundef %23, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.831, i64 0, i64 0))
  br i1 %24, label %25, label %58

25:                                               ; preds = %22, %19
  %26 = load %struct.Token*, %struct.Token** %4, align 8
  store %struct.Token* %26, %struct.Token** %7, align 8
  %27 = load %struct.Token*, %struct.Token** %4, align 8
  %28 = getelementptr inbounds %struct.Token, %struct.Token* %27, i32 0, i32 1
  %29 = load %struct.Token*, %struct.Token** %28, align 8
  %30 = call zeroext i1 @consume(%struct.Token** noundef %4, %struct.Token* noundef %29, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103.913, i64 0, i64 0))
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %8, align 1
  %32 = load %struct.Token*, %struct.Token** %4, align 8
  %33 = getelementptr inbounds %struct.Token, %struct.Token* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 16
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %25
  %37 = load %struct.Token*, %struct.Token** %7, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %37, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.114.959, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

38:                                               ; preds = %25
  %39 = load %struct.Token*, %struct.Token** %4, align 8
  %40 = call %struct.Macro* @find_macro(%struct.Token* noundef %39)
  store %struct.Macro* %40, %struct.Macro** %9, align 8
  %41 = load %struct.Token*, %struct.Token** %4, align 8
  %42 = getelementptr inbounds %struct.Token, %struct.Token* %41, i32 0, i32 1
  %43 = load %struct.Token*, %struct.Token** %42, align 8
  store %struct.Token* %43, %struct.Token** %4, align 8
  %44 = load i8, i8* %8, align 1
  %45 = trunc i8 %44 to i1
  br i1 %45, label %46, label %49

46:                                               ; preds = %38
  %47 = load %struct.Token*, %struct.Token** %4, align 8
  %48 = call %struct.Token* @skip(%struct.Token* noundef %47, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.921, i64 0, i64 0))
  store %struct.Token* %48, %struct.Token** %4, align 8
  br label %49

49:                                               ; preds = %46, %38
  %50 = load %struct.Macro*, %struct.Macro** %9, align 8
  %51 = icmp ne %struct.Macro* %50, null
  %52 = zext i1 %51 to i64
  %53 = select i1 %51, i32 1, i32 0
  %54 = load %struct.Token*, %struct.Token** %7, align 8
  %55 = call %struct.Token* @new_num_token(i32 noundef %53, %struct.Token* noundef %54)
  %56 = load %struct.Token*, %struct.Token** %6, align 8
  %57 = getelementptr inbounds %struct.Token, %struct.Token* %56, i32 0, i32 1
  store %struct.Token* %55, %struct.Token** %57, align 8
  store %struct.Token* %55, %struct.Token** %6, align 8
  br label %14, !llvm.loop !187

58:                                               ; preds = %22
  %59 = load %struct.Token*, %struct.Token** %4, align 8
  %60 = load %struct.Token*, %struct.Token** %6, align 8
  %61 = getelementptr inbounds %struct.Token, %struct.Token* %60, i32 0, i32 1
  store %struct.Token* %59, %struct.Token** %61, align 8
  store %struct.Token* %59, %struct.Token** %6, align 8
  %62 = load %struct.Token*, %struct.Token** %4, align 8
  %63 = getelementptr inbounds %struct.Token, %struct.Token* %62, i32 0, i32 1
  %64 = load %struct.Token*, %struct.Token** %63, align 8
  store %struct.Token* %64, %struct.Token** %4, align 8
  br label %14, !llvm.loop !187

65:                                               ; preds = %14
  %66 = load %struct.Token*, %struct.Token** %4, align 8
  %67 = load %struct.Token*, %struct.Token** %6, align 8
  %68 = getelementptr inbounds %struct.Token, %struct.Token* %67, i32 0, i32 1
  store %struct.Token* %66, %struct.Token** %68, align 8
  %69 = getelementptr inbounds %struct.Token, %struct.Token* %5, i32 0, i32 1
  %70 = load %struct.Token*, %struct.Token** %69, align 8
  ret %struct.Token* %70
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.MacroParam* @read_macro_params(%struct.Token** noundef %0, %struct.Token* noundef %1, i8** noundef %2) #0 {
  %4 = alloca %struct.MacroParam*, align 8
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca %struct.MacroParam, align 8
  %9 = alloca %struct.MacroParam*, align 8
  %10 = alloca %struct.MacroParam*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store i8** %2, i8*** %7, align 8
  %11 = bitcast %struct.MacroParam* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store %struct.MacroParam* %8, %struct.MacroParam** %9, align 8
  br label %12

12:                                               ; preds = %71, %3
  %13 = load %struct.Token*, %struct.Token** %6, align 8
  %14 = call zeroext i1 @equal(%struct.Token* noundef %13, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.921, i64 0, i64 0))
  %15 = xor i1 %14, true
  br i1 %15, label %16, label %88

16:                                               ; preds = %12
  %17 = load %struct.MacroParam*, %struct.MacroParam** %9, align 8
  %18 = icmp ne %struct.MacroParam* %17, %8
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = load %struct.Token*, %struct.Token** %6, align 8
  %21 = call %struct.Token* @skip(%struct.Token* noundef %20, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.105.916, i64 0, i64 0))
  store %struct.Token* %21, %struct.Token** %6, align 8
  br label %22

22:                                               ; preds = %19, %16
  %23 = load %struct.Token*, %struct.Token** %6, align 8
  %24 = call zeroext i1 @equal(%struct.Token* noundef %23, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106.962, i64 0, i64 0))
  br i1 %24, label %25, label %34

25:                                               ; preds = %22
  %26 = load i8**, i8*** %7, align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107.922, i64 0, i64 0), i8** %26, align 8
  %27 = load %struct.Token*, %struct.Token** %6, align 8
  %28 = getelementptr inbounds %struct.Token, %struct.Token* %27, i32 0, i32 1
  %29 = load %struct.Token*, %struct.Token** %28, align 8
  %30 = call %struct.Token* @skip(%struct.Token* noundef %29, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.921, i64 0, i64 0))
  %31 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %30, %struct.Token** %31, align 8
  %32 = getelementptr inbounds %struct.MacroParam, %struct.MacroParam* %8, i32 0, i32 0
  %33 = load %struct.MacroParam*, %struct.MacroParam** %32, align 8
  store %struct.MacroParam* %33, %struct.MacroParam** %4, align 8
  br label %95

34:                                               ; preds = %22
  %35 = load %struct.Token*, %struct.Token** %6, align 8
  %36 = getelementptr inbounds %struct.Token, %struct.Token* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 16
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  %40 = load %struct.Token*, %struct.Token** %6, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %40, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.108.963, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

41:                                               ; preds = %34
  %42 = load %struct.Token*, %struct.Token** %6, align 8
  %43 = getelementptr inbounds %struct.Token, %struct.Token* %42, i32 0, i32 1
  %44 = load %struct.Token*, %struct.Token** %43, align 8
  %45 = call zeroext i1 @equal(%struct.Token* noundef %44, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106.962, i64 0, i64 0))
  br i1 %45, label %46, label %65

46:                                               ; preds = %41
  %47 = load %struct.Token*, %struct.Token** %6, align 8
  %48 = getelementptr inbounds %struct.Token, %struct.Token* %47, i32 0, i32 4
  %49 = load i8*, i8** %48, align 16
  %50 = load %struct.Token*, %struct.Token** %6, align 8
  %51 = getelementptr inbounds %struct.Token, %struct.Token* %50, i32 0, i32 5
  %52 = load i32, i32* %51, align 8
  %53 = sext i32 %52 to i64
  %54 = call noalias i8* @strndup(i8* noundef %49, i64 noundef %53) #14
  %55 = load i8**, i8*** %7, align 8
  store i8* %54, i8** %55, align 8
  %56 = load %struct.Token*, %struct.Token** %6, align 8
  %57 = getelementptr inbounds %struct.Token, %struct.Token* %56, i32 0, i32 1
  %58 = load %struct.Token*, %struct.Token** %57, align 8
  %59 = getelementptr inbounds %struct.Token, %struct.Token* %58, i32 0, i32 1
  %60 = load %struct.Token*, %struct.Token** %59, align 8
  %61 = call %struct.Token* @skip(%struct.Token* noundef %60, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.921, i64 0, i64 0))
  %62 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %61, %struct.Token** %62, align 8
  %63 = getelementptr inbounds %struct.MacroParam, %struct.MacroParam* %8, i32 0, i32 0
  %64 = load %struct.MacroParam*, %struct.MacroParam** %63, align 8
  store %struct.MacroParam* %64, %struct.MacroParam** %4, align 8
  br label %95

65:                                               ; preds = %41
  %66 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 16) #14
  %67 = bitcast i8* %66 to %struct.MacroParam*
  store %struct.MacroParam* %67, %struct.MacroParam** %10, align 8
  %68 = load %struct.MacroParam*, %struct.MacroParam** %10, align 8
  %69 = icmp eq %struct.MacroParam* %68, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %65
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.109.964, i64 0, i64 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.65.834, i64 0, i64 0)) #11
  unreachable

71:                                               ; preds = %65
  %72 = load %struct.Token*, %struct.Token** %6, align 8
  %73 = getelementptr inbounds %struct.Token, %struct.Token* %72, i32 0, i32 4
  %74 = load i8*, i8** %73, align 16
  %75 = load %struct.Token*, %struct.Token** %6, align 8
  %76 = getelementptr inbounds %struct.Token, %struct.Token* %75, i32 0, i32 5
  %77 = load i32, i32* %76, align 8
  %78 = sext i32 %77 to i64
  %79 = call noalias i8* @strndup(i8* noundef %74, i64 noundef %78) #14
  %80 = load %struct.MacroParam*, %struct.MacroParam** %10, align 8
  %81 = getelementptr inbounds %struct.MacroParam, %struct.MacroParam* %80, i32 0, i32 1
  store i8* %79, i8** %81, align 8
  %82 = load %struct.MacroParam*, %struct.MacroParam** %10, align 8
  %83 = load %struct.MacroParam*, %struct.MacroParam** %9, align 8
  %84 = getelementptr inbounds %struct.MacroParam, %struct.MacroParam* %83, i32 0, i32 0
  store %struct.MacroParam* %82, %struct.MacroParam** %84, align 8
  store %struct.MacroParam* %82, %struct.MacroParam** %9, align 8
  %85 = load %struct.Token*, %struct.Token** %6, align 8
  %86 = getelementptr inbounds %struct.Token, %struct.Token* %85, i32 0, i32 1
  %87 = load %struct.Token*, %struct.Token** %86, align 8
  store %struct.Token* %87, %struct.Token** %6, align 8
  br label %12, !llvm.loop !188

88:                                               ; preds = %12
  %89 = load %struct.Token*, %struct.Token** %6, align 8
  %90 = getelementptr inbounds %struct.Token, %struct.Token* %89, i32 0, i32 1
  %91 = load %struct.Token*, %struct.Token** %90, align 8
  %92 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %91, %struct.Token** %92, align 8
  %93 = getelementptr inbounds %struct.MacroParam, %struct.MacroParam* %8, i32 0, i32 0
  %94 = load %struct.MacroParam*, %struct.MacroParam** %93, align 8
  store %struct.MacroParam* %94, %struct.MacroParam** %4, align 8
  br label %95

95:                                               ; preds = %88, %46, %25
  %96 = load %struct.MacroParam*, %struct.MacroParam** %4, align 8
  ret %struct.MacroParam* %96
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @detect_include_guard(%struct.Token* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.Token*, align 8
  %4 = alloca i8*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %5 = load %struct.Token*, %struct.Token** %3, align 8
  %6 = call zeroext i1 @is_hash(%struct.Token* noundef %5)
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = load %struct.Token*, %struct.Token** %3, align 8
  %9 = getelementptr inbounds %struct.Token, %struct.Token* %8, i32 0, i32 1
  %10 = load %struct.Token*, %struct.Token** %9, align 8
  %11 = call zeroext i1 @equal(%struct.Token* noundef %10, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79.938, i64 0, i64 0))
  br i1 %11, label %13, label %12

12:                                               ; preds = %7, %1
  store i8* null, i8** %2, align 8
  br label %101

13:                                               ; preds = %7
  %14 = load %struct.Token*, %struct.Token** %3, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 1
  %16 = load %struct.Token*, %struct.Token** %15, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 1
  %18 = load %struct.Token*, %struct.Token** %17, align 8
  store %struct.Token* %18, %struct.Token** %3, align 8
  %19 = load %struct.Token*, %struct.Token** %3, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 16
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %13
  store i8* null, i8** %2, align 8
  br label %101

24:                                               ; preds = %13
  %25 = load %struct.Token*, %struct.Token** %3, align 8
  %26 = getelementptr inbounds %struct.Token, %struct.Token* %25, i32 0, i32 4
  %27 = load i8*, i8** %26, align 16
  %28 = load %struct.Token*, %struct.Token** %3, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = call noalias i8* @strndup(i8* noundef %27, i64 noundef %31) #14
  store i8* %32, i8** %4, align 8
  %33 = load %struct.Token*, %struct.Token** %3, align 8
  %34 = getelementptr inbounds %struct.Token, %struct.Token* %33, i32 0, i32 1
  %35 = load %struct.Token*, %struct.Token** %34, align 8
  store %struct.Token* %35, %struct.Token** %3, align 8
  %36 = load %struct.Token*, %struct.Token** %3, align 8
  %37 = call zeroext i1 @is_hash(%struct.Token* noundef %36)
  br i1 %37, label %38, label %51

38:                                               ; preds = %24
  %39 = load %struct.Token*, %struct.Token** %3, align 8
  %40 = getelementptr inbounds %struct.Token, %struct.Token* %39, i32 0, i32 1
  %41 = load %struct.Token*, %struct.Token** %40, align 8
  %42 = call zeroext i1 @equal(%struct.Token* noundef %41, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74.933, i64 0, i64 0))
  br i1 %42, label %43, label %51

43:                                               ; preds = %38
  %44 = load %struct.Token*, %struct.Token** %3, align 8
  %45 = getelementptr inbounds %struct.Token, %struct.Token* %44, i32 0, i32 1
  %46 = load %struct.Token*, %struct.Token** %45, align 8
  %47 = getelementptr inbounds %struct.Token, %struct.Token* %46, i32 0, i32 1
  %48 = load %struct.Token*, %struct.Token** %47, align 8
  %49 = load i8*, i8** %4, align 8
  %50 = call zeroext i1 @equal(%struct.Token* noundef %48, i8* noundef %49)
  br i1 %50, label %52, label %51

51:                                               ; preds = %43, %38, %24
  store i8* null, i8** %2, align 8
  br label %101

52:                                               ; preds = %43
  br label %53

53:                                               ; preds = %99, %61, %52
  %54 = load %struct.Token*, %struct.Token** %3, align 8
  %55 = getelementptr inbounds %struct.Token, %struct.Token* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 16
  %57 = icmp ne i32 %56, 6
  br i1 %57, label %58, label %100

58:                                               ; preds = %53
  %59 = load %struct.Token*, %struct.Token** %3, align 8
  %60 = call zeroext i1 @is_hash(%struct.Token* noundef %59)
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = load %struct.Token*, %struct.Token** %3, align 8
  %63 = getelementptr inbounds %struct.Token, %struct.Token* %62, i32 0, i32 1
  %64 = load %struct.Token*, %struct.Token** %63, align 8
  store %struct.Token* %64, %struct.Token** %3, align 8
  br label %53, !llvm.loop !189

65:                                               ; preds = %58
  %66 = load %struct.Token*, %struct.Token** %3, align 8
  %67 = getelementptr inbounds %struct.Token, %struct.Token* %66, i32 0, i32 1
  %68 = load %struct.Token*, %struct.Token** %67, align 8
  %69 = call zeroext i1 @equal(%struct.Token* noundef %68, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84.943, i64 0, i64 0))
  br i1 %69, label %70, label %81

70:                                               ; preds = %65
  %71 = load %struct.Token*, %struct.Token** %3, align 8
  %72 = getelementptr inbounds %struct.Token, %struct.Token* %71, i32 0, i32 1
  %73 = load %struct.Token*, %struct.Token** %72, align 8
  %74 = getelementptr inbounds %struct.Token, %struct.Token* %73, i32 0, i32 1
  %75 = load %struct.Token*, %struct.Token** %74, align 8
  %76 = getelementptr inbounds %struct.Token, %struct.Token* %75, i32 0, i32 0
  %77 = load i32, i32* %76, align 16
  %78 = icmp eq i32 %77, 6
  br i1 %78, label %79, label %81

79:                                               ; preds = %70
  %80 = load i8*, i8** %4, align 8
  store i8* %80, i8** %2, align 8
  br label %101

81:                                               ; preds = %70, %65
  %82 = load %struct.Token*, %struct.Token** %3, align 8
  %83 = call zeroext i1 @equal(%struct.Token* noundef %82, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77.936, i64 0, i64 0))
  br i1 %83, label %90, label %84

84:                                               ; preds = %81
  %85 = load %struct.Token*, %struct.Token** %3, align 8
  %86 = call zeroext i1 @equal(%struct.Token* noundef %85, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78.937, i64 0, i64 0))
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = load %struct.Token*, %struct.Token** %3, align 8
  %89 = call zeroext i1 @equal(%struct.Token* noundef %88, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79.938, i64 0, i64 0))
  br i1 %89, label %90, label %95

90:                                               ; preds = %87, %84, %81
  %91 = load %struct.Token*, %struct.Token** %3, align 8
  %92 = getelementptr inbounds %struct.Token, %struct.Token* %91, i32 0, i32 1
  %93 = load %struct.Token*, %struct.Token** %92, align 8
  %94 = call %struct.Token* @skip_cond_incl(%struct.Token* noundef %93)
  store %struct.Token* %94, %struct.Token** %3, align 8
  br label %99

95:                                               ; preds = %87
  %96 = load %struct.Token*, %struct.Token** %3, align 8
  %97 = getelementptr inbounds %struct.Token, %struct.Token* %96, i32 0, i32 1
  %98 = load %struct.Token*, %struct.Token** %97, align 8
  store %struct.Token* %98, %struct.Token** %3, align 8
  br label %99

99:                                               ; preds = %95, %90
  br label %53, !llvm.loop !189

100:                                              ; preds = %53
  store i8* null, i8** %2, align 8
  br label %101

101:                                              ; preds = %100, %79, %51, %23, %12
  %102 = load i8*, i8** %2, align 8
  ret i8* %102
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strarray_push(%struct.StringArray* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.StringArray*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  store %struct.StringArray* %0, %struct.StringArray** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %8 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %7, i32 0, i32 0
  %9 = load i8**, i8*** %8, align 8
  %10 = icmp ne i8** %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = call noalias i8* @calloc(i64 noundef 8, i64 noundef 8) #14
  %13 = bitcast i8* %12 to i8**
  %14 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %15 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %14, i32 0, i32 0
  store i8** %13, i8*** %15, align 8
  %16 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %17 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %16, i32 0, i32 1
  store i32 8, i32* %17, align 8
  br label %18

18:                                               ; preds = %11, %2
  %19 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %20 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %23 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %22, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %21, %24
  br i1 %25, label %26, label %70

26:                                               ; preds = %18
  %27 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %28 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %27, i32 0, i32 0
  %29 = load i8**, i8*** %28, align 8
  %30 = bitcast i8** %29 to i8*
  %31 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %32 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = mul i64 8, %34
  %36 = mul i64 %35, 2
  %37 = call i8* @realloc(i8* noundef %30, i64 noundef %36) #14
  %38 = bitcast i8* %37 to i8**
  store i8** %38, i8*** %5, align 8
  %39 = load i8**, i8*** %5, align 8
  %40 = icmp eq i8** %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %26
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.972, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.973, i64 0, i64 0)) #11
  unreachable

42:                                               ; preds = %26
  %43 = load i8**, i8*** %5, align 8
  %44 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %45 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %44, i32 0, i32 0
  store i8** %43, i8*** %45, align 8
  %46 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %47 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = mul nsw i32 %48, 2
  store i32 %49, i32* %47, align 8
  %50 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %51 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %50, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %6, align 4
  br label %53

53:                                               ; preds = %66, %42
  %54 = load i32, i32* %6, align 4
  %55 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %56 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp slt i32 %54, %57
  br i1 %58, label %59, label %69

59:                                               ; preds = %53
  %60 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %61 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %60, i32 0, i32 0
  %62 = load i8**, i8*** %61, align 8
  %63 = load i32, i32* %6, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8*, i8** %62, i64 %64
  store i8* null, i8** %65, align 8
  br label %66

66:                                               ; preds = %59
  %67 = load i32, i32* %6, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %6, align 4
  br label %53, !llvm.loop !190

69:                                               ; preds = %53
  br label %70

70:                                               ; preds = %69, %18
  %71 = load i8*, i8** %4, align 8
  %72 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %73 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %72, i32 0, i32 0
  %74 = load i8**, i8*** %73, align 8
  %75 = load %struct.StringArray*, %struct.StringArray** %3, align 8
  %76 = getelementptr inbounds %struct.StringArray, %struct.StringArray* %75, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %76, align 4
  %79 = sext i32 %77 to i64
  %80 = getelementptr inbounds i8*, i8** %74, i64 %79
  store i8* %71, i8** %80, align 8
  ret void
}

; Function Attrs: nounwind
declare i8* @realloc(i8* noundef, i64 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @format(i8* noundef %0, ...) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %2, align 8
  %7 = call noalias %struct._IO_FILE* @open_memstream(i8** noundef %3, i64* noundef %4) #14
  store %struct._IO_FILE* %7, %struct._IO_FILE** %5, align 8
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  %9 = bitcast %struct.__va_list_tag* %8 to i8*
  call void @llvm.va_start(i8* %9)
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %11 = load i8*, i8** %2, align 8
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  %13 = call i32 @vfprintf(%struct._IO_FILE* noundef %10, i8* noundef %11, %struct.__va_list_tag* noundef %12)
  %14 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  %15 = bitcast %struct.__va_list_tag* %14 to i8*
  call void @llvm.va_end(i8* %15)
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %17 = call i32 @fclose(%struct._IO_FILE* noundef %16)
  %18 = load i8*, i8** %3, align 8
  ret i8* %18
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @error(i8* noundef %0, ...) #10 {
  %2 = alloca i8*, align 8
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %2, align 8
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %5 = bitcast %struct.__va_list_tag* %4 to i8*
  call void @llvm.va_start(i8* %5)
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %9 = call i32 @vfprintf(%struct._IO_FILE* noundef %6, i8* noundef %7, %struct.__va_list_tag* noundef %8)
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %10, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.978, i64 0, i64 0))
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %13 = bitcast %struct.__va_list_tag* %12 to i8*
  call void @llvm.va_end(i8* %13)
  call void @exit(i32 noundef 9) #12
  unreachable
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @error_at(i8* noundef %0, i8* noundef %1, ...) #10 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  store i32 1, i32* %5, align 4
  %8 = load %struct.File*, %struct.File** @current_file, align 8
  %9 = getelementptr inbounds %struct.File, %struct.File* %8, i32 0, i32 2
  %10 = load i8*, i8** %9, align 8
  store i8* %10, i8** %6, align 8
  br label %11

11:                                               ; preds = %24, %2
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = icmp ult i8* %12, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = load i8*, i8** %6, align 8
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = icmp eq i32 %18, 10
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = load i32, i32* %5, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %5, align 4
  br label %23

23:                                               ; preds = %20, %15
  br label %24

24:                                               ; preds = %23
  %25 = load i8*, i8** %6, align 8
  %26 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %26, i8** %6, align 8
  br label %11, !llvm.loop !191

27:                                               ; preds = %11
  %28 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0
  %29 = bitcast %struct.__va_list_tag* %28 to i8*
  call void @llvm.va_start(i8* %29)
  %30 = load %struct.File*, %struct.File** @current_file, align 8
  %31 = getelementptr inbounds %struct.File, %struct.File* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = load %struct.File*, %struct.File** @current_file, align 8
  %34 = getelementptr inbounds %struct.File, %struct.File* %33, i32 0, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = load i32, i32* %5, align 4
  %37 = load i8*, i8** %3, align 8
  %38 = load i8*, i8** %4, align 8
  %39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0
  call void @verror_at(i8* noundef %32, i8* noundef %35, i32 noundef %36, i8* noundef %37, i8* noundef %38, %struct.__va_list_tag* noundef %39)
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0
  %41 = bitcast %struct.__va_list_tag* %40 to i8*
  call void @llvm.va_end(i8* %41)
  call void @exit(i32 noundef 8) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @verror_at(i8* noundef %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, i8* noundef %4, %struct.__va_list_tag* noundef %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.__va_list_tag*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i32 %2, i32* %9, align 4
  store i8* %3, i8** %10, align 8
  store i8* %4, i8** %11, align 8
  store %struct.__va_list_tag* %5, %struct.__va_list_tag** %12, align 8
  %17 = load i8*, i8** %10, align 8
  store i8* %17, i8** %13, align 8
  br label %18

18:                                               ; preds = %30, %6
  %19 = load i8*, i8** %8, align 8
  %20 = load i8*, i8** %13, align 8
  %21 = icmp ult i8* %19, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = load i8*, i8** %13, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 -1
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp ne i32 %26, 10
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i1 [ false, %18 ], [ %27, %22 ]
  br i1 %29, label %30, label %33

30:                                               ; preds = %28
  %31 = load i8*, i8** %13, align 8
  %32 = getelementptr inbounds i8, i8* %31, i32 -1
  store i8* %32, i8** %13, align 8
  br label %18, !llvm.loop !192

33:                                               ; preds = %28
  %34 = load i8*, i8** %10, align 8
  store i8* %34, i8** %14, align 8
  br label %35

35:                                               ; preds = %47, %33
  %36 = load i8*, i8** %14, align 8
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %35
  %41 = load i8*, i8** %14, align 8
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp ne i32 %43, 10
  br label %45

45:                                               ; preds = %40, %35
  %46 = phi i1 [ false, %35 ], [ %44, %40 ]
  br i1 %46, label %47, label %50

47:                                               ; preds = %45
  %48 = load i8*, i8** %14, align 8
  %49 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %49, i8** %14, align 8
  br label %35, !llvm.loop !193

50:                                               ; preds = %45
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %52 = load i8*, i8** %7, align 8
  %53 = load i32, i32* %9, align 4
  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %51, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.979, i64 0, i64 0), i8* noundef %52, i32 noundef %53)
  store i32 %54, i32* %15, align 4
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %56 = load i8*, i8** %14, align 8
  %57 = load i8*, i8** %13, align 8
  %58 = ptrtoint i8* %56 to i64
  %59 = ptrtoint i8* %57 to i64
  %60 = sub i64 %58, %59
  %61 = trunc i64 %60 to i32
  %62 = load i8*, i8** %13, align 8
  %63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %55, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.980, i64 0, i64 0), i32 noundef %61, i8* noundef %62)
  %64 = load i8*, i8** %13, align 8
  %65 = load i8*, i8** %10, align 8
  %66 = load i8*, i8** %13, align 8
  %67 = ptrtoint i8* %65 to i64
  %68 = ptrtoint i8* %66 to i64
  %69 = sub i64 %67, %68
  %70 = trunc i64 %69 to i32
  %71 = call i32 @display_width(i8* noundef %64, i32 noundef %70)
  %72 = load i32, i32* %15, align 4
  %73 = add nsw i32 %71, %72
  store i32 %73, i32* %16, align 4
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %75 = load i32, i32* %16, align 4
  %76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %74, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22.981, i64 0, i64 0), i32 noundef %75, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23.982, i64 0, i64 0))
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %77, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.983, i64 0, i64 0))
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %80 = load i8*, i8** %11, align 8
  %81 = load %struct.__va_list_tag*, %struct.__va_list_tag** %12, align 8
  %82 = call i32 @vfprintf(%struct._IO_FILE* noundef %79, i8* noundef %80, %struct.__va_list_tag* noundef %81)
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %83, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.978, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @error_tok(%struct.Token* noundef %0, i8* noundef %1, ...) #10 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.Token* %0, %struct.Token** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %7 = bitcast %struct.__va_list_tag* %6 to i8*
  call void @llvm.va_start(i8* %7)
  %8 = load %struct.Token*, %struct.Token** %3, align 8
  %9 = getelementptr inbounds %struct.Token, %struct.Token* %8, i32 0, i32 8
  %10 = load %struct.File*, %struct.File** %9, align 16
  %11 = getelementptr inbounds %struct.File, %struct.File* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = load %struct.Token*, %struct.Token** %3, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 8
  %15 = load %struct.File*, %struct.File** %14, align 16
  %16 = getelementptr inbounds %struct.File, %struct.File* %15, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = load %struct.Token*, %struct.Token** %3, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 10
  %20 = load i32, i32* %19, align 16
  %21 = load %struct.Token*, %struct.Token** %3, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 4
  %23 = load i8*, i8** %22, align 16
  %24 = load i8*, i8** %4, align 8
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  call void @verror_at(i8* noundef %12, i8* noundef %17, i32 noundef %20, i8* noundef %23, i8* noundef %24, %struct.__va_list_tag* noundef %25)
  %26 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %27 = bitcast %struct.__va_list_tag* %26 to i8*
  call void @llvm.va_end(i8* %27)
  call void @exit(i32 noundef 7) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @warn_tok(%struct.Token* noundef %0, i8* noundef %1, ...) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.Token* %0, %struct.Token** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %7 = bitcast %struct.__va_list_tag* %6 to i8*
  call void @llvm.va_start(i8* %7)
  %8 = load %struct.Token*, %struct.Token** %3, align 8
  %9 = getelementptr inbounds %struct.Token, %struct.Token* %8, i32 0, i32 8
  %10 = load %struct.File*, %struct.File** %9, align 16
  %11 = getelementptr inbounds %struct.File, %struct.File* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = load %struct.Token*, %struct.Token** %3, align 8
  %14 = getelementptr inbounds %struct.Token, %struct.Token* %13, i32 0, i32 8
  %15 = load %struct.File*, %struct.File** %14, align 16
  %16 = getelementptr inbounds %struct.File, %struct.File* %15, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = load %struct.Token*, %struct.Token** %3, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 10
  %20 = load i32, i32* %19, align 16
  %21 = load %struct.Token*, %struct.Token** %3, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 4
  %23 = load i8*, i8** %22, align 16
  %24 = load i8*, i8** %4, align 8
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  call void @verror_at(i8* noundef %12, i8* noundef %17, i32 noundef %20, i8* noundef %23, i8* noundef %24, %struct.__va_list_tag* noundef %25)
  %26 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %27 = bitcast %struct.__va_list_tag* %26 to i8*
  call void @llvm.va_end(i8* %27)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @equal(%struct.Token* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca i8*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.Token*, %struct.Token** %3, align 8
  %6 = getelementptr inbounds %struct.Token, %struct.Token* %5, i32 0, i32 4
  %7 = load i8*, i8** %6, align 16
  %8 = load i8*, i8** %4, align 8
  %9 = load %struct.Token*, %struct.Token** %3, align 8
  %10 = getelementptr inbounds %struct.Token, %struct.Token* %9, i32 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = call i32 @strncmp(i8* noundef %7, i8* noundef %8, i64 noundef %12) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %2
  %16 = load i8*, i8** %4, align 8
  %17 = load %struct.Token*, %struct.Token** %3, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %16, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 0
  br label %25

25:                                               ; preds = %15, %2
  %26 = phi i1 [ false, %2 ], [ %24, %15 ]
  ret i1 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Token* @skip(%struct.Token* noundef %0, i8* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca i8*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.Token*, %struct.Token** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = call zeroext i1 @equal(%struct.Token* noundef %5, i8* noundef %6)
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = load %struct.Token*, %struct.Token** %3, align 8
  %10 = load i8*, i8** %4, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %9, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.992, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0), i8* noundef %10) #11
  unreachable

11:                                               ; preds = %2
  %12 = load %struct.Token*, %struct.Token** %3, align 8
  %13 = getelementptr inbounds %struct.Token, %struct.Token* %12, i32 0, i32 1
  %14 = load %struct.Token*, %struct.Token** %13, align 8
  ret %struct.Token* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @consume(%struct.Token** noundef %0, %struct.Token* noundef %1, i8* noundef %2) #0 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.Token**, align 8
  %6 = alloca %struct.Token*, align 8
  %7 = alloca i8*, align 8
  store %struct.Token** %0, %struct.Token*** %5, align 8
  store %struct.Token* %1, %struct.Token** %6, align 8
  store i8* %2, i8** %7, align 8
  %8 = load %struct.Token*, %struct.Token** %6, align 8
  %9 = load i8*, i8** %7, align 8
  %10 = call zeroext i1 @equal(%struct.Token* noundef %8, i8* noundef %9)
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = load %struct.Token*, %struct.Token** %6, align 8
  %13 = getelementptr inbounds %struct.Token, %struct.Token* %12, i32 0, i32 1
  %14 = load %struct.Token*, %struct.Token** %13, align 8
  %15 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %14, %struct.Token** %15, align 8
  store i1 true, i1* %4, align 1
  br label %19

16:                                               ; preds = %3
  %17 = load %struct.Token*, %struct.Token** %6, align 8
  %18 = load %struct.Token**, %struct.Token*** %5, align 8
  store %struct.Token* %17, %struct.Token** %18, align 8
  store i1 false, i1* %4, align 1
  br label %19

19:                                               ; preds = %16, %11
  %20 = load i1, i1* %4, align 1
  ret i1 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @startswith(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i64 @strlen(i8* noundef %7) #13
  %9 = call i32 @strncmp(i8* noundef %5, i8* noundef %6, i64 noundef %8) #13
  %10 = icmp eq i32 %9, 0
  ret i1 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @convert_pp_tokens(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %4 = load %struct.Token*, %struct.Token** %2, align 8
  store %struct.Token* %4, %struct.Token** %3, align 8
  br label %5

5:                                                ; preds = %25, %1
  %6 = load %struct.Token*, %struct.Token** %3, align 8
  %7 = getelementptr inbounds %struct.Token, %struct.Token* %6, i32 0, i32 0
  %8 = load i32, i32* %7, align 16
  %9 = icmp ne i32 %8, 6
  br i1 %9, label %10, label %29

10:                                               ; preds = %5
  %11 = load %struct.Token*, %struct.Token** %3, align 8
  %12 = call zeroext i1 @is_keyword(%struct.Token* noundef %11)
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = load %struct.Token*, %struct.Token** %3, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 0
  store i32 2, i32* %15, align 16
  br label %24

16:                                               ; preds = %10
  %17 = load %struct.Token*, %struct.Token** %3, align 8
  %18 = getelementptr inbounds %struct.Token, %struct.Token* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 16
  %20 = icmp eq i32 %19, 5
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = load %struct.Token*, %struct.Token** %3, align 8
  call void @convert_pp_number(%struct.Token* noundef %22)
  br label %23

23:                                               ; preds = %21, %16
  br label %24

24:                                               ; preds = %23, %13
  br label %25

25:                                               ; preds = %24
  %26 = load %struct.Token*, %struct.Token** %3, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 1
  %28 = load %struct.Token*, %struct.Token** %27, align 8
  store %struct.Token* %28, %struct.Token** %3, align 8
  br label %5, !llvm.loop !194

29:                                               ; preds = %5
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_keyword(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca i32, align 4
  store %struct.Token* %0, %struct.Token** %2, align 8
  %4 = load i32, i32* getelementptr inbounds (%struct.HashMap, %struct.HashMap* @is_keyword.map, i32 0, i32 1), align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %16, %6
  %8 = load i32, i32* %3, align 4
  %9 = sext i32 %8 to i64
  %10 = icmp ult i64 %9, 45
  br i1 %10, label %11, label %19

11:                                               ; preds = %7
  %12 = load i32, i32* %3, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [45 x i8*], [45 x i8*]* @is_keyword.kw, i64 0, i64 %13
  %15 = load i8*, i8** %14, align 8
  call void @hashmap_put(%struct.HashMap* noundef @is_keyword.map, i8* noundef %15, i8* noundef inttoptr (i64 1 to i8*))
  br label %16

16:                                               ; preds = %11
  %17 = load i32, i32* %3, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %3, align 4
  br label %7, !llvm.loop !195

19:                                               ; preds = %7
  br label %20

20:                                               ; preds = %19, %1
  %21 = load %struct.Token*, %struct.Token** %2, align 8
  %22 = getelementptr inbounds %struct.Token, %struct.Token* %21, i32 0, i32 4
  %23 = load i8*, i8** %22, align 16
  %24 = load %struct.Token*, %struct.Token** %2, align 8
  %25 = getelementptr inbounds %struct.Token, %struct.Token* %24, i32 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = call i8* @hashmap_get2(%struct.HashMap* noundef @is_keyword.map, i8* noundef %23, i32 noundef %26)
  %28 = icmp ne i8* %27, null
  ret i1 %28
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @convert_pp_number(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca x86_fp80, align 16
  %5 = alloca %struct.Type*, align 8
  store %struct.Token* %0, %struct.Token** %2, align 8
  %6 = load %struct.Token*, %struct.Token** %2, align 8
  %7 = call zeroext i1 @convert_pp_int(%struct.Token* noundef %6)
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  br label %66

9:                                                ; preds = %1
  %10 = load %struct.Token*, %struct.Token** %2, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 4
  %12 = load i8*, i8** %11, align 16
  %13 = call x86_fp80 @strtold(i8* noundef %12, i8** noundef %3) #14
  store x86_fp80 %13, x86_fp80* %4, align 16
  %14 = load i8*, i8** %3, align 8
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  %17 = icmp eq i32 %16, 102
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  %19 = load i8*, i8** %3, align 8
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 70
  br i1 %22, label %23, label %27

23:                                               ; preds = %18, %9
  %24 = load %struct.Type*, %struct.Type** @ty_float, align 8
  store %struct.Type* %24, %struct.Type** %5, align 8
  %25 = load i8*, i8** %3, align 8
  %26 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %26, i8** %3, align 8
  br label %44

27:                                               ; preds = %18
  %28 = load i8*, i8** %3, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 108
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = load i8*, i8** %3, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 76
  br i1 %36, label %37, label %41

37:                                               ; preds = %32, %27
  %38 = load %struct.Type*, %struct.Type** @ty_ldouble, align 8
  store %struct.Type* %38, %struct.Type** %5, align 8
  %39 = load i8*, i8** %3, align 8
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %3, align 8
  br label %43

41:                                               ; preds = %32
  %42 = load %struct.Type*, %struct.Type** @ty_double, align 8
  store %struct.Type* %42, %struct.Type** %5, align 8
  br label %43

43:                                               ; preds = %41, %37
  br label %44

44:                                               ; preds = %43, %23
  %45 = load %struct.Token*, %struct.Token** %2, align 8
  %46 = getelementptr inbounds %struct.Token, %struct.Token* %45, i32 0, i32 4
  %47 = load i8*, i8** %46, align 16
  %48 = load %struct.Token*, %struct.Token** %2, align 8
  %49 = getelementptr inbounds %struct.Token, %struct.Token* %48, i32 0, i32 5
  %50 = load i32, i32* %49, align 8
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %47, i64 %51
  %53 = load i8*, i8** %3, align 8
  %54 = icmp ne i8* %52, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %44
  %56 = load %struct.Token*, %struct.Token** %2, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %56, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.70.998, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

57:                                               ; preds = %44
  %58 = load %struct.Token*, %struct.Token** %2, align 8
  %59 = getelementptr inbounds %struct.Token, %struct.Token* %58, i32 0, i32 0
  store i32 4, i32* %59, align 16
  %60 = load x86_fp80, x86_fp80* %4, align 16
  %61 = load %struct.Token*, %struct.Token** %2, align 8
  %62 = getelementptr inbounds %struct.Token, %struct.Token* %61, i32 0, i32 3
  store x86_fp80 %60, x86_fp80* %62, align 16
  %63 = load %struct.Type*, %struct.Type** %5, align 8
  %64 = load %struct.Token*, %struct.Token** %2, align 8
  %65 = getelementptr inbounds %struct.Token, %struct.Token* %64, i32 0, i32 6
  store %struct.Type* %63, %struct.Type** %65, align 16
  br label %66

66:                                               ; preds = %57, %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @convert_pp_int(%struct.Token* noundef %0) #0 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.Token*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca %struct.Type*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  %10 = load %struct.Token*, %struct.Token** %3, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 4
  %12 = load i8*, i8** %11, align 16
  store i8* %12, i8** %4, align 8
  store i32 10, i32* %5, align 4
  %13 = load i8*, i8** %4, align 8
  %14 = call i32 @strncasecmp(i8* noundef %13, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71.999, i64 0, i64 0), i64 noundef 2) #13
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %1
  %17 = call i16** @__ctype_b_loc() #15
  %18 = load i16*, i16** %17, align 8
  %19 = load i8*, i8** %4, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %18, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = and i32 %26, 4096
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %16
  %30 = load i8*, i8** %4, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 2
  store i8* %31, i8** %4, align 8
  store i32 16, i32* %5, align 4
  br label %59

32:                                               ; preds = %16, %1
  %33 = load i8*, i8** %4, align 8
  %34 = call i32 @strncasecmp(i8* noundef %33, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72.1000, i64 0, i64 0), i64 noundef 2) #13
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %51, label %36

36:                                               ; preds = %32
  %37 = load i8*, i8** %4, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %40, 48
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = load i8*, i8** %4, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp eq i32 %46, 49
  br i1 %47, label %48, label %51

48:                                               ; preds = %42, %36
  %49 = load i8*, i8** %4, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 2
  store i8* %50, i8** %4, align 8
  store i32 2, i32* %5, align 4
  br label %58

51:                                               ; preds = %42, %32
  %52 = load i8*, i8** %4, align 8
  %53 = load i8, i8* %52, align 1
  %54 = sext i8 %53 to i32
  %55 = icmp eq i32 %54, 48
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  store i32 8, i32* %5, align 4
  br label %57

57:                                               ; preds = %56, %51
  br label %58

58:                                               ; preds = %57, %48
  br label %59

59:                                               ; preds = %58, %29
  %60 = load i8*, i8** %4, align 8
  %61 = load i32, i32* %5, align 4
  %62 = call i64 @strtoul(i8* noundef %60, i8** noundef %4, i32 noundef %61) #14
  store i64 %62, i64* %6, align 8
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  %63 = load i8*, i8** %4, align 8
  %64 = call zeroext i1 @startswith(i8* noundef %63, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73.1001, i64 0, i64 0))
  br i1 %64, label %86, label %65

65:                                               ; preds = %59
  %66 = load i8*, i8** %4, align 8
  %67 = call zeroext i1 @startswith(i8* noundef %66, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74.1002, i64 0, i64 0))
  br i1 %67, label %86, label %68

68:                                               ; preds = %65
  %69 = load i8*, i8** %4, align 8
  %70 = call zeroext i1 @startswith(i8* noundef %69, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75.1003, i64 0, i64 0))
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i8*, i8** %4, align 8
  %73 = call zeroext i1 @startswith(i8* noundef %72, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76.1004, i64 0, i64 0))
  br i1 %73, label %86, label %74

74:                                               ; preds = %71
  %75 = load i8*, i8** %4, align 8
  %76 = call zeroext i1 @startswith(i8* noundef %75, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77.1005, i64 0, i64 0))
  br i1 %76, label %86, label %77

77:                                               ; preds = %74
  %78 = load i8*, i8** %4, align 8
  %79 = call zeroext i1 @startswith(i8* noundef %78, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78.1006, i64 0, i64 0))
  br i1 %79, label %86, label %80

80:                                               ; preds = %77
  %81 = load i8*, i8** %4, align 8
  %82 = call zeroext i1 @startswith(i8* noundef %81, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79.1007, i64 0, i64 0))
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = load i8*, i8** %4, align 8
  %85 = call zeroext i1 @startswith(i8* noundef %84, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80.1008, i64 0, i64 0))
  br i1 %85, label %86, label %89

86:                                               ; preds = %83, %80, %77, %74, %71, %68, %65, %59
  %87 = load i8*, i8** %4, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 3
  store i8* %88, i8** %4, align 8
  store i8 1, i8* %8, align 1
  store i8 1, i8* %7, align 1
  br label %139

89:                                               ; preds = %83
  %90 = load i8*, i8** %4, align 8
  %91 = call i32 @strncasecmp(i8* noundef %90, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81.1009, i64 0, i64 0), i64 noundef 2) #13
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %89
  %94 = load i8*, i8** %4, align 8
  %95 = call i32 @strncasecmp(i8* noundef %94, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.82.1010, i64 0, i64 0), i64 noundef 2) #13
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %93, %89
  %98 = load i8*, i8** %4, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 2
  store i8* %99, i8** %4, align 8
  store i8 1, i8* %8, align 1
  store i8 1, i8* %7, align 1
  br label %138

100:                                              ; preds = %93
  %101 = load i8*, i8** %4, align 8
  %102 = call zeroext i1 @startswith(i8* noundef %101, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83.1011, i64 0, i64 0))
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = load i8*, i8** %4, align 8
  %105 = call zeroext i1 @startswith(i8* noundef %104, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.84.1012, i64 0, i64 0))
  br i1 %105, label %106, label %109

106:                                              ; preds = %103, %100
  %107 = load i8*, i8** %4, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 2
  store i8* %108, i8** %4, align 8
  store i8 1, i8* %7, align 1
  br label %137

109:                                              ; preds = %103
  %110 = load i8*, i8** %4, align 8
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = icmp eq i32 %112, 76
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = load i8*, i8** %4, align 8
  %116 = load i8, i8* %115, align 1
  %117 = sext i8 %116 to i32
  %118 = icmp eq i32 %117, 108
  br i1 %118, label %119, label %122

119:                                              ; preds = %114, %109
  %120 = load i8*, i8** %4, align 8
  %121 = getelementptr inbounds i8, i8* %120, i32 1
  store i8* %121, i8** %4, align 8
  store i8 1, i8* %7, align 1
  br label %136

122:                                              ; preds = %114
  %123 = load i8*, i8** %4, align 8
  %124 = load i8, i8* %123, align 1
  %125 = sext i8 %124 to i32
  %126 = icmp eq i32 %125, 85
  br i1 %126, label %132, label %127

127:                                              ; preds = %122
  %128 = load i8*, i8** %4, align 8
  %129 = load i8, i8* %128, align 1
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %130, 117
  br i1 %131, label %132, label %135

132:                                              ; preds = %127, %122
  %133 = load i8*, i8** %4, align 8
  %134 = getelementptr inbounds i8, i8* %133, i32 1
  store i8* %134, i8** %4, align 8
  store i8 1, i8* %8, align 1
  br label %135

135:                                              ; preds = %132, %127
  br label %136

136:                                              ; preds = %135, %119
  br label %137

137:                                              ; preds = %136, %106
  br label %138

138:                                              ; preds = %137, %97
  br label %139

139:                                              ; preds = %138, %86
  %140 = load i8*, i8** %4, align 8
  %141 = load %struct.Token*, %struct.Token** %3, align 8
  %142 = getelementptr inbounds %struct.Token, %struct.Token* %141, i32 0, i32 4
  %143 = load i8*, i8** %142, align 16
  %144 = load %struct.Token*, %struct.Token** %3, align 8
  %145 = getelementptr inbounds %struct.Token, %struct.Token* %144, i32 0, i32 5
  %146 = load i32, i32* %145, align 8
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, i8* %143, i64 %147
  %149 = icmp ne i8* %140, %148
  br i1 %149, label %150, label %151

150:                                              ; preds = %139
  store i1 false, i1* %2, align 1
  br label %262

151:                                              ; preds = %139
  %152 = load i32, i32* %5, align 4
  %153 = icmp eq i32 %152, 10
  br i1 %153, label %154, label %193

154:                                              ; preds = %151
  %155 = load i8, i8* %7, align 1
  %156 = trunc i8 %155 to i1
  br i1 %156, label %157, label %162

157:                                              ; preds = %154
  %158 = load i8, i8* %8, align 1
  %159 = trunc i8 %158 to i1
  br i1 %159, label %160, label %162

160:                                              ; preds = %157
  %161 = load %struct.Type*, %struct.Type** @ty_ulong, align 8
  store %struct.Type* %161, %struct.Type** %9, align 8
  br label %192

162:                                              ; preds = %157, %154
  %163 = load i8, i8* %7, align 1
  %164 = trunc i8 %163 to i1
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = load %struct.Type*, %struct.Type** @ty_long, align 8
  store %struct.Type* %166, %struct.Type** %9, align 8
  br label %191

167:                                              ; preds = %162
  %168 = load i8, i8* %8, align 1
  %169 = trunc i8 %168 to i1
  br i1 %169, label %170, label %180

170:                                              ; preds = %167
  %171 = load i64, i64* %6, align 8
  %172 = ashr i64 %171, 32
  %173 = icmp ne i64 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = load %struct.Type*, %struct.Type** @ty_ulong, align 8
  br label %178

176:                                              ; preds = %170
  %177 = load %struct.Type*, %struct.Type** @ty_uint, align 8
  br label %178

178:                                              ; preds = %176, %174
  %179 = phi %struct.Type* [ %175, %174 ], [ %177, %176 ]
  store %struct.Type* %179, %struct.Type** %9, align 8
  br label %190

180:                                              ; preds = %167
  %181 = load i64, i64* %6, align 8
  %182 = ashr i64 %181, 31
  %183 = icmp ne i64 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  %185 = load %struct.Type*, %struct.Type** @ty_long, align 8
  br label %188

186:                                              ; preds = %180
  %187 = load %struct.Type*, %struct.Type** @ty_int, align 8
  br label %188

188:                                              ; preds = %186, %184
  %189 = phi %struct.Type* [ %185, %184 ], [ %187, %186 ]
  store %struct.Type* %189, %struct.Type** %9, align 8
  br label %190

190:                                              ; preds = %188, %178
  br label %191

191:                                              ; preds = %190, %165
  br label %192

192:                                              ; preds = %191, %160
  br label %253

193:                                              ; preds = %151
  %194 = load i8, i8* %7, align 1
  %195 = trunc i8 %194 to i1
  br i1 %195, label %196, label %201

196:                                              ; preds = %193
  %197 = load i8, i8* %8, align 1
  %198 = trunc i8 %197 to i1
  br i1 %198, label %199, label %201

199:                                              ; preds = %196
  %200 = load %struct.Type*, %struct.Type** @ty_ulong, align 8
  store %struct.Type* %200, %struct.Type** %9, align 8
  br label %252

201:                                              ; preds = %196, %193
  %202 = load i8, i8* %7, align 1
  %203 = trunc i8 %202 to i1
  br i1 %203, label %204, label %214

204:                                              ; preds = %201
  %205 = load i64, i64* %6, align 8
  %206 = ashr i64 %205, 63
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %204
  %209 = load %struct.Type*, %struct.Type** @ty_ulong, align 8
  br label %212

210:                                              ; preds = %204
  %211 = load %struct.Type*, %struct.Type** @ty_long, align 8
  br label %212

212:                                              ; preds = %210, %208
  %213 = phi %struct.Type* [ %209, %208 ], [ %211, %210 ]
  store %struct.Type* %213, %struct.Type** %9, align 8
  br label %251

214:                                              ; preds = %201
  %215 = load i8, i8* %8, align 1
  %216 = trunc i8 %215 to i1
  br i1 %216, label %217, label %227

217:                                              ; preds = %214
  %218 = load i64, i64* %6, align 8
  %219 = ashr i64 %218, 32
  %220 = icmp ne i64 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  %222 = load %struct.Type*, %struct.Type** @ty_ulong, align 8
  br label %225

223:                                              ; preds = %217
  %224 = load %struct.Type*, %struct.Type** @ty_uint, align 8
  br label %225

225:                                              ; preds = %223, %221
  %226 = phi %struct.Type* [ %222, %221 ], [ %224, %223 ]
  store %struct.Type* %226, %struct.Type** %9, align 8
  br label %250

227:                                              ; preds = %214
  %228 = load i64, i64* %6, align 8
  %229 = ashr i64 %228, 63
  %230 = icmp ne i64 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %227
  %232 = load %struct.Type*, %struct.Type** @ty_ulong, align 8
  store %struct.Type* %232, %struct.Type** %9, align 8
  br label %249

233:                                              ; preds = %227
  %234 = load i64, i64* %6, align 8
  %235 = ashr i64 %234, 32
  %236 = icmp ne i64 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %233
  %238 = load %struct.Type*, %struct.Type** @ty_long, align 8
  store %struct.Type* %238, %struct.Type** %9, align 8
  br label %248

239:                                              ; preds = %233
  %240 = load i64, i64* %6, align 8
  %241 = ashr i64 %240, 31
  %242 = icmp ne i64 %241, 0
  br i1 %242, label %243, label %245

243:                                              ; preds = %239
  %244 = load %struct.Type*, %struct.Type** @ty_uint, align 8
  store %struct.Type* %244, %struct.Type** %9, align 8
  br label %247

245:                                              ; preds = %239
  %246 = load %struct.Type*, %struct.Type** @ty_int, align 8
  store %struct.Type* %246, %struct.Type** %9, align 8
  br label %247

247:                                              ; preds = %245, %243
  br label %248

248:                                              ; preds = %247, %237
  br label %249

249:                                              ; preds = %248, %231
  br label %250

250:                                              ; preds = %249, %225
  br label %251

251:                                              ; preds = %250, %212
  br label %252

252:                                              ; preds = %251, %199
  br label %253

253:                                              ; preds = %252, %192
  %254 = load %struct.Token*, %struct.Token** %3, align 8
  %255 = getelementptr inbounds %struct.Token, %struct.Token* %254, i32 0, i32 0
  store i32 4, i32* %255, align 16
  %256 = load i64, i64* %6, align 8
  %257 = load %struct.Token*, %struct.Token** %3, align 8
  %258 = getelementptr inbounds %struct.Token, %struct.Token* %257, i32 0, i32 2
  store i64 %256, i64* %258, align 16
  %259 = load %struct.Type*, %struct.Type** %9, align 8
  %260 = load %struct.Token*, %struct.Token** %3, align 8
  %261 = getelementptr inbounds %struct.Token, %struct.Token* %260, i32 0, i32 6
  store %struct.Type* %259, %struct.Type** %261, align 16
  store i1 true, i1* %2, align 1
  br label %262

262:                                              ; preds = %253, %150
  %263 = load i1, i1* %2, align 1
  ret i1 %263
}

; Function Attrs: nounwind
declare x86_fp80 @strtold(i8* noundef, i8** noundef) #6

; Function Attrs: nounwind readonly willreturn
declare i32 @strncasecmp(i8* noundef, i8* noundef, i64 noundef) #2

; Function Attrs: nounwind readnone willreturn
declare i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare i64 @strtoul(i8* noundef, i8** noundef, i32 noundef) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Token* @tokenize_string_literal(%struct.Token* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca %struct.Token*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Token*, align 8
  store %struct.Token* %0, %struct.Token** %3, align 8
  store %struct.Type* %1, %struct.Type** %4, align 8
  %6 = load %struct.Type*, %struct.Type** %4, align 8
  %7 = getelementptr inbounds %struct.Type, %struct.Type* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = load %struct.Token*, %struct.Token** %3, align 8
  %12 = getelementptr inbounds %struct.Token, %struct.Token* %11, i32 0, i32 4
  %13 = load i8*, i8** %12, align 16
  %14 = load %struct.Token*, %struct.Token** %3, align 8
  %15 = getelementptr inbounds %struct.Token, %struct.Token* %14, i32 0, i32 4
  %16 = load i8*, i8** %15, align 16
  %17 = call %struct.Token* @read_utf16_string_literal(i8* noundef %13, i8* noundef %16)
  store %struct.Token* %17, %struct.Token** %5, align 8
  br label %27

18:                                               ; preds = %2
  %19 = load %struct.Token*, %struct.Token** %3, align 8
  %20 = getelementptr inbounds %struct.Token, %struct.Token* %19, i32 0, i32 4
  %21 = load i8*, i8** %20, align 16
  %22 = load %struct.Token*, %struct.Token** %3, align 8
  %23 = getelementptr inbounds %struct.Token, %struct.Token* %22, i32 0, i32 4
  %24 = load i8*, i8** %23, align 16
  %25 = load %struct.Type*, %struct.Type** %4, align 8
  %26 = call %struct.Token* @read_utf32_string_literal(i8* noundef %21, i8* noundef %24, %struct.Type* noundef %25)
  store %struct.Token* %26, %struct.Token** %5, align 8
  br label %27

27:                                               ; preds = %18, %10
  %28 = load %struct.Token*, %struct.Token** %3, align 8
  %29 = getelementptr inbounds %struct.Token, %struct.Token* %28, i32 0, i32 1
  %30 = load %struct.Token*, %struct.Token** %29, align 8
  %31 = load %struct.Token*, %struct.Token** %5, align 8
  %32 = getelementptr inbounds %struct.Token, %struct.Token* %31, i32 0, i32 1
  store %struct.Token* %30, %struct.Token** %32, align 8
  %33 = load %struct.Token*, %struct.Token** %5, align 8
  ret %struct.Token* %33
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @read_utf16_string_literal(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.Token*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 1
  %13 = call i8* @string_literal_end(i8* noundef %12)
  store i8* %13, i8** %5, align 8
  %14 = load i8*, i8** %5, align 8
  %15 = load i8*, i8** %3, align 8
  %16 = ptrtoint i8* %14 to i64
  %17 = ptrtoint i8* %15 to i64
  %18 = sub i64 %16, %17
  %19 = call noalias i8* @calloc(i64 noundef 2, i64 noundef %18) #14
  %20 = bitcast i8* %19 to i16*
  store i16* %20, i16** %6, align 8
  %21 = load i16*, i16** %6, align 8
  %22 = icmp eq i16* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.85.1064, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

24:                                               ; preds = %2
  store i32 0, i32* %7, align 4
  %25 = load i8*, i8** %4, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8* %26, i8** %8, align 8
  br label %27

27:                                               ; preds = %81, %36, %24
  %28 = load i8*, i8** %8, align 8
  %29 = load i8*, i8** %5, align 8
  %30 = icmp ult i8* %28, %29
  br i1 %30, label %31, label %82

31:                                               ; preds = %27
  %32 = load i8*, i8** %8, align 8
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 92
  br i1 %35, label %36, label %46

36:                                               ; preds = %31
  %37 = load i8*, i8** %8, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  %39 = call i32 @read_escaped_char(i8** noundef %8, i8* noundef %38)
  %40 = trunc i32 %39 to i16
  %41 = load i16*, i16** %6, align 8
  %42 = load i32, i32* %7, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %7, align 4
  %44 = sext i32 %42 to i64
  %45 = getelementptr inbounds i16, i16* %41, i64 %44
  store i16 %40, i16* %45, align 2
  br label %27, !llvm.loop !196

46:                                               ; preds = %31
  %47 = load i8*, i8** %8, align 8
  %48 = call i32 @decode_utf8(i8** noundef %8, i8* noundef %47)
  store i32 %48, i32* %9, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp ult i32 %49, 65536
  br i1 %50, label %51, label %59

51:                                               ; preds = %46
  %52 = load i32, i32* %9, align 4
  %53 = trunc i32 %52 to i16
  %54 = load i16*, i16** %6, align 8
  %55 = load i32, i32* %7, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %7, align 4
  %57 = sext i32 %55 to i64
  %58 = getelementptr inbounds i16, i16* %54, i64 %57
  store i16 %53, i16* %58, align 2
  br label %81

59:                                               ; preds = %46
  %60 = load i32, i32* %9, align 4
  %61 = sub i32 %60, 65536
  store i32 %61, i32* %9, align 4
  %62 = load i32, i32* %9, align 4
  %63 = lshr i32 %62, 10
  %64 = and i32 %63, 1023
  %65 = add i32 55296, %64
  %66 = trunc i32 %65 to i16
  %67 = load i16*, i16** %6, align 8
  %68 = load i32, i32* %7, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %7, align 4
  %70 = sext i32 %68 to i64
  %71 = getelementptr inbounds i16, i16* %67, i64 %70
  store i16 %66, i16* %71, align 2
  %72 = load i32, i32* %9, align 4
  %73 = and i32 %72, 1023
  %74 = add i32 56320, %73
  %75 = trunc i32 %74 to i16
  %76 = load i16*, i16** %6, align 8
  %77 = load i32, i32* %7, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %7, align 4
  %79 = sext i32 %77 to i64
  %80 = getelementptr inbounds i16, i16* %76, i64 %79
  store i16 %75, i16* %80, align 2
  br label %81

81:                                               ; preds = %59, %51
  br label %27, !llvm.loop !196

82:                                               ; preds = %27
  %83 = load i8*, i8** %3, align 8
  %84 = load i8*, i8** %5, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 1
  %86 = call %struct.Token* @new_token(i32 noundef 3, i8* noundef %83, i8* noundef %85)
  store %struct.Token* %86, %struct.Token** %10, align 8
  %87 = load %struct.Type*, %struct.Type** @ty_ushort, align 8
  %88 = load i32, i32* %7, align 4
  %89 = add nsw i32 %88, 1
  %90 = call %struct.Type* @array_of(%struct.Type* noundef %87, i32 noundef %89)
  %91 = load %struct.Token*, %struct.Token** %10, align 8
  %92 = getelementptr inbounds %struct.Token, %struct.Token* %91, i32 0, i32 6
  store %struct.Type* %90, %struct.Type** %92, align 16
  %93 = load i16*, i16** %6, align 8
  %94 = bitcast i16* %93 to i8*
  %95 = load %struct.Token*, %struct.Token** %10, align 8
  %96 = getelementptr inbounds %struct.Token, %struct.Token* %95, i32 0, i32 7
  store i8* %94, i8** %96, align 8
  %97 = load %struct.Token*, %struct.Token** %10, align 8
  ret %struct.Token* %97
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @read_utf32_string_literal(i8* noundef %0, i8* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca %struct.Token*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.Type* %2, %struct.Type** %6, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 1
  %14 = call i8* @string_literal_end(i8* noundef %13)
  store i8* %14, i8** %7, align 8
  %15 = load i8*, i8** %7, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = ptrtoint i8* %15 to i64
  %18 = ptrtoint i8* %16 to i64
  %19 = sub i64 %17, %18
  %20 = call noalias i8* @calloc(i64 noundef 4, i64 noundef %19) #14
  %21 = bitcast i8* %20 to i32*
  store i32* %21, i32** %8, align 8
  %22 = load i32*, i32** %8, align 8
  %23 = icmp eq i32* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %3
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.88.1060, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

25:                                               ; preds = %3
  store i32 0, i32* %9, align 4
  %26 = load i8*, i8** %5, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %10, align 8
  br label %28

28:                                               ; preds = %54, %25
  %29 = load i8*, i8** %10, align 8
  %30 = load i8*, i8** %7, align 8
  %31 = icmp ult i8* %29, %30
  br i1 %31, label %32, label %55

32:                                               ; preds = %28
  %33 = load i8*, i8** %10, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 92
  br i1 %36, label %37, label %46

37:                                               ; preds = %32
  %38 = load i8*, i8** %10, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 1
  %40 = call i32 @read_escaped_char(i8** noundef %10, i8* noundef %39)
  %41 = load i32*, i32** %8, align 8
  %42 = load i32, i32* %9, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %9, align 4
  %44 = sext i32 %42 to i64
  %45 = getelementptr inbounds i32, i32* %41, i64 %44
  store i32 %40, i32* %45, align 4
  br label %54

46:                                               ; preds = %32
  %47 = load i8*, i8** %10, align 8
  %48 = call i32 @decode_utf8(i8** noundef %10, i8* noundef %47)
  %49 = load i32*, i32** %8, align 8
  %50 = load i32, i32* %9, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %9, align 4
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds i32, i32* %49, i64 %52
  store i32 %48, i32* %53, align 4
  br label %54

54:                                               ; preds = %46, %37
  br label %28, !llvm.loop !197

55:                                               ; preds = %28
  %56 = load i8*, i8** %4, align 8
  %57 = load i8*, i8** %7, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = call %struct.Token* @new_token(i32 noundef 3, i8* noundef %56, i8* noundef %58)
  store %struct.Token* %59, %struct.Token** %11, align 8
  %60 = load %struct.Type*, %struct.Type** %6, align 8
  %61 = load i32, i32* %9, align 4
  %62 = add nsw i32 %61, 1
  %63 = call %struct.Type* @array_of(%struct.Type* noundef %60, i32 noundef %62)
  %64 = load %struct.Token*, %struct.Token** %11, align 8
  %65 = getelementptr inbounds %struct.Token, %struct.Token* %64, i32 0, i32 6
  store %struct.Type* %63, %struct.Type** %65, align 16
  %66 = load i32*, i32** %8, align 8
  %67 = bitcast i32* %66 to i8*
  %68 = load %struct.Token*, %struct.Token** %11, align 8
  %69 = getelementptr inbounds %struct.Token, %struct.Token* %68, i32 0, i32 7
  store i8* %67, i8** %69, align 8
  %70 = load %struct.Token*, %struct.Token** %11, align 8
  ret %struct.Token* %70
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @string_literal_end(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  store i8* %4, i8** %3, align 8
  br label %5

5:                                                ; preds = %31, %1
  %6 = load i8*, i8** %2, align 8
  %7 = load i8, i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp ne i32 %8, 34
  br i1 %9, label %10, label %34

10:                                               ; preds = %5
  %11 = load i8*, i8** %2, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp eq i32 %13, 10
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = load i8*, i8** %2, align 8
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15, %10
  %21 = load i8*, i8** %3, align 8
  call void (i8*, i8*, ...) @error_at(i8* noundef %21, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.86.1063, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

22:                                               ; preds = %15
  %23 = load i8*, i8** %2, align 8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %25, 92
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = load i8*, i8** %2, align 8
  %29 = getelementptr inbounds i8, i8* %28, i32 1
  store i8* %29, i8** %2, align 8
  br label %30

30:                                               ; preds = %27, %22
  br label %31

31:                                               ; preds = %30
  %32 = load i8*, i8** %2, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %2, align 8
  br label %5, !llvm.loop !198

34:                                               ; preds = %5
  %35 = load i8*, i8** %2, align 8
  ret i8* %35
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_escaped_char(i8** noundef %0, i8* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8** %0, i8*** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = icmp sle i32 48, %10
  br i1 %11, label %12, label %64

12:                                               ; preds = %2
  %13 = load i8*, i8** %5, align 8
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp sle i32 %15, 55
  br i1 %16, label %17, label %64

17:                                               ; preds = %12
  %18 = load i8*, i8** %5, align 8
  %19 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %19, i8** %5, align 8
  %20 = load i8, i8* %18, align 1
  %21 = sext i8 %20 to i32
  %22 = sub nsw i32 %21, 48
  store i32 %22, i32* %6, align 4
  %23 = load i8*, i8** %5, align 8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp sle i32 48, %25
  br i1 %26, label %27, label %60

27:                                               ; preds = %17
  %28 = load i8*, i8** %5, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp sle i32 %30, 55
  br i1 %31, label %32, label %60

32:                                               ; preds = %27
  %33 = load i32, i32* %6, align 4
  %34 = shl i32 %33, 3
  %35 = load i8*, i8** %5, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %5, align 8
  %37 = load i8, i8* %35, align 1
  %38 = sext i8 %37 to i32
  %39 = sub nsw i32 %38, 48
  %40 = add nsw i32 %34, %39
  store i32 %40, i32* %6, align 4
  %41 = load i8*, i8** %5, align 8
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp sle i32 48, %43
  br i1 %44, label %45, label %59

45:                                               ; preds = %32
  %46 = load i8*, i8** %5, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp sle i32 %48, 55
  br i1 %49, label %50, label %59

50:                                               ; preds = %45
  %51 = load i32, i32* %6, align 4
  %52 = shl i32 %51, 3
  %53 = load i8*, i8** %5, align 8
  %54 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %54, i8** %5, align 8
  %55 = load i8, i8* %53, align 1
  %56 = sext i8 %55 to i32
  %57 = sub nsw i32 %56, 48
  %58 = add nsw i32 %52, %57
  store i32 %58, i32* %6, align 4
  br label %59

59:                                               ; preds = %50, %45, %32
  br label %60

60:                                               ; preds = %59, %27, %17
  %61 = load i8*, i8** %5, align 8
  %62 = load i8**, i8*** %4, align 8
  store i8* %61, i8** %62, align 8
  %63 = load i32, i32* %6, align 4
  store i32 %63, i32* %3, align 4
  br label %131

64:                                               ; preds = %12, %2
  %65 = load i8*, i8** %5, align 8
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i32
  %68 = icmp eq i32 %67, 120
  br i1 %68, label %69, label %112

69:                                               ; preds = %64
  %70 = load i8*, i8** %5, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %5, align 8
  %72 = call i16** @__ctype_b_loc() #15
  %73 = load i16*, i16** %72, align 8
  %74 = load i8*, i8** %5, align 8
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i16, i16* %73, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = and i32 %80, 4096
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %69
  %84 = load i8*, i8** %5, align 8
  call void (i8*, i8*, ...) @error_at(i8* noundef %84, i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.87.1062, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

85:                                               ; preds = %69
  store i32 0, i32* %7, align 4
  br label %86

86:                                               ; preds = %105, %85
  %87 = call i16** @__ctype_b_loc() #15
  %88 = load i16*, i16** %87, align 8
  %89 = load i8*, i8** %5, align 8
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %88, i64 %92
  %94 = load i16, i16* %93, align 2
  %95 = zext i16 %94 to i32
  %96 = and i32 %95, 4096
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %108

98:                                               ; preds = %86
  %99 = load i32, i32* %7, align 4
  %100 = shl i32 %99, 4
  %101 = load i8*, i8** %5, align 8
  %102 = load i8, i8* %101, align 1
  %103 = call i32 @from_hex(i8 noundef signext %102)
  %104 = add nsw i32 %100, %103
  store i32 %104, i32* %7, align 4
  br label %105

105:                                              ; preds = %98
  %106 = load i8*, i8** %5, align 8
  %107 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %107, i8** %5, align 8
  br label %86, !llvm.loop !199

108:                                              ; preds = %86
  %109 = load i8*, i8** %5, align 8
  %110 = load i8**, i8*** %4, align 8
  store i8* %109, i8** %110, align 8
  %111 = load i32, i32* %7, align 4
  store i32 %111, i32* %3, align 4
  br label %131

112:                                              ; preds = %64
  %113 = load i8*, i8** %5, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 1
  %115 = load i8**, i8*** %4, align 8
  store i8* %114, i8** %115, align 8
  %116 = load i8*, i8** %5, align 8
  %117 = load i8, i8* %116, align 1
  %118 = sext i8 %117 to i32
  switch i32 %118, label %127 [
    i32 97, label %119
    i32 98, label %120
    i32 116, label %121
    i32 110, label %122
    i32 118, label %123
    i32 102, label %124
    i32 114, label %125
    i32 101, label %126
  ]

119:                                              ; preds = %112
  store i32 7, i32* %3, align 4
  br label %131

120:                                              ; preds = %112
  store i32 8, i32* %3, align 4
  br label %131

121:                                              ; preds = %112
  store i32 9, i32* %3, align 4
  br label %131

122:                                              ; preds = %112
  store i32 10, i32* %3, align 4
  br label %131

123:                                              ; preds = %112
  store i32 11, i32* %3, align 4
  br label %131

124:                                              ; preds = %112
  store i32 12, i32* %3, align 4
  br label %131

125:                                              ; preds = %112
  store i32 13, i32* %3, align 4
  br label %131

126:                                              ; preds = %112
  store i32 27, i32* %3, align 4
  br label %131

127:                                              ; preds = %112
  %128 = load i8*, i8** %5, align 8
  %129 = load i8, i8* %128, align 1
  %130 = sext i8 %129 to i32
  store i32 %130, i32* %3, align 4
  br label %131

131:                                              ; preds = %127, %126, %125, %124, %123, %122, %121, %120, %119, %108, %60
  %132 = load i32, i32* %3, align 4
  ret i32 %132
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @new_token(i32 noundef %0, i8* noundef %1, i8* noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.Token*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %8 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 128) #14
  %9 = bitcast i8* %8 to %struct.Token*
  store %struct.Token* %9, %struct.Token** %7, align 8
  %10 = load %struct.Token*, %struct.Token** %7, align 8
  %11 = icmp eq %struct.Token* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.89.1061, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

13:                                               ; preds = %3
  %14 = load i32, i32* %4, align 4
  %15 = load %struct.Token*, %struct.Token** %7, align 8
  %16 = getelementptr inbounds %struct.Token, %struct.Token* %15, i32 0, i32 0
  store i32 %14, i32* %16, align 16
  %17 = load i8*, i8** %5, align 8
  %18 = load %struct.Token*, %struct.Token** %7, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 4
  store i8* %17, i8** %19, align 16
  %20 = load i8*, i8** %6, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = ptrtoint i8* %20 to i64
  %23 = ptrtoint i8* %21 to i64
  %24 = sub i64 %22, %23
  %25 = trunc i64 %24 to i32
  %26 = load %struct.Token*, %struct.Token** %7, align 8
  %27 = getelementptr inbounds %struct.Token, %struct.Token* %26, i32 0, i32 5
  store i32 %25, i32* %27, align 8
  %28 = load %struct.File*, %struct.File** @current_file, align 8
  %29 = load %struct.Token*, %struct.Token** %7, align 8
  %30 = getelementptr inbounds %struct.Token, %struct.Token* %29, i32 0, i32 8
  store %struct.File* %28, %struct.File** %30, align 16
  %31 = load %struct.File*, %struct.File** @current_file, align 8
  %32 = getelementptr inbounds %struct.File, %struct.File* %31, i32 0, i32 3
  %33 = load i8*, i8** %32, align 8
  %34 = load %struct.Token*, %struct.Token** %7, align 8
  %35 = getelementptr inbounds %struct.Token, %struct.Token* %34, i32 0, i32 9
  store i8* %33, i8** %35, align 8
  %36 = load i8, i8* @at_bol, align 1
  %37 = trunc i8 %36 to i1
  %38 = load %struct.Token*, %struct.Token** %7, align 8
  %39 = getelementptr inbounds %struct.Token, %struct.Token* %38, i32 0, i32 12
  %40 = zext i1 %37 to i8
  store i8 %40, i8* %39, align 8
  %41 = load i8, i8* @has_space, align 1
  %42 = trunc i8 %41 to i1
  %43 = load %struct.Token*, %struct.Token** %7, align 8
  %44 = getelementptr inbounds %struct.Token, %struct.Token* %43, i32 0, i32 13
  %45 = zext i1 %42 to i8
  store i8 %45, i8* %44, align 1
  store i8 0, i8* @has_space, align 1
  store i8 0, i8* @at_bol, align 1
  %46 = load %struct.Token*, %struct.Token** %7, align 8
  ret %struct.Token* %46
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @from_hex(i8 noundef signext %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  store i8 %0, i8* %3, align 1
  %4 = load i8, i8* %3, align 1
  %5 = sext i8 %4 to i32
  %6 = icmp sle i32 48, %5
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = load i8, i8* %3, align 1
  %9 = sext i8 %8 to i32
  %10 = icmp sle i32 %9, 57
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = load i8, i8* %3, align 1
  %13 = sext i8 %12 to i32
  %14 = sub nsw i32 %13, 48
  store i32 %14, i32* %2, align 4
  br label %33

15:                                               ; preds = %7, %1
  %16 = load i8, i8* %3, align 1
  %17 = sext i8 %16 to i32
  %18 = icmp sle i32 97, %17
  br i1 %18, label %19, label %28

19:                                               ; preds = %15
  %20 = load i8, i8* %3, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp sle i32 %21, 102
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = load i8, i8* %3, align 1
  %25 = sext i8 %24 to i32
  %26 = sub nsw i32 %25, 97
  %27 = add nsw i32 %26, 10
  store i32 %27, i32* %2, align 4
  br label %33

28:                                               ; preds = %19, %15
  %29 = load i8, i8* %3, align 1
  %30 = sext i8 %29 to i32
  %31 = sub nsw i32 %30, 65
  %32 = add nsw i32 %31, 10
  store i32 %32, i32* %2, align 4
  br label %33

33:                                               ; preds = %28, %23, %11
  %34 = load i32, i32* %2, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Token* @tokenize(%struct.File* noundef %0) #0 {
  %2 = alloca %struct.File*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.Token, align 16
  %5 = alloca %struct.Token*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.File* %0, %struct.File** %2, align 8
  %13 = load %struct.File*, %struct.File** %2, align 8
  store %struct.File* %13, %struct.File** @current_file, align 8
  %14 = load %struct.File*, %struct.File** %2, align 8
  %15 = getelementptr inbounds %struct.File, %struct.File* %14, i32 0, i32 2
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %3, align 8
  %17 = bitcast %struct.Token* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 0, i64 128, i1 false)
  store %struct.Token* %4, %struct.Token** %5, align 8
  store i8 0, i8* %6, align 1
  store i8 1, i8* @at_bol, align 1
  store i8 0, i8* @has_space, align 1
  br label %18

18:                                               ; preds = %372, %352, %330, %313, %292, %269, %250, %233, %217, %201, %186, %172, %71, %56, %48, %36, %1
  %19 = load i8*, i8** %3, align 8
  %20 = load i8, i8* %19, align 1
  %21 = icmp ne i8 %20, 0
  br i1 %21, label %22, label %389

22:                                               ; preds = %18
  %23 = load i8*, i8** %3, align 8
  %24 = call zeroext i1 @startswith(i8* noundef %23, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.1067, i64 0, i64 0))
  br i1 %24, label %25, label %37

25:                                               ; preds = %22
  %26 = load i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 2
  store i8* %27, i8** %3, align 8
  br label %28

28:                                               ; preds = %33, %25
  %29 = load i8*, i8** %3, align 8
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp ne i32 %31, 10
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = load i8*, i8** %3, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %3, align 8
  br label %28, !llvm.loop !200

36:                                               ; preds = %28
  store i8 1, i8* @has_space, align 1
  br label %18, !llvm.loop !201

37:                                               ; preds = %22
  %38 = load i8*, i8** %3, align 8
  %39 = call zeroext i1 @startswith(i8* noundef %38, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.1068, i64 0, i64 0))
  br i1 %39, label %40, label %51

40:                                               ; preds = %37
  %41 = load i8*, i8** %3, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 2
  %43 = call i8* @strstr(i8* noundef %42, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.1069, i64 0, i64 0)) #13
  store i8* %43, i8** %7, align 8
  %44 = load i8*, i8** %7, align 8
  %45 = icmp ne i8* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %40
  %47 = load i8*, i8** %3, align 8
  call void (i8*, i8*, ...) @error_at(i8* noundef %47, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6.1070, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

48:                                               ; preds = %40
  %49 = load i8*, i8** %7, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 2
  store i8* %50, i8** %3, align 8
  store i8 1, i8* @has_space, align 1
  br label %18, !llvm.loop !201

51:                                               ; preds = %37
  %52 = load i8*, i8** %3, align 8
  %53 = load i8, i8* %52, align 1
  %54 = sext i8 %53 to i32
  %55 = icmp eq i32 %54, 10
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = load i8*, i8** %3, align 8
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %3, align 8
  store i8 1, i8* @at_bol, align 1
  store i8 0, i8* @has_space, align 1
  br label %18, !llvm.loop !201

59:                                               ; preds = %51
  %60 = call i16** @__ctype_b_loc() #15
  %61 = load i16*, i16** %60, align 8
  %62 = load i8*, i8** %3, align 8
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %61, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = and i32 %68, 8192
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %59
  %72 = load i8*, i8** %3, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %73, i8** %3, align 8
  store i8 1, i8* @has_space, align 1
  br label %18, !llvm.loop !201

74:                                               ; preds = %59
  %75 = load i8*, i8** %3, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 -1
  store i8* %76, i8** %8, align 8
  %77 = load i8*, i8** %3, align 8
  store i8* %77, i8** %9, align 8
  %78 = call i16** @__ctype_b_loc() #15
  %79 = load i16*, i16** %78, align 8
  %80 = load i8*, i8** %3, align 8
  %81 = load i8, i8* %80, align 1
  %82 = sext i8 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i16, i16* %79, i64 %83
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = and i32 %86, 2048
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %107, label %89

89:                                               ; preds = %74
  %90 = load i8*, i8** %3, align 8
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %92, 46
  br i1 %93, label %94, label %181

94:                                               ; preds = %89
  %95 = call i16** @__ctype_b_loc() #15
  %96 = load i16*, i16** %95, align 8
  %97 = load i8*, i8** %3, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  %99 = load i8, i8* %98, align 1
  %100 = sext i8 %99 to i32
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i16, i16* %96, i64 %101
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = and i32 %104, 2048
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %181

107:                                              ; preds = %94, %74
  %108 = load i8*, i8** %8, align 8
  %109 = load i8, i8* %108, align 1
  %110 = sext i8 %109 to i32
  %111 = icmp ne i32 %110, 35
  br i1 %111, label %112, label %181

112:                                              ; preds = %107
  %113 = load i8*, i8** %3, align 8
  %114 = getelementptr inbounds i8, i8* %113, i32 1
  store i8* %114, i8** %3, align 8
  store i8* %113, i8** %10, align 8
  br label %115

115:                                              ; preds = %166, %112
  %116 = load i8*, i8** %3, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 0
  %118 = load i8, i8* %117, align 1
  %119 = sext i8 %118 to i32
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %144

121:                                              ; preds = %115
  %122 = load i8*, i8** %3, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 1
  %124 = load i8, i8* %123, align 1
  %125 = sext i8 %124 to i32
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %144

127:                                              ; preds = %121
  %128 = load i8*, i8** %3, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 0
  %130 = load i8, i8* %129, align 1
  %131 = sext i8 %130 to i32
  %132 = call i8* @strchr(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.1071, i64 0, i64 0), i32 noundef %131) #13
  %133 = icmp ne i8* %132, null
  br i1 %133, label %134, label %144

134:                                              ; preds = %127
  %135 = load i8*, i8** %3, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 1
  %137 = load i8, i8* %136, align 1
  %138 = sext i8 %137 to i32
  %139 = call i8* @strchr(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8.1072, i64 0, i64 0), i32 noundef %138) #13
  %140 = icmp ne i8* %139, null
  br i1 %140, label %141, label %144

141:                                              ; preds = %134
  %142 = load i8*, i8** %3, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 2
  store i8* %143, i8** %3, align 8
  br label %166

144:                                              ; preds = %134, %127, %121, %115
  %145 = call i16** @__ctype_b_loc() #15
  %146 = load i16*, i16** %145, align 8
  %147 = load i8*, i8** %3, align 8
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i16, i16* %146, i64 %150
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  %154 = and i32 %153, 8
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %144
  %157 = load i8*, i8** %3, align 8
  %158 = load i8, i8* %157, align 1
  %159 = sext i8 %158 to i32
  %160 = icmp eq i32 %159, 46
  br i1 %160, label %161, label %164

161:                                              ; preds = %156, %144
  %162 = load i8*, i8** %3, align 8
  %163 = getelementptr inbounds i8, i8* %162, i32 1
  store i8* %163, i8** %3, align 8
  br label %165

164:                                              ; preds = %156
  br label %167

165:                                              ; preds = %161
  br label %166

166:                                              ; preds = %165, %141
  br label %115

167:                                              ; preds = %164
  %168 = load i8*, i8** %3, align 8
  %169 = load i8, i8* %168, align 1
  %170 = sext i8 %169 to i32
  %171 = icmp ne i32 %170, 95
  br i1 %171, label %172, label %178

172:                                              ; preds = %167
  %173 = load i8*, i8** %10, align 8
  %174 = load i8*, i8** %3, align 8
  %175 = call %struct.Token* @new_token(i32 noundef 5, i8* noundef %173, i8* noundef %174)
  %176 = load %struct.Token*, %struct.Token** %5, align 8
  %177 = getelementptr inbounds %struct.Token, %struct.Token* %176, i32 0, i32 1
  store %struct.Token* %175, %struct.Token** %177, align 8
  store %struct.Token* %175, %struct.Token** %5, align 8
  br label %18, !llvm.loop !201

178:                                              ; preds = %167
  %179 = load i8*, i8** %9, align 8
  store i8* %179, i8** %3, align 8
  store i8 1, i8* %6, align 1
  br label %180

180:                                              ; preds = %178
  br label %181

181:                                              ; preds = %180, %107, %94, %89
  %182 = load i8*, i8** %3, align 8
  %183 = load i8, i8* %182, align 1
  %184 = sext i8 %183 to i32
  %185 = icmp eq i32 %184, 34
  br i1 %185, label %186, label %198

186:                                              ; preds = %181
  %187 = load i8*, i8** %3, align 8
  %188 = load i8*, i8** %3, align 8
  %189 = call %struct.Token* @read_string_literal(i8* noundef %187, i8* noundef %188)
  %190 = load %struct.Token*, %struct.Token** %5, align 8
  %191 = getelementptr inbounds %struct.Token, %struct.Token* %190, i32 0, i32 1
  store %struct.Token* %189, %struct.Token** %191, align 8
  store %struct.Token* %189, %struct.Token** %5, align 8
  %192 = load %struct.Token*, %struct.Token** %5, align 8
  %193 = getelementptr inbounds %struct.Token, %struct.Token* %192, i32 0, i32 5
  %194 = load i32, i32* %193, align 8
  %195 = load i8*, i8** %3, align 8
  %196 = sext i32 %194 to i64
  %197 = getelementptr inbounds i8, i8* %195, i64 %196
  store i8* %197, i8** %3, align 8
  br label %18, !llvm.loop !201

198:                                              ; preds = %181
  %199 = load i8*, i8** %3, align 8
  %200 = call zeroext i1 @startswith(i8* noundef %199, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.1073, i64 0, i64 0))
  br i1 %200, label %201, label %214

201:                                              ; preds = %198
  %202 = load i8*, i8** %3, align 8
  %203 = load i8*, i8** %3, align 8
  %204 = getelementptr inbounds i8, i8* %203, i64 2
  %205 = call %struct.Token* @read_string_literal(i8* noundef %202, i8* noundef %204)
  %206 = load %struct.Token*, %struct.Token** %5, align 8
  %207 = getelementptr inbounds %struct.Token, %struct.Token* %206, i32 0, i32 1
  store %struct.Token* %205, %struct.Token** %207, align 8
  store %struct.Token* %205, %struct.Token** %5, align 8
  %208 = load %struct.Token*, %struct.Token** %5, align 8
  %209 = getelementptr inbounds %struct.Token, %struct.Token* %208, i32 0, i32 5
  %210 = load i32, i32* %209, align 8
  %211 = load i8*, i8** %3, align 8
  %212 = sext i32 %210 to i64
  %213 = getelementptr inbounds i8, i8* %211, i64 %212
  store i8* %213, i8** %3, align 8
  br label %18, !llvm.loop !201

214:                                              ; preds = %198
  %215 = load i8*, i8** %3, align 8
  %216 = call zeroext i1 @startswith(i8* noundef %215, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.1074, i64 0, i64 0))
  br i1 %216, label %217, label %230

217:                                              ; preds = %214
  %218 = load i8*, i8** %3, align 8
  %219 = load i8*, i8** %3, align 8
  %220 = getelementptr inbounds i8, i8* %219, i64 1
  %221 = call %struct.Token* @read_utf16_string_literal(i8* noundef %218, i8* noundef %220)
  %222 = load %struct.Token*, %struct.Token** %5, align 8
  %223 = getelementptr inbounds %struct.Token, %struct.Token* %222, i32 0, i32 1
  store %struct.Token* %221, %struct.Token** %223, align 8
  store %struct.Token* %221, %struct.Token** %5, align 8
  %224 = load %struct.Token*, %struct.Token** %5, align 8
  %225 = getelementptr inbounds %struct.Token, %struct.Token* %224, i32 0, i32 5
  %226 = load i32, i32* %225, align 8
  %227 = load i8*, i8** %3, align 8
  %228 = sext i32 %226 to i64
  %229 = getelementptr inbounds i8, i8* %227, i64 %228
  store i8* %229, i8** %3, align 8
  br label %18, !llvm.loop !201

230:                                              ; preds = %214
  %231 = load i8*, i8** %3, align 8
  %232 = call zeroext i1 @startswith(i8* noundef %231, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.1075, i64 0, i64 0))
  br i1 %232, label %233, label %247

233:                                              ; preds = %230
  %234 = load i8*, i8** %3, align 8
  %235 = load i8*, i8** %3, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 1
  %237 = load %struct.Type*, %struct.Type** @ty_int, align 8
  %238 = call %struct.Token* @read_utf32_string_literal(i8* noundef %234, i8* noundef %236, %struct.Type* noundef %237)
  %239 = load %struct.Token*, %struct.Token** %5, align 8
  %240 = getelementptr inbounds %struct.Token, %struct.Token* %239, i32 0, i32 1
  store %struct.Token* %238, %struct.Token** %240, align 8
  store %struct.Token* %238, %struct.Token** %5, align 8
  %241 = load %struct.Token*, %struct.Token** %5, align 8
  %242 = getelementptr inbounds %struct.Token, %struct.Token* %241, i32 0, i32 5
  %243 = load i32, i32* %242, align 8
  %244 = load i8*, i8** %3, align 8
  %245 = sext i32 %243 to i64
  %246 = getelementptr inbounds i8, i8* %244, i64 %245
  store i8* %246, i8** %3, align 8
  br label %18, !llvm.loop !201

247:                                              ; preds = %230
  %248 = load i8*, i8** %3, align 8
  %249 = call zeroext i1 @startswith(i8* noundef %248, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.1076, i64 0, i64 0))
  br i1 %249, label %250, label %264

250:                                              ; preds = %247
  %251 = load i8*, i8** %3, align 8
  %252 = load i8*, i8** %3, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 1
  %254 = load %struct.Type*, %struct.Type** @ty_uint, align 8
  %255 = call %struct.Token* @read_utf32_string_literal(i8* noundef %251, i8* noundef %253, %struct.Type* noundef %254)
  %256 = load %struct.Token*, %struct.Token** %5, align 8
  %257 = getelementptr inbounds %struct.Token, %struct.Token* %256, i32 0, i32 1
  store %struct.Token* %255, %struct.Token** %257, align 8
  store %struct.Token* %255, %struct.Token** %5, align 8
  %258 = load %struct.Token*, %struct.Token** %5, align 8
  %259 = getelementptr inbounds %struct.Token, %struct.Token* %258, i32 0, i32 5
  %260 = load i32, i32* %259, align 8
  %261 = load i8*, i8** %3, align 8
  %262 = sext i32 %260 to i64
  %263 = getelementptr inbounds i8, i8* %261, i64 %262
  store i8* %263, i8** %3, align 8
  br label %18, !llvm.loop !201

264:                                              ; preds = %247
  %265 = load i8*, i8** %3, align 8
  %266 = load i8, i8* %265, align 1
  %267 = sext i8 %266 to i32
  %268 = icmp eq i32 %267, 39
  br i1 %268, label %269, label %289

269:                                              ; preds = %264
  %270 = load i8*, i8** %3, align 8
  %271 = load i8*, i8** %3, align 8
  %272 = load %struct.Type*, %struct.Type** @ty_int, align 8
  %273 = call %struct.Token* @read_char_literal(i8* noundef %270, i8* noundef %271, %struct.Type* noundef %272)
  %274 = load %struct.Token*, %struct.Token** %5, align 8
  %275 = getelementptr inbounds %struct.Token, %struct.Token* %274, i32 0, i32 1
  store %struct.Token* %273, %struct.Token** %275, align 8
  store %struct.Token* %273, %struct.Token** %5, align 8
  %276 = load %struct.Token*, %struct.Token** %5, align 8
  %277 = getelementptr inbounds %struct.Token, %struct.Token* %276, i32 0, i32 2
  %278 = load i64, i64* %277, align 16
  %279 = trunc i64 %278 to i8
  %280 = sext i8 %279 to i64
  %281 = load %struct.Token*, %struct.Token** %5, align 8
  %282 = getelementptr inbounds %struct.Token, %struct.Token* %281, i32 0, i32 2
  store i64 %280, i64* %282, align 16
  %283 = load %struct.Token*, %struct.Token** %5, align 8
  %284 = getelementptr inbounds %struct.Token, %struct.Token* %283, i32 0, i32 5
  %285 = load i32, i32* %284, align 8
  %286 = load i8*, i8** %3, align 8
  %287 = sext i32 %285 to i64
  %288 = getelementptr inbounds i8, i8* %286, i64 %287
  store i8* %288, i8** %3, align 8
  br label %18, !llvm.loop !201

289:                                              ; preds = %264
  %290 = load i8*, i8** %3, align 8
  %291 = call zeroext i1 @startswith(i8* noundef %290, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.1077, i64 0, i64 0))
  br i1 %291, label %292, label %310

292:                                              ; preds = %289
  %293 = load i8*, i8** %3, align 8
  %294 = load i8*, i8** %3, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  %296 = load %struct.Type*, %struct.Type** @ty_ushort, align 8
  %297 = call %struct.Token* @read_char_literal(i8* noundef %293, i8* noundef %295, %struct.Type* noundef %296)
  %298 = load %struct.Token*, %struct.Token** %5, align 8
  %299 = getelementptr inbounds %struct.Token, %struct.Token* %298, i32 0, i32 1
  store %struct.Token* %297, %struct.Token** %299, align 8
  store %struct.Token* %297, %struct.Token** %5, align 8
  %300 = load %struct.Token*, %struct.Token** %5, align 8
  %301 = getelementptr inbounds %struct.Token, %struct.Token* %300, i32 0, i32 2
  %302 = load i64, i64* %301, align 16
  %303 = and i64 %302, 65535
  store i64 %303, i64* %301, align 16
  %304 = load %struct.Token*, %struct.Token** %5, align 8
  %305 = getelementptr inbounds %struct.Token, %struct.Token* %304, i32 0, i32 5
  %306 = load i32, i32* %305, align 8
  %307 = load i8*, i8** %3, align 8
  %308 = sext i32 %306 to i64
  %309 = getelementptr inbounds i8, i8* %307, i64 %308
  store i8* %309, i8** %3, align 8
  br label %18, !llvm.loop !201

310:                                              ; preds = %289
  %311 = load i8*, i8** %3, align 8
  %312 = call zeroext i1 @startswith(i8* noundef %311, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14.1078, i64 0, i64 0))
  br i1 %312, label %313, label %327

313:                                              ; preds = %310
  %314 = load i8*, i8** %3, align 8
  %315 = load i8*, i8** %3, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 1
  %317 = load %struct.Type*, %struct.Type** @ty_int, align 8
  %318 = call %struct.Token* @read_char_literal(i8* noundef %314, i8* noundef %316, %struct.Type* noundef %317)
  %319 = load %struct.Token*, %struct.Token** %5, align 8
  %320 = getelementptr inbounds %struct.Token, %struct.Token* %319, i32 0, i32 1
  store %struct.Token* %318, %struct.Token** %320, align 8
  store %struct.Token* %318, %struct.Token** %5, align 8
  %321 = load %struct.Token*, %struct.Token** %5, align 8
  %322 = getelementptr inbounds %struct.Token, %struct.Token* %321, i32 0, i32 5
  %323 = load i32, i32* %322, align 8
  %324 = load i8*, i8** %3, align 8
  %325 = sext i32 %323 to i64
  %326 = getelementptr inbounds i8, i8* %324, i64 %325
  store i8* %326, i8** %3, align 8
  br label %18, !llvm.loop !201

327:                                              ; preds = %310
  %328 = load i8*, i8** %3, align 8
  %329 = call zeroext i1 @startswith(i8* noundef %328, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.1079, i64 0, i64 0))
  br i1 %329, label %330, label %344

330:                                              ; preds = %327
  %331 = load i8*, i8** %3, align 8
  %332 = load i8*, i8** %3, align 8
  %333 = getelementptr inbounds i8, i8* %332, i64 1
  %334 = load %struct.Type*, %struct.Type** @ty_uint, align 8
  %335 = call %struct.Token* @read_char_literal(i8* noundef %331, i8* noundef %333, %struct.Type* noundef %334)
  %336 = load %struct.Token*, %struct.Token** %5, align 8
  %337 = getelementptr inbounds %struct.Token, %struct.Token* %336, i32 0, i32 1
  store %struct.Token* %335, %struct.Token** %337, align 8
  store %struct.Token* %335, %struct.Token** %5, align 8
  %338 = load %struct.Token*, %struct.Token** %5, align 8
  %339 = getelementptr inbounds %struct.Token, %struct.Token* %338, i32 0, i32 5
  %340 = load i32, i32* %339, align 8
  %341 = load i8*, i8** %3, align 8
  %342 = sext i32 %340 to i64
  %343 = getelementptr inbounds i8, i8* %341, i64 %342
  store i8* %343, i8** %3, align 8
  br label %18, !llvm.loop !201

344:                                              ; preds = %327
  %345 = load i8*, i8** %3, align 8
  %346 = load i8*, i8** %8, align 8
  %347 = load i8, i8* %6, align 1
  %348 = trunc i8 %347 to i1
  %349 = call i32 @read_ident(i8* noundef %345, i8* noundef %346, i1 noundef zeroext %348)
  store i32 %349, i32* %11, align 4
  %350 = load i32, i32* %11, align 4
  %351 = icmp ne i32 %350, 0
  br i1 %351, label %352, label %367

352:                                              ; preds = %344
  %353 = load i8*, i8** %3, align 8
  %354 = load i8*, i8** %3, align 8
  %355 = load i32, i32* %11, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i8, i8* %354, i64 %356
  %358 = call %struct.Token* @new_token(i32 noundef 0, i8* noundef %353, i8* noundef %357)
  %359 = load %struct.Token*, %struct.Token** %5, align 8
  %360 = getelementptr inbounds %struct.Token, %struct.Token* %359, i32 0, i32 1
  store %struct.Token* %358, %struct.Token** %360, align 8
  store %struct.Token* %358, %struct.Token** %5, align 8
  %361 = load %struct.Token*, %struct.Token** %5, align 8
  %362 = getelementptr inbounds %struct.Token, %struct.Token* %361, i32 0, i32 5
  %363 = load i32, i32* %362, align 8
  %364 = load i8*, i8** %3, align 8
  %365 = sext i32 %363 to i64
  %366 = getelementptr inbounds i8, i8* %364, i64 %365
  store i8* %366, i8** %3, align 8
  br label %18, !llvm.loop !201

367:                                              ; preds = %344
  %368 = load i8*, i8** %3, align 8
  %369 = call i32 @read_punct(i8* noundef %368)
  store i32 %369, i32* %12, align 4
  %370 = load i32, i32* %12, align 4
  %371 = icmp ne i32 %370, 0
  br i1 %371, label %372, label %387

372:                                              ; preds = %367
  %373 = load i8*, i8** %3, align 8
  %374 = load i8*, i8** %3, align 8
  %375 = load i32, i32* %12, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds i8, i8* %374, i64 %376
  %378 = call %struct.Token* @new_token(i32 noundef 1, i8* noundef %373, i8* noundef %377)
  %379 = load %struct.Token*, %struct.Token** %5, align 8
  %380 = getelementptr inbounds %struct.Token, %struct.Token* %379, i32 0, i32 1
  store %struct.Token* %378, %struct.Token** %380, align 8
  store %struct.Token* %378, %struct.Token** %5, align 8
  %381 = load %struct.Token*, %struct.Token** %5, align 8
  %382 = getelementptr inbounds %struct.Token, %struct.Token* %381, i32 0, i32 5
  %383 = load i32, i32* %382, align 8
  %384 = load i8*, i8** %3, align 8
  %385 = sext i32 %383 to i64
  %386 = getelementptr inbounds i8, i8* %384, i64 %385
  store i8* %386, i8** %3, align 8
  br label %18, !llvm.loop !201

387:                                              ; preds = %367
  %388 = load i8*, i8** %3, align 8
  call void (i8*, i8*, ...) @error_at(i8* noundef %388, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16.1080, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

389:                                              ; preds = %18
  %390 = load i8*, i8** %3, align 8
  %391 = load i8*, i8** %3, align 8
  %392 = call %struct.Token* @new_token(i32 noundef 6, i8* noundef %390, i8* noundef %391)
  %393 = load %struct.Token*, %struct.Token** %5, align 8
  %394 = getelementptr inbounds %struct.Token, %struct.Token* %393, i32 0, i32 1
  store %struct.Token* %392, %struct.Token** %394, align 8
  store %struct.Token* %392, %struct.Token** %5, align 8
  %395 = getelementptr inbounds %struct.Token, %struct.Token* %4, i32 0, i32 1
  %396 = load %struct.Token*, %struct.Token** %395, align 8
  call void @add_line_numbers(%struct.Token* noundef %396)
  %397 = getelementptr inbounds %struct.Token, %struct.Token* %4, i32 0, i32 1
  %398 = load %struct.Token*, %struct.Token** %397, align 8
  ret %struct.Token* %398
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @read_string_literal(i8* noundef %0, i8* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %struct.Token*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  %12 = call i8* @string_literal_end(i8* noundef %11)
  store i8* %12, i8** %5, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = ptrtoint i8* %13 to i64
  %16 = ptrtoint i8* %14 to i64
  %17 = sub i64 %15, %16
  %18 = call noalias i8* @calloc(i64 noundef 1, i64 noundef %17) #14
  store i8* %18, i8** %6, align 8
  %19 = load i8*, i8** %6, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.90.1105, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

22:                                               ; preds = %2
  store i32 0, i32* %7, align 4
  %23 = load i8*, i8** %4, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %24, i8** %8, align 8
  br label %25

25:                                               ; preds = %53, %22
  %26 = load i8*, i8** %8, align 8
  %27 = load i8*, i8** %5, align 8
  %28 = icmp ult i8* %26, %27
  br i1 %28, label %29, label %54

29:                                               ; preds = %25
  %30 = load i8*, i8** %8, align 8
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp eq i32 %32, 92
  br i1 %33, label %34, label %44

34:                                               ; preds = %29
  %35 = load i8*, i8** %8, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  %37 = call i32 @read_escaped_char(i8** noundef %8, i8* noundef %36)
  %38 = trunc i32 %37 to i8
  %39 = load i8*, i8** %6, align 8
  %40 = load i32, i32* %7, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %7, align 4
  %42 = sext i32 %40 to i64
  %43 = getelementptr inbounds i8, i8* %39, i64 %42
  store i8 %38, i8* %43, align 1
  br label %53

44:                                               ; preds = %29
  %45 = load i8*, i8** %8, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %8, align 8
  %47 = load i8, i8* %45, align 1
  %48 = load i8*, i8** %6, align 8
  %49 = load i32, i32* %7, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %7, align 4
  %51 = sext i32 %49 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  store i8 %47, i8* %52, align 1
  br label %53

53:                                               ; preds = %44, %34
  br label %25, !llvm.loop !202

54:                                               ; preds = %25
  %55 = load i8*, i8** %3, align 8
  %56 = load i8*, i8** %5, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  %58 = call %struct.Token* @new_token(i32 noundef 3, i8* noundef %55, i8* noundef %57)
  store %struct.Token* %58, %struct.Token** %9, align 8
  %59 = load %struct.Type*, %struct.Type** @ty_char, align 8
  %60 = load i32, i32* %7, align 4
  %61 = add nsw i32 %60, 1
  %62 = call %struct.Type* @array_of(%struct.Type* noundef %59, i32 noundef %61)
  %63 = load %struct.Token*, %struct.Token** %9, align 8
  %64 = getelementptr inbounds %struct.Token, %struct.Token* %63, i32 0, i32 6
  store %struct.Type* %62, %struct.Type** %64, align 16
  %65 = load i8*, i8** %6, align 8
  %66 = load %struct.Token*, %struct.Token** %9, align 8
  %67 = getelementptr inbounds %struct.Token, %struct.Token* %66, i32 0, i32 7
  store i8* %65, i8** %67, align 8
  %68 = load %struct.Token*, %struct.Token** %9, align 8
  ret %struct.Token* %68
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Token* @read_char_literal(i8* noundef %0, i8* noundef %1, %struct.Type* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca %struct.Token*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.Type* %2, %struct.Type** %6, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 1
  store i8* %12, i8** %7, align 8
  %13 = load i8*, i8** %7, align 8
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = load i8*, i8** %4, align 8
  call void (i8*, i8*, ...) @error_at(i8* noundef %18, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.91.1104, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

19:                                               ; preds = %3
  %20 = load i8*, i8** %7, align 8
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %22, 92
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = load i8*, i8** %7, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = call i32 @read_escaped_char(i8** noundef %7, i8* noundef %26)
  store i32 %27, i32* %8, align 4
  br label %31

28:                                               ; preds = %19
  %29 = load i8*, i8** %7, align 8
  %30 = call i32 @decode_utf8(i8** noundef %7, i8* noundef %29)
  store i32 %30, i32* %8, align 4
  br label %31

31:                                               ; preds = %28, %24
  %32 = load i8*, i8** %7, align 8
  %33 = call i8* @strchr(i8* noundef %32, i32 noundef 39) #13
  store i8* %33, i8** %9, align 8
  %34 = load i8*, i8** %9, align 8
  %35 = icmp ne i8* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = load i8*, i8** %7, align 8
  call void (i8*, i8*, ...) @error_at(i8* noundef %37, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.91.1104, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

38:                                               ; preds = %31
  %39 = load i8*, i8** %4, align 8
  %40 = load i8*, i8** %9, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  %42 = call %struct.Token* @new_token(i32 noundef 4, i8* noundef %39, i8* noundef %41)
  store %struct.Token* %42, %struct.Token** %10, align 8
  %43 = load i32, i32* %8, align 4
  %44 = sext i32 %43 to i64
  %45 = load %struct.Token*, %struct.Token** %10, align 8
  %46 = getelementptr inbounds %struct.Token, %struct.Token* %45, i32 0, i32 2
  store i64 %44, i64* %46, align 16
  %47 = load %struct.Type*, %struct.Type** %6, align 8
  %48 = load %struct.Token*, %struct.Token** %10, align 8
  %49 = getelementptr inbounds %struct.Token, %struct.Token* %48, i32 0, i32 6
  store %struct.Type* %47, %struct.Type** %49, align 16
  %50 = load %struct.Token*, %struct.Token** %10, align 8
  ret %struct.Token* %50
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_ident(i8* noundef %0, i8* noundef %1, i1 noundef zeroext %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  %11 = zext i1 %2 to i8
  store i8 %11, i8* %7, align 1
  %12 = load i8*, i8** %5, align 8
  store i8* %12, i8** %8, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = call i32 @decode_utf8(i8** noundef %8, i8* noundef %13)
  store i32 %14, i32* %9, align 4
  %15 = load i8*, i8** %6, align 8
  %16 = load i8, i8* %15, align 1
  %17 = sext i8 %16 to i32
  %18 = icmp eq i32 %17, 35
  br i1 %18, label %22, label %19

19:                                               ; preds = %3
  %20 = load i8, i8* %7, align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %27

22:                                               ; preds = %19, %3
  %23 = load i32, i32* %9, align 4
  %24 = call zeroext i1 @is_ident3(i32 noundef %23)
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  store i32 0, i32* %4, align 4
  br label %47

26:                                               ; preds = %22
  br label %32

27:                                               ; preds = %19
  %28 = load i32, i32* %9, align 4
  %29 = call zeroext i1 @is_ident1(i32 noundef %28)
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  store i32 0, i32* %4, align 4
  br label %47

31:                                               ; preds = %27
  br label %32

32:                                               ; preds = %31, %26
  br label %33

33:                                               ; preds = %45, %32
  %34 = load i8*, i8** %8, align 8
  %35 = call i32 @decode_utf8(i8** noundef %10, i8* noundef %34)
  store i32 %35, i32* %9, align 4
  %36 = load i32, i32* %9, align 4
  %37 = call zeroext i1 @is_ident2(i32 noundef %36)
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = load i8*, i8** %8, align 8
  %40 = load i8*, i8** %5, align 8
  %41 = ptrtoint i8* %39 to i64
  %42 = ptrtoint i8* %40 to i64
  %43 = sub i64 %41, %42
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %4, align 4
  br label %47

45:                                               ; preds = %33
  %46 = load i8*, i8** %10, align 8
  store i8* %46, i8** %8, align 8
  br label %33

47:                                               ; preds = %38, %30, %25
  %48 = load i32, i32* %4, align 4
  ret i32 %48
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_punct(i8* noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %24, %1
  %6 = load i32, i32* %4, align 4
  %7 = sext i32 %6 to i64
  %8 = icmp ult i64 %7, 23
  br i1 %8, label %9, label %27

9:                                                ; preds = %5
  %10 = load i8*, i8** %3, align 8
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [23 x i8*], [23 x i8*]* @read_punct.kw, i64 0, i64 %12
  %14 = load i8*, i8** %13, align 8
  %15 = call zeroext i1 @startswith(i8* noundef %10, i8* noundef %14)
  br i1 %15, label %16, label %23

16:                                               ; preds = %9
  %17 = load i32, i32* %4, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [23 x i8*], [23 x i8*]* @read_punct.kw, i64 0, i64 %18
  %20 = load i8*, i8** %19, align 8
  %21 = call i64 @strlen(i8* noundef %20) #13
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %2, align 4
  br label %41

23:                                               ; preds = %9
  br label %24

24:                                               ; preds = %23
  %25 = load i32, i32* %4, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %4, align 4
  br label %5, !llvm.loop !203

27:                                               ; preds = %5
  %28 = call i16** @__ctype_b_loc() #15
  %29 = load i16*, i16** %28, align 8
  %30 = load i8*, i8** %3, align 8
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i16, i16* %29, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = and i32 %36, 4
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i64
  %40 = select i1 %38, i32 1, i32 0
  store i32 %40, i32* %2, align 4
  br label %41

41:                                               ; preds = %27, %16
  %42 = load i32, i32* %2, align 4
  ret i32 %42
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_line_numbers(%struct.Token* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %struct.Token* %0, %struct.Token** %2, align 8
  %5 = load %struct.File*, %struct.File** @current_file, align 8
  %6 = getelementptr inbounds %struct.File, %struct.File* %5, i32 0, i32 2
  %7 = load i8*, i8** %6, align 8
  store i8* %7, i8** %3, align 8
  store i32 1, i32* %4, align 4
  br label %8

8:                                                ; preds = %30, %1
  %9 = load i8*, i8** %3, align 8
  %10 = load %struct.Token*, %struct.Token** %2, align 8
  %11 = getelementptr inbounds %struct.Token, %struct.Token* %10, i32 0, i32 4
  %12 = load i8*, i8** %11, align 16
  %13 = icmp eq i8* %9, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = load i32, i32* %4, align 4
  %16 = load %struct.Token*, %struct.Token** %2, align 8
  %17 = getelementptr inbounds %struct.Token, %struct.Token* %16, i32 0, i32 10
  store i32 %15, i32* %17, align 16
  %18 = load %struct.Token*, %struct.Token** %2, align 8
  %19 = getelementptr inbounds %struct.Token, %struct.Token* %18, i32 0, i32 1
  %20 = load %struct.Token*, %struct.Token** %19, align 8
  store %struct.Token* %20, %struct.Token** %2, align 8
  br label %21

21:                                               ; preds = %14, %8
  %22 = load i8*, i8** %3, align 8
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 10
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = load i32, i32* %4, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %4, align 4
  br label %29

29:                                               ; preds = %26, %21
  br label %30

30:                                               ; preds = %29
  %31 = load i8*, i8** %3, align 8
  %32 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %32, i8** %3, align 8
  %33 = load i8, i8* %31, align 1
  %34 = icmp ne i8 %33, 0
  br i1 %34, label %8, label %35, !llvm.loop !204

35:                                               ; preds = %30
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.File** @get_input_files() #0 {
  %1 = load %struct.File**, %struct.File*** @input_files, align 8
  ret %struct.File** %1
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.File* @new_file(i8* noundef %0, i32 noundef %1, i8* noundef %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.File*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %8 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 40) #14
  %9 = bitcast i8* %8 to %struct.File*
  store %struct.File* %9, %struct.File** %7, align 8
  %10 = load %struct.File*, %struct.File** %7, align 8
  %11 = icmp eq %struct.File* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17.1110, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

13:                                               ; preds = %3
  %14 = load i8*, i8** %4, align 8
  %15 = load %struct.File*, %struct.File** %7, align 8
  %16 = getelementptr inbounds %struct.File, %struct.File* %15, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = load %struct.File*, %struct.File** %7, align 8
  %19 = getelementptr inbounds %struct.File, %struct.File* %18, i32 0, i32 3
  store i8* %17, i8** %19, align 8
  %20 = load i32, i32* %5, align 4
  %21 = load %struct.File*, %struct.File** %7, align 8
  %22 = getelementptr inbounds %struct.File, %struct.File* %21, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  %23 = load i8*, i8** %6, align 8
  %24 = load %struct.File*, %struct.File** %7, align 8
  %25 = getelementptr inbounds %struct.File, %struct.File* %24, i32 0, i32 2
  store i8* %23, i8** %25, align 8
  %26 = load %struct.File*, %struct.File** %7, align 8
  ret %struct.File* %26
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Token* @tokenize_file(i8* noundef %0) #0 {
  %2 = alloca %struct.Token*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.File*, align 8
  store i8* %0, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call i8* @read_file(i8* noundef %6)
  store i8* %7, i8** %4, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  store %struct.Token* null, %struct.Token** %2, align 8
  br label %53

11:                                               ; preds = %1
  %12 = load i8*, i8** %4, align 8
  %13 = call i32 @memcmp(i8* noundef %12, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.1113, i64 0, i64 0), i64 noundef 3) #13
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = load i8*, i8** %4, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 3
  store i8* %17, i8** %4, align 8
  br label %18

18:                                               ; preds = %15, %11
  %19 = load i8*, i8** %4, align 8
  call void @canonicalize_newline(i8* noundef %19)
  %20 = load i8*, i8** %4, align 8
  call void @remove_backslash_newline(i8* noundef %20)
  %21 = load i8*, i8** %4, align 8
  call void @convert_universal_chars(i8* noundef %21)
  %22 = load i8*, i8** %3, align 8
  %23 = load i32, i32* @tokenize_file.file_no, align 4
  %24 = add nsw i32 %23, 1
  %25 = load i8*, i8** %4, align 8
  %26 = call %struct.File* @new_file(i8* noundef %22, i32 noundef %24, i8* noundef %25)
  store %struct.File* %26, %struct.File** %5, align 8
  %27 = load %struct.File**, %struct.File*** @input_files, align 8
  %28 = bitcast %struct.File** %27 to i8*
  %29 = load i32, i32* @tokenize_file.file_no, align 4
  %30 = add nsw i32 %29, 2
  %31 = sext i32 %30 to i64
  %32 = mul i64 8, %31
  %33 = call i8* @realloc(i8* noundef %28, i64 noundef %32) #14
  %34 = bitcast i8* %33 to %struct.File**
  store %struct.File** %34, %struct.File*** @input_files, align 8
  %35 = load %struct.File**, %struct.File*** @input_files, align 8
  %36 = icmp eq %struct.File** %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %18
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19.1114, i64 0, i64 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.993, i64 0, i64 0)) #11
  unreachable

38:                                               ; preds = %18
  %39 = load %struct.File*, %struct.File** %5, align 8
  %40 = load %struct.File**, %struct.File*** @input_files, align 8
  %41 = load i32, i32* @tokenize_file.file_no, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.File*, %struct.File** %40, i64 %42
  store %struct.File* %39, %struct.File** %43, align 8
  %44 = load %struct.File**, %struct.File*** @input_files, align 8
  %45 = load i32, i32* @tokenize_file.file_no, align 4
  %46 = add nsw i32 %45, 1
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.File*, %struct.File** %44, i64 %47
  store %struct.File* null, %struct.File** %48, align 8
  %49 = load i32, i32* @tokenize_file.file_no, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* @tokenize_file.file_no, align 4
  %51 = load %struct.File*, %struct.File** %5, align 8
  %52 = call %struct.Token* @tokenize(%struct.File* noundef %51)
  store %struct.Token* %52, %struct.Token** %2, align 8
  br label %53

53:                                               ; preds = %38, %10
  %54 = load %struct.Token*, %struct.Token** %2, align 8
  ret %struct.Token* %54
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @read_file(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca [4096 x i8], align 16
  %9 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = call i32 @strcmp(i8* noundef %10, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.115.1117, i64 0, i64 0)) #13
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %1
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %14, %struct._IO_FILE** %4, align 8
  br label %22

15:                                               ; preds = %1
  %16 = load i8*, i8** %3, align 8
  %17 = call noalias %struct._IO_FILE* @fopen(i8* noundef %16, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.116.1118, i64 0, i64 0))
  store %struct._IO_FILE* %17, %struct._IO_FILE** %4, align 8
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %19 = icmp ne %struct._IO_FILE* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  store i8* null, i8** %2, align 8
  br label %67

21:                                               ; preds = %15
  br label %22

22:                                               ; preds = %21, %13
  %23 = call noalias %struct._IO_FILE* @open_memstream(i8** noundef %5, i64* noundef %6) #14
  store %struct._IO_FILE* %23, %struct._IO_FILE** %7, align 8
  br label %24

24:                                               ; preds = %32, %22
  %25 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %27 = call i64 @fread(i8* noundef %25, i64 noundef 1, i64 noundef 4096, %struct._IO_FILE* noundef %26)
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %9, align 4
  %29 = load i32, i32* %9, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  br label %38

32:                                               ; preds = %24
  %33 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %34 = load i32, i32* %9, align 4
  %35 = sext i32 %34 to i64
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %37 = call i64 @fwrite(i8* noundef %33, i64 noundef 1, i64 noundef %35, %struct._IO_FILE* noundef %36)
  br label %24

38:                                               ; preds = %31
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = icmp ne %struct._IO_FILE* %39, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %44 = call i32 @fclose(%struct._IO_FILE* noundef %43)
  br label %45

45:                                               ; preds = %42, %38
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %47 = call i32 @fflush(%struct._IO_FILE* noundef %46)
  %48 = load i64, i64* %6, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %45
  %51 = load i8*, i8** %5, align 8
  %52 = load i64, i64* %6, align 8
  %53 = sub i64 %52, 1
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = icmp ne i32 %56, 10
  br i1 %57, label %58, label %61

58:                                               ; preds = %50, %45
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %60 = call i32 @fputc(i32 noundef 10, %struct._IO_FILE* noundef %59)
  br label %61

61:                                               ; preds = %58, %50
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %63 = call i32 @fputc(i32 noundef 0, %struct._IO_FILE* noundef %62)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %65 = call i32 @fclose(%struct._IO_FILE* noundef %64)
  %66 = load i8*, i8** %5, align 8
  store i8* %66, i8** %2, align 8
  br label %67

67:                                               ; preds = %61, %20
  %68 = load i8*, i8** %2, align 8
  ret i8* %68
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @canonicalize_newline(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %66, %1
  %6 = load i8*, i8** %2, align 8
  %7 = load i32, i32* %3, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %6, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %12, label %67

12:                                               ; preds = %5
  %13 = load i8*, i8** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = icmp eq i32 %18, 13
  br i1 %19, label %20, label %37

20:                                               ; preds = %12
  %21 = load i8*, i8** %2, align 8
  %22 = load i32, i32* %3, align 4
  %23 = add nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = icmp eq i32 %27, 10
  br i1 %28, label %29, label %37

29:                                               ; preds = %20
  %30 = load i32, i32* %3, align 4
  %31 = add nsw i32 %30, 2
  store i32 %31, i32* %3, align 4
  %32 = load i8*, i8** %2, align 8
  %33 = load i32, i32* %4, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %4, align 4
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  store i8 10, i8* %36, align 1
  br label %66

37:                                               ; preds = %20, %12
  %38 = load i8*, i8** %2, align 8
  %39 = load i32, i32* %3, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp eq i32 %43, 13
  br i1 %44, label %45, label %53

45:                                               ; preds = %37
  %46 = load i32, i32* %3, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %3, align 4
  %48 = load i8*, i8** %2, align 8
  %49 = load i32, i32* %4, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %4, align 4
  %51 = sext i32 %49 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  store i8 10, i8* %52, align 1
  br label %65

53:                                               ; preds = %37
  %54 = load i8*, i8** %2, align 8
  %55 = load i32, i32* %3, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %3, align 4
  %57 = sext i32 %55 to i64
  %58 = getelementptr inbounds i8, i8* %54, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = load i8*, i8** %2, align 8
  %61 = load i32, i32* %4, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %4, align 4
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  store i8 %59, i8* %64, align 1
  br label %65

65:                                               ; preds = %53, %45
  br label %66

66:                                               ; preds = %65, %29
  br label %5, !llvm.loop !205

67:                                               ; preds = %5
  %68 = load i8*, i8** %2, align 8
  %69 = load i32, i32* %4, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  store i8 0, i8* %71, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @remove_backslash_newline(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %6

6:                                                ; preds = %81, %1
  %7 = load i8*, i8** %2, align 8
  %8 = load i32, i32* %3, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %6
  %14 = load i8*, i8** %2, align 8
  %15 = load i32, i32* %3, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp eq i32 %19, 92
  br i1 %20, label %21, label %35

21:                                               ; preds = %13
  %22 = load i8*, i8** %2, align 8
  %23 = load i32, i32* %3, align 4
  %24 = add nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %35

30:                                               ; preds = %21
  %31 = load i32, i32* %3, align 4
  %32 = add nsw i32 %31, 2
  store i32 %32, i32* %3, align 4
  %33 = load i32, i32* %5, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %5, align 4
  br label %81

35:                                               ; preds = %21, %13
  %36 = load i8*, i8** %2, align 8
  %37 = load i32, i32* %3, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = sext i8 %40 to i32
  %42 = icmp eq i32 %41, 10
  br i1 %42, label %43, label %68

43:                                               ; preds = %35
  %44 = load i8*, i8** %2, align 8
  %45 = load i32, i32* %3, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %3, align 4
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = load i8*, i8** %2, align 8
  %51 = load i32, i32* %4, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %4, align 4
  %53 = sext i32 %51 to i64
  %54 = getelementptr inbounds i8, i8* %50, i64 %53
  store i8 %49, i8* %54, align 1
  br label %55

55:                                               ; preds = %64, %43
  %56 = load i32, i32* %5, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %67

58:                                               ; preds = %55
  %59 = load i8*, i8** %2, align 8
  %60 = load i32, i32* %4, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %4, align 4
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds i8, i8* %59, i64 %62
  store i8 10, i8* %63, align 1
  br label %64

64:                                               ; preds = %58
  %65 = load i32, i32* %5, align 4
  %66 = add nsw i32 %65, -1
  store i32 %66, i32* %5, align 4
  br label %55, !llvm.loop !206

67:                                               ; preds = %55
  br label %80

68:                                               ; preds = %35
  %69 = load i8*, i8** %2, align 8
  %70 = load i32, i32* %3, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %3, align 4
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds i8, i8* %69, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = load i8*, i8** %2, align 8
  %76 = load i32, i32* %4, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %4, align 4
  %78 = sext i32 %76 to i64
  %79 = getelementptr inbounds i8, i8* %75, i64 %78
  store i8 %74, i8* %79, align 1
  br label %80

80:                                               ; preds = %68, %67
  br label %81

81:                                               ; preds = %80, %30
  br label %6, !llvm.loop !207

82:                                               ; preds = %6
  br label %83

83:                                               ; preds = %92, %82
  %84 = load i32, i32* %5, align 4
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %95

86:                                               ; preds = %83
  %87 = load i8*, i8** %2, align 8
  %88 = load i32, i32* %4, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %4, align 4
  %90 = sext i32 %88 to i64
  %91 = getelementptr inbounds i8, i8* %87, i64 %90
  store i8 10, i8* %91, align 1
  br label %92

92:                                               ; preds = %86
  %93 = load i32, i32* %5, align 4
  %94 = add nsw i32 %93, -1
  store i32 %94, i32* %5, align 4
  br label %83, !llvm.loop !208

95:                                               ; preds = %83
  %96 = load i8*, i8** %2, align 8
  %97 = load i32, i32* %4, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %96, i64 %98
  store i8 0, i8* %99, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @convert_universal_chars(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %6 = load i8*, i8** %2, align 8
  store i8* %6, i8** %3, align 8
  br label %7

7:                                                ; preds = %86, %1
  %8 = load i8*, i8** %2, align 8
  %9 = load i8, i8* %8, align 1
  %10 = icmp ne i8 %9, 0
  br i1 %10, label %11, label %87

11:                                               ; preds = %7
  %12 = load i8*, i8** %2, align 8
  %13 = call zeroext i1 @startswith(i8* noundef %12, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117.1115, i64 0, i64 0))
  br i1 %13, label %14, label %36

14:                                               ; preds = %11
  %15 = load i8*, i8** %2, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 2
  %17 = call i32 @read_universal_char(i8* noundef %16, i32 noundef 4)
  store i32 %17, i32* %4, align 4
  %18 = load i32, i32* %4, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %14
  %21 = load i8*, i8** %2, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 6
  store i8* %22, i8** %2, align 8
  %23 = load i8*, i8** %3, align 8
  %24 = load i32, i32* %4, align 4
  %25 = call i32 @encode_utf8(i8* noundef %23, i32 noundef %24)
  %26 = load i8*, i8** %3, align 8
  %27 = sext i32 %25 to i64
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  store i8* %28, i8** %3, align 8
  br label %35

29:                                               ; preds = %14
  %30 = load i8*, i8** %2, align 8
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %2, align 8
  %32 = load i8, i8* %30, align 1
  %33 = load i8*, i8** %3, align 8
  %34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %34, i8** %3, align 8
  store i8 %32, i8* %33, align 1
  br label %35

35:                                               ; preds = %29, %20
  br label %86

36:                                               ; preds = %11
  %37 = load i8*, i8** %2, align 8
  %38 = call zeroext i1 @startswith(i8* noundef %37, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.118.1116, i64 0, i64 0))
  br i1 %38, label %39, label %61

39:                                               ; preds = %36
  %40 = load i8*, i8** %2, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 2
  %42 = call i32 @read_universal_char(i8* noundef %41, i32 noundef 8)
  store i32 %42, i32* %5, align 4
  %43 = load i32, i32* %5, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %54

45:                                               ; preds = %39
  %46 = load i8*, i8** %2, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 10
  store i8* %47, i8** %2, align 8
  %48 = load i8*, i8** %3, align 8
  %49 = load i32, i32* %5, align 4
  %50 = call i32 @encode_utf8(i8* noundef %48, i32 noundef %49)
  %51 = load i8*, i8** %3, align 8
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  store i8* %53, i8** %3, align 8
  br label %60

54:                                               ; preds = %39
  %55 = load i8*, i8** %2, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %2, align 8
  %57 = load i8, i8* %55, align 1
  %58 = load i8*, i8** %3, align 8
  %59 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %59, i8** %3, align 8
  store i8 %57, i8* %58, align 1
  br label %60

60:                                               ; preds = %54, %45
  br label %85

61:                                               ; preds = %36
  %62 = load i8*, i8** %2, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 0
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = icmp eq i32 %65, 92
  br i1 %66, label %67, label %78

67:                                               ; preds = %61
  %68 = load i8*, i8** %2, align 8
  %69 = getelementptr inbounds i8, i8* %68, i32 1
  store i8* %69, i8** %2, align 8
  %70 = load i8, i8* %68, align 1
  %71 = load i8*, i8** %3, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %3, align 8
  store i8 %70, i8* %71, align 1
  %73 = load i8*, i8** %2, align 8
  %74 = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %74, i8** %2, align 8
  %75 = load i8, i8* %73, align 1
  %76 = load i8*, i8** %3, align 8
  %77 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %77, i8** %3, align 8
  store i8 %75, i8* %76, align 1
  br label %84

78:                                               ; preds = %61
  %79 = load i8*, i8** %2, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %80, i8** %2, align 8
  %81 = load i8, i8* %79, align 1
  %82 = load i8*, i8** %3, align 8
  %83 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %83, i8** %3, align 8
  store i8 %81, i8* %82, align 1
  br label %84

84:                                               ; preds = %78, %67
  br label %85

85:                                               ; preds = %84, %60
  br label %86

86:                                               ; preds = %85, %35
  br label %7, !llvm.loop !209

87:                                               ; preds = %7
  %88 = load i8*, i8** %3, align 8
  store i8 0, i8* %88, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @read_universal_char(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %8

8:                                                ; preds = %38, %2
  %9 = load i32, i32* %7, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %41

12:                                               ; preds = %8
  %13 = call i16** @__ctype_b_loc() #15
  %14 = load i16*, i16** %13, align 8
  %15 = load i8*, i8** %4, align 8
  %16 = load i32, i32* %7, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %14, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = and i32 %24, 4096
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %12
  store i32 0, i32* %3, align 4
  br label %43

28:                                               ; preds = %12
  %29 = load i32, i32* %6, align 4
  %30 = shl i32 %29, 4
  %31 = load i8*, i8** %4, align 8
  %32 = load i32, i32* %7, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = call i32 @from_hex(i8 noundef signext %35)
  %37 = or i32 %30, %36
  store i32 %37, i32* %6, align 4
  br label %38

38:                                               ; preds = %28
  %39 = load i32, i32* %7, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %7, align 4
  br label %8, !llvm.loop !210

41:                                               ; preds = %8
  %42 = load i32, i32* %6, align 4
  store i32 %42, i32* %3, align 4
  br label %43

43:                                               ; preds = %41, %27
  %44 = load i32, i32* %3, align 4
  ret i32 %44
}

declare i64 @fread(i8* noundef, i64 noundef, i64 noundef, %struct._IO_FILE* noundef) #5

declare i32 @fflush(%struct._IO_FILE* noundef) #5

declare i32 @fputc(i32 noundef, %struct._IO_FILE* noundef) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @is_integer(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca i32, align 4
  store %struct.Type* %0, %struct.Type** %2, align 8
  %4 = load %struct.Type*, %struct.Type** %2, align 8
  %5 = getelementptr inbounds %struct.Type, %struct.Type* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* %3, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %24, label %9

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = load i32, i32* %3, align 4
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %24, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = load i32, i32* %3, align 4
  %20 = icmp eq i32 %19, 5
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = load i32, i32* %3, align 4
  %23 = icmp eq i32 %22, 9
  br label %24

24:                                               ; preds = %21, %18, %15, %12, %9, %1
  %25 = phi i1 [ true, %18 ], [ true, %15 ], [ true, %12 ], [ true, %9 ], [ true, %1 ], [ %23, %21 ]
  ret i1 %25
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @is_flonum(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %3 = load %struct.Type*, %struct.Type** %2, align 8
  %4 = getelementptr inbounds %struct.Type, %struct.Type* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = load %struct.Type*, %struct.Type** %2, align 8
  %9 = getelementptr inbounds %struct.Type, %struct.Type* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 7
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = load %struct.Type*, %struct.Type** %2, align 8
  %14 = getelementptr inbounds %struct.Type, %struct.Type* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 8
  br label %17

17:                                               ; preds = %12, %7, %1
  %18 = phi i1 [ true, %7 ], [ true, %1 ], [ %16, %12 ]
  ret i1 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @is_numeric(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %3 = load %struct.Type*, %struct.Type** %2, align 8
  %4 = call zeroext i1 @is_integer(%struct.Type* noundef %3)
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load %struct.Type*, %struct.Type** %2, align 8
  %7 = call zeroext i1 @is_flonum(%struct.Type* noundef %6)
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @is_compatible(%struct.Type* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Type*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %4, align 8
  store %struct.Type* %1, %struct.Type** %5, align 8
  %8 = load %struct.Type*, %struct.Type** %4, align 8
  %9 = load %struct.Type*, %struct.Type** %5, align 8
  %10 = icmp eq %struct.Type* %8, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i1 true, i1* %3, align 1
  br label %156

12:                                               ; preds = %2
  %13 = load %struct.Type*, %struct.Type** %4, align 8
  %14 = getelementptr inbounds %struct.Type, %struct.Type* %13, i32 0, i32 7
  %15 = load %struct.Type*, %struct.Type** %14, align 8
  %16 = icmp ne %struct.Type* %15, null
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = load %struct.Type*, %struct.Type** %4, align 8
  %19 = getelementptr inbounds %struct.Type, %struct.Type* %18, i32 0, i32 7
  %20 = load %struct.Type*, %struct.Type** %19, align 8
  %21 = load %struct.Type*, %struct.Type** %5, align 8
  %22 = call zeroext i1 @is_compatible(%struct.Type* noundef %20, %struct.Type* noundef %21)
  store i1 %22, i1* %3, align 1
  br label %156

23:                                               ; preds = %12
  %24 = load %struct.Type*, %struct.Type** %5, align 8
  %25 = getelementptr inbounds %struct.Type, %struct.Type* %24, i32 0, i32 7
  %26 = load %struct.Type*, %struct.Type** %25, align 8
  %27 = icmp ne %struct.Type* %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = load %struct.Type*, %struct.Type** %4, align 8
  %30 = load %struct.Type*, %struct.Type** %5, align 8
  %31 = getelementptr inbounds %struct.Type, %struct.Type* %30, i32 0, i32 7
  %32 = load %struct.Type*, %struct.Type** %31, align 8
  %33 = call zeroext i1 @is_compatible(%struct.Type* noundef %29, %struct.Type* noundef %32)
  store i1 %33, i1* %3, align 1
  br label %156

34:                                               ; preds = %23
  %35 = load %struct.Type*, %struct.Type** %4, align 8
  %36 = getelementptr inbounds %struct.Type, %struct.Type* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.Type*, %struct.Type** %5, align 8
  %39 = getelementptr inbounds %struct.Type, %struct.Type* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp ne i32 %37, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  store i1 false, i1* %3, align 1
  br label %156

43:                                               ; preds = %34
  %44 = load %struct.Type*, %struct.Type** %4, align 8
  %45 = getelementptr inbounds %struct.Type, %struct.Type* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  switch i32 %46, label %155 [
    i32 2, label %47
    i32 3, label %47
    i32 4, label %47
    i32 5, label %47
    i32 6, label %59
    i32 7, label %59
    i32 8, label %59
    i32 10, label %60
    i32 11, label %68
    i32 12, label %126
  ]

47:                                               ; preds = %43, %43, %43, %43
  %48 = load %struct.Type*, %struct.Type** %4, align 8
  %49 = getelementptr inbounds %struct.Type, %struct.Type* %48, i32 0, i32 3
  %50 = load i8, i8* %49, align 4
  %51 = trunc i8 %50 to i1
  %52 = zext i1 %51 to i32
  %53 = load %struct.Type*, %struct.Type** %5, align 8
  %54 = getelementptr inbounds %struct.Type, %struct.Type* %53, i32 0, i32 3
  %55 = load i8, i8* %54, align 4
  %56 = trunc i8 %55 to i1
  %57 = zext i1 %56 to i32
  %58 = icmp eq i32 %52, %57
  store i1 %58, i1* %3, align 1
  br label %156

59:                                               ; preds = %43, %43, %43
  store i1 true, i1* %3, align 1
  br label %156

60:                                               ; preds = %43
  %61 = load %struct.Type*, %struct.Type** %4, align 8
  %62 = getelementptr inbounds %struct.Type, %struct.Type* %61, i32 0, i32 8
  %63 = load %struct.Type*, %struct.Type** %62, align 8
  %64 = load %struct.Type*, %struct.Type** %5, align 8
  %65 = getelementptr inbounds %struct.Type, %struct.Type* %64, i32 0, i32 8
  %66 = load %struct.Type*, %struct.Type** %65, align 8
  %67 = call zeroext i1 @is_compatible(%struct.Type* noundef %63, %struct.Type* noundef %66)
  store i1 %67, i1* %3, align 1
  br label %156

68:                                               ; preds = %43
  %69 = load %struct.Type*, %struct.Type** %4, align 8
  %70 = getelementptr inbounds %struct.Type, %struct.Type* %69, i32 0, i32 17
  %71 = load %struct.Type*, %struct.Type** %70, align 8
  %72 = load %struct.Type*, %struct.Type** %5, align 8
  %73 = getelementptr inbounds %struct.Type, %struct.Type* %72, i32 0, i32 17
  %74 = load %struct.Type*, %struct.Type** %73, align 8
  %75 = call zeroext i1 @is_compatible(%struct.Type* noundef %71, %struct.Type* noundef %74)
  br i1 %75, label %77, label %76

76:                                               ; preds = %68
  store i1 false, i1* %3, align 1
  br label %156

77:                                               ; preds = %68
  %78 = load %struct.Type*, %struct.Type** %4, align 8
  %79 = getelementptr inbounds %struct.Type, %struct.Type* %78, i32 0, i32 19
  %80 = load i8, i8* %79, align 8
  %81 = trunc i8 %80 to i1
  %82 = zext i1 %81 to i32
  %83 = load %struct.Type*, %struct.Type** %5, align 8
  %84 = getelementptr inbounds %struct.Type, %struct.Type* %83, i32 0, i32 19
  %85 = load i8, i8* %84, align 8
  %86 = trunc i8 %85 to i1
  %87 = zext i1 %86 to i32
  %88 = icmp ne i32 %82, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %77
  store i1 false, i1* %3, align 1
  br label %156

90:                                               ; preds = %77
  %91 = load %struct.Type*, %struct.Type** %4, align 8
  %92 = getelementptr inbounds %struct.Type, %struct.Type* %91, i32 0, i32 18
  %93 = load %struct.Type*, %struct.Type** %92, align 8
  store %struct.Type* %93, %struct.Type** %6, align 8
  %94 = load %struct.Type*, %struct.Type** %5, align 8
  %95 = getelementptr inbounds %struct.Type, %struct.Type* %94, i32 0, i32 18
  %96 = load %struct.Type*, %struct.Type** %95, align 8
  store %struct.Type* %96, %struct.Type** %7, align 8
  br label %97

97:                                               ; preds = %111, %90
  %98 = load %struct.Type*, %struct.Type** %6, align 8
  %99 = icmp ne %struct.Type* %98, null
  br i1 %99, label %100, label %103

100:                                              ; preds = %97
  %101 = load %struct.Type*, %struct.Type** %7, align 8
  %102 = icmp ne %struct.Type* %101, null
  br label %103

103:                                              ; preds = %100, %97
  %104 = phi i1 [ false, %97 ], [ %102, %100 ]
  br i1 %104, label %105, label %118

105:                                              ; preds = %103
  %106 = load %struct.Type*, %struct.Type** %6, align 8
  %107 = load %struct.Type*, %struct.Type** %7, align 8
  %108 = call zeroext i1 @is_compatible(%struct.Type* noundef %106, %struct.Type* noundef %107)
  br i1 %108, label %110, label %109

109:                                              ; preds = %105
  store i1 false, i1* %3, align 1
  br label %156

110:                                              ; preds = %105
  br label %111

111:                                              ; preds = %110
  %112 = load %struct.Type*, %struct.Type** %6, align 8
  %113 = getelementptr inbounds %struct.Type, %struct.Type* %112, i32 0, i32 20
  %114 = load %struct.Type*, %struct.Type** %113, align 8
  store %struct.Type* %114, %struct.Type** %6, align 8
  %115 = load %struct.Type*, %struct.Type** %7, align 8
  %116 = getelementptr inbounds %struct.Type, %struct.Type* %115, i32 0, i32 20
  %117 = load %struct.Type*, %struct.Type** %116, align 8
  store %struct.Type* %117, %struct.Type** %7, align 8
  br label %97, !llvm.loop !211

118:                                              ; preds = %103
  %119 = load %struct.Type*, %struct.Type** %6, align 8
  %120 = icmp eq %struct.Type* %119, null
  br i1 %120, label %121, label %124

121:                                              ; preds = %118
  %122 = load %struct.Type*, %struct.Type** %7, align 8
  %123 = icmp eq %struct.Type* %122, null
  br label %124

124:                                              ; preds = %121, %118
  %125 = phi i1 [ false, %118 ], [ %123, %121 ]
  store i1 %125, i1* %3, align 1
  br label %156

126:                                              ; preds = %43
  %127 = load %struct.Type*, %struct.Type** %4, align 8
  %128 = getelementptr inbounds %struct.Type, %struct.Type* %127, i32 0, i32 8
  %129 = load %struct.Type*, %struct.Type** %128, align 8
  %130 = load %struct.Type*, %struct.Type** %5, align 8
  %131 = getelementptr inbounds %struct.Type, %struct.Type* %130, i32 0, i32 8
  %132 = load %struct.Type*, %struct.Type** %131, align 8
  %133 = call zeroext i1 @is_compatible(%struct.Type* noundef %129, %struct.Type* noundef %132)
  br i1 %133, label %135, label %134

134:                                              ; preds = %126
  store i1 false, i1* %3, align 1
  br label %156

135:                                              ; preds = %126
  %136 = load %struct.Type*, %struct.Type** %4, align 8
  %137 = getelementptr inbounds %struct.Type, %struct.Type* %136, i32 0, i32 11
  %138 = load i32, i32* %137, align 8
  %139 = icmp slt i32 %138, 0
  br i1 %139, label %140, label %153

140:                                              ; preds = %135
  %141 = load %struct.Type*, %struct.Type** %5, align 8
  %142 = getelementptr inbounds %struct.Type, %struct.Type* %141, i32 0, i32 11
  %143 = load i32, i32* %142, align 8
  %144 = icmp slt i32 %143, 0
  br i1 %144, label %145, label %153

145:                                              ; preds = %140
  %146 = load %struct.Type*, %struct.Type** %4, align 8
  %147 = getelementptr inbounds %struct.Type, %struct.Type* %146, i32 0, i32 11
  %148 = load i32, i32* %147, align 8
  %149 = load %struct.Type*, %struct.Type** %5, align 8
  %150 = getelementptr inbounds %struct.Type, %struct.Type* %149, i32 0, i32 11
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %148, %151
  br label %153

153:                                              ; preds = %145, %140, %135
  %154 = phi i1 [ false, %140 ], [ false, %135 ], [ %152, %145 ]
  store i1 %154, i1* %3, align 1
  br label %156

155:                                              ; preds = %43
  store i1 false, i1* %3, align 1
  br label %156

156:                                              ; preds = %155, %153, %134, %124, %109, %89, %76, %60, %59, %47, %42, %28, %17, %11
  %157 = load i1, i1* %3, align 1
  ret i1 %157
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Type* @copy_type(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %4 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 128) #14
  %5 = bitcast i8* %4 to %struct.Type*
  store %struct.Type* %5, %struct.Type** %3, align 8
  %6 = load %struct.Type*, %struct.Type** %3, align 8
  %7 = icmp eq %struct.Type* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1156, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.1157, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %1
  %10 = load %struct.Type*, %struct.Type** %3, align 8
  %11 = load %struct.Type*, %struct.Type** %2, align 8
  %12 = bitcast %struct.Type* %10 to i8*
  %13 = bitcast %struct.Type* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 128, i1 false)
  %14 = load %struct.Type*, %struct.Type** %2, align 8
  %15 = load %struct.Type*, %struct.Type** %3, align 8
  %16 = getelementptr inbounds %struct.Type, %struct.Type* %15, i32 0, i32 7
  store %struct.Type* %14, %struct.Type** %16, align 8
  %17 = load %struct.Type*, %struct.Type** %3, align 8
  ret %struct.Type* %17
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Type* @pointer_to(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %4 = call %struct.Type* @new_type(i32 noundef 10, i32 noundef 8, i32 noundef 8)
  store %struct.Type* %4, %struct.Type** %3, align 8
  %5 = load %struct.Type*, %struct.Type** %2, align 8
  %6 = load %struct.Type*, %struct.Type** %3, align 8
  %7 = getelementptr inbounds %struct.Type, %struct.Type* %6, i32 0, i32 8
  store %struct.Type* %5, %struct.Type** %7, align 8
  %8 = load %struct.Type*, %struct.Type** %3, align 8
  %9 = getelementptr inbounds %struct.Type, %struct.Type* %8, i32 0, i32 3
  store i8 1, i8* %9, align 4
  %10 = load %struct.Type*, %struct.Type** %3, align 8
  ret %struct.Type* %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @new_type(i32 noundef %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.Type*, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = call noalias i8* @calloc(i64 noundef 1, i64 noundef 128) #14
  %9 = bitcast i8* %8 to %struct.Type*
  store %struct.Type* %9, %struct.Type** %7, align 8
  %10 = load %struct.Type*, %struct.Type** %7, align 8
  %11 = icmp eq %struct.Type* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  call void (i8*, ...) @error(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19.1160, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.1157, i64 0, i64 0)) #11
  unreachable

13:                                               ; preds = %3
  %14 = load i32, i32* %4, align 4
  %15 = load %struct.Type*, %struct.Type** %7, align 8
  %16 = getelementptr inbounds %struct.Type, %struct.Type* %15, i32 0, i32 0
  store i32 %14, i32* %16, align 8
  %17 = load i32, i32* %5, align 4
  %18 = load %struct.Type*, %struct.Type** %7, align 8
  %19 = getelementptr inbounds %struct.Type, %struct.Type* %18, i32 0, i32 1
  store i32 %17, i32* %19, align 4
  %20 = load i32, i32* %6, align 4
  %21 = load %struct.Type*, %struct.Type** %7, align 8
  %22 = getelementptr inbounds %struct.Type, %struct.Type* %21, i32 0, i32 2
  store i32 %20, i32* %22, align 8
  %23 = load %struct.Type*, %struct.Type** %7, align 8
  ret %struct.Type* %23
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Type* @func_type(%struct.Type* noundef %0) #0 {
  %2 = alloca %struct.Type*, align 8
  %3 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %2, align 8
  %4 = call %struct.Type* @new_type(i32 noundef 11, i32 noundef 1, i32 noundef 1)
  store %struct.Type* %4, %struct.Type** %3, align 8
  %5 = load %struct.Type*, %struct.Type** %2, align 8
  %6 = load %struct.Type*, %struct.Type** %3, align 8
  %7 = getelementptr inbounds %struct.Type, %struct.Type* %6, i32 0, i32 17
  store %struct.Type* %5, %struct.Type** %7, align 8
  %8 = load %struct.Type*, %struct.Type** %3, align 8
  ret %struct.Type* %8
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Type* @array_of(%struct.Type* noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.Type*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.Type*, %struct.Type** %3, align 8
  %7 = getelementptr inbounds %struct.Type, %struct.Type* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = load i32, i32* %4, align 4
  %10 = mul nsw i32 %8, %9
  %11 = load %struct.Type*, %struct.Type** %3, align 8
  %12 = getelementptr inbounds %struct.Type, %struct.Type* %11, i32 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = call %struct.Type* @new_type(i32 noundef 12, i32 noundef %10, i32 noundef %13)
  store %struct.Type* %14, %struct.Type** %5, align 8
  %15 = load %struct.Type*, %struct.Type** %3, align 8
  %16 = load %struct.Type*, %struct.Type** %5, align 8
  %17 = getelementptr inbounds %struct.Type, %struct.Type* %16, i32 0, i32 8
  store %struct.Type* %15, %struct.Type** %17, align 8
  %18 = load i32, i32* %4, align 4
  %19 = load %struct.Type*, %struct.Type** %5, align 8
  %20 = getelementptr inbounds %struct.Type, %struct.Type* %19, i32 0, i32 11
  store i32 %18, i32* %20, align 8
  %21 = load %struct.Type*, %struct.Type** %5, align 8
  ret %struct.Type* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Type* @vla_of(%struct.Type* noundef %0, %struct.Node* noundef %1) #0 {
  %3 = alloca %struct.Type*, align 8
  %4 = alloca %struct.Node*, align 8
  %5 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %3, align 8
  store %struct.Node* %1, %struct.Node** %4, align 8
  %6 = call %struct.Type* @new_type(i32 noundef 13, i32 noundef 8, i32 noundef 8)
  store %struct.Type* %6, %struct.Type** %5, align 8
  %7 = load %struct.Type*, %struct.Type** %3, align 8
  %8 = load %struct.Type*, %struct.Type** %5, align 8
  %9 = getelementptr inbounds %struct.Type, %struct.Type* %8, i32 0, i32 8
  store %struct.Type* %7, %struct.Type** %9, align 8
  %10 = load %struct.Node*, %struct.Node** %4, align 8
  %11 = load %struct.Type*, %struct.Type** %5, align 8
  %12 = getelementptr inbounds %struct.Type, %struct.Type* %11, i32 0, i32 12
  store %struct.Node* %10, %struct.Node** %12, align 8
  %13 = load %struct.Type*, %struct.Type** %5, align 8
  ret %struct.Type* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Type* @enum_type() #0 {
  %1 = call %struct.Type* @new_type(i32 noundef 9, i32 noundef 4, i32 noundef 4)
  ret %struct.Type* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.Type* @struct_type() #0 {
  %1 = call %struct.Type* @new_type(i32 noundef 14, i32 noundef 0, i32 noundef 1)
  ret %struct.Type* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @add_type(%struct.Node* noundef %0) #0 {
  %2 = alloca %struct.Node*, align 8
  %3 = alloca %struct.Node*, align 8
  %4 = alloca %struct.Node*, align 8
  %5 = alloca %struct.Type*, align 8
  %6 = alloca %struct.Type*, align 8
  %7 = alloca %struct.Node*, align 8
  store %struct.Node* %0, %struct.Node** %2, align 8
  %8 = load %struct.Node*, %struct.Node** %2, align 8
  %9 = icmp ne %struct.Node* %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %1
  %11 = load %struct.Node*, %struct.Node** %2, align 8
  %12 = getelementptr inbounds %struct.Node, %struct.Node* %11, i32 0, i32 2
  %13 = load %struct.Type*, %struct.Type** %12, align 16
  %14 = icmp ne %struct.Type* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %10, %1
  br label %412

16:                                               ; preds = %10
  %17 = load %struct.Node*, %struct.Node** %2, align 8
  %18 = getelementptr inbounds %struct.Node, %struct.Node* %17, i32 0, i32 4
  %19 = load %struct.Node*, %struct.Node** %18, align 16
  call void @add_type(%struct.Node* noundef %19)
  %20 = load %struct.Node*, %struct.Node** %2, align 8
  %21 = getelementptr inbounds %struct.Node, %struct.Node* %20, i32 0, i32 5
  %22 = load %struct.Node*, %struct.Node** %21, align 8
  call void @add_type(%struct.Node* noundef %22)
  %23 = load %struct.Node*, %struct.Node** %2, align 8
  %24 = getelementptr inbounds %struct.Node, %struct.Node* %23, i32 0, i32 6
  %25 = load %struct.Node*, %struct.Node** %24, align 16
  call void @add_type(%struct.Node* noundef %25)
  %26 = load %struct.Node*, %struct.Node** %2, align 8
  %27 = getelementptr inbounds %struct.Node, %struct.Node* %26, i32 0, i32 7
  %28 = load %struct.Node*, %struct.Node** %27, align 8
  call void @add_type(%struct.Node* noundef %28)
  %29 = load %struct.Node*, %struct.Node** %2, align 8
  %30 = getelementptr inbounds %struct.Node, %struct.Node* %29, i32 0, i32 8
  %31 = load %struct.Node*, %struct.Node** %30, align 16
  call void @add_type(%struct.Node* noundef %31)
  %32 = load %struct.Node*, %struct.Node** %2, align 8
  %33 = getelementptr inbounds %struct.Node, %struct.Node* %32, i32 0, i32 9
  %34 = load %struct.Node*, %struct.Node** %33, align 8
  call void @add_type(%struct.Node* noundef %34)
  %35 = load %struct.Node*, %struct.Node** %2, align 8
  %36 = getelementptr inbounds %struct.Node, %struct.Node* %35, i32 0, i32 10
  %37 = load %struct.Node*, %struct.Node** %36, align 16
  call void @add_type(%struct.Node* noundef %37)
  %38 = load %struct.Node*, %struct.Node** %2, align 8
  %39 = getelementptr inbounds %struct.Node, %struct.Node* %38, i32 0, i32 13
  %40 = load %struct.Node*, %struct.Node** %39, align 8
  store %struct.Node* %40, %struct.Node** %3, align 8
  br label %41

41:                                               ; preds = %46, %16
  %42 = load %struct.Node*, %struct.Node** %3, align 8
  %43 = icmp ne %struct.Node* %42, null
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load %struct.Node*, %struct.Node** %3, align 8
  call void @add_type(%struct.Node* noundef %45)
  br label %46

46:                                               ; preds = %44
  %47 = load %struct.Node*, %struct.Node** %3, align 8
  %48 = getelementptr inbounds %struct.Node, %struct.Node* %47, i32 0, i32 1
  %49 = load %struct.Node*, %struct.Node** %48, align 8
  store %struct.Node* %49, %struct.Node** %3, align 8
  br label %41, !llvm.loop !212

50:                                               ; preds = %41
  %51 = load %struct.Node*, %struct.Node** %2, align 8
  %52 = getelementptr inbounds %struct.Node, %struct.Node* %51, i32 0, i32 16
  %53 = load %struct.Node*, %struct.Node** %52, align 16
  store %struct.Node* %53, %struct.Node** %4, align 8
  br label %54

54:                                               ; preds = %59, %50
  %55 = load %struct.Node*, %struct.Node** %4, align 8
  %56 = icmp ne %struct.Node* %55, null
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = load %struct.Node*, %struct.Node** %4, align 8
  call void @add_type(%struct.Node* noundef %58)
  br label %59

59:                                               ; preds = %57
  %60 = load %struct.Node*, %struct.Node** %4, align 8
  %61 = getelementptr inbounds %struct.Node, %struct.Node* %60, i32 0, i32 1
  %62 = load %struct.Node*, %struct.Node** %61, align 8
  store %struct.Node* %62, %struct.Node** %4, align 8
  br label %54, !llvm.loop !213

63:                                               ; preds = %54
  %64 = load %struct.Node*, %struct.Node** %2, align 8
  %65 = getelementptr inbounds %struct.Node, %struct.Node* %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 16
  switch i32 %66, label %412 [
    i32 42, label %67
    i32 1, label %71
    i32 2, label %71
    i32 3, label %71
    i32 4, label %71
    i32 6, label %71
    i32 7, label %71
    i32 8, label %71
    i32 9, label %71
    i32 5, label %83
    i32 16, label %101
    i32 12, label %145
    i32 13, label %145
    i32 14, label %145
    i32 15, label %145
    i32 37, label %153
    i32 22, label %161
    i32 25, label %161
    i32 24, label %161
    i32 23, label %165
    i32 10, label %165
    i32 11, label %165
    i32 40, label %173
    i32 41, label %173
    i32 17, label %181
    i32 18, label %216
    i32 19, label %224
    i32 20, label %232
    i32 21, label %255
    i32 39, label %293
    i32 36, label %339
    i32 46, label %344
    i32 47, label %387
  ]

67:                                               ; preds = %63
  %68 = load %struct.Type*, %struct.Type** @ty_int, align 8
  %69 = load %struct.Node*, %struct.Node** %2, align 8
  %70 = getelementptr inbounds %struct.Node, %struct.Node* %69, i32 0, i32 2
  store %struct.Type* %68, %struct.Type** %70, align 16
  br label %412

71:                                               ; preds = %63, %63, %63, %63, %63, %63, %63, %63
  %72 = load %struct.Node*, %struct.Node** %2, align 8
  %73 = getelementptr inbounds %struct.Node, %struct.Node* %72, i32 0, i32 4
  %74 = load %struct.Node*, %struct.Node** %2, align 8
  %75 = getelementptr inbounds %struct.Node, %struct.Node* %74, i32 0, i32 5
  call void @usual_arith_conv(%struct.Node** noundef %73, %struct.Node** noundef %75)
  %76 = load %struct.Node*, %struct.Node** %2, align 8
  %77 = getelementptr inbounds %struct.Node, %struct.Node* %76, i32 0, i32 4
  %78 = load %struct.Node*, %struct.Node** %77, align 16
  %79 = getelementptr inbounds %struct.Node, %struct.Node* %78, i32 0, i32 2
  %80 = load %struct.Type*, %struct.Type** %79, align 16
  %81 = load %struct.Node*, %struct.Node** %2, align 8
  %82 = getelementptr inbounds %struct.Node, %struct.Node* %81, i32 0, i32 2
  store %struct.Type* %80, %struct.Type** %82, align 16
  br label %412

83:                                               ; preds = %63
  %84 = load %struct.Type*, %struct.Type** @ty_int, align 8
  %85 = load %struct.Node*, %struct.Node** %2, align 8
  %86 = getelementptr inbounds %struct.Node, %struct.Node* %85, i32 0, i32 4
  %87 = load %struct.Node*, %struct.Node** %86, align 16
  %88 = getelementptr inbounds %struct.Node, %struct.Node* %87, i32 0, i32 2
  %89 = load %struct.Type*, %struct.Type** %88, align 16
  %90 = call %struct.Type* @get_common_type(%struct.Type* noundef %84, %struct.Type* noundef %89)
  store %struct.Type* %90, %struct.Type** %5, align 8
  %91 = load %struct.Node*, %struct.Node** %2, align 8
  %92 = getelementptr inbounds %struct.Node, %struct.Node* %91, i32 0, i32 4
  %93 = load %struct.Node*, %struct.Node** %92, align 16
  %94 = load %struct.Type*, %struct.Type** %5, align 8
  %95 = call %struct.Node* @new_cast(%struct.Node* noundef %93, %struct.Type* noundef %94)
  %96 = load %struct.Node*, %struct.Node** %2, align 8
  %97 = getelementptr inbounds %struct.Node, %struct.Node* %96, i32 0, i32 4
  store %struct.Node* %95, %struct.Node** %97, align 16
  %98 = load %struct.Type*, %struct.Type** %5, align 8
  %99 = load %struct.Node*, %struct.Node** %2, align 8
  %100 = getelementptr inbounds %struct.Node, %struct.Node* %99, i32 0, i32 2
  store %struct.Type* %98, %struct.Type** %100, align 16
  br label %412

101:                                              ; preds = %63
  %102 = load %struct.Node*, %struct.Node** %2, align 8
  %103 = getelementptr inbounds %struct.Node, %struct.Node* %102, i32 0, i32 4
  %104 = load %struct.Node*, %struct.Node** %103, align 16
  %105 = getelementptr inbounds %struct.Node, %struct.Node* %104, i32 0, i32 2
  %106 = load %struct.Type*, %struct.Type** %105, align 16
  %107 = getelementptr inbounds %struct.Type, %struct.Type* %106, i32 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 12
  br i1 %109, label %110, label %116

110:                                              ; preds = %101
  %111 = load %struct.Node*, %struct.Node** %2, align 8
  %112 = getelementptr inbounds %struct.Node, %struct.Node* %111, i32 0, i32 4
  %113 = load %struct.Node*, %struct.Node** %112, align 16
  %114 = getelementptr inbounds %struct.Node, %struct.Node* %113, i32 0, i32 3
  %115 = load %struct.Token*, %struct.Token** %114, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %115, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.1173, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.1157, i64 0, i64 0)) #11
  unreachable

116:                                              ; preds = %101
  %117 = load %struct.Node*, %struct.Node** %2, align 8
  %118 = getelementptr inbounds %struct.Node, %struct.Node* %117, i32 0, i32 4
  %119 = load %struct.Node*, %struct.Node** %118, align 16
  %120 = getelementptr inbounds %struct.Node, %struct.Node* %119, i32 0, i32 2
  %121 = load %struct.Type*, %struct.Type** %120, align 16
  %122 = getelementptr inbounds %struct.Type, %struct.Type* %121, i32 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = icmp ne i32 %123, 14
  br i1 %124, label %125, label %137

125:                                              ; preds = %116
  %126 = load %struct.Node*, %struct.Node** %2, align 8
  %127 = getelementptr inbounds %struct.Node, %struct.Node* %126, i32 0, i32 5
  %128 = load %struct.Node*, %struct.Node** %127, align 8
  %129 = load %struct.Node*, %struct.Node** %2, align 8
  %130 = getelementptr inbounds %struct.Node, %struct.Node* %129, i32 0, i32 4
  %131 = load %struct.Node*, %struct.Node** %130, align 16
  %132 = getelementptr inbounds %struct.Node, %struct.Node* %131, i32 0, i32 2
  %133 = load %struct.Type*, %struct.Type** %132, align 16
  %134 = call %struct.Node* @new_cast(%struct.Node* noundef %128, %struct.Type* noundef %133)
  %135 = load %struct.Node*, %struct.Node** %2, align 8
  %136 = getelementptr inbounds %struct.Node, %struct.Node* %135, i32 0, i32 5
  store %struct.Node* %134, %struct.Node** %136, align 8
  br label %137

137:                                              ; preds = %125, %116
  %138 = load %struct.Node*, %struct.Node** %2, align 8
  %139 = getelementptr inbounds %struct.Node, %struct.Node* %138, i32 0, i32 4
  %140 = load %struct.Node*, %struct.Node** %139, align 16
  %141 = getelementptr inbounds %struct.Node, %struct.Node* %140, i32 0, i32 2
  %142 = load %struct.Type*, %struct.Type** %141, align 16
  %143 = load %struct.Node*, %struct.Node** %2, align 8
  %144 = getelementptr inbounds %struct.Node, %struct.Node* %143, i32 0, i32 2
  store %struct.Type* %142, %struct.Type** %144, align 16
  br label %412

145:                                              ; preds = %63, %63, %63, %63
  %146 = load %struct.Node*, %struct.Node** %2, align 8
  %147 = getelementptr inbounds %struct.Node, %struct.Node* %146, i32 0, i32 4
  %148 = load %struct.Node*, %struct.Node** %2, align 8
  %149 = getelementptr inbounds %struct.Node, %struct.Node* %148, i32 0, i32 5
  call void @usual_arith_conv(%struct.Node** noundef %147, %struct.Node** noundef %149)
  %150 = load %struct.Type*, %struct.Type** @ty_int, align 8
  %151 = load %struct.Node*, %struct.Node** %2, align 8
  %152 = getelementptr inbounds %struct.Node, %struct.Node* %151, i32 0, i32 2
  store %struct.Type* %150, %struct.Type** %152, align 16
  br label %412

153:                                              ; preds = %63
  %154 = load %struct.Node*, %struct.Node** %2, align 8
  %155 = getelementptr inbounds %struct.Node, %struct.Node* %154, i32 0, i32 15
  %156 = load %struct.Type*, %struct.Type** %155, align 8
  %157 = getelementptr inbounds %struct.Type, %struct.Type* %156, i32 0, i32 17
  %158 = load %struct.Type*, %struct.Type** %157, align 8
  %159 = load %struct.Node*, %struct.Node** %2, align 8
  %160 = getelementptr inbounds %struct.Node, %struct.Node* %159, i32 0, i32 2
  store %struct.Type* %158, %struct.Type** %160, align 16
  br label %412

161:                                              ; preds = %63, %63, %63
  %162 = load %struct.Type*, %struct.Type** @ty_int, align 8
  %163 = load %struct.Node*, %struct.Node** %2, align 8
  %164 = getelementptr inbounds %struct.Node, %struct.Node* %163, i32 0, i32 2
  store %struct.Type* %162, %struct.Type** %164, align 16
  br label %412

165:                                              ; preds = %63, %63, %63
  %166 = load %struct.Node*, %struct.Node** %2, align 8
  %167 = getelementptr inbounds %struct.Node, %struct.Node* %166, i32 0, i32 4
  %168 = load %struct.Node*, %struct.Node** %167, align 16
  %169 = getelementptr inbounds %struct.Node, %struct.Node* %168, i32 0, i32 2
  %170 = load %struct.Type*, %struct.Type** %169, align 16
  %171 = load %struct.Node*, %struct.Node** %2, align 8
  %172 = getelementptr inbounds %struct.Node, %struct.Node* %171, i32 0, i32 2
  store %struct.Type* %170, %struct.Type** %172, align 16
  br label %412

173:                                              ; preds = %63, %63
  %174 = load %struct.Node*, %struct.Node** %2, align 8
  %175 = getelementptr inbounds %struct.Node, %struct.Node* %174, i32 0, i32 33
  %176 = load %struct.Obj*, %struct.Obj** %175, align 8
  %177 = getelementptr inbounds %struct.Obj, %struct.Obj* %176, i32 0, i32 3
  %178 = load %struct.Type*, %struct.Type** %177, align 8
  %179 = load %struct.Node*, %struct.Node** %2, align 8
  %180 = getelementptr inbounds %struct.Node, %struct.Node* %179, i32 0, i32 2
  store %struct.Type* %178, %struct.Type** %180, align 16
  br label %412

181:                                              ; preds = %63
  %182 = load %struct.Node*, %struct.Node** %2, align 8
  %183 = getelementptr inbounds %struct.Node, %struct.Node* %182, i32 0, i32 7
  %184 = load %struct.Node*, %struct.Node** %183, align 8
  %185 = getelementptr inbounds %struct.Node, %struct.Node* %184, i32 0, i32 2
  %186 = load %struct.Type*, %struct.Type** %185, align 16
  %187 = getelementptr inbounds %struct.Type, %struct.Type* %186, i32 0, i32 0
  %188 = load i32, i32* %187, align 8
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %199, label %190

190:                                              ; preds = %181
  %191 = load %struct.Node*, %struct.Node** %2, align 8
  %192 = getelementptr inbounds %struct.Node, %struct.Node* %191, i32 0, i32 8
  %193 = load %struct.Node*, %struct.Node** %192, align 16
  %194 = getelementptr inbounds %struct.Node, %struct.Node* %193, i32 0, i32 2
  %195 = load %struct.Type*, %struct.Type** %194, align 16
  %196 = getelementptr inbounds %struct.Type, %struct.Type* %195, i32 0, i32 0
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %203

199:                                              ; preds = %190, %181
  %200 = load %struct.Type*, %struct.Type** @ty_void, align 8
  %201 = load %struct.Node*, %struct.Node** %2, align 8
  %202 = getelementptr inbounds %struct.Node, %struct.Node* %201, i32 0, i32 2
  store %struct.Type* %200, %struct.Type** %202, align 16
  br label %215

203:                                              ; preds = %190
  %204 = load %struct.Node*, %struct.Node** %2, align 8
  %205 = getelementptr inbounds %struct.Node, %struct.Node* %204, i32 0, i32 7
  %206 = load %struct.Node*, %struct.Node** %2, align 8
  %207 = getelementptr inbounds %struct.Node, %struct.Node* %206, i32 0, i32 8
  call void @usual_arith_conv(%struct.Node** noundef %205, %struct.Node** noundef %207)
  %208 = load %struct.Node*, %struct.Node** %2, align 8
  %209 = getelementptr inbounds %struct.Node, %struct.Node* %208, i32 0, i32 7
  %210 = load %struct.Node*, %struct.Node** %209, align 8
  %211 = getelementptr inbounds %struct.Node, %struct.Node* %210, i32 0, i32 2
  %212 = load %struct.Type*, %struct.Type** %211, align 16
  %213 = load %struct.Node*, %struct.Node** %2, align 8
  %214 = getelementptr inbounds %struct.Node, %struct.Node* %213, i32 0, i32 2
  store %struct.Type* %212, %struct.Type** %214, align 16
  br label %215

215:                                              ; preds = %203, %199
  br label %412

216:                                              ; preds = %63
  %217 = load %struct.Node*, %struct.Node** %2, align 8
  %218 = getelementptr inbounds %struct.Node, %struct.Node* %217, i32 0, i32 5
  %219 = load %struct.Node*, %struct.Node** %218, align 8
  %220 = getelementptr inbounds %struct.Node, %struct.Node* %219, i32 0, i32 2
  %221 = load %struct.Type*, %struct.Type** %220, align 16
  %222 = load %struct.Node*, %struct.Node** %2, align 8
  %223 = getelementptr inbounds %struct.Node, %struct.Node* %222, i32 0, i32 2
  store %struct.Type* %221, %struct.Type** %223, align 16
  br label %412

224:                                              ; preds = %63
  %225 = load %struct.Node*, %struct.Node** %2, align 8
  %226 = getelementptr inbounds %struct.Node, %struct.Node* %225, i32 0, i32 14
  %227 = load %struct.Member*, %struct.Member** %226, align 16
  %228 = getelementptr inbounds %struct.Member, %struct.Member* %227, i32 0, i32 1
  %229 = load %struct.Type*, %struct.Type** %228, align 8
  %230 = load %struct.Node*, %struct.Node** %2, align 8
  %231 = getelementptr inbounds %struct.Node, %struct.Node* %230, i32 0, i32 2
  store %struct.Type* %229, %struct.Type** %231, align 16
  br label %412

232:                                              ; preds = %63
  %233 = load %struct.Node*, %struct.Node** %2, align 8
  %234 = getelementptr inbounds %struct.Node, %struct.Node* %233, i32 0, i32 4
  %235 = load %struct.Node*, %struct.Node** %234, align 16
  %236 = getelementptr inbounds %struct.Node, %struct.Node* %235, i32 0, i32 2
  %237 = load %struct.Type*, %struct.Type** %236, align 16
  store %struct.Type* %237, %struct.Type** %6, align 8
  %238 = load %struct.Type*, %struct.Type** %6, align 8
  %239 = getelementptr inbounds %struct.Type, %struct.Type* %238, i32 0, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = icmp eq i32 %240, 12
  br i1 %241, label %242, label %249

242:                                              ; preds = %232
  %243 = load %struct.Type*, %struct.Type** %6, align 8
  %244 = getelementptr inbounds %struct.Type, %struct.Type* %243, i32 0, i32 8
  %245 = load %struct.Type*, %struct.Type** %244, align 8
  %246 = call %struct.Type* @pointer_to(%struct.Type* noundef %245)
  %247 = load %struct.Node*, %struct.Node** %2, align 8
  %248 = getelementptr inbounds %struct.Node, %struct.Node* %247, i32 0, i32 2
  store %struct.Type* %246, %struct.Type** %248, align 16
  br label %254

249:                                              ; preds = %232
  %250 = load %struct.Type*, %struct.Type** %6, align 8
  %251 = call %struct.Type* @pointer_to(%struct.Type* noundef %250)
  %252 = load %struct.Node*, %struct.Node** %2, align 8
  %253 = getelementptr inbounds %struct.Node, %struct.Node* %252, i32 0, i32 2
  store %struct.Type* %251, %struct.Type** %253, align 16
  br label %254

254:                                              ; preds = %249, %242
  br label %412

255:                                              ; preds = %63
  %256 = load %struct.Node*, %struct.Node** %2, align 8
  %257 = getelementptr inbounds %struct.Node, %struct.Node* %256, i32 0, i32 4
  %258 = load %struct.Node*, %struct.Node** %257, align 16
  %259 = getelementptr inbounds %struct.Node, %struct.Node* %258, i32 0, i32 2
  %260 = load %struct.Type*, %struct.Type** %259, align 16
  %261 = getelementptr inbounds %struct.Type, %struct.Type* %260, i32 0, i32 8
  %262 = load %struct.Type*, %struct.Type** %261, align 8
  %263 = icmp ne %struct.Type* %262, null
  br i1 %263, label %268, label %264

264:                                              ; preds = %255
  %265 = load %struct.Node*, %struct.Node** %2, align 8
  %266 = getelementptr inbounds %struct.Node, %struct.Node* %265, i32 0, i32 3
  %267 = load %struct.Token*, %struct.Token** %266, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %267, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15.1174, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.1157, i64 0, i64 0)) #11
  unreachable

268:                                              ; preds = %255
  %269 = load %struct.Node*, %struct.Node** %2, align 8
  %270 = getelementptr inbounds %struct.Node, %struct.Node* %269, i32 0, i32 4
  %271 = load %struct.Node*, %struct.Node** %270, align 16
  %272 = getelementptr inbounds %struct.Node, %struct.Node* %271, i32 0, i32 2
  %273 = load %struct.Type*, %struct.Type** %272, align 16
  %274 = getelementptr inbounds %struct.Type, %struct.Type* %273, i32 0, i32 8
  %275 = load %struct.Type*, %struct.Type** %274, align 8
  %276 = getelementptr inbounds %struct.Type, %struct.Type* %275, i32 0, i32 0
  %277 = load i32, i32* %276, align 8
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %268
  %280 = load %struct.Node*, %struct.Node** %2, align 8
  %281 = getelementptr inbounds %struct.Node, %struct.Node* %280, i32 0, i32 3
  %282 = load %struct.Token*, %struct.Token** %281, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %282, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16.1175, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.1157, i64 0, i64 0)) #11
  unreachable

283:                                              ; preds = %268
  %284 = load %struct.Node*, %struct.Node** %2, align 8
  %285 = getelementptr inbounds %struct.Node, %struct.Node* %284, i32 0, i32 4
  %286 = load %struct.Node*, %struct.Node** %285, align 16
  %287 = getelementptr inbounds %struct.Node, %struct.Node* %286, i32 0, i32 2
  %288 = load %struct.Type*, %struct.Type** %287, align 16
  %289 = getelementptr inbounds %struct.Type, %struct.Type* %288, i32 0, i32 8
  %290 = load %struct.Type*, %struct.Type** %289, align 8
  %291 = load %struct.Node*, %struct.Node** %2, align 8
  %292 = getelementptr inbounds %struct.Node, %struct.Node* %291, i32 0, i32 2
  store %struct.Type* %290, %struct.Type** %292, align 16
  br label %412

293:                                              ; preds = %63
  %294 = load %struct.Node*, %struct.Node** %2, align 8
  %295 = getelementptr inbounds %struct.Node, %struct.Node* %294, i32 0, i32 13
  %296 = load %struct.Node*, %struct.Node** %295, align 8
  %297 = icmp ne %struct.Node* %296, null
  br i1 %297, label %298, label %335

298:                                              ; preds = %293
  %299 = load %struct.Node*, %struct.Node** %2, align 8
  %300 = getelementptr inbounds %struct.Node, %struct.Node* %299, i32 0, i32 13
  %301 = load %struct.Node*, %struct.Node** %300, align 8
  store %struct.Node* %301, %struct.Node** %7, align 8
  br label %302

302:                                              ; preds = %307, %298
  %303 = load %struct.Node*, %struct.Node** %7, align 8
  %304 = getelementptr inbounds %struct.Node, %struct.Node* %303, i32 0, i32 1
  %305 = load %struct.Node*, %struct.Node** %304, align 8
  %306 = icmp ne %struct.Node* %305, null
  br i1 %306, label %307, label %311

307:                                              ; preds = %302
  %308 = load %struct.Node*, %struct.Node** %7, align 8
  %309 = getelementptr inbounds %struct.Node, %struct.Node* %308, i32 0, i32 1
  %310 = load %struct.Node*, %struct.Node** %309, align 8
  store %struct.Node* %310, %struct.Node** %7, align 8
  br label %302, !llvm.loop !214

311:                                              ; preds = %302
  br label %312

312:                                              ; preds = %317, %311
  %313 = load %struct.Node*, %struct.Node** %7, align 8
  %314 = getelementptr inbounds %struct.Node, %struct.Node* %313, i32 0, i32 0
  %315 = load i32, i32* %314, align 16
  %316 = icmp eq i32 %315, 35
  br i1 %316, label %317, label %321

317:                                              ; preds = %312
  %318 = load %struct.Node*, %struct.Node** %7, align 8
  %319 = getelementptr inbounds %struct.Node, %struct.Node* %318, i32 0, i32 4
  %320 = load %struct.Node*, %struct.Node** %319, align 16
  store %struct.Node* %320, %struct.Node** %7, align 8
  br label %312, !llvm.loop !215

321:                                              ; preds = %312
  %322 = load %struct.Node*, %struct.Node** %7, align 8
  %323 = getelementptr inbounds %struct.Node, %struct.Node* %322, i32 0, i32 0
  %324 = load i32, i32* %323, align 16
  %325 = icmp eq i32 %324, 38
  br i1 %325, label %326, label %334

326:                                              ; preds = %321
  %327 = load %struct.Node*, %struct.Node** %7, align 8
  %328 = getelementptr inbounds %struct.Node, %struct.Node* %327, i32 0, i32 4
  %329 = load %struct.Node*, %struct.Node** %328, align 16
  %330 = getelementptr inbounds %struct.Node, %struct.Node* %329, i32 0, i32 2
  %331 = load %struct.Type*, %struct.Type** %330, align 16
  %332 = load %struct.Node*, %struct.Node** %2, align 8
  %333 = getelementptr inbounds %struct.Node, %struct.Node* %332, i32 0, i32 2
  store %struct.Type* %331, %struct.Type** %333, align 16
  br label %412

334:                                              ; preds = %321
  br label %335

335:                                              ; preds = %334, %293
  %336 = load %struct.Node*, %struct.Node** %2, align 8
  %337 = getelementptr inbounds %struct.Node, %struct.Node* %336, i32 0, i32 3
  %338 = load %struct.Token*, %struct.Token** %337, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %338, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17.1176, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.1157, i64 0, i64 0)) #11
  unreachable

339:                                              ; preds = %63
  %340 = load %struct.Type*, %struct.Type** @ty_void, align 8
  %341 = call %struct.Type* @pointer_to(%struct.Type* noundef %340)
  %342 = load %struct.Node*, %struct.Node** %2, align 8
  %343 = getelementptr inbounds %struct.Node, %struct.Node* %342, i32 0, i32 2
  store %struct.Type* %341, %struct.Type** %343, align 16
  br label %412

344:                                              ; preds = %63
  %345 = load %struct.Node*, %struct.Node** %2, align 8
  %346 = getelementptr inbounds %struct.Node, %struct.Node* %345, i32 0, i32 27
  %347 = load %struct.Node*, %struct.Node** %346, align 8
  call void @add_type(%struct.Node* noundef %347)
  %348 = load %struct.Node*, %struct.Node** %2, align 8
  %349 = getelementptr inbounds %struct.Node, %struct.Node* %348, i32 0, i32 28
  %350 = load %struct.Node*, %struct.Node** %349, align 16
  call void @add_type(%struct.Node* noundef %350)
  %351 = load %struct.Node*, %struct.Node** %2, align 8
  %352 = getelementptr inbounds %struct.Node, %struct.Node* %351, i32 0, i32 29
  %353 = load %struct.Node*, %struct.Node** %352, align 8
  call void @add_type(%struct.Node* noundef %353)
  %354 = load %struct.Type*, %struct.Type** @ty_bool, align 8
  %355 = load %struct.Node*, %struct.Node** %2, align 8
  %356 = getelementptr inbounds %struct.Node, %struct.Node* %355, i32 0, i32 2
  store %struct.Type* %354, %struct.Type** %356, align 16
  %357 = load %struct.Node*, %struct.Node** %2, align 8
  %358 = getelementptr inbounds %struct.Node, %struct.Node* %357, i32 0, i32 27
  %359 = load %struct.Node*, %struct.Node** %358, align 8
  %360 = getelementptr inbounds %struct.Node, %struct.Node* %359, i32 0, i32 2
  %361 = load %struct.Type*, %struct.Type** %360, align 16
  %362 = getelementptr inbounds %struct.Type, %struct.Type* %361, i32 0, i32 0
  %363 = load i32, i32* %362, align 8
  %364 = icmp ne i32 %363, 10
  br i1 %364, label %365, label %371

365:                                              ; preds = %344
  %366 = load %struct.Node*, %struct.Node** %2, align 8
  %367 = getelementptr inbounds %struct.Node, %struct.Node* %366, i32 0, i32 27
  %368 = load %struct.Node*, %struct.Node** %367, align 8
  %369 = getelementptr inbounds %struct.Node, %struct.Node* %368, i32 0, i32 3
  %370 = load %struct.Token*, %struct.Token** %369, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %370, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.1177, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.1157, i64 0, i64 0)) #11
  unreachable

371:                                              ; preds = %344
  %372 = load %struct.Node*, %struct.Node** %2, align 8
  %373 = getelementptr inbounds %struct.Node, %struct.Node* %372, i32 0, i32 28
  %374 = load %struct.Node*, %struct.Node** %373, align 16
  %375 = getelementptr inbounds %struct.Node, %struct.Node* %374, i32 0, i32 2
  %376 = load %struct.Type*, %struct.Type** %375, align 16
  %377 = getelementptr inbounds %struct.Type, %struct.Type* %376, i32 0, i32 0
  %378 = load i32, i32* %377, align 8
  %379 = icmp ne i32 %378, 10
  br i1 %379, label %380, label %386

380:                                              ; preds = %371
  %381 = load %struct.Node*, %struct.Node** %2, align 8
  %382 = getelementptr inbounds %struct.Node, %struct.Node* %381, i32 0, i32 28
  %383 = load %struct.Node*, %struct.Node** %382, align 16
  %384 = getelementptr inbounds %struct.Node, %struct.Node* %383, i32 0, i32 3
  %385 = load %struct.Token*, %struct.Token** %384, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %385, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.1177, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.1157, i64 0, i64 0)) #11
  unreachable

386:                                              ; preds = %371
  br label %412

387:                                              ; preds = %63
  %388 = load %struct.Node*, %struct.Node** %2, align 8
  %389 = getelementptr inbounds %struct.Node, %struct.Node* %388, i32 0, i32 4
  %390 = load %struct.Node*, %struct.Node** %389, align 16
  %391 = getelementptr inbounds %struct.Node, %struct.Node* %390, i32 0, i32 2
  %392 = load %struct.Type*, %struct.Type** %391, align 16
  %393 = getelementptr inbounds %struct.Type, %struct.Type* %392, i32 0, i32 0
  %394 = load i32, i32* %393, align 8
  %395 = icmp ne i32 %394, 10
  br i1 %395, label %396, label %402

396:                                              ; preds = %387
  %397 = load %struct.Node*, %struct.Node** %2, align 8
  %398 = getelementptr inbounds %struct.Node, %struct.Node* %397, i32 0, i32 27
  %399 = load %struct.Node*, %struct.Node** %398, align 8
  %400 = getelementptr inbounds %struct.Node, %struct.Node* %399, i32 0, i32 3
  %401 = load %struct.Token*, %struct.Token** %400, align 8
  call void (%struct.Token*, i8*, ...) @error_tok(%struct.Token* noundef %401, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.1177, i64 0, i64 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.1157, i64 0, i64 0)) #11
  unreachable

402:                                              ; preds = %387
  %403 = load %struct.Node*, %struct.Node** %2, align 8
  %404 = getelementptr inbounds %struct.Node, %struct.Node* %403, i32 0, i32 4
  %405 = load %struct.Node*, %struct.Node** %404, align 16
  %406 = getelementptr inbounds %struct.Node, %struct.Node* %405, i32 0, i32 2
  %407 = load %struct.Type*, %struct.Type** %406, align 16
  %408 = getelementptr inbounds %struct.Type, %struct.Type* %407, i32 0, i32 8
  %409 = load %struct.Type*, %struct.Type** %408, align 8
  %410 = load %struct.Node*, %struct.Node** %2, align 8
  %411 = getelementptr inbounds %struct.Node, %struct.Node* %410, i32 0, i32 2
  store %struct.Type* %409, %struct.Type** %411, align 16
  br label %412

412:                                              ; preds = %402, %386, %339, %326, %283, %254, %224, %216, %215, %173, %165, %161, %153, %145, %137, %83, %71, %67, %63, %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usual_arith_conv(%struct.Node** noundef %0, %struct.Node** noundef %1) #0 {
  %3 = alloca %struct.Node**, align 8
  %4 = alloca %struct.Node**, align 8
  %5 = alloca %struct.Type*, align 8
  store %struct.Node** %0, %struct.Node*** %3, align 8
  store %struct.Node** %1, %struct.Node*** %4, align 8
  %6 = load %struct.Node**, %struct.Node*** %3, align 8
  %7 = load %struct.Node*, %struct.Node** %6, align 8
  %8 = getelementptr inbounds %struct.Node, %struct.Node* %7, i32 0, i32 2
  %9 = load %struct.Type*, %struct.Type** %8, align 16
  %10 = load %struct.Node**, %struct.Node*** %4, align 8
  %11 = load %struct.Node*, %struct.Node** %10, align 8
  %12 = getelementptr inbounds %struct.Node, %struct.Node* %11, i32 0, i32 2
  %13 = load %struct.Type*, %struct.Type** %12, align 16
  %14 = call %struct.Type* @get_common_type(%struct.Type* noundef %9, %struct.Type* noundef %13)
  store %struct.Type* %14, %struct.Type** %5, align 8
  %15 = load %struct.Node**, %struct.Node*** %3, align 8
  %16 = load %struct.Node*, %struct.Node** %15, align 8
  %17 = load %struct.Type*, %struct.Type** %5, align 8
  %18 = call %struct.Node* @new_cast(%struct.Node* noundef %16, %struct.Type* noundef %17)
  %19 = load %struct.Node**, %struct.Node*** %3, align 8
  store %struct.Node* %18, %struct.Node** %19, align 8
  %20 = load %struct.Node**, %struct.Node*** %4, align 8
  %21 = load %struct.Node*, %struct.Node** %20, align 8
  %22 = load %struct.Type*, %struct.Type** %5, align 8
  %23 = call %struct.Node* @new_cast(%struct.Node* noundef %21, %struct.Type* noundef %22)
  %24 = load %struct.Node**, %struct.Node*** %4, align 8
  store %struct.Node* %23, %struct.Node** %24, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.Type* @get_common_type(%struct.Type* noundef %0, %struct.Type* noundef %1) #0 {
  %3 = alloca %struct.Type*, align 8
  %4 = alloca %struct.Type*, align 8
  %5 = alloca %struct.Type*, align 8
  store %struct.Type* %0, %struct.Type** %4, align 8
  store %struct.Type* %1, %struct.Type** %5, align 8
  %6 = load %struct.Type*, %struct.Type** %4, align 8
  %7 = getelementptr inbounds %struct.Type, %struct.Type* %6, i32 0, i32 8
  %8 = load %struct.Type*, %struct.Type** %7, align 8
  %9 = icmp ne %struct.Type* %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = load %struct.Type*, %struct.Type** %4, align 8
  %12 = getelementptr inbounds %struct.Type, %struct.Type* %11, i32 0, i32 8
  %13 = load %struct.Type*, %struct.Type** %12, align 8
  %14 = call %struct.Type* @pointer_to(%struct.Type* noundef %13)
  store %struct.Type* %14, %struct.Type** %3, align 8
  br label %112

15:                                               ; preds = %2
  %16 = load %struct.Type*, %struct.Type** %4, align 8
  %17 = getelementptr inbounds %struct.Type, %struct.Type* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 11
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = load %struct.Type*, %struct.Type** %4, align 8
  %22 = call %struct.Type* @pointer_to(%struct.Type* noundef %21)
  store %struct.Type* %22, %struct.Type** %3, align 8
  br label %112

23:                                               ; preds = %15
  %24 = load %struct.Type*, %struct.Type** %5, align 8
  %25 = getelementptr inbounds %struct.Type, %struct.Type* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 11
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = load %struct.Type*, %struct.Type** %5, align 8
  %30 = call %struct.Type* @pointer_to(%struct.Type* noundef %29)
  store %struct.Type* %30, %struct.Type** %3, align 8
  br label %112

31:                                               ; preds = %23
  %32 = load %struct.Type*, %struct.Type** %4, align 8
  %33 = getelementptr inbounds %struct.Type, %struct.Type* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 8
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = load %struct.Type*, %struct.Type** %5, align 8
  %38 = getelementptr inbounds %struct.Type, %struct.Type* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %36, %31
  %42 = load %struct.Type*, %struct.Type** @ty_ldouble, align 8
  store %struct.Type* %42, %struct.Type** %3, align 8
  br label %112

43:                                               ; preds = %36
  %44 = load %struct.Type*, %struct.Type** %4, align 8
  %45 = getelementptr inbounds %struct.Type, %struct.Type* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 7
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = load %struct.Type*, %struct.Type** %5, align 8
  %50 = getelementptr inbounds %struct.Type, %struct.Type* %49, i32 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 7
  br i1 %52, label %53, label %55

53:                                               ; preds = %48, %43
  %54 = load %struct.Type*, %struct.Type** @ty_double, align 8
  store %struct.Type* %54, %struct.Type** %3, align 8
  br label %112

55:                                               ; preds = %48
  %56 = load %struct.Type*, %struct.Type** %4, align 8
  %57 = getelementptr inbounds %struct.Type, %struct.Type* %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 6
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = load %struct.Type*, %struct.Type** %5, align 8
  %62 = getelementptr inbounds %struct.Type, %struct.Type* %61, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 6
  br i1 %64, label %65, label %67

65:                                               ; preds = %60, %55
  %66 = load %struct.Type*, %struct.Type** @ty_float, align 8
  store %struct.Type* %66, %struct.Type** %3, align 8
  br label %112

67:                                               ; preds = %60
  %68 = load %struct.Type*, %struct.Type** %4, align 8
  %69 = getelementptr inbounds %struct.Type, %struct.Type* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, 4
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  %73 = load %struct.Type*, %struct.Type** @ty_int, align 8
  store %struct.Type* %73, %struct.Type** %4, align 8
  br label %74

74:                                               ; preds = %72, %67
  %75 = load %struct.Type*, %struct.Type** %5, align 8
  %76 = getelementptr inbounds %struct.Type, %struct.Type* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, 4
  br i1 %78, label %79, label %81

79:                                               ; preds = %74
  %80 = load %struct.Type*, %struct.Type** @ty_int, align 8
  store %struct.Type* %80, %struct.Type** %5, align 8
  br label %81

81:                                               ; preds = %79, %74
  %82 = load %struct.Type*, %struct.Type** %4, align 8
  %83 = getelementptr inbounds %struct.Type, %struct.Type* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = load %struct.Type*, %struct.Type** %5, align 8
  %86 = getelementptr inbounds %struct.Type, %struct.Type* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp ne i32 %84, %87
  br i1 %88, label %89, label %103

89:                                               ; preds = %81
  %90 = load %struct.Type*, %struct.Type** %4, align 8
  %91 = getelementptr inbounds %struct.Type, %struct.Type* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = load %struct.Type*, %struct.Type** %5, align 8
  %94 = getelementptr inbounds %struct.Type, %struct.Type* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %92, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %89
  %98 = load %struct.Type*, %struct.Type** %5, align 8
  br label %101

99:                                               ; preds = %89
  %100 = load %struct.Type*, %struct.Type** %4, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi %struct.Type* [ %98, %97 ], [ %100, %99 ]
  store %struct.Type* %102, %struct.Type** %3, align 8
  br label %112

103:                                              ; preds = %81
  %104 = load %struct.Type*, %struct.Type** %5, align 8
  %105 = getelementptr inbounds %struct.Type, %struct.Type* %104, i32 0, i32 3
  %106 = load i8, i8* %105, align 4
  %107 = trunc i8 %106 to i1
  br i1 %107, label %108, label %110

108:                                              ; preds = %103
  %109 = load %struct.Type*, %struct.Type** %5, align 8
  store %struct.Type* %109, %struct.Type** %3, align 8
  br label %112

110:                                              ; preds = %103
  %111 = load %struct.Type*, %struct.Type** %4, align 8
  store %struct.Type* %111, %struct.Type** %3, align 8
  br label %112

112:                                              ; preds = %110, %108, %101, %65, %53, %41, %28, %20, %10
  %113 = load %struct.Type*, %struct.Type** %3, align 8
  ret %struct.Type* %113
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @encode_utf8(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp ule i32 %6, 127
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = load i32, i32* %5, align 4
  %10 = trunc i32 %9 to i8
  %11 = load i8*, i8** %4, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 0
  store i8 %10, i8* %12, align 1
  store i32 1, i32* %3, align 4
  br label %79

13:                                               ; preds = %2
  %14 = load i32, i32* %5, align 4
  %15 = icmp ule i32 %14, 2047
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = load i32, i32* %5, align 4
  %18 = lshr i32 %17, 6
  %19 = or i32 192, %18
  %20 = trunc i32 %19 to i8
  %21 = load i8*, i8** %4, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  store i8 %20, i8* %22, align 1
  %23 = load i32, i32* %5, align 4
  %24 = and i32 %23, 63
  %25 = or i32 128, %24
  %26 = trunc i32 %25 to i8
  %27 = load i8*, i8** %4, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  store i8 %26, i8* %28, align 1
  store i32 2, i32* %3, align 4
  br label %79

29:                                               ; preds = %13
  %30 = load i32, i32* %5, align 4
  %31 = icmp ule i32 %30, 65535
  br i1 %31, label %32, label %52

32:                                               ; preds = %29
  %33 = load i32, i32* %5, align 4
  %34 = lshr i32 %33, 12
  %35 = or i32 224, %34
  %36 = trunc i32 %35 to i8
  %37 = load i8*, i8** %4, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 0
  store i8 %36, i8* %38, align 1
  %39 = load i32, i32* %5, align 4
  %40 = lshr i32 %39, 6
  %41 = and i32 %40, 63
  %42 = or i32 128, %41
  %43 = trunc i32 %42 to i8
  %44 = load i8*, i8** %4, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 1
  store i8 %43, i8* %45, align 1
  %46 = load i32, i32* %5, align 4
  %47 = and i32 %46, 63
  %48 = or i32 128, %47
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** %4, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 2
  store i8 %49, i8* %51, align 1
  store i32 3, i32* %3, align 4
  br label %79

52:                                               ; preds = %29
  %53 = load i32, i32* %5, align 4
  %54 = lshr i32 %53, 18
  %55 = or i32 240, %54
  %56 = trunc i32 %55 to i8
  %57 = load i8*, i8** %4, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  store i8 %56, i8* %58, align 1
  %59 = load i32, i32* %5, align 4
  %60 = lshr i32 %59, 12
  %61 = and i32 %60, 63
  %62 = or i32 128, %61
  %63 = trunc i32 %62 to i8
  %64 = load i8*, i8** %4, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  store i8 %63, i8* %65, align 1
  %66 = load i32, i32* %5, align 4
  %67 = lshr i32 %66, 6
  %68 = and i32 %67, 63
  %69 = or i32 128, %68
  %70 = trunc i32 %69 to i8
  %71 = load i8*, i8** %4, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 2
  store i8 %70, i8* %72, align 1
  %73 = load i32, i32* %5, align 4
  %74 = and i32 %73, 63
  %75 = or i32 128, %74
  %76 = trunc i32 %75 to i8
  %77 = load i8*, i8** %4, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 3
  store i8 %76, i8* %78, align 1
  store i32 4, i32* %3, align 4
  br label %79

79:                                               ; preds = %52, %32, %16, %8
  %80 = load i32, i32* %3, align 4
  ret i32 %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @decode_utf8(i8** noundef %0, i8* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8** %0, i8*** %4, align 8
  store i8* %1, i8** %5, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp slt i32 %12, 128
  br i1 %13, label %14, label %21

14:                                               ; preds = %2
  %15 = load i8*, i8** %5, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  %17 = load i8**, i8*** %4, align 8
  store i8* %16, i8** %17, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  store i32 %20, i32* %3, align 4
  br label %93

21:                                               ; preds = %2
  %22 = load i8*, i8** %5, align 8
  store i8* %22, i8** %6, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = icmp sge i32 %25, 240
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  store i32 4, i32* %7, align 4
  %28 = load i8*, i8** %5, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = and i32 %30, 7
  store i32 %31, i32* %8, align 4
  br label %56

32:                                               ; preds = %21
  %33 = load i8*, i8** %5, align 8
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp sge i32 %35, 224
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  store i32 3, i32* %7, align 4
  %38 = load i8*, i8** %5, align 8
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = and i32 %40, 15
  store i32 %41, i32* %8, align 4
  br label %55

42:                                               ; preds = %32
  %43 = load i8*, i8** %5, align 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp sge i32 %45, 192
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  store i32 2, i32* %7, align 4
  %48 = load i8*, i8** %5, align 8
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = and i32 %50, 31
  store i32 %51, i32* %8, align 4
  br label %54

52:                                               ; preds = %42
  %53 = load i8*, i8** %6, align 8
  call void (i8*, i8*, ...) @error_at(i8* noundef %53, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1182, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.1183, i64 0, i64 0)) #11
  unreachable

54:                                               ; preds = %47
  br label %55

55:                                               ; preds = %54, %37
  br label %56

56:                                               ; preds = %55, %27
  store i32 1, i32* %9, align 4
  br label %57

57:                                               ; preds = %83, %56
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* %7, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %86

61:                                               ; preds = %57
  %62 = load i8*, i8** %5, align 8
  %63 = load i32, i32* %9, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = ashr i32 %67, 6
  %69 = icmp ne i32 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %61
  %71 = load i8*, i8** %6, align 8
  call void (i8*, i8*, ...) @error_at(i8* noundef %71, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1182, i64 0, i64 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.1183, i64 0, i64 0)) #11
  unreachable

72:                                               ; preds = %61
  %73 = load i32, i32* %8, align 4
  %74 = shl i32 %73, 6
  %75 = load i8*, i8** %5, align 8
  %76 = load i32, i32* %9, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %75, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  %81 = and i32 %80, 63
  %82 = or i32 %74, %81
  store i32 %82, i32* %8, align 4
  br label %83

83:                                               ; preds = %72
  %84 = load i32, i32* %9, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %9, align 4
  br label %57, !llvm.loop !216

86:                                               ; preds = %57
  %87 = load i8*, i8** %5, align 8
  %88 = load i32, i32* %7, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  %91 = load i8**, i8*** %4, align 8
  store i8* %90, i8** %91, align 8
  %92 = load i32, i32* %8, align 4
  store i32 %92, i32* %3, align 4
  br label %93

93:                                               ; preds = %86, %14
  %94 = load i32, i32* %3, align 4
  ret i32 %94
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @is_ident1(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call zeroext i1 @in_range(i32* noundef getelementptr inbounds ([107 x i32], [107 x i32]* @is_ident1.range, i64 0, i64 0), i32 noundef %3)
  ret i1 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @in_range(i32* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i1, align 1
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %7

7:                                                ; preds = %33, %2
  %8 = load i32*, i32** %4, align 8
  %9 = load i32, i32* %6, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, -1
  br i1 %13, label %14, label %36

14:                                               ; preds = %7
  %15 = load i32*, i32** %4, align 8
  %16 = load i32, i32* %6, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %15, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* %5, align 4
  %21 = icmp ule i32 %19, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %14
  %23 = load i32, i32* %5, align 4
  %24 = load i32*, i32** %4, align 8
  %25 = load i32, i32* %6, align 4
  %26 = add nsw i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %24, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp ule i32 %23, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  store i1 true, i1* %3, align 1
  br label %37

32:                                               ; preds = %22, %14
  br label %33

33:                                               ; preds = %32
  %34 = load i32, i32* %6, align 4
  %35 = add nsw i32 %34, 2
  store i32 %35, i32* %6, align 4
  br label %7, !llvm.loop !217

36:                                               ; preds = %7
  store i1 false, i1* %3, align 1
  br label %37

37:                                               ; preds = %36, %31
  %38 = load i1, i1* %3, align 1
  ret i1 %38
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @is_ident2(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call zeroext i1 @is_ident1(i32 noundef %3)
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = call zeroext i1 @in_range(i32* noundef getelementptr inbounds ([19 x i32], [19 x i32]* @is_ident2.range, i64 0, i64 0), i32 noundef %6)
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @is_ident3(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call zeroext i1 @in_range(i32* noundef getelementptr inbounds ([109 x i32], [109 x i32]* @is_ident3.range, i64 0, i64 0), i32 noundef %3)
  ret i1 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @display_width(i8* noundef %0, i32 noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load i8*, i8** %3, align 8
  store i8* %8, i8** %5, align 8
  store i32 0, i32* %6, align 4
  br label %9

9:                                                ; preds = %18, %2
  %10 = load i8*, i8** %3, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = ptrtoint i8* %10 to i64
  %13 = ptrtoint i8* %11 to i64
  %14 = sub i64 %12, %13
  %15 = load i32, i32* %4, align 4
  %16 = sext i32 %15 to i64
  %17 = icmp slt i64 %14, %16
  br i1 %17, label %18, label %25

18:                                               ; preds = %9
  %19 = load i8*, i8** %3, align 8
  %20 = call i32 @decode_utf8(i8** noundef %3, i8* noundef %19)
  store i32 %20, i32* %7, align 4
  %21 = load i32, i32* %7, align 4
  %22 = call i32 @char_width(i32 noundef %21)
  %23 = load i32, i32* %6, align 4
  %24 = add nsw i32 %23, %22
  store i32 %24, i32* %6, align 4
  br label %9, !llvm.loop !218

25:                                               ; preds = %9
  %26 = load i32, i32* %6, align 4
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @char_width(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = call zeroext i1 @in_range(i32* noundef getelementptr inbounds ([289 x i32], [289 x i32]* @char_width.range1, i64 0, i64 0), i32 noundef %4)
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i32 0, i32* %2, align 4
  br label %12

7:                                                ; preds = %1
  %8 = load i32, i32* %3, align 4
  %9 = call zeroext i1 @in_range(i32* noundef getelementptr inbounds ([29 x i32], [29 x i32]* @char_width.range2, i64 0, i64 0), i32 noundef %8)
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  store i32 2, i32* %2, align 4
  br label %12

11:                                               ; preds = %7
  store i32 1, i32* %2, align 4
  br label %12

12:                                               ; preds = %11, %10, %6
  %13 = load i32, i32* %2, align 4
  ret i32 %13
}

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly nofree nounwind willreturn writeonly }
attributes #4 = { nofree nosync nounwind willreturn }
attributes #5 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { nounwind readnone willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { noreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noinline noreturn nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { noreturn }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly willreturn }
attributes #14 = { nounwind }
attributes #15 = { nounwind readnone willreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3, !4, !5}

!0 = !{!"Ubuntu clang version 14.0.0-1ubuntu1"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 1}
!5 = !{i32 7, !"frame-pointer", i32 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !7}
!17 = distinct !{!17, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !7}
!20 = distinct !{!20, !7}
!21 = distinct !{!21, !7}
!22 = distinct !{!22, !7}
!23 = distinct !{!23, !7}
!24 = distinct !{!24, !7}
!25 = distinct !{!25, !7}
!26 = distinct !{!26, !7}
!27 = distinct !{!27, !7}
!28 = distinct !{!28, !7}
!29 = distinct !{!29, !7}
!30 = distinct !{!30, !7}
!31 = distinct !{!31, !7}
!32 = distinct !{!32, !7}
!33 = distinct !{!33, !7}
!34 = distinct !{!34, !7}
!35 = distinct !{!35, !7}
!36 = distinct !{!36, !7}
!37 = distinct !{!37, !7}
!38 = distinct !{!38, !7}
!39 = distinct !{!39, !7}
!40 = distinct !{!40, !7}
!41 = distinct !{!41, !7}
!42 = distinct !{!42, !7}
!43 = distinct !{!43, !7}
!44 = distinct !{!44, !7}
!45 = distinct !{!45, !7}
!46 = distinct !{!46, !7}
!47 = distinct !{!47, !7}
!48 = distinct !{!48, !7}
!49 = distinct !{!49, !7}
!50 = distinct !{!50, !7}
!51 = distinct !{!51, !7}
!52 = distinct !{!52, !7}
!53 = distinct !{!53, !7}
!54 = distinct !{!54, !7}
!55 = distinct !{!55, !7}
!56 = distinct !{!56, !7}
!57 = distinct !{!57, !7}
!58 = distinct !{!58, !7}
!59 = distinct !{!59, !7}
!60 = distinct !{!60, !7}
!61 = distinct !{!61, !7}
!62 = distinct !{!62, !7}
!63 = distinct !{!63, !7}
!64 = distinct !{!64, !7}
!65 = distinct !{!65, !7}
!66 = distinct !{!66, !7}
!67 = distinct !{!67, !7}
!68 = distinct !{!68, !7}
!69 = distinct !{!69, !7}
!70 = distinct !{!70, !7}
!71 = distinct !{!71, !7}
!72 = distinct !{!72, !7}
!73 = distinct !{!73, !7}
!74 = distinct !{!74, !7}
!75 = distinct !{!75, !7}
!76 = distinct !{!76, !7}
!77 = distinct !{!77, !7}
!78 = distinct !{!78, !7}
!79 = distinct !{!79, !7}
!80 = distinct !{!80, !7}
!81 = distinct !{!81, !7}
!82 = distinct !{!82, !7}
!83 = distinct !{!83, !7}
!84 = distinct !{!84, !7}
!85 = distinct !{!85, !7}
!86 = distinct !{!86, !7}
!87 = distinct !{!87, !7}
!88 = distinct !{!88, !7}
!89 = distinct !{!89, !7}
!90 = distinct !{!90, !7}
!91 = distinct !{!91, !7}
!92 = distinct !{!92, !7}
!93 = distinct !{!93, !7}
!94 = distinct !{!94, !7}
!95 = distinct !{!95, !7}
!96 = distinct !{!96, !7}
!97 = distinct !{!97, !7}
!98 = distinct !{!98, !7}
!99 = distinct !{!99, !7}
!100 = distinct !{!100, !7}
!101 = distinct !{!101, !7}
!102 = distinct !{!102, !7}
!103 = distinct !{!103, !7}
!104 = distinct !{!104, !7}
!105 = distinct !{!105, !7}
!106 = distinct !{!106, !7}
!107 = distinct !{!107, !7}
!108 = distinct !{!108, !7}
!109 = distinct !{!109, !7}
!110 = distinct !{!110, !7}
!111 = distinct !{!111, !7}
!112 = distinct !{!112, !7}
!113 = distinct !{!113, !7}
!114 = distinct !{!114, !7}
!115 = distinct !{!115, !7}
!116 = distinct !{!116, !7}
!117 = distinct !{!117, !7}
!118 = distinct !{!118, !7}
!119 = distinct !{!119, !7}
!120 = distinct !{!120, !7}
!121 = distinct !{!121, !7}
!122 = distinct !{!122, !7}
!123 = distinct !{!123, !7}
!124 = distinct !{!124, !7}
!125 = distinct !{!125, !7}
!126 = distinct !{!126, !7}
!127 = distinct !{!127, !7}
!128 = distinct !{!128, !7}
!129 = distinct !{!129, !7}
!130 = distinct !{!130, !7}
!131 = distinct !{!131, !7}
!132 = distinct !{!132, !7}
!133 = distinct !{!133, !7}
!134 = distinct !{!134, !7}
!135 = distinct !{!135, !7}
!136 = distinct !{!136, !7}
!137 = distinct !{!137, !7}
!138 = distinct !{!138, !7}
!139 = distinct !{!139, !7}
!140 = distinct !{!140, !7}
!141 = distinct !{!141, !7}
!142 = distinct !{!142, !7}
!143 = distinct !{!143, !7}
!144 = distinct !{!144, !7}
!145 = distinct !{!145, !7}
!146 = distinct !{!146, !7}
!147 = distinct !{!147, !7}
!148 = distinct !{!148, !7}
!149 = distinct !{!149, !7}
!150 = distinct !{!150, !7}
!151 = distinct !{!151, !7}
!152 = distinct !{!152, !7}
!153 = distinct !{!153, !7}
!154 = distinct !{!154, !7}
!155 = distinct !{!155, !7}
!156 = distinct !{!156, !7}
!157 = distinct !{!157, !7}
!158 = distinct !{!158, !7}
!159 = distinct !{!159, !7}
!160 = distinct !{!160, !7}
!161 = distinct !{!161, !7}
!162 = distinct !{!162, !7}
!163 = distinct !{!163, !7}
!164 = distinct !{!164, !7}
!165 = distinct !{!165, !7}
!166 = distinct !{!166, !7}
!167 = distinct !{!167, !7}
!168 = distinct !{!168, !7}
!169 = distinct !{!169, !7}
!170 = distinct !{!170, !7}
!171 = distinct !{!171, !7}
!172 = distinct !{!172, !7}
!173 = distinct !{!173, !7}
!174 = distinct !{!174, !7}
!175 = distinct !{!175, !7}
!176 = distinct !{!176, !7}
!177 = distinct !{!177, !7}
!178 = distinct !{!178, !7}
!179 = distinct !{!179, !7}
!180 = distinct !{!180, !7}
!181 = distinct !{!181, !7}
!182 = distinct !{!182, !7}
!183 = distinct !{!183, !7}
!184 = distinct !{!184, !7}
!185 = distinct !{!185, !7}
!186 = distinct !{!186, !7}
!187 = distinct !{!187, !7}
!188 = distinct !{!188, !7}
!189 = distinct !{!189, !7}
!190 = distinct !{!190, !7}
!191 = distinct !{!191, !7}
!192 = distinct !{!192, !7}
!193 = distinct !{!193, !7}
!194 = distinct !{!194, !7}
!195 = distinct !{!195, !7}
!196 = distinct !{!196, !7}
!197 = distinct !{!197, !7}
!198 = distinct !{!198, !7}
!199 = distinct !{!199, !7}
!200 = distinct !{!200, !7}
!201 = distinct !{!201, !7}
!202 = distinct !{!202, !7}
!203 = distinct !{!203, !7}
!204 = distinct !{!204, !7}
!205 = distinct !{!205, !7}
!206 = distinct !{!206, !7}
!207 = distinct !{!207, !7}
!208 = distinct !{!208, !7}
!209 = distinct !{!209, !7}
!210 = distinct !{!210, !7}
!211 = distinct !{!211, !7}
!212 = distinct !{!212, !7}
!213 = distinct !{!213, !7}
!214 = distinct !{!214, !7}
!215 = distinct !{!215, !7}
!216 = distinct !{!216, !7}
!217 = distinct !{!217, !7}
!218 = distinct !{!218, !7}
